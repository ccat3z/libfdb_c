#define POST_ACTOR_COMPILER 1
#line 2 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"

/*
 * ActorFuzz.actor.cpp
 *
 * This source file is part of the FoundationDB open source project
 *
 * Copyright 2013-2022 Apple Inc. and the FoundationDB project authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// THIS FILE WAS GENERATED BY actorFuzz.py; DO NOT MODIFY IT DIRECTLY

#include "fdbrpc/ActorFuzz.h"
#include "flow/actorcompiler.h" // has to be last include

#ifndef WIN32

															#line 31 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
namespace {
// This generated class is to be used only via actorFuzz0()
															#line 29 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
template <class ActorFuzz0Actor>
															#line 29 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz0ActorState {
															#line 38 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
															#line 29 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz0ActorState(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 29 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
															#line 29 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		 : inputStream(inputStream),
															#line 29 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   outputStream(outputStream),
															#line 29 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   error(error),
															#line 30 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   ifstate(0)
															#line 51 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
	{
		fdb_probe_actor_create("actorFuzz0", reinterpret_cast<unsigned long>(this));

	}
	~ActorFuzz0ActorState() 
	{
		fdb_probe_actor_destroy("actorFuzz0", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
			try {
															#line 32 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(390229);
															#line 33 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				list637154 = std::vector<int>();
															#line 34 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				list637154.push_back(1);
															#line 35 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				list637154.push_back(2);
															#line 36 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				list637154.push_back(3);
															#line 37 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				for( auto i : list637154 ) {
															#line 38 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					(void)i;
															#line 39 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					outputStream.send(596271);
															#line 40 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					if (!static_cast<ActorFuzz0Actor*>(this)->SAV<int>::futures) { (void)(574865); this->~ActorFuzz0ActorState(); static_cast<ActorFuzz0Actor*>(this)->destroy(); return 0; }
															#line 83 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
					new (&static_cast<ActorFuzz0Actor*>(this)->SAV< int >::value()) int(574865);
					this->~ActorFuzz0ActorState();
					static_cast<ActorFuzz0Actor*>(this)->finishSendAndDelPromiseRef();
					return 0;
				}
															#line 42 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(616994);
															#line 91 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				loopDepth = a_body1cont4(loopDepth);
			}
			catch (Error& error) {
				loopDepth = a_body1Catch2(error, loopDepth);
			} catch (...) {
				loopDepth = a_body1Catch2(unknown_error(), loopDepth);
			}
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~ActorFuzz0ActorState();
		static_cast<ActorFuzz0Actor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 93 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!static_cast<ActorFuzz0Actor*>(this)->SAV<int>::futures) { (void)(240968); this->~ActorFuzz0ActorState(); static_cast<ActorFuzz0Actor*>(this)->destroy(); return 0; }
															#line 120 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		new (&static_cast<ActorFuzz0Actor*>(this)->SAV< int >::value()) int(240968);
		this->~ActorFuzz0ActorState();
		static_cast<ActorFuzz0Actor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1Catch2(const Error& __current_error,int loopDepth=0) 
	{
		try {
															#line 44 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(282473);
															#line 45 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			i538813 = int();
															#line 46 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			i538813 = 0;
															#line 137 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			loopDepth = a_body1Catch2loopHead1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont4(int loopDepth) 
	{
		try {
			loopDepth = a_body1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch2cont1(int loopDepth) 
	{
															#line 91 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(492398);
															#line 165 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1Catch2loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1Catch2loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1Catch2loopBody1(int loopDepth) 
	{
															#line 46 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!(i538813 < 5))
															#line 181 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		{
			return a_body1Catch2break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 47 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(202451);
															#line 48 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		list106964 = std::vector<int>();
															#line 49 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		list106964.push_back(1);
															#line 50 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		list106964.push_back(2);
															#line 51 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		list106964.push_back(3);
															#line 52 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		RangeForbody1Catch2loopBody1Iterator0 = std::begin(list106964);
															#line 197 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1Catch2loopBody1loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1Catch2break1(int loopDepth) 
	{
		try {
			return a_body1Catch2cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch2loopBody1cont1(int loopDepth) 
	{
															#line 89 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(710432);
															#line 46 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		i538813++;
															#line 221 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		if (loopDepth == 0) return a_body1Catch2loopHead1(0);

		return loopDepth;
	}
	int a_body1Catch2loopBody1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1Catch2loopBody1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1Catch2loopBody1loopBody1(int loopDepth) 
	{
															#line 52 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!(RangeForbody1Catch2loopBody1Iterator0 != std::end(list106964)))
															#line 237 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		{
			return a_body1Catch2loopBody1break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 52 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		auto i = *RangeForbody1Catch2loopBody1Iterator0;
															#line 243 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		{
															#line 53 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			(void)i;
															#line 54 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(306539);
															#line 55 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			if ((++ifstate & 1) == 1)
															#line 251 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			{
															#line 56 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(980726);
															#line 255 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				try {
															#line 58 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					outputStream.send(103523);
															#line 59 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					if ((++ifstate & 1) == 1)
															#line 261 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
					{
															#line 60 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
						outputStream.send(750915);
															#line 61 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
						FutureStream<int> __when_expr_0 = inputStream;
															#line 61 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
						if (static_cast<ActorFuzz0Actor*>(this)->actor_wait_state < 0) return a_body1Catch2loopBody1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 269 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
						if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch2loopBody1loopBody1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1Catch2loopBody1loopBody1when1(__when_expr_0.pop(), loopDepth); };
						static_cast<ActorFuzz0Actor*>(this)->actor_wait_state = 1;
															#line 61 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
						__when_expr_0.addCallbackAndClear(static_cast<ActorSingleCallback< ActorFuzz0Actor, 0, int >*>(static_cast<ActorFuzz0Actor*>(this)));
															#line 274 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
						loopDepth = 0;
					}
					else
					{
															#line 65 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
						outputStream.send(883911);
															#line 281 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
						try {
															#line 67 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
							outputStream.send(625121);
															#line 68 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
							FutureStream<int> __when_expr_1 = inputStream;
															#line 68 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
							if (static_cast<ActorFuzz0Actor*>(this)->actor_wait_state < 0) return a_body1Catch2loopBody1loopBody1Catch2(actor_cancelled(), loopDepth);
															#line 289 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
							if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch2loopBody1loopBody1Catch2(__when_expr_1.getError(), loopDepth); else return a_body1Catch2loopBody1loopBody1when2(__when_expr_1.pop(), loopDepth); };
							static_cast<ActorFuzz0Actor*>(this)->actor_wait_state = 2;
															#line 68 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
							__when_expr_1.addCallbackAndClear(static_cast<ActorSingleCallback< ActorFuzz0Actor, 1, int >*>(static_cast<ActorFuzz0Actor*>(this)));
															#line 294 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
							loopDepth = 0;
						}
						catch (Error& error) {
							loopDepth = a_body1Catch2loopBody1loopBody1Catch2(error, loopDepth);
						} catch (...) {
							loopDepth = a_body1Catch2loopBody1loopBody1Catch2(unknown_error(), loopDepth);
						}
					}
				}
				catch (Error& error) {
					loopDepth = a_body1Catch2loopBody1loopBody1Catch1(error, loopDepth);
				} catch (...) {
					loopDepth = a_body1Catch2loopBody1loopBody1Catch1(unknown_error(), loopDepth);
				}
			}
			else
			{
															#line 84 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(972353);
															#line 314 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				return a_body1Catch2loopBody1break1(loopDepth==0?0:loopDepth-1); // break
			}
		}

		return loopDepth;
	}
	int a_body1Catch2loopBody1break1(int loopDepth) 
	{
		try {
			return a_body1Catch2loopBody1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1Catch2loopBody1loopBody1cont1(int loopDepth) 
	{
															#line 52 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		++RangeForbody1Catch2loopBody1Iterator0;
															#line 338 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		if (loopDepth == 0) return a_body1Catch2loopBody1loopHead1(0);

		return loopDepth;
	}
	int a_body1Catch2loopBody1loopBody1cont3(int loopDepth) 
	{
															#line 87 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(732279);
															#line 347 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1Catch2loopBody1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1Catch2loopBody1loopBody1cont4(int loopDepth) 
	{
															#line 82 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(496422);
															#line 356 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1Catch2loopBody1loopBody1cont3(loopDepth);

		return loopDepth;
	}
	int a_body1Catch2loopBody1loopBody1Catch1(const Error& __current_error,int loopDepth=0) 
	{
		try {
															#line 79 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(822404);
															#line 366 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			return a_body1Catch2loopBody1break1(loopDepth==0?0:loopDepth-1); // break
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 2));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 2));
		}

		return loopDepth;
	}
	int a_body1Catch2loopBody1loopBody1cont5(int loopDepth) 
	{
															#line 77 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(547309);
															#line 381 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1Catch2loopBody1loopBody1cont14(loopDepth);

		return loopDepth;
	}
	int a_body1Catch2loopBody1loopBody1cont6(int const& input,int loopDepth) 
	{
															#line 62 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(input + 714763);
															#line 63 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(838596);
															#line 392 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1Catch2loopBody1loopBody1cont5(loopDepth);

		return loopDepth;
	}
	int a_body1Catch2loopBody1loopBody1cont6(int && input,int loopDepth) 
	{
															#line 62 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(input + 714763);
															#line 63 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(838596);
															#line 403 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1Catch2loopBody1loopBody1cont5(loopDepth);

		return loopDepth;
	}
	int a_body1Catch2loopBody1loopBody1when1(int const& input,int loopDepth) 
	{
		loopDepth = a_body1Catch2loopBody1loopBody1cont6(input, loopDepth);

		return loopDepth;
	}
	int a_body1Catch2loopBody1loopBody1when1(int && input,int loopDepth) 
	{
		loopDepth = a_body1Catch2loopBody1loopBody1cont6(std::move(input), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<ActorFuzz0Actor*>(this)->actor_wait_state > 0) static_cast<ActorFuzz0Actor*>(this)->actor_wait_state = 0;
		static_cast<ActorFuzz0Actor*>(this)->ActorSingleCallback< ActorFuzz0Actor, 0, int >::remove();

	}
	void a_callback_fire(ActorSingleCallback< ActorFuzz0Actor, 0, int >*,int const& value) 
	{
		fdb_probe_actor_enter("actorFuzz0", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch2loopBody1loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch2loopBody1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1Catch2loopBody1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz0", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorSingleCallback< ActorFuzz0Actor, 0, int >*,int && value) 
	{
		fdb_probe_actor_enter("actorFuzz0", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch2loopBody1loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch2loopBody1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1Catch2loopBody1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz0", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorSingleCallback< ActorFuzz0Actor, 0, int >*,Error err) 
	{
		fdb_probe_actor_enter("actorFuzz0", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch2loopBody1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch2loopBody1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1Catch2loopBody1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz0", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1Catch2loopBody1loopBody1cont8(int loopDepth) 
	{
															#line 75 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(855094);
															#line 475 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1Catch2loopBody1loopBody1cont5(loopDepth);

		return loopDepth;
	}
	int a_body1Catch2loopBody1loopBody1Catch2(const Error& __current_error,int loopDepth=0) 
	{
		try {
															#line 72 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(376812);
															#line 73 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			if (!static_cast<ActorFuzz0Actor*>(this)->SAV<int>::futures) { (void)(247718); this->~ActorFuzz0ActorState(); static_cast<ActorFuzz0Actor*>(this)->destroy(); return 0; }
															#line 487 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			new (&static_cast<ActorFuzz0Actor*>(this)->SAV< int >::value()) int(247718);
			this->~ActorFuzz0ActorState();
			static_cast<ActorFuzz0Actor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch2loopBody1loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch2loopBody1loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch2loopBody1loopBody1cont9(int const& input,int loopDepth) 
	{
															#line 69 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(input + 826693);
															#line 70 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(593359);
															#line 507 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1Catch2loopBody1loopBody1cont11(loopDepth);

		return loopDepth;
	}
	int a_body1Catch2loopBody1loopBody1cont9(int && input,int loopDepth) 
	{
															#line 69 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(input + 826693);
															#line 70 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(593359);
															#line 518 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1Catch2loopBody1loopBody1cont11(loopDepth);

		return loopDepth;
	}
	int a_body1Catch2loopBody1loopBody1when2(int const& input,int loopDepth) 
	{
		loopDepth = a_body1Catch2loopBody1loopBody1cont9(input, loopDepth);

		return loopDepth;
	}
	int a_body1Catch2loopBody1loopBody1when2(int && input,int loopDepth) 
	{
		loopDepth = a_body1Catch2loopBody1loopBody1cont9(std::move(input), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<ActorFuzz0Actor*>(this)->actor_wait_state > 0) static_cast<ActorFuzz0Actor*>(this)->actor_wait_state = 0;
		static_cast<ActorFuzz0Actor*>(this)->ActorSingleCallback< ActorFuzz0Actor, 1, int >::remove();

	}
	void a_callback_fire(ActorSingleCallback< ActorFuzz0Actor, 1, int >*,int const& value) 
	{
		fdb_probe_actor_enter("actorFuzz0", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch2loopBody1loopBody1when2(value, 0);
		}
		catch (Error& error) {
			a_body1Catch2loopBody1loopBody1Catch2(error, 0);
		} catch (...) {
			a_body1Catch2loopBody1loopBody1Catch2(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz0", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorSingleCallback< ActorFuzz0Actor, 1, int >*,int && value) 
	{
		fdb_probe_actor_enter("actorFuzz0", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch2loopBody1loopBody1when2(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch2loopBody1loopBody1Catch2(error, 0);
		} catch (...) {
			a_body1Catch2loopBody1loopBody1Catch2(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz0", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorSingleCallback< ActorFuzz0Actor, 1, int >*,Error err) 
	{
		fdb_probe_actor_enter("actorFuzz0", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch2loopBody1loopBody1Catch2(err, 0);
		}
		catch (Error& error) {
			a_body1Catch2loopBody1loopBody1Catch2(error, 0);
		} catch (...) {
			a_body1Catch2loopBody1loopBody1Catch2(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz0", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1Catch2loopBody1loopBody1cont11(int loopDepth) 
	{
		try {
			loopDepth = a_body1Catch2loopBody1loopBody1cont8(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch2loopBody1loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch2loopBody1loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch2loopBody1loopBody1cont14(int loopDepth) 
	{
		try {
			loopDepth = a_body1Catch2loopBody1loopBody1cont4(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 2));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 2));
		}

		return loopDepth;
	}
															#line 29 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	FutureStream<int> inputStream;
															#line 29 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	PromiseStream<int> outputStream;
															#line 29 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	Future<Void> error;
															#line 30 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int ifstate;
															#line 33 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	std::vector<int> list637154;
															#line 45 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int i538813;
															#line 48 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	std::vector<int> list106964;
															#line 52 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	decltype(std::begin(std::declval<std::vector<int>>())) RangeForbody1Catch2loopBody1Iterator0;
															#line 628 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
};
// This generated class is to be used only via actorFuzz0()
															#line 29 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz0Actor final : public Actor<int>, public ActorSingleCallback< ActorFuzz0Actor, 0, int >, public ActorSingleCallback< ActorFuzz0Actor, 1, int >, public FastAllocated<ActorFuzz0Actor>, public ActorFuzz0ActorState<ActorFuzz0Actor> {
															#line 633 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
	using FastAllocated<ActorFuzz0Actor>::operator new;
	using FastAllocated<ActorFuzz0Actor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<int>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorSingleCallback< ActorFuzz0Actor, 0, int >;
friend struct ActorSingleCallback< ActorFuzz0Actor, 1, int >;
															#line 29 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz0Actor(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 645 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		 : Actor<int>(),
		   ActorFuzz0ActorState<ActorFuzz0Actor>(inputStream, outputStream, error)
	{
		fdb_probe_actor_enter("actorFuzz0", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("actorFuzz0");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("actorFuzz0", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorSingleCallback< ActorFuzz0Actor, 0, int >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorSingleCallback< ActorFuzz0Actor, 1, int >*)0, actor_cancelled()); break;
		}

	}
};
}
															#line 29 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
[[nodiscard]] Future<int> actorFuzz0( FutureStream<int> const& inputStream, PromiseStream<int> const& outputStream, Future<Void> const& error ) {
															#line 29 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	return Future<int>(new ActorFuzz0Actor(inputStream, outputStream, error));
															#line 674 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
}

#line 95 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"

															#line 679 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
namespace {
// This generated class is to be used only via actorFuzz1()
															#line 96 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
template <class ActorFuzz1Actor>
															#line 96 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz1ActorState {
															#line 686 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
															#line 96 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz1ActorState(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 96 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
															#line 96 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		 : inputStream(inputStream),
															#line 96 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   outputStream(outputStream),
															#line 96 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   error(error),
															#line 97 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   ifstate(0),
															#line 98 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   i661806()
															#line 701 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
	{
		fdb_probe_actor_create("actorFuzz1", reinterpret_cast<unsigned long>(this));

	}
	~ActorFuzz1ActorState() 
	{
		fdb_probe_actor_destroy("actorFuzz1", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 99 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			i661806 = 0;
															#line 716 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			loopDepth = a_body1loopHead1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~ActorFuzz1ActorState();
		static_cast<ActorFuzz1Actor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 140 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!static_cast<ActorFuzz1Actor*>(this)->SAV<int>::futures) { (void)(917160); this->~ActorFuzz1ActorState(); static_cast<ActorFuzz1Actor*>(this)->destroy(); return 0; }
															#line 739 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		new (&static_cast<ActorFuzz1Actor*>(this)->SAV< int >::value()) int(917160);
		this->~ActorFuzz1ActorState();
		static_cast<ActorFuzz1Actor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1(int loopDepth) 
	{
															#line 99 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!(i661806 < 5))
															#line 758 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		{
			return a_body1break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 100 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(477566);
															#line 764 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		try {
															#line 102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(815578);
															#line 768 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			return a_body1continue1(loopDepth); // continue
		}
		catch (Error& error) {
			loopDepth = a_body1loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1break1(int loopDepth) 
	{
		try {
			return a_body1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1continue1(int loopDepth) 
	{
															#line 99 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		i661806++;
															#line 796 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		if (loopDepth == 0) return a_body1loopHead1(0);

		return loopDepth;
	}
	int a_body1loopBody1cont1(int loopDepth) 
	{
															#line 137 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(287946);
															#line 805 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		return a_body1break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1loopBody1Catch1(const Error& __current_error,int loopDepth=0) 
	{
		try {
															#line 105 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(787898);
															#line 106 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list781874 = std::vector<int>();
															#line 107 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list781874.push_back(1);
															#line 108 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list781874.push_back(2);
															#line 109 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list781874.push_back(3);
															#line 110 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			RangeForbody1loopBody1Catch1Iterator0 = std::begin(list781874);
															#line 825 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			loopDepth = a_body1loopBody1Catch1loopHead1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1loopBody1Catch1cont1(int loopDepth) 
	{
															#line 135 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(647010);
															#line 840 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1loopBody1Catch1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1loopBody1(int loopDepth) 
	{
															#line 110 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!(RangeForbody1loopBody1Catch1Iterator0 != std::end(list781874)))
															#line 856 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		{
			return a_body1loopBody1Catch1break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 110 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		auto i = *RangeForbody1loopBody1Catch1Iterator0;
															#line 862 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		{
															#line 111 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			(void)i;
															#line 112 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(625656);
															#line 868 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			try {
															#line 114 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(114830);
															#line 115 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				i996799 = int();
															#line 116 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				i996799 = 0;
															#line 876 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				loopDepth = a_body1loopBody1Catch1loopBody1loopHead1(loopDepth);
			}
			catch (Error& error) {
				loopDepth = a_body1loopBody1Catch1loopBody1Catch1(error, loopDepth);
			} catch (...) {
				loopDepth = a_body1loopBody1Catch1loopBody1Catch1(unknown_error(), loopDepth);
			}
		}

		return loopDepth;
	}
	int a_body1loopBody1Catch1break1(int loopDepth) 
	{
		try {
			return a_body1loopBody1Catch1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1loopBody1Catch1loopBody1cont1(int loopDepth) 
	{
															#line 110 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		++RangeForbody1loopBody1Catch1Iterator0;
															#line 905 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		if (loopDepth == 0) return a_body1loopBody1Catch1loopHead1(0);

		return loopDepth;
	}
	int a_body1loopBody1Catch1loopBody1cont3(int loopDepth) 
	{
															#line 133 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(329141);
															#line 914 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1loopBody1Catch1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1loopBody1Catch1(const Error& __current_error,int loopDepth=0) 
	{
		try {
															#line 130 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(703172);
															#line 131 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			if (!static_cast<ActorFuzz1Actor*>(this)->SAV<int>::futures) { (void)(811053); this->~ActorFuzz1ActorState(); static_cast<ActorFuzz1Actor*>(this)->destroy(); return 0; }
															#line 926 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			new (&static_cast<ActorFuzz1Actor*>(this)->SAV< int >::value()) int(811053);
			this->~ActorFuzz1ActorState();
			static_cast<ActorFuzz1Actor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 2));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 2));
		}

		return loopDepth;
	}
	int a_body1loopBody1Catch1loopBody1cont4(int loopDepth) 
	{
															#line 128 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(613669);
															#line 944 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1loopBody1Catch1loopBody1cont6(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1loopBody1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1loopBody1Catch1loopBody1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1loopBody1loopBody1(int loopDepth) 
	{
															#line 116 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!(i996799 < 5))
															#line 960 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		{
			return a_body1loopBody1Catch1loopBody1break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 117 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(188397);
															#line 966 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		try {
															#line 119 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(649779);
															#line 120 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			StrictFuture<Void> __when_expr_0 = error;
															#line 120 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			if (static_cast<ActorFuzz1Actor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1loopBody1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 974 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1loopBody1Catch1loopBody1loopBody1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1loopBody1Catch1loopBody1loopBody1when1(__when_expr_0.get(), loopDepth); };
			static_cast<ActorFuzz1Actor*>(this)->actor_wait_state = 1;
															#line 120 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< ActorFuzz1Actor, 0, Void >*>(static_cast<ActorFuzz1Actor*>(this)));
															#line 979 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1loopBody1Catch1loopBody1loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1loopBody1Catch1loopBody1loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1Catch1loopBody1break1(int loopDepth) 
	{
		try {
			return a_body1loopBody1Catch1loopBody1cont4(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1loopBody1Catch1loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1loopBody1Catch1loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1Catch1loopBody1loopBody1Catch1(const Error& __current_error,int loopDepth=0) 
	{
		try {
															#line 124 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(761942);
															#line 125 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			if (!static_cast<ActorFuzz1Actor*>(this)->SAV<int>::futures) { (void)(469895); this->~ActorFuzz1ActorState(); static_cast<ActorFuzz1Actor*>(this)->destroy(); return 0; }
															#line 1010 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			new (&static_cast<ActorFuzz1Actor*>(this)->SAV< int >::value()) int(469895);
			this->~ActorFuzz1ActorState();
			static_cast<ActorFuzz1Actor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
		catch (Error& error) {
			loopDepth = a_body1loopBody1Catch1loopBody1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1loopBody1Catch1loopBody1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1loopBody1Catch1loopBody1loopBody1cont3(Void const& _,int loopDepth) 
	{
															#line 121 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(705317);
															#line 1028 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		return a_body1loopBody1Catch1loopBody1break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1loopBody1Catch1loopBody1loopBody1cont3(Void && _,int loopDepth) 
	{
															#line 121 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(705317);
															#line 1037 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		return a_body1loopBody1Catch1loopBody1break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1loopBody1Catch1loopBody1loopBody1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1Catch1loopBody1loopBody1cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1loopBody1loopBody1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1Catch1loopBody1loopBody1cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<ActorFuzz1Actor*>(this)->actor_wait_state > 0) static_cast<ActorFuzz1Actor*>(this)->actor_wait_state = 0;
		static_cast<ActorFuzz1Actor*>(this)->ActorCallback< ActorFuzz1Actor, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< ActorFuzz1Actor, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("actorFuzz1", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1Catch1loopBody1loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1loopBody1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1loopBody1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz1", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< ActorFuzz1Actor, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("actorFuzz1", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1Catch1loopBody1loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1loopBody1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1loopBody1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz1", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< ActorFuzz1Actor, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("actorFuzz1", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1Catch1loopBody1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1loopBody1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1loopBody1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz1", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1loopBody1Catch1loopBody1cont6(int loopDepth) 
	{
		try {
			loopDepth = a_body1loopBody1Catch1loopBody1cont3(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 2));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 2));
		}

		return loopDepth;
	}
															#line 96 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	FutureStream<int> inputStream;
															#line 96 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	PromiseStream<int> outputStream;
															#line 96 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	Future<Void> error;
															#line 97 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int ifstate;
															#line 98 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int i661806;
															#line 106 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	std::vector<int> list781874;
															#line 110 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	decltype(std::begin(std::declval<std::vector<int>>())) RangeForbody1loopBody1Catch1Iterator0;
															#line 115 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int i996799;
															#line 1134 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
};
// This generated class is to be used only via actorFuzz1()
															#line 96 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz1Actor final : public Actor<int>, public ActorCallback< ActorFuzz1Actor, 0, Void >, public FastAllocated<ActorFuzz1Actor>, public ActorFuzz1ActorState<ActorFuzz1Actor> {
															#line 1139 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
	using FastAllocated<ActorFuzz1Actor>::operator new;
	using FastAllocated<ActorFuzz1Actor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<int>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< ActorFuzz1Actor, 0, Void >;
															#line 96 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz1Actor(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 1150 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		 : Actor<int>(),
		   ActorFuzz1ActorState<ActorFuzz1Actor>(inputStream, outputStream, error)
	{
		fdb_probe_actor_enter("actorFuzz1", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("actorFuzz1");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("actorFuzz1", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< ActorFuzz1Actor, 0, Void >*)0, actor_cancelled()); break;
		}

	}
};
}
															#line 96 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
[[nodiscard]] Future<int> actorFuzz1( FutureStream<int> const& inputStream, PromiseStream<int> const& outputStream, Future<Void> const& error ) {
															#line 96 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	return Future<int>(new ActorFuzz1Actor(inputStream, outputStream, error));
															#line 1178 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
}

#line 142 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"

															#line 1183 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
namespace {
// This generated class is to be used only via actorFuzz2()
															#line 143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
template <class ActorFuzz2Actor>
															#line 143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz2ActorState {
															#line 1190 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
															#line 143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz2ActorState(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
															#line 143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		 : inputStream(inputStream),
															#line 143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   outputStream(outputStream),
															#line 143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   error(error),
															#line 144 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   ifstate(0)
															#line 1203 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
	{
		fdb_probe_actor_create("actorFuzz2", reinterpret_cast<unsigned long>(this));

	}
	~ActorFuzz2ActorState() 
	{
		fdb_probe_actor_destroy("actorFuzz2", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 145 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			FutureStream<int> __when_expr_0 = inputStream;
															#line 145 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			if (static_cast<ActorFuzz2Actor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 1220 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.pop(), loopDepth); };
			static_cast<ActorFuzz2Actor*>(this)->actor_wait_state = 1;
															#line 145 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorSingleCallback< ActorFuzz2Actor, 0, int >*>(static_cast<ActorFuzz2Actor*>(this)));
															#line 1225 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~ActorFuzz2ActorState();
		static_cast<ActorFuzz2Actor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int const& input,int loopDepth) 
	{
															#line 146 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(input + 475677);
															#line 147 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!static_cast<ActorFuzz2Actor*>(this)->SAV<int>::futures) { (void)(930237); this->~ActorFuzz2ActorState(); static_cast<ActorFuzz2Actor*>(this)->destroy(); return 0; }
															#line 1250 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		new (&static_cast<ActorFuzz2Actor*>(this)->SAV< int >::value()) int(930237);
		this->~ActorFuzz2ActorState();
		static_cast<ActorFuzz2Actor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont1(int && input,int loopDepth) 
	{
															#line 146 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(input + 475677);
															#line 147 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!static_cast<ActorFuzz2Actor*>(this)->SAV<int>::futures) { (void)(930237); this->~ActorFuzz2ActorState(); static_cast<ActorFuzz2Actor*>(this)->destroy(); return 0; }
															#line 1264 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		new (&static_cast<ActorFuzz2Actor*>(this)->SAV< int >::value()) int(930237);
		this->~ActorFuzz2ActorState();
		static_cast<ActorFuzz2Actor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1when1(int const& input,int loopDepth) 
	{
		loopDepth = a_body1cont1(input, loopDepth);

		return loopDepth;
	}
	int a_body1when1(int && input,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(input), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<ActorFuzz2Actor*>(this)->actor_wait_state > 0) static_cast<ActorFuzz2Actor*>(this)->actor_wait_state = 0;
		static_cast<ActorFuzz2Actor*>(this)->ActorSingleCallback< ActorFuzz2Actor, 0, int >::remove();

	}
	void a_callback_fire(ActorSingleCallback< ActorFuzz2Actor, 0, int >*,int const& value) 
	{
		fdb_probe_actor_enter("actorFuzz2", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz2", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorSingleCallback< ActorFuzz2Actor, 0, int >*,int && value) 
	{
		fdb_probe_actor_enter("actorFuzz2", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz2", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorSingleCallback< ActorFuzz2Actor, 0, int >*,Error err) 
	{
		fdb_probe_actor_enter("actorFuzz2", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz2", reinterpret_cast<unsigned long>(this), 0);

	}
															#line 143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	FutureStream<int> inputStream;
															#line 143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	PromiseStream<int> outputStream;
															#line 143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	Future<Void> error;
															#line 144 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int ifstate;
															#line 1343 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
};
// This generated class is to be used only via actorFuzz2()
															#line 143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz2Actor final : public Actor<int>, public ActorSingleCallback< ActorFuzz2Actor, 0, int >, public FastAllocated<ActorFuzz2Actor>, public ActorFuzz2ActorState<ActorFuzz2Actor> {
															#line 1348 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
	using FastAllocated<ActorFuzz2Actor>::operator new;
	using FastAllocated<ActorFuzz2Actor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<int>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorSingleCallback< ActorFuzz2Actor, 0, int >;
															#line 143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz2Actor(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 1359 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		 : Actor<int>(),
		   ActorFuzz2ActorState<ActorFuzz2Actor>(inputStream, outputStream, error)
	{
		fdb_probe_actor_enter("actorFuzz2", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("actorFuzz2");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("actorFuzz2", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorSingleCallback< ActorFuzz2Actor, 0, int >*)0, actor_cancelled()); break;
		}

	}
};
}
															#line 143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
[[nodiscard]] Future<int> actorFuzz2( FutureStream<int> const& inputStream, PromiseStream<int> const& outputStream, Future<Void> const& error ) {
															#line 143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	return Future<int>(new ActorFuzz2Actor(inputStream, outputStream, error));
															#line 1387 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
}

#line 149 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"

															#line 1392 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
namespace {
// This generated class is to be used only via actorFuzz3()
															#line 150 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
template <class ActorFuzz3Actor>
															#line 150 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz3ActorState {
															#line 1399 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
															#line 150 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz3ActorState(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 150 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
															#line 150 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		 : inputStream(inputStream),
															#line 150 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   outputStream(outputStream),
															#line 150 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   error(error),
															#line 151 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   ifstate(0)
															#line 1412 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
	{
		fdb_probe_actor_create("actorFuzz3", reinterpret_cast<unsigned long>(this));

	}
	~ActorFuzz3ActorState() 
	{
		fdb_probe_actor_destroy("actorFuzz3", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 152 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			throw_operation_failed();
															#line 153 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			if (!static_cast<ActorFuzz3Actor*>(this)->SAV<int>::futures) { (void)(499525); this->~ActorFuzz3ActorState(); static_cast<ActorFuzz3Actor*>(this)->destroy(); return 0; }
															#line 1429 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			new (&static_cast<ActorFuzz3Actor*>(this)->SAV< int >::value()) int(499525);
			this->~ActorFuzz3ActorState();
			static_cast<ActorFuzz3Actor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~ActorFuzz3ActorState();
		static_cast<ActorFuzz3Actor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
															#line 150 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	FutureStream<int> inputStream;
															#line 150 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	PromiseStream<int> outputStream;
															#line 150 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	Future<Void> error;
															#line 151 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int ifstate;
															#line 1459 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
};
// This generated class is to be used only via actorFuzz3()
															#line 150 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz3Actor final : public Actor<int>, public FastAllocated<ActorFuzz3Actor>, public ActorFuzz3ActorState<ActorFuzz3Actor> {
															#line 1464 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
	using FastAllocated<ActorFuzz3Actor>::operator new;
	using FastAllocated<ActorFuzz3Actor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<int>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
															#line 150 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz3Actor(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 1474 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		 : Actor<int>(),
		   ActorFuzz3ActorState<ActorFuzz3Actor>(inputStream, outputStream, error)
	{
		fdb_probe_actor_enter("actorFuzz3", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("actorFuzz3");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("actorFuzz3", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		}

	}
};
}
															#line 150 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
[[nodiscard]] Future<int> actorFuzz3( FutureStream<int> const& inputStream, PromiseStream<int> const& outputStream, Future<Void> const& error ) {
															#line 150 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	return Future<int>(new ActorFuzz3Actor(inputStream, outputStream, error));
															#line 1501 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
}

#line 155 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"

															#line 1506 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
namespace {
// This generated class is to be used only via actorFuzz4()
															#line 156 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
template <class ActorFuzz4Actor>
															#line 156 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz4ActorState {
															#line 1513 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
															#line 156 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz4ActorState(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 156 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
															#line 156 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		 : inputStream(inputStream),
															#line 156 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   outputStream(outputStream),
															#line 156 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   error(error),
															#line 157 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   ifstate(0)
															#line 1526 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
	{
		fdb_probe_actor_create("actorFuzz4", reinterpret_cast<unsigned long>(this));

	}
	~ActorFuzz4ActorState() 
	{
		fdb_probe_actor_destroy("actorFuzz4", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
			try {
															#line 159 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(180600);
															#line 160 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				list613889 = std::vector<int>();
															#line 161 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				list613889.push_back(1);
															#line 162 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				list613889.push_back(2);
															#line 163 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				list613889.push_back(3);
															#line 164 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				for( auto i : list613889 ) {
															#line 165 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					(void)i;
															#line 166 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					outputStream.send(177605);
															#line 1556 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
					continue;
				}
															#line 169 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(954508);
															#line 1561 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				loopDepth = a_body1cont4(loopDepth);
			}
			catch (Error& error) {
				loopDepth = a_body1Catch2(error, loopDepth);
			} catch (...) {
				loopDepth = a_body1Catch2(unknown_error(), loopDepth);
			}
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~ActorFuzz4ActorState();
		static_cast<ActorFuzz4Actor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 174 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!static_cast<ActorFuzz4Actor*>(this)->SAV<int>::futures) { (void)(810052); this->~ActorFuzz4ActorState(); static_cast<ActorFuzz4Actor*>(this)->destroy(); return 0; }
															#line 1590 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		new (&static_cast<ActorFuzz4Actor*>(this)->SAV< int >::value()) int(810052);
		this->~ActorFuzz4ActorState();
		static_cast<ActorFuzz4Actor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1Catch2(const Error& __current_error,int loopDepth=0) 
	{
		try {
															#line 171 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(461484);
															#line 172 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			if (!static_cast<ActorFuzz4Actor*>(this)->SAV<int>::futures) { (void)(117481); this->~ActorFuzz4ActorState(); static_cast<ActorFuzz4Actor*>(this)->destroy(); return 0; }
															#line 1605 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			new (&static_cast<ActorFuzz4Actor*>(this)->SAV< int >::value()) int(117481);
			this->~ActorFuzz4ActorState();
			static_cast<ActorFuzz4Actor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont4(int loopDepth) 
	{
		try {
			loopDepth = a_body1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
															#line 156 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	FutureStream<int> inputStream;
															#line 156 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	PromiseStream<int> outputStream;
															#line 156 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	Future<Void> error;
															#line 157 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int ifstate;
															#line 160 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	std::vector<int> list613889;
															#line 1642 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
};
// This generated class is to be used only via actorFuzz4()
															#line 156 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz4Actor final : public Actor<int>, public FastAllocated<ActorFuzz4Actor>, public ActorFuzz4ActorState<ActorFuzz4Actor> {
															#line 1647 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
	using FastAllocated<ActorFuzz4Actor>::operator new;
	using FastAllocated<ActorFuzz4Actor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<int>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
															#line 156 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz4Actor(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 1657 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		 : Actor<int>(),
		   ActorFuzz4ActorState<ActorFuzz4Actor>(inputStream, outputStream, error)
	{
		fdb_probe_actor_enter("actorFuzz4", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("actorFuzz4");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("actorFuzz4", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		}

	}
};
}
															#line 156 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
[[nodiscard]] Future<int> actorFuzz4( FutureStream<int> const& inputStream, PromiseStream<int> const& outputStream, Future<Void> const& error ) {
															#line 156 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	return Future<int>(new ActorFuzz4Actor(inputStream, outputStream, error));
															#line 1684 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
}

#line 176 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"

															#line 1689 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
namespace {
// This generated class is to be used only via actorFuzz5()
															#line 177 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
template <class ActorFuzz5Actor>
															#line 177 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz5ActorState {
															#line 1696 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
															#line 177 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz5ActorState(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 177 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
															#line 177 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		 : inputStream(inputStream),
															#line 177 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   outputStream(outputStream),
															#line 177 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   error(error),
															#line 178 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   ifstate(0)
															#line 1709 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
	{
		fdb_probe_actor_create("actorFuzz5", reinterpret_cast<unsigned long>(this));

	}
	~ActorFuzz5ActorState() 
	{
		fdb_probe_actor_destroy("actorFuzz5", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 179 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			StrictFuture<Void> __when_expr_0 = error;
															#line 179 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			if (static_cast<ActorFuzz5Actor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 1726 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<ActorFuzz5Actor*>(this)->actor_wait_state = 1;
															#line 179 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< ActorFuzz5Actor, 0, Void >*>(static_cast<ActorFuzz5Actor*>(this)));
															#line 1731 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~ActorFuzz5ActorState();
		static_cast<ActorFuzz5Actor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Void const& _,int loopDepth) 
	{
															#line 180 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(382339);
															#line 181 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if ((++ifstate & 1) == 1)
															#line 1756 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		{
															#line 182 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(655938);
															#line 183 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			i139204 = int();
															#line 184 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			i139204 = 0;
															#line 1764 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			loopDepth = a_body1cont1loopHead1(loopDepth);
		}
		else
		{
			loopDepth = a_body1cont2(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont1(Void && _,int loopDepth) 
	{
															#line 180 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(382339);
															#line 181 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if ((++ifstate & 1) == 1)
															#line 1780 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		{
															#line 182 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(655938);
															#line 183 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			i139204 = int();
															#line 184 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			i139204 = 0;
															#line 1788 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			loopDepth = a_body1cont1loopHead1(loopDepth);
		}
		else
		{
			loopDepth = a_body1cont2(loopDepth);
		}

		return loopDepth;
	}
	int a_body1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<ActorFuzz5Actor*>(this)->actor_wait_state > 0) static_cast<ActorFuzz5Actor*>(this)->actor_wait_state = 0;
		static_cast<ActorFuzz5Actor*>(this)->ActorCallback< ActorFuzz5Actor, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< ActorFuzz5Actor, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("actorFuzz5", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz5", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< ActorFuzz5Actor, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("actorFuzz5", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz5", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< ActorFuzz5Actor, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("actorFuzz5", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz5", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont2(int loopDepth) 
	{
															#line 191 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!static_cast<ActorFuzz5Actor*>(this)->SAV<int>::futures) { (void)(273288); this->~ActorFuzz5ActorState(); static_cast<ActorFuzz5Actor*>(this)->destroy(); return 0; }
															#line 1865 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		new (&static_cast<ActorFuzz5Actor*>(this)->SAV< int >::value()) int(273288);
		this->~ActorFuzz5ActorState();
		static_cast<ActorFuzz5Actor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont3(int loopDepth) 
	{
															#line 189 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(252859);
															#line 1877 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1cont2(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1(int loopDepth) 
	{
															#line 184 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!(i139204 < 5))
															#line 1893 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		{
			return a_body1cont1break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 185 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(481427);
															#line 186 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		StrictFuture<Void> __when_expr_1 = error;
															#line 186 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (static_cast<ActorFuzz5Actor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 1903 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), std::max(0, loopDepth - 1)); else return a_body1cont1loopBody1when1(__when_expr_1.get(), loopDepth); };
		static_cast<ActorFuzz5Actor*>(this)->actor_wait_state = 2;
															#line 186 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< ActorFuzz5Actor, 1, Void >*>(static_cast<ActorFuzz5Actor*>(this)));
															#line 1908 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1break1(int loopDepth) 
	{
		try {
			return a_body1cont3(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont1loopBody1cont1(Void const& _,int loopDepth) 
	{
															#line 187 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(577939);
															#line 184 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		i139204++;
															#line 1932 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		if (loopDepth == 0) return a_body1cont1loopHead1(0);

		return loopDepth;
	}
	int a_body1cont1loopBody1cont1(Void && _,int loopDepth) 
	{
															#line 187 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(577939);
															#line 184 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		i139204++;
															#line 1943 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		if (loopDepth == 0) return a_body1cont1loopHead1(0);

		return loopDepth;
	}
	int a_body1cont1loopBody1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<ActorFuzz5Actor*>(this)->actor_wait_state > 0) static_cast<ActorFuzz5Actor*>(this)->actor_wait_state = 0;
		static_cast<ActorFuzz5Actor*>(this)->ActorCallback< ActorFuzz5Actor, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< ActorFuzz5Actor, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("actorFuzz5", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz5", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< ActorFuzz5Actor, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("actorFuzz5", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz5", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< ActorFuzz5Actor, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("actorFuzz5", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz5", reinterpret_cast<unsigned long>(this), 1);

	}
															#line 177 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	FutureStream<int> inputStream;
															#line 177 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	PromiseStream<int> outputStream;
															#line 177 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	Future<Void> error;
															#line 178 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int ifstate;
															#line 183 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int i139204;
															#line 2021 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
};
// This generated class is to be used only via actorFuzz5()
															#line 177 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz5Actor final : public Actor<int>, public ActorCallback< ActorFuzz5Actor, 0, Void >, public ActorCallback< ActorFuzz5Actor, 1, Void >, public FastAllocated<ActorFuzz5Actor>, public ActorFuzz5ActorState<ActorFuzz5Actor> {
															#line 2026 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
	using FastAllocated<ActorFuzz5Actor>::operator new;
	using FastAllocated<ActorFuzz5Actor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<int>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< ActorFuzz5Actor, 0, Void >;
friend struct ActorCallback< ActorFuzz5Actor, 1, Void >;
															#line 177 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz5Actor(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 2038 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		 : Actor<int>(),
		   ActorFuzz5ActorState<ActorFuzz5Actor>(inputStream, outputStream, error)
	{
		fdb_probe_actor_enter("actorFuzz5", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("actorFuzz5");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("actorFuzz5", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< ActorFuzz5Actor, 0, Void >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< ActorFuzz5Actor, 1, Void >*)0, actor_cancelled()); break;
		}

	}
};
}
															#line 177 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
[[nodiscard]] Future<int> actorFuzz5( FutureStream<int> const& inputStream, PromiseStream<int> const& outputStream, Future<Void> const& error ) {
															#line 177 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	return Future<int>(new ActorFuzz5Actor(inputStream, outputStream, error));
															#line 2067 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
}

#line 193 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"

															#line 2072 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
namespace {
// This generated class is to be used only via actorFuzz6()
															#line 194 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
template <class ActorFuzz6Actor>
															#line 194 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz6ActorState {
															#line 2079 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
															#line 194 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz6ActorState(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 194 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
															#line 194 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		 : inputStream(inputStream),
															#line 194 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   outputStream(outputStream),
															#line 194 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   error(error),
															#line 195 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   ifstate(0),
															#line 196 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   i956829()
															#line 2094 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
	{
		fdb_probe_actor_create("actorFuzz6", reinterpret_cast<unsigned long>(this));

	}
	~ActorFuzz6ActorState() 
	{
		fdb_probe_actor_destroy("actorFuzz6", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 197 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			i956829 = 0;
															#line 2109 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			loopDepth = a_body1loopHead1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~ActorFuzz6ActorState();
		static_cast<ActorFuzz6Actor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 212 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!static_cast<ActorFuzz6Actor*>(this)->SAV<int>::futures) { (void)(945289); this->~ActorFuzz6ActorState(); static_cast<ActorFuzz6Actor*>(this)->destroy(); return 0; }
															#line 2132 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		new (&static_cast<ActorFuzz6Actor*>(this)->SAV< int >::value()) int(945289);
		this->~ActorFuzz6ActorState();
		static_cast<ActorFuzz6Actor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1(int loopDepth) 
	{
															#line 197 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!(i956829 < 5))
															#line 2151 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		{
			return a_body1break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 198 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(320321);
															#line 199 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		i350925 = int();
															#line 200 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		i350925 = 0;
															#line 2161 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1loopBody1loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1break1(int loopDepth) 
	{
		try {
			return a_body1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1cont1(int loopDepth) 
	{
															#line 210 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(463730);
															#line 197 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		i956829++;
															#line 2185 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		if (loopDepth == 0) return a_body1loopHead1(0);

		return loopDepth;
	}
	int a_body1loopBody1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1loopBody1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1loopBody1(int loopDepth) 
	{
															#line 200 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!(i350925 < 5))
															#line 2201 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		{
			return a_body1loopBody1break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 201 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(266526);
															#line 2207 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		try {
															#line 203 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(762336);
															#line 2211 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			return a_body1loopBody1break1(loopDepth==0?0:loopDepth-1); // break
		}
		catch (Error& error) {
			loopDepth = a_body1loopBody1loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1loopBody1loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1break1(int loopDepth) 
	{
		try {
			return a_body1loopBody1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1loopBody1continue1(int loopDepth) 
	{
															#line 200 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		i350925++;
															#line 2239 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		if (loopDepth == 0) return a_body1loopBody1loopHead1(0);

		return loopDepth;
	}
	int a_body1loopBody1loopBody1Catch1(const Error& __current_error,int loopDepth=0) 
	{
		try {
															#line 206 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(391672);
															#line 2249 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			return a_body1loopBody1continue1(loopDepth); // continue
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 2));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 2));
		}

		return loopDepth;
	}
															#line 194 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	FutureStream<int> inputStream;
															#line 194 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	PromiseStream<int> outputStream;
															#line 194 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	Future<Void> error;
															#line 195 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int ifstate;
															#line 196 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int i956829;
															#line 199 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int i350925;
															#line 2272 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
};
// This generated class is to be used only via actorFuzz6()
															#line 194 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz6Actor final : public Actor<int>, public FastAllocated<ActorFuzz6Actor>, public ActorFuzz6ActorState<ActorFuzz6Actor> {
															#line 2277 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
	using FastAllocated<ActorFuzz6Actor>::operator new;
	using FastAllocated<ActorFuzz6Actor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<int>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
															#line 194 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz6Actor(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 2287 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		 : Actor<int>(),
		   ActorFuzz6ActorState<ActorFuzz6Actor>(inputStream, outputStream, error)
	{
		fdb_probe_actor_enter("actorFuzz6", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("actorFuzz6");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("actorFuzz6", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		}

	}
};
}
															#line 194 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
[[nodiscard]] Future<int> actorFuzz6( FutureStream<int> const& inputStream, PromiseStream<int> const& outputStream, Future<Void> const& error ) {
															#line 194 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	return Future<int>(new ActorFuzz6Actor(inputStream, outputStream, error));
															#line 2314 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
}

#line 214 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"

															#line 2319 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
namespace {
// This generated class is to be used only via actorFuzz7()
															#line 215 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
template <class ActorFuzz7Actor>
															#line 215 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz7ActorState {
															#line 2326 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
															#line 215 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz7ActorState(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 215 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
															#line 215 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		 : inputStream(inputStream),
															#line 215 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   outputStream(outputStream),
															#line 215 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   error(error),
															#line 216 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   ifstate(0)
															#line 2339 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
	{
		fdb_probe_actor_create("actorFuzz7", reinterpret_cast<unsigned long>(this));

	}
	~ActorFuzz7ActorState() 
	{
		fdb_probe_actor_destroy("actorFuzz7", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
			try {
															#line 218 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(406152);
															#line 2355 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				try {
															#line 220 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					outputStream.send(478841);
															#line 2359 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
					try {
															#line 222 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
						outputStream.send(609181);
															#line 223 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
						i510243 = int();
															#line 224 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
						i510243 = 0;
															#line 2367 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
						loopDepth = a_body1loopHead1(loopDepth);
					}
					catch (Error& error) {
						loopDepth = a_body1Catch4(error, loopDepth);
					} catch (...) {
						loopDepth = a_body1Catch4(unknown_error(), loopDepth);
					}
				}
				catch (Error& error) {
					loopDepth = a_body1Catch3(error, loopDepth);
				} catch (...) {
					loopDepth = a_body1Catch3(unknown_error(), loopDepth);
				}
			}
			catch (Error& error) {
				loopDepth = a_body1Catch2(error, loopDepth);
			} catch (...) {
				loopDepth = a_body1Catch2(unknown_error(), loopDepth);
			}
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~ActorFuzz7ActorState();
		static_cast<ActorFuzz7Actor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 308 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!static_cast<ActorFuzz7Actor*>(this)->SAV<int>::futures) { (void)(949658); this->~ActorFuzz7ActorState(); static_cast<ActorFuzz7Actor*>(this)->destroy(); return 0; }
															#line 2408 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		new (&static_cast<ActorFuzz7Actor*>(this)->SAV< int >::value()) int(949658);
		this->~ActorFuzz7ActorState();
		static_cast<ActorFuzz7Actor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1Catch2(const Error& __current_error,int loopDepth=0) 
	{
		try {
															#line 290 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(117532);
															#line 291 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list243466 = std::vector<int>();
															#line 292 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list243466.push_back(1);
															#line 293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list243466.push_back(2);
															#line 294 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list243466.push_back(3);
															#line 295 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			RangeForbody1Catch2Iterator0 = std::begin(list243466);
															#line 2431 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			loopDepth = a_body1Catch2loopHead1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont2(int loopDepth) 
	{
															#line 288 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(814172);
															#line 2446 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1cont11(loopDepth);

		return loopDepth;
	}
	int a_body1Catch3(const Error& __current_error,int loopDepth=0) 
	{
		try {
															#line 264 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(971923);
															#line 265 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			i793430 = int();
															#line 266 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			i793430 = 0;
															#line 2460 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			loopDepth = a_body1Catch3loopHead1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch2(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch2(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont3(int loopDepth) 
	{
															#line 247 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(946924);
															#line 248 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		list833282 = std::vector<int>();
															#line 249 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		list833282.push_back(1);
															#line 250 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		list833282.push_back(2);
															#line 251 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		list833282.push_back(3);
															#line 252 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		RangeForbody1cont3Iterator0 = std::begin(list833282);
															#line 2485 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1cont3loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1Catch4(const Error& __current_error,int loopDepth=0) 
	{
		try {
															#line 244 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(686252);
															#line 245 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			if (!static_cast<ActorFuzz7Actor*>(this)->SAV<int>::futures) { (void)(997694); this->~ActorFuzz7ActorState(); static_cast<ActorFuzz7Actor*>(this)->destroy(); return 0; }
															#line 2497 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			new (&static_cast<ActorFuzz7Actor*>(this)->SAV< int >::value()) int(997694);
			this->~ActorFuzz7ActorState();
			static_cast<ActorFuzz7Actor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch3(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch3(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont4(int loopDepth) 
	{
															#line 242 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(331905);
															#line 2515 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1cont6(loopDepth);

		return loopDepth;
	}
	int a_body1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1(int loopDepth) 
	{
															#line 224 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!(i510243 < 5))
															#line 2531 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		{
			return a_body1break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 225 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(634881);
															#line 226 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		list596949 = std::vector<int>();
															#line 227 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		list596949.push_back(1);
															#line 228 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		list596949.push_back(2);
															#line 229 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		list596949.push_back(3);
															#line 230 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		RangeForbody1loopBody1Iterator0 = std::begin(list596949);
															#line 2547 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1loopBody1loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1break1(int loopDepth) 
	{
		try {
			return a_body1cont4(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch4(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch4(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1cont1(int loopDepth) 
	{
															#line 237 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(415949);
															#line 238 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		FutureStream<int> __when_expr_1 = inputStream;
															#line 238 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (static_cast<ActorFuzz7Actor*>(this)->actor_wait_state < 0) return a_body1Catch4(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 2573 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch4(__when_expr_1.getError(), std::max(0, loopDepth - 1)); else return a_body1loopBody1cont1when1(__when_expr_1.pop(), loopDepth); };
		static_cast<ActorFuzz7Actor*>(this)->actor_wait_state = 2;
															#line 238 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorSingleCallback< ActorFuzz7Actor, 1, int >*>(static_cast<ActorFuzz7Actor*>(this)));
															#line 2578 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1loopBody1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1loopBody1(int loopDepth) 
	{
															#line 230 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!(RangeForbody1loopBody1Iterator0 != std::end(list596949)))
															#line 2594 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		{
			return a_body1loopBody1break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 230 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		auto i = *RangeForbody1loopBody1Iterator0;
															#line 2600 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		{
															#line 231 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			(void)i;
															#line 232 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(253861);
															#line 233 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			FutureStream<int> __when_expr_0 = inputStream;
															#line 233 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			if (static_cast<ActorFuzz7Actor*>(this)->actor_wait_state < 0) return a_body1Catch4(actor_cancelled(), std::max(0, loopDepth - 2));
															#line 2610 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch4(__when_expr_0.getError(), std::max(0, loopDepth - 2)); else return a_body1loopBody1loopBody1when1(__when_expr_0.pop(), loopDepth); };
			static_cast<ActorFuzz7Actor*>(this)->actor_wait_state = 1;
															#line 233 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorSingleCallback< ActorFuzz7Actor, 0, int >*>(static_cast<ActorFuzz7Actor*>(this)));
															#line 2615 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			loopDepth = 0;
		}

		return loopDepth;
	}
	int a_body1loopBody1break1(int loopDepth) 
	{
		try {
			return a_body1loopBody1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch4(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch4(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1loopBody1loopBody1cont1(int loopDepth) 
	{
															#line 230 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		++RangeForbody1loopBody1Iterator0;
															#line 2638 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		if (loopDepth == 0) return a_body1loopBody1loopHead1(0);

		return loopDepth;
	}
	int a_body1loopBody1loopBody1cont3(int const& input,int loopDepth) 
	{
															#line 234 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(input + 591023);
															#line 235 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(240597);
															#line 2649 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1loopBody1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1loopBody1cont3(int && input,int loopDepth) 
	{
															#line 234 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(input + 591023);
															#line 235 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(240597);
															#line 2660 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1loopBody1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1loopBody1when1(int const& input,int loopDepth) 
	{
		loopDepth = a_body1loopBody1loopBody1cont3(input, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1loopBody1when1(int && input,int loopDepth) 
	{
		loopDepth = a_body1loopBody1loopBody1cont3(std::move(input), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<ActorFuzz7Actor*>(this)->actor_wait_state > 0) static_cast<ActorFuzz7Actor*>(this)->actor_wait_state = 0;
		static_cast<ActorFuzz7Actor*>(this)->ActorSingleCallback< ActorFuzz7Actor, 0, int >::remove();

	}
	void a_callback_fire(ActorSingleCallback< ActorFuzz7Actor, 0, int >*,int const& value) 
	{
		fdb_probe_actor_enter("actorFuzz7", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch4(error, 0);
		} catch (...) {
			a_body1Catch4(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz7", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorSingleCallback< ActorFuzz7Actor, 0, int >*,int && value) 
	{
		fdb_probe_actor_enter("actorFuzz7", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch4(error, 0);
		} catch (...) {
			a_body1Catch4(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz7", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorSingleCallback< ActorFuzz7Actor, 0, int >*,Error err) 
	{
		fdb_probe_actor_enter("actorFuzz7", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch4(err, 0);
		}
		catch (Error& error) {
			a_body1Catch4(error, 0);
		} catch (...) {
			a_body1Catch4(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz7", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1loopBody1cont3(int const& input,int loopDepth) 
	{
															#line 239 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(input + 165335);
															#line 240 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(478331);
															#line 224 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		i510243++;
															#line 2736 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		if (loopDepth == 0) return a_body1loopHead1(0);

		return loopDepth;
	}
	int a_body1loopBody1cont3(int && input,int loopDepth) 
	{
															#line 239 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(input + 165335);
															#line 240 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(478331);
															#line 224 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		i510243++;
															#line 2749 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		if (loopDepth == 0) return a_body1loopHead1(0);

		return loopDepth;
	}
	int a_body1loopBody1cont1when1(int const& input,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont3(input, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont1when1(int && input,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont3(std::move(input), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<ActorFuzz7Actor*>(this)->actor_wait_state > 0) static_cast<ActorFuzz7Actor*>(this)->actor_wait_state = 0;
		static_cast<ActorFuzz7Actor*>(this)->ActorSingleCallback< ActorFuzz7Actor, 1, int >::remove();

	}
	void a_callback_fire(ActorSingleCallback< ActorFuzz7Actor, 1, int >*,int const& value) 
	{
		fdb_probe_actor_enter("actorFuzz7", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch4(error, 0);
		} catch (...) {
			a_body1Catch4(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz7", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorSingleCallback< ActorFuzz7Actor, 1, int >*,int && value) 
	{
		fdb_probe_actor_enter("actorFuzz7", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch4(error, 0);
		} catch (...) {
			a_body1Catch4(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz7", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorSingleCallback< ActorFuzz7Actor, 1, int >*,Error err) 
	{
		fdb_probe_actor_enter("actorFuzz7", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch4(err, 0);
		}
		catch (Error& error) {
			a_body1Catch4(error, 0);
		} catch (...) {
			a_body1Catch4(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz7", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont6(int loopDepth) 
	{
		try {
			loopDepth = a_body1cont3(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch3(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch3(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont7(int loopDepth) 
	{
															#line 262 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(996672);
															#line 2834 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1cont9(loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont3loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1(int loopDepth) 
	{
															#line 252 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!(RangeForbody1cont3Iterator0 != std::end(list833282)))
															#line 2850 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		{
			return a_body1cont3break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 252 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		auto i = *RangeForbody1cont3Iterator0;
															#line 2856 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		{
															#line 253 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			(void)i;
															#line 254 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(663973);
															#line 255 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			if ((++ifstate & 1) == 1)
															#line 2864 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			{
															#line 256 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(797073);
															#line 257 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				StrictFuture<Void> __when_expr_2 = error;
															#line 257 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				if (static_cast<ActorFuzz7Actor*>(this)->actor_wait_state < 0) return a_body1Catch3(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 2872 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch3(__when_expr_2.getError(), std::max(0, loopDepth - 1)); else return a_body1cont3loopBody1when1(__when_expr_2.get(), loopDepth); };
				static_cast<ActorFuzz7Actor*>(this)->actor_wait_state = 3;
															#line 257 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< ActorFuzz7Actor, 2, Void >*>(static_cast<ActorFuzz7Actor*>(this)));
															#line 2877 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				loopDepth = 0;
			}
			else
			{
				loopDepth = a_body1cont3loopBody1cont3(loopDepth);
			}
		}

		return loopDepth;
	}
	int a_body1cont3break1(int loopDepth) 
	{
		try {
			return a_body1cont7(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch3(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch3(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont3loopBody1cont1(int loopDepth) 
	{
															#line 252 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		++RangeForbody1cont3Iterator0;
															#line 2905 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		if (loopDepth == 0) return a_body1cont3loopHead1(0);

		return loopDepth;
	}
	int a_body1cont3loopBody1cont3(int loopDepth) 
	{
															#line 260 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(807309);
															#line 2914 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1cont3loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1cont4(Void const& _,int loopDepth) 
	{
															#line 258 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(953652);
															#line 2923 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1cont3loopBody1cont3(loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1cont4(Void && _,int loopDepth) 
	{
															#line 258 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(953652);
															#line 2932 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1cont3loopBody1cont3(loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1cont4(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1cont4(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<ActorFuzz7Actor*>(this)->actor_wait_state > 0) static_cast<ActorFuzz7Actor*>(this)->actor_wait_state = 0;
		static_cast<ActorFuzz7Actor*>(this)->ActorCallback< ActorFuzz7Actor, 2, Void >::remove();

	}
	void a_callback_fire(ActorCallback< ActorFuzz7Actor, 2, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("actorFuzz7", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont3loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch3(error, 0);
		} catch (...) {
			a_body1Catch3(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz7", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< ActorFuzz7Actor, 2, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("actorFuzz7", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont3loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch3(error, 0);
		} catch (...) {
			a_body1Catch3(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz7", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< ActorFuzz7Actor, 2, Void >*,Error err) 
	{
		fdb_probe_actor_enter("actorFuzz7", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch3(err, 0);
		}
		catch (Error& error) {
			a_body1Catch3(error, 0);
		} catch (...) {
			a_body1Catch3(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz7", reinterpret_cast<unsigned long>(this), 2);

	}
	int a_body1cont9(int loopDepth) 
	{
		try {
			loopDepth = a_body1cont2(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch2(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch2(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch3cont1(int loopDepth) 
	{
															#line 286 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(534407);
															#line 3017 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1cont2(loopDepth);

		return loopDepth;
	}
	int a_body1Catch3loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1Catch3loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1Catch3loopBody1(int loopDepth) 
	{
															#line 266 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!(i793430 < 5))
															#line 3033 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		{
			return a_body1Catch3break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 267 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(295772);
															#line 3039 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		try {
															#line 269 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(923567);
															#line 270 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list814034 = std::vector<int>();
															#line 271 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list814034.push_back(1);
															#line 272 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list814034.push_back(2);
															#line 273 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list814034.push_back(3);
															#line 274 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			for( auto i : list814034 ) {
															#line 275 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				(void)i;
															#line 276 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(559259);
															#line 3057 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				continue;
			}
															#line 279 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(325678);
															#line 3062 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			loopDepth = a_body1Catch3loopBody1cont5(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch3loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch3loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch3break1(int loopDepth) 
	{
		try {
			return a_body1Catch3cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch2(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch2(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch3continue1(int loopDepth) 
	{
															#line 266 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		i793430++;
															#line 3090 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		if (loopDepth == 0) return a_body1Catch3loopHead1(0);

		return loopDepth;
	}
	int a_body1Catch3loopBody1cont1(int loopDepth) 
	{
															#line 284 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(679187);
															#line 266 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		i793430++;
															#line 3101 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		if (loopDepth == 0) return a_body1Catch3loopHead1(0);

		return loopDepth;
	}
	int a_body1Catch3loopBody1Catch1(const Error& __current_error,int loopDepth=0) 
	{
		try {
															#line 281 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(691889);
															#line 3111 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			return a_body1Catch3continue1(loopDepth); // continue
		}
		catch (Error& error) {
			loopDepth = a_body1Catch2(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch2(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1Catch3loopBody1cont5(int loopDepth) 
	{
		try {
			loopDepth = a_body1Catch3loopBody1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch2(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch2(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont11(int loopDepth) 
	{
		try {
			loopDepth = a_body1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch2cont1(int loopDepth) 
	{
															#line 306 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(679173);
															#line 3152 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1Catch2loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1Catch2loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1Catch2loopBody1(int loopDepth) 
	{
															#line 295 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!(RangeForbody1Catch2Iterator0 != std::end(list243466)))
															#line 3168 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		{
			return a_body1Catch2break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 295 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		auto i = *RangeForbody1Catch2Iterator0;
															#line 3174 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		{
															#line 296 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			(void)i;
															#line 297 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(593203);
															#line 3180 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			try {
															#line 299 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(289002);
															#line 300 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				if (!static_cast<ActorFuzz7Actor*>(this)->SAV<int>::futures) { (void)(321054); this->~ActorFuzz7ActorState(); static_cast<ActorFuzz7Actor*>(this)->destroy(); return 0; }
															#line 3186 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				new (&static_cast<ActorFuzz7Actor*>(this)->SAV< int >::value()) int(321054);
				this->~ActorFuzz7ActorState();
				static_cast<ActorFuzz7Actor*>(this)->finishSendAndDelPromiseRef();
				return 0;
			}
			catch (Error& error) {
				loopDepth = a_body1Catch2loopBody1Catch1(error, loopDepth);
			} catch (...) {
				loopDepth = a_body1Catch2loopBody1Catch1(unknown_error(), loopDepth);
			}
		}

		return loopDepth;
	}
	int a_body1Catch2break1(int loopDepth) 
	{
		try {
			return a_body1Catch2cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch2loopBody1Catch1(const Error& __current_error,int loopDepth=0) 
	{
		try {
															#line 302 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(540106);
															#line 303 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			if (!static_cast<ActorFuzz7Actor*>(this)->SAV<int>::futures) { (void)(919162); this->~ActorFuzz7ActorState(); static_cast<ActorFuzz7Actor*>(this)->destroy(); return 0; }
															#line 3221 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			new (&static_cast<ActorFuzz7Actor*>(this)->SAV< int >::value()) int(919162);
			this->~ActorFuzz7ActorState();
			static_cast<ActorFuzz7Actor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
															#line 215 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	FutureStream<int> inputStream;
															#line 215 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	PromiseStream<int> outputStream;
															#line 215 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	Future<Void> error;
															#line 216 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int ifstate;
															#line 223 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int i510243;
															#line 226 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	std::vector<int> list596949;
															#line 230 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	decltype(std::begin(std::declval<std::vector<int>>())) RangeForbody1loopBody1Iterator0;
															#line 248 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	std::vector<int> list833282;
															#line 252 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	decltype(std::begin(std::declval<std::vector<int>>())) RangeForbody1cont3Iterator0;
															#line 265 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int i793430;
															#line 270 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	std::vector<int> list814034;
															#line 291 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	std::vector<int> list243466;
															#line 295 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	decltype(std::begin(std::declval<std::vector<int>>())) RangeForbody1Catch2Iterator0;
															#line 3261 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
};
// This generated class is to be used only via actorFuzz7()
															#line 215 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz7Actor final : public Actor<int>, public ActorSingleCallback< ActorFuzz7Actor, 0, int >, public ActorSingleCallback< ActorFuzz7Actor, 1, int >, public ActorCallback< ActorFuzz7Actor, 2, Void >, public FastAllocated<ActorFuzz7Actor>, public ActorFuzz7ActorState<ActorFuzz7Actor> {
															#line 3266 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
	using FastAllocated<ActorFuzz7Actor>::operator new;
	using FastAllocated<ActorFuzz7Actor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<int>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorSingleCallback< ActorFuzz7Actor, 0, int >;
friend struct ActorSingleCallback< ActorFuzz7Actor, 1, int >;
friend struct ActorCallback< ActorFuzz7Actor, 2, Void >;
															#line 215 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz7Actor(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 3279 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		 : Actor<int>(),
		   ActorFuzz7ActorState<ActorFuzz7Actor>(inputStream, outputStream, error)
	{
		fdb_probe_actor_enter("actorFuzz7", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("actorFuzz7");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("actorFuzz7", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorSingleCallback< ActorFuzz7Actor, 0, int >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorSingleCallback< ActorFuzz7Actor, 1, int >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< ActorFuzz7Actor, 2, Void >*)0, actor_cancelled()); break;
		}

	}
};
}
															#line 215 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
[[nodiscard]] Future<int> actorFuzz7( FutureStream<int> const& inputStream, PromiseStream<int> const& outputStream, Future<Void> const& error ) {
															#line 215 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	return Future<int>(new ActorFuzz7Actor(inputStream, outputStream, error));
															#line 3309 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
}

#line 310 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"

															#line 3314 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
namespace {
// This generated class is to be used only via actorFuzz8()
															#line 311 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
template <class ActorFuzz8Actor>
															#line 311 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz8ActorState {
															#line 3321 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
															#line 311 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz8ActorState(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 311 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
															#line 311 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		 : inputStream(inputStream),
															#line 311 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   outputStream(outputStream),
															#line 311 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   error(error),
															#line 312 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   ifstate(0)
															#line 3334 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
	{
		fdb_probe_actor_create("actorFuzz8", reinterpret_cast<unsigned long>(this));

	}
	~ActorFuzz8ActorState() 
	{
		fdb_probe_actor_destroy("actorFuzz8", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 313 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			FutureStream<int> __when_expr_0 = inputStream;
															#line 313 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			if (static_cast<ActorFuzz8Actor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 3351 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.pop(), loopDepth); };
			static_cast<ActorFuzz8Actor*>(this)->actor_wait_state = 1;
															#line 313 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorSingleCallback< ActorFuzz8Actor, 0, int >*>(static_cast<ActorFuzz8Actor*>(this)));
															#line 3356 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~ActorFuzz8ActorState();
		static_cast<ActorFuzz8Actor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int const& input,int loopDepth) 
	{
															#line 314 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(input + 284937);
															#line 315 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!static_cast<ActorFuzz8Actor*>(this)->SAV<int>::futures) { (void)(696473); this->~ActorFuzz8ActorState(); static_cast<ActorFuzz8Actor*>(this)->destroy(); return 0; }
															#line 3381 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		new (&static_cast<ActorFuzz8Actor*>(this)->SAV< int >::value()) int(696473);
		this->~ActorFuzz8ActorState();
		static_cast<ActorFuzz8Actor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont1(int && input,int loopDepth) 
	{
															#line 314 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(input + 284937);
															#line 315 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!static_cast<ActorFuzz8Actor*>(this)->SAV<int>::futures) { (void)(696473); this->~ActorFuzz8ActorState(); static_cast<ActorFuzz8Actor*>(this)->destroy(); return 0; }
															#line 3395 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		new (&static_cast<ActorFuzz8Actor*>(this)->SAV< int >::value()) int(696473);
		this->~ActorFuzz8ActorState();
		static_cast<ActorFuzz8Actor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1when1(int const& input,int loopDepth) 
	{
		loopDepth = a_body1cont1(input, loopDepth);

		return loopDepth;
	}
	int a_body1when1(int && input,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(input), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<ActorFuzz8Actor*>(this)->actor_wait_state > 0) static_cast<ActorFuzz8Actor*>(this)->actor_wait_state = 0;
		static_cast<ActorFuzz8Actor*>(this)->ActorSingleCallback< ActorFuzz8Actor, 0, int >::remove();

	}
	void a_callback_fire(ActorSingleCallback< ActorFuzz8Actor, 0, int >*,int const& value) 
	{
		fdb_probe_actor_enter("actorFuzz8", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz8", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorSingleCallback< ActorFuzz8Actor, 0, int >*,int && value) 
	{
		fdb_probe_actor_enter("actorFuzz8", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz8", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorSingleCallback< ActorFuzz8Actor, 0, int >*,Error err) 
	{
		fdb_probe_actor_enter("actorFuzz8", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz8", reinterpret_cast<unsigned long>(this), 0);

	}
															#line 311 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	FutureStream<int> inputStream;
															#line 311 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	PromiseStream<int> outputStream;
															#line 311 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	Future<Void> error;
															#line 312 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int ifstate;
															#line 3474 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
};
// This generated class is to be used only via actorFuzz8()
															#line 311 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz8Actor final : public Actor<int>, public ActorSingleCallback< ActorFuzz8Actor, 0, int >, public FastAllocated<ActorFuzz8Actor>, public ActorFuzz8ActorState<ActorFuzz8Actor> {
															#line 3479 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
	using FastAllocated<ActorFuzz8Actor>::operator new;
	using FastAllocated<ActorFuzz8Actor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<int>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorSingleCallback< ActorFuzz8Actor, 0, int >;
															#line 311 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz8Actor(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 3490 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		 : Actor<int>(),
		   ActorFuzz8ActorState<ActorFuzz8Actor>(inputStream, outputStream, error)
	{
		fdb_probe_actor_enter("actorFuzz8", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("actorFuzz8");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("actorFuzz8", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorSingleCallback< ActorFuzz8Actor, 0, int >*)0, actor_cancelled()); break;
		}

	}
};
}
															#line 311 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
[[nodiscard]] Future<int> actorFuzz8( FutureStream<int> const& inputStream, PromiseStream<int> const& outputStream, Future<Void> const& error ) {
															#line 311 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	return Future<int>(new ActorFuzz8Actor(inputStream, outputStream, error));
															#line 3518 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
}

#line 317 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"

															#line 3523 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
namespace {
// This generated class is to be used only via actorFuzz9()
															#line 318 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
template <class ActorFuzz9Actor>
															#line 318 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz9ActorState {
															#line 3530 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
															#line 318 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz9ActorState(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 318 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
															#line 318 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		 : inputStream(inputStream),
															#line 318 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   outputStream(outputStream),
															#line 318 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   error(error),
															#line 319 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   ifstate(0)
															#line 3543 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
	{
		fdb_probe_actor_create("actorFuzz9", reinterpret_cast<unsigned long>(this));

	}
	~ActorFuzz9ActorState() 
	{
		fdb_probe_actor_destroy("actorFuzz9", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 320 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			FutureStream<int> __when_expr_0 = inputStream;
															#line 320 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			if (static_cast<ActorFuzz9Actor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 3560 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.pop(), loopDepth); };
			static_cast<ActorFuzz9Actor*>(this)->actor_wait_state = 1;
															#line 320 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorSingleCallback< ActorFuzz9Actor, 0, int >*>(static_cast<ActorFuzz9Actor*>(this)));
															#line 3565 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~ActorFuzz9ActorState();
		static_cast<ActorFuzz9Actor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int const& input,int loopDepth) 
	{
															#line 321 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(input + 140463);
															#line 322 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!static_cast<ActorFuzz9Actor*>(this)->SAV<int>::futures) { (void)(397424); this->~ActorFuzz9ActorState(); static_cast<ActorFuzz9Actor*>(this)->destroy(); return 0; }
															#line 3590 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		new (&static_cast<ActorFuzz9Actor*>(this)->SAV< int >::value()) int(397424);
		this->~ActorFuzz9ActorState();
		static_cast<ActorFuzz9Actor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont1(int && input,int loopDepth) 
	{
															#line 321 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(input + 140463);
															#line 322 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!static_cast<ActorFuzz9Actor*>(this)->SAV<int>::futures) { (void)(397424); this->~ActorFuzz9ActorState(); static_cast<ActorFuzz9Actor*>(this)->destroy(); return 0; }
															#line 3604 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		new (&static_cast<ActorFuzz9Actor*>(this)->SAV< int >::value()) int(397424);
		this->~ActorFuzz9ActorState();
		static_cast<ActorFuzz9Actor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1when1(int const& input,int loopDepth) 
	{
		loopDepth = a_body1cont1(input, loopDepth);

		return loopDepth;
	}
	int a_body1when1(int && input,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(input), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<ActorFuzz9Actor*>(this)->actor_wait_state > 0) static_cast<ActorFuzz9Actor*>(this)->actor_wait_state = 0;
		static_cast<ActorFuzz9Actor*>(this)->ActorSingleCallback< ActorFuzz9Actor, 0, int >::remove();

	}
	void a_callback_fire(ActorSingleCallback< ActorFuzz9Actor, 0, int >*,int const& value) 
	{
		fdb_probe_actor_enter("actorFuzz9", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz9", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorSingleCallback< ActorFuzz9Actor, 0, int >*,int && value) 
	{
		fdb_probe_actor_enter("actorFuzz9", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz9", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorSingleCallback< ActorFuzz9Actor, 0, int >*,Error err) 
	{
		fdb_probe_actor_enter("actorFuzz9", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz9", reinterpret_cast<unsigned long>(this), 0);

	}
															#line 318 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	FutureStream<int> inputStream;
															#line 318 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	PromiseStream<int> outputStream;
															#line 318 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	Future<Void> error;
															#line 319 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int ifstate;
															#line 3683 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
};
// This generated class is to be used only via actorFuzz9()
															#line 318 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz9Actor final : public Actor<int>, public ActorSingleCallback< ActorFuzz9Actor, 0, int >, public FastAllocated<ActorFuzz9Actor>, public ActorFuzz9ActorState<ActorFuzz9Actor> {
															#line 3688 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
	using FastAllocated<ActorFuzz9Actor>::operator new;
	using FastAllocated<ActorFuzz9Actor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<int>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorSingleCallback< ActorFuzz9Actor, 0, int >;
															#line 318 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz9Actor(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 3699 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		 : Actor<int>(),
		   ActorFuzz9ActorState<ActorFuzz9Actor>(inputStream, outputStream, error)
	{
		fdb_probe_actor_enter("actorFuzz9", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("actorFuzz9");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("actorFuzz9", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorSingleCallback< ActorFuzz9Actor, 0, int >*)0, actor_cancelled()); break;
		}

	}
};
}
															#line 318 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
[[nodiscard]] Future<int> actorFuzz9( FutureStream<int> const& inputStream, PromiseStream<int> const& outputStream, Future<Void> const& error ) {
															#line 318 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	return Future<int>(new ActorFuzz9Actor(inputStream, outputStream, error));
															#line 3727 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
}

#line 324 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"

															#line 3732 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
namespace {
// This generated class is to be used only via actorFuzz10()
															#line 325 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
template <class ActorFuzz10Actor>
															#line 325 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz10ActorState {
															#line 3739 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
															#line 325 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz10ActorState(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 325 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
															#line 325 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		 : inputStream(inputStream),
															#line 325 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   outputStream(outputStream),
															#line 325 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   error(error),
															#line 326 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   ifstate(0),
															#line 327 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   i832228()
															#line 3754 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
	{
		fdb_probe_actor_create("actorFuzz10", reinterpret_cast<unsigned long>(this));

	}
	~ActorFuzz10ActorState() 
	{
		fdb_probe_actor_destroy("actorFuzz10", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 328 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			i832228 = 0;
															#line 3769 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			loopDepth = a_body1loopHead1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~ActorFuzz10ActorState();
		static_cast<ActorFuzz10Actor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 333 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!static_cast<ActorFuzz10Actor*>(this)->SAV<int>::futures) { (void)(402988); this->~ActorFuzz10ActorState(); static_cast<ActorFuzz10Actor*>(this)->destroy(); return 0; }
															#line 3792 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		new (&static_cast<ActorFuzz10Actor*>(this)->SAV< int >::value()) int(402988);
		this->~ActorFuzz10ActorState();
		static_cast<ActorFuzz10Actor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1(int loopDepth) 
	{
															#line 328 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!(i832228 < 5))
															#line 3811 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		{
			return a_body1break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 329 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(543113);
															#line 330 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		StrictFuture<Void> __when_expr_0 = error;
															#line 330 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (static_cast<ActorFuzz10Actor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 3821 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), std::max(0, loopDepth - 1)); else return a_body1loopBody1when1(__when_expr_0.get(), loopDepth); };
		static_cast<ActorFuzz10Actor*>(this)->actor_wait_state = 1;
															#line 330 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< ActorFuzz10Actor, 0, Void >*>(static_cast<ActorFuzz10Actor*>(this)));
															#line 3826 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1break1(int loopDepth) 
	{
		try {
			return a_body1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1cont1(Void const& _,int loopDepth) 
	{
															#line 331 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(780932);
															#line 328 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		i832228++;
															#line 3850 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		if (loopDepth == 0) return a_body1loopHead1(0);

		return loopDepth;
	}
	int a_body1loopBody1cont1(Void && _,int loopDepth) 
	{
															#line 331 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(780932);
															#line 328 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		i832228++;
															#line 3861 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		if (loopDepth == 0) return a_body1loopHead1(0);

		return loopDepth;
	}
	int a_body1loopBody1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<ActorFuzz10Actor*>(this)->actor_wait_state > 0) static_cast<ActorFuzz10Actor*>(this)->actor_wait_state = 0;
		static_cast<ActorFuzz10Actor*>(this)->ActorCallback< ActorFuzz10Actor, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< ActorFuzz10Actor, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("actorFuzz10", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz10", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< ActorFuzz10Actor, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("actorFuzz10", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz10", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< ActorFuzz10Actor, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("actorFuzz10", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz10", reinterpret_cast<unsigned long>(this), 0);

	}
															#line 325 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	FutureStream<int> inputStream;
															#line 325 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	PromiseStream<int> outputStream;
															#line 325 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	Future<Void> error;
															#line 326 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int ifstate;
															#line 327 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int i832228;
															#line 3939 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
};
// This generated class is to be used only via actorFuzz10()
															#line 325 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz10Actor final : public Actor<int>, public ActorCallback< ActorFuzz10Actor, 0, Void >, public FastAllocated<ActorFuzz10Actor>, public ActorFuzz10ActorState<ActorFuzz10Actor> {
															#line 3944 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
	using FastAllocated<ActorFuzz10Actor>::operator new;
	using FastAllocated<ActorFuzz10Actor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<int>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< ActorFuzz10Actor, 0, Void >;
															#line 325 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz10Actor(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 3955 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		 : Actor<int>(),
		   ActorFuzz10ActorState<ActorFuzz10Actor>(inputStream, outputStream, error)
	{
		fdb_probe_actor_enter("actorFuzz10", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("actorFuzz10");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("actorFuzz10", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< ActorFuzz10Actor, 0, Void >*)0, actor_cancelled()); break;
		}

	}
};
}
															#line 325 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
[[nodiscard]] Future<int> actorFuzz10( FutureStream<int> const& inputStream, PromiseStream<int> const& outputStream, Future<Void> const& error ) {
															#line 325 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	return Future<int>(new ActorFuzz10Actor(inputStream, outputStream, error));
															#line 3983 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
}

#line 335 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"

															#line 3988 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
namespace {
// This generated class is to be used only via actorFuzz11()
															#line 336 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
template <class ActorFuzz11Actor>
															#line 336 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz11ActorState {
															#line 3995 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
															#line 336 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz11ActorState(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 336 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
															#line 336 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		 : inputStream(inputStream),
															#line 336 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   outputStream(outputStream),
															#line 336 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   error(error),
															#line 337 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   ifstate(0)
															#line 4008 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
	{
		fdb_probe_actor_create("actorFuzz11", reinterpret_cast<unsigned long>(this));

	}
	~ActorFuzz11ActorState() 
	{
		fdb_probe_actor_destroy("actorFuzz11", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 338 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			StrictFuture<Void> __when_expr_0 = error;
															#line 338 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			if (static_cast<ActorFuzz11Actor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 4025 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<ActorFuzz11Actor*>(this)->actor_wait_state = 1;
															#line 338 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< ActorFuzz11Actor, 0, Void >*>(static_cast<ActorFuzz11Actor*>(this)));
															#line 4030 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~ActorFuzz11ActorState();
		static_cast<ActorFuzz11Actor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Void const& _,int loopDepth) 
	{
															#line 339 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!static_cast<ActorFuzz11Actor*>(this)->SAV<int>::futures) { (void)(672734); this->~ActorFuzz11ActorState(); static_cast<ActorFuzz11Actor*>(this)->destroy(); return 0; }
															#line 4053 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		new (&static_cast<ActorFuzz11Actor*>(this)->SAV< int >::value()) int(672734);
		this->~ActorFuzz11ActorState();
		static_cast<ActorFuzz11Actor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont1(Void && _,int loopDepth) 
	{
															#line 339 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!static_cast<ActorFuzz11Actor*>(this)->SAV<int>::futures) { (void)(672734); this->~ActorFuzz11ActorState(); static_cast<ActorFuzz11Actor*>(this)->destroy(); return 0; }
															#line 4065 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		new (&static_cast<ActorFuzz11Actor*>(this)->SAV< int >::value()) int(672734);
		this->~ActorFuzz11ActorState();
		static_cast<ActorFuzz11Actor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<ActorFuzz11Actor*>(this)->actor_wait_state > 0) static_cast<ActorFuzz11Actor*>(this)->actor_wait_state = 0;
		static_cast<ActorFuzz11Actor*>(this)->ActorCallback< ActorFuzz11Actor, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< ActorFuzz11Actor, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("actorFuzz11", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz11", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< ActorFuzz11Actor, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("actorFuzz11", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz11", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< ActorFuzz11Actor, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("actorFuzz11", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz11", reinterpret_cast<unsigned long>(this), 0);

	}
															#line 336 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	FutureStream<int> inputStream;
															#line 336 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	PromiseStream<int> outputStream;
															#line 336 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	Future<Void> error;
															#line 337 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int ifstate;
															#line 4144 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
};
// This generated class is to be used only via actorFuzz11()
															#line 336 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz11Actor final : public Actor<int>, public ActorCallback< ActorFuzz11Actor, 0, Void >, public FastAllocated<ActorFuzz11Actor>, public ActorFuzz11ActorState<ActorFuzz11Actor> {
															#line 4149 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
	using FastAllocated<ActorFuzz11Actor>::operator new;
	using FastAllocated<ActorFuzz11Actor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<int>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< ActorFuzz11Actor, 0, Void >;
															#line 336 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz11Actor(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 4160 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		 : Actor<int>(),
		   ActorFuzz11ActorState<ActorFuzz11Actor>(inputStream, outputStream, error)
	{
		fdb_probe_actor_enter("actorFuzz11", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("actorFuzz11");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("actorFuzz11", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< ActorFuzz11Actor, 0, Void >*)0, actor_cancelled()); break;
		}

	}
};
}
															#line 336 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
[[nodiscard]] Future<int> actorFuzz11( FutureStream<int> const& inputStream, PromiseStream<int> const& outputStream, Future<Void> const& error ) {
															#line 336 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	return Future<int>(new ActorFuzz11Actor(inputStream, outputStream, error));
															#line 4188 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
}

#line 341 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"

															#line 4193 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
namespace {
// This generated class is to be used only via actorFuzz12()
															#line 342 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
template <class ActorFuzz12Actor>
															#line 342 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz12ActorState {
															#line 4200 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
															#line 342 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz12ActorState(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 342 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
															#line 342 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		 : inputStream(inputStream),
															#line 342 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   outputStream(outputStream),
															#line 342 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   error(error),
															#line 343 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   ifstate(0),
															#line 344 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   list466120()
															#line 4215 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
	{
		fdb_probe_actor_create("actorFuzz12", reinterpret_cast<unsigned long>(this));

	}
	~ActorFuzz12ActorState() 
	{
		fdb_probe_actor_destroy("actorFuzz12", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 345 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list466120.push_back(1);
															#line 346 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list466120.push_back(2);
															#line 347 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list466120.push_back(3);
															#line 348 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			for( auto i : list466120 ) {
															#line 349 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				(void)i;
															#line 350 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(970588);
															#line 351 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				if (!static_cast<ActorFuzz12Actor*>(this)->SAV<int>::futures) { (void)(981887); this->~ActorFuzz12ActorState(); static_cast<ActorFuzz12Actor*>(this)->destroy(); return 0; }
															#line 4242 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				new (&static_cast<ActorFuzz12Actor*>(this)->SAV< int >::value()) int(981887);
				this->~ActorFuzz12ActorState();
				static_cast<ActorFuzz12Actor*>(this)->finishSendAndDelPromiseRef();
				return 0;
			}
															#line 353 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			if (!static_cast<ActorFuzz12Actor*>(this)->SAV<int>::futures) { (void)(869298); this->~ActorFuzz12ActorState(); static_cast<ActorFuzz12Actor*>(this)->destroy(); return 0; }
															#line 4250 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			new (&static_cast<ActorFuzz12Actor*>(this)->SAV< int >::value()) int(869298);
			this->~ActorFuzz12ActorState();
			static_cast<ActorFuzz12Actor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~ActorFuzz12ActorState();
		static_cast<ActorFuzz12Actor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
															#line 342 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	FutureStream<int> inputStream;
															#line 342 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	PromiseStream<int> outputStream;
															#line 342 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	Future<Void> error;
															#line 343 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int ifstate;
															#line 344 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	std::vector<int> list466120;
															#line 4282 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
};
// This generated class is to be used only via actorFuzz12()
															#line 342 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz12Actor final : public Actor<int>, public FastAllocated<ActorFuzz12Actor>, public ActorFuzz12ActorState<ActorFuzz12Actor> {
															#line 4287 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
	using FastAllocated<ActorFuzz12Actor>::operator new;
	using FastAllocated<ActorFuzz12Actor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<int>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
															#line 342 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz12Actor(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 4297 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		 : Actor<int>(),
		   ActorFuzz12ActorState<ActorFuzz12Actor>(inputStream, outputStream, error)
	{
		fdb_probe_actor_enter("actorFuzz12", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("actorFuzz12");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("actorFuzz12", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		}

	}
};
}
															#line 342 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
[[nodiscard]] Future<int> actorFuzz12( FutureStream<int> const& inputStream, PromiseStream<int> const& outputStream, Future<Void> const& error ) {
															#line 342 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	return Future<int>(new ActorFuzz12Actor(inputStream, outputStream, error));
															#line 4324 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
}

#line 355 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"

															#line 4329 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
namespace {
// This generated class is to be used only via actorFuzz13()
															#line 356 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
template <class ActorFuzz13Actor>
															#line 356 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz13ActorState {
															#line 4336 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
															#line 356 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz13ActorState(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 356 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
															#line 356 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		 : inputStream(inputStream),
															#line 356 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   outputStream(outputStream),
															#line 356 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   error(error),
															#line 357 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   ifstate(0)
															#line 4349 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
	{
		fdb_probe_actor_create("actorFuzz13", reinterpret_cast<unsigned long>(this));

	}
	~ActorFuzz13ActorState() 
	{
		fdb_probe_actor_destroy("actorFuzz13", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 358 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			if ((++ifstate & 1) == 0)
															#line 4364 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			{
															#line 359 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(571414);
															#line 360 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				if (!static_cast<ActorFuzz13Actor*>(this)->SAV<int>::futures) { (void)(591307); this->~ActorFuzz13ActorState(); static_cast<ActorFuzz13Actor*>(this)->destroy(); return 0; }
															#line 4370 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				new (&static_cast<ActorFuzz13Actor*>(this)->SAV< int >::value()) int(591307);
				this->~ActorFuzz13ActorState();
				static_cast<ActorFuzz13Actor*>(this)->finishSendAndDelPromiseRef();
				return 0;
			}
															#line 362 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			if (!static_cast<ActorFuzz13Actor*>(this)->SAV<int>::futures) { (void)(861219); this->~ActorFuzz13ActorState(); static_cast<ActorFuzz13Actor*>(this)->destroy(); return 0; }
															#line 4378 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			new (&static_cast<ActorFuzz13Actor*>(this)->SAV< int >::value()) int(861219);
			this->~ActorFuzz13ActorState();
			static_cast<ActorFuzz13Actor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~ActorFuzz13ActorState();
		static_cast<ActorFuzz13Actor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
															#line 356 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	FutureStream<int> inputStream;
															#line 356 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	PromiseStream<int> outputStream;
															#line 356 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	Future<Void> error;
															#line 357 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int ifstate;
															#line 4408 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
};
// This generated class is to be used only via actorFuzz13()
															#line 356 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz13Actor final : public Actor<int>, public FastAllocated<ActorFuzz13Actor>, public ActorFuzz13ActorState<ActorFuzz13Actor> {
															#line 4413 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
	using FastAllocated<ActorFuzz13Actor>::operator new;
	using FastAllocated<ActorFuzz13Actor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<int>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
															#line 356 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz13Actor(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 4423 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		 : Actor<int>(),
		   ActorFuzz13ActorState<ActorFuzz13Actor>(inputStream, outputStream, error)
	{
		fdb_probe_actor_enter("actorFuzz13", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("actorFuzz13");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("actorFuzz13", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		}

	}
};
}
															#line 356 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
[[nodiscard]] Future<int> actorFuzz13( FutureStream<int> const& inputStream, PromiseStream<int> const& outputStream, Future<Void> const& error ) {
															#line 356 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	return Future<int>(new ActorFuzz13Actor(inputStream, outputStream, error));
															#line 4450 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
}

#line 364 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"

															#line 4455 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
namespace {
// This generated class is to be used only via actorFuzz14()
															#line 365 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
template <class ActorFuzz14Actor>
															#line 365 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz14ActorState {
															#line 4462 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
															#line 365 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz14ActorState(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 365 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
															#line 365 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		 : inputStream(inputStream),
															#line 365 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   outputStream(outputStream),
															#line 365 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   error(error),
															#line 366 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   ifstate(0),
															#line 367 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   list370902()
															#line 4477 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
	{
		fdb_probe_actor_create("actorFuzz14", reinterpret_cast<unsigned long>(this));

	}
	~ActorFuzz14ActorState() 
	{
		fdb_probe_actor_destroy("actorFuzz14", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 368 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list370902.push_back(1);
															#line 369 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list370902.push_back(2);
															#line 370 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list370902.push_back(3);
															#line 371 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			for( auto i : list370902 ) {
															#line 372 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				(void)i;
															#line 373 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(527098);
															#line 4502 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				continue;
			}
															#line 376 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			if (!static_cast<ActorFuzz14Actor*>(this)->SAV<int>::futures) { (void)(628047); this->~ActorFuzz14ActorState(); static_cast<ActorFuzz14Actor*>(this)->destroy(); return 0; }
															#line 4507 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			new (&static_cast<ActorFuzz14Actor*>(this)->SAV< int >::value()) int(628047);
			this->~ActorFuzz14ActorState();
			static_cast<ActorFuzz14Actor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~ActorFuzz14ActorState();
		static_cast<ActorFuzz14Actor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
															#line 365 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	FutureStream<int> inputStream;
															#line 365 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	PromiseStream<int> outputStream;
															#line 365 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	Future<Void> error;
															#line 366 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int ifstate;
															#line 367 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	std::vector<int> list370902;
															#line 4539 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
};
// This generated class is to be used only via actorFuzz14()
															#line 365 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz14Actor final : public Actor<int>, public FastAllocated<ActorFuzz14Actor>, public ActorFuzz14ActorState<ActorFuzz14Actor> {
															#line 4544 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
	using FastAllocated<ActorFuzz14Actor>::operator new;
	using FastAllocated<ActorFuzz14Actor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<int>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
															#line 365 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz14Actor(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 4554 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		 : Actor<int>(),
		   ActorFuzz14ActorState<ActorFuzz14Actor>(inputStream, outputStream, error)
	{
		fdb_probe_actor_enter("actorFuzz14", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("actorFuzz14");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("actorFuzz14", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		}

	}
};
}
															#line 365 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
[[nodiscard]] Future<int> actorFuzz14( FutureStream<int> const& inputStream, PromiseStream<int> const& outputStream, Future<Void> const& error ) {
															#line 365 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	return Future<int>(new ActorFuzz14Actor(inputStream, outputStream, error));
															#line 4581 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
}

#line 378 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"

															#line 4586 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
namespace {
// This generated class is to be used only via actorFuzz15()
															#line 379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
template <class ActorFuzz15Actor>
															#line 379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz15ActorState {
															#line 4593 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
															#line 379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz15ActorState(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
															#line 379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		 : inputStream(inputStream),
															#line 379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   outputStream(outputStream),
															#line 379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   error(error),
															#line 380 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   ifstate(0),
															#line 381 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   i450301()
															#line 4608 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
	{
		fdb_probe_actor_create("actorFuzz15", reinterpret_cast<unsigned long>(this));

	}
	~ActorFuzz15ActorState() 
	{
		fdb_probe_actor_destroy("actorFuzz15", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 382 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			for(i450301 = 0;i450301 < 5;i450301++) {
															#line 383 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(582389);
															#line 384 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				list863601 = std::vector<int>();
															#line 385 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				list863601.push_back(1);
															#line 386 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				list863601.push_back(2);
															#line 387 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				list863601.push_back(3);
															#line 388 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				for( auto i : list863601 ) {
															#line 389 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					(void)i;
															#line 390 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					outputStream.send(240216);
															#line 4639 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
					break;
				}
															#line 393 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(732317);
															#line 4644 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			}
															#line 395 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			if (!static_cast<ActorFuzz15Actor*>(this)->SAV<int>::futures) { (void)(884781); this->~ActorFuzz15ActorState(); static_cast<ActorFuzz15Actor*>(this)->destroy(); return 0; }
															#line 4648 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			new (&static_cast<ActorFuzz15Actor*>(this)->SAV< int >::value()) int(884781);
			this->~ActorFuzz15ActorState();
			static_cast<ActorFuzz15Actor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~ActorFuzz15ActorState();
		static_cast<ActorFuzz15Actor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
															#line 379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	FutureStream<int> inputStream;
															#line 379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	PromiseStream<int> outputStream;
															#line 379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	Future<Void> error;
															#line 380 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int ifstate;
															#line 381 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int i450301;
															#line 384 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	std::vector<int> list863601;
															#line 4682 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
};
// This generated class is to be used only via actorFuzz15()
															#line 379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz15Actor final : public Actor<int>, public FastAllocated<ActorFuzz15Actor>, public ActorFuzz15ActorState<ActorFuzz15Actor> {
															#line 4687 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
	using FastAllocated<ActorFuzz15Actor>::operator new;
	using FastAllocated<ActorFuzz15Actor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<int>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
															#line 379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz15Actor(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 4697 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		 : Actor<int>(),
		   ActorFuzz15ActorState<ActorFuzz15Actor>(inputStream, outputStream, error)
	{
		fdb_probe_actor_enter("actorFuzz15", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("actorFuzz15");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("actorFuzz15", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		}

	}
};
}
															#line 379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
[[nodiscard]] Future<int> actorFuzz15( FutureStream<int> const& inputStream, PromiseStream<int> const& outputStream, Future<Void> const& error ) {
															#line 379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	return Future<int>(new ActorFuzz15Actor(inputStream, outputStream, error));
															#line 4724 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
}

#line 397 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"

															#line 4729 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
namespace {
// This generated class is to be used only via actorFuzz16()
															#line 398 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
template <class ActorFuzz16Actor>
															#line 398 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz16ActorState {
															#line 4736 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
															#line 398 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz16ActorState(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 398 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
															#line 398 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		 : inputStream(inputStream),
															#line 398 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   outputStream(outputStream),
															#line 398 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   error(error),
															#line 399 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   ifstate(0)
															#line 4749 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
	{
		fdb_probe_actor_create("actorFuzz16", reinterpret_cast<unsigned long>(this));

	}
	~ActorFuzz16ActorState() 
	{
		fdb_probe_actor_destroy("actorFuzz16", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 400 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			if ((++ifstate & 1) == 1)
															#line 4764 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			{
															#line 401 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(943071);
															#line 402 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				list811122 = std::vector<int>();
															#line 403 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				list811122.push_back(1);
															#line 404 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				list811122.push_back(2);
															#line 405 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				list811122.push_back(3);
															#line 406 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				RangeForbody1Iterator0 = std::begin(list811122);
															#line 4778 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				loopDepth = a_body1loopHead1(loopDepth);
			}
			else
			{
															#line 426 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(437137);
															#line 427 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				list226908 = std::vector<int>();
															#line 428 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				list226908.push_back(1);
															#line 429 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				list226908.push_back(2);
															#line 430 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				list226908.push_back(3);
															#line 431 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				for( auto i : list226908 ) {
															#line 432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					(void)i;
															#line 433 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					outputStream.send(321651);
															#line 434 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					if ((++ifstate & 1) == 1)
															#line 4801 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
					{
															#line 435 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
						outputStream.send(396995);
															#line 436 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
						i753710 = int();
															#line 437 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
						for(i753710 = 0;i753710 < 5;i753710++) {
															#line 438 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
							outputStream.send(235407);
															#line 4811 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
							break;
						}
															#line 441 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
						outputStream.send(792039);
															#line 4816 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
					}
															#line 443 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					outputStream.send(659099);
															#line 4820 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				}
															#line 445 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(403928);
															#line 4824 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				loopDepth = a_body1cont1(loopDepth);
			}
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~ActorFuzz16ActorState();
		static_cast<ActorFuzz16Actor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 447 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!static_cast<ActorFuzz16Actor*>(this)->SAV<int>::futures) { (void)(197156); this->~ActorFuzz16ActorState(); static_cast<ActorFuzz16Actor*>(this)->destroy(); return 0; }
															#line 4848 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		new (&static_cast<ActorFuzz16Actor*>(this)->SAV< int >::value()) int(197156);
		this->~ActorFuzz16ActorState();
		static_cast<ActorFuzz16Actor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont2(int loopDepth) 
	{
															#line 424 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(493007);
															#line 4860 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1(int loopDepth) 
	{
															#line 406 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!(RangeForbody1Iterator0 != std::end(list811122)))
															#line 4876 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		{
			return a_body1break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 406 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		auto i = *RangeForbody1Iterator0;
															#line 4882 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		{
															#line 407 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			(void)i;
															#line 408 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(492690);
															#line 409 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			if ((++ifstate & 1) == 1)
															#line 4890 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			{
															#line 410 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(388192);
															#line 411 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				StrictFuture<Void> __when_expr_0 = error;
															#line 411 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				if (static_cast<ActorFuzz16Actor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 4898 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), std::max(0, loopDepth - 1)); else return a_body1loopBody1when1(__when_expr_0.get(), loopDepth); };
				static_cast<ActorFuzz16Actor*>(this)->actor_wait_state = 1;
															#line 411 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< ActorFuzz16Actor, 0, Void >*>(static_cast<ActorFuzz16Actor*>(this)));
															#line 4903 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				loopDepth = 0;
			}
			else
			{
															#line 414 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(908751);
															#line 415 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				i120459 = int();
															#line 416 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				for(i120459 = 0;i120459 < 5;i120459++) {
															#line 417 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					outputStream.send(198776);
															#line 418 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					if (!static_cast<ActorFuzz16Actor*>(this)->SAV<int>::futures) { (void)(537939); this->~ActorFuzz16ActorState(); static_cast<ActorFuzz16Actor*>(this)->destroy(); return 0; }
															#line 4918 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
					new (&static_cast<ActorFuzz16Actor*>(this)->SAV< int >::value()) int(537939);
					this->~ActorFuzz16ActorState();
					static_cast<ActorFuzz16Actor*>(this)->finishSendAndDelPromiseRef();
					return 0;
				}
															#line 420 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(649270);
															#line 4926 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				loopDepth = a_body1loopBody1cont3(loopDepth);
			}
		}

		return loopDepth;
	}
	int a_body1break1(int loopDepth) 
	{
		try {
			return a_body1cont2(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1cont1(int loopDepth) 
	{
															#line 406 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		++RangeForbody1Iterator0;
															#line 4950 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		if (loopDepth == 0) return a_body1loopHead1(0);

		return loopDepth;
	}
	int a_body1loopBody1cont3(int loopDepth) 
	{
															#line 422 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(397872);
															#line 4959 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont4(Void const& _,int loopDepth) 
	{
															#line 412 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(545437);
															#line 4968 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1loopBody1cont3(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont4(Void && _,int loopDepth) 
	{
															#line 412 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(545437);
															#line 4977 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1loopBody1cont3(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont4(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont4(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<ActorFuzz16Actor*>(this)->actor_wait_state > 0) static_cast<ActorFuzz16Actor*>(this)->actor_wait_state = 0;
		static_cast<ActorFuzz16Actor*>(this)->ActorCallback< ActorFuzz16Actor, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< ActorFuzz16Actor, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("actorFuzz16", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz16", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< ActorFuzz16Actor, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("actorFuzz16", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz16", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< ActorFuzz16Actor, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("actorFuzz16", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz16", reinterpret_cast<unsigned long>(this), 0);

	}
															#line 398 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	FutureStream<int> inputStream;
															#line 398 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	PromiseStream<int> outputStream;
															#line 398 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	Future<Void> error;
															#line 399 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int ifstate;
															#line 402 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	std::vector<int> list811122;
															#line 406 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	decltype(std::begin(std::declval<std::vector<int>>())) RangeForbody1Iterator0;
															#line 415 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int i120459;
															#line 427 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	std::vector<int> list226908;
															#line 436 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int i753710;
															#line 5063 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
};
// This generated class is to be used only via actorFuzz16()
															#line 398 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz16Actor final : public Actor<int>, public ActorCallback< ActorFuzz16Actor, 0, Void >, public FastAllocated<ActorFuzz16Actor>, public ActorFuzz16ActorState<ActorFuzz16Actor> {
															#line 5068 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
	using FastAllocated<ActorFuzz16Actor>::operator new;
	using FastAllocated<ActorFuzz16Actor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<int>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< ActorFuzz16Actor, 0, Void >;
															#line 398 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz16Actor(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 5079 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		 : Actor<int>(),
		   ActorFuzz16ActorState<ActorFuzz16Actor>(inputStream, outputStream, error)
	{
		fdb_probe_actor_enter("actorFuzz16", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("actorFuzz16");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("actorFuzz16", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< ActorFuzz16Actor, 0, Void >*)0, actor_cancelled()); break;
		}

	}
};
}
															#line 398 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
[[nodiscard]] Future<int> actorFuzz16( FutureStream<int> const& inputStream, PromiseStream<int> const& outputStream, Future<Void> const& error ) {
															#line 398 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	return Future<int>(new ActorFuzz16Actor(inputStream, outputStream, error));
															#line 5107 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
}

#line 449 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"

															#line 5112 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
namespace {
// This generated class is to be used only via actorFuzz17()
															#line 450 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
template <class ActorFuzz17Actor>
															#line 450 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz17ActorState {
															#line 5119 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
															#line 450 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz17ActorState(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 450 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
															#line 450 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		 : inputStream(inputStream),
															#line 450 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   outputStream(outputStream),
															#line 450 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   error(error),
															#line 451 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   ifstate(0),
															#line 452 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   list522792()
															#line 5134 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
	{
		fdb_probe_actor_create("actorFuzz17", reinterpret_cast<unsigned long>(this));

	}
	~ActorFuzz17ActorState() 
	{
		fdb_probe_actor_destroy("actorFuzz17", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 453 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list522792.push_back(1);
															#line 454 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list522792.push_back(2);
															#line 455 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list522792.push_back(3);
															#line 456 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			RangeForbody1Iterator0 = std::begin(list522792);
															#line 5155 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			loopDepth = a_body1loopHead1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~ActorFuzz17ActorState();
		static_cast<ActorFuzz17Actor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 483 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!static_cast<ActorFuzz17Actor*>(this)->SAV<int>::futures) { (void)(299183); this->~ActorFuzz17ActorState(); static_cast<ActorFuzz17Actor*>(this)->destroy(); return 0; }
															#line 5178 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		new (&static_cast<ActorFuzz17Actor*>(this)->SAV< int >::value()) int(299183);
		this->~ActorFuzz17ActorState();
		static_cast<ActorFuzz17Actor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1(int loopDepth) 
	{
															#line 456 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!(RangeForbody1Iterator0 != std::end(list522792)))
															#line 5197 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		{
			return a_body1break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 456 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		auto i = *RangeForbody1Iterator0;
															#line 5203 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		{
															#line 457 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			(void)i;
															#line 458 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(249436);
															#line 5209 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			try {
															#line 460 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(416782);
															#line 5213 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				return a_body1continue1(loopDepth); // continue
			}
			catch (Error& error) {
				loopDepth = a_body1loopBody1Catch1(error, loopDepth);
			} catch (...) {
				loopDepth = a_body1loopBody1Catch1(unknown_error(), loopDepth);
			}
		}

		return loopDepth;
	}
	int a_body1break1(int loopDepth) 
	{
		try {
			return a_body1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1continue1(int loopDepth) 
	{
															#line 456 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		++RangeForbody1Iterator0;
															#line 5242 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		if (loopDepth == 0) return a_body1loopHead1(0);

		return loopDepth;
	}
	int a_body1loopBody1cont1(int loopDepth) 
	{
															#line 456 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		++RangeForbody1Iterator0;
															#line 5251 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		if (loopDepth == 0) return a_body1loopHead1(0);

		return loopDepth;
	}
	int a_body1loopBody1cont3(int loopDepth) 
	{
															#line 470 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(670490);
															#line 471 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if ((++ifstate & 1) == 0)
															#line 5262 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		{
															#line 472 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(264281);
															#line 5266 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			try {
															#line 474 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(830283);
															#line 5270 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				return a_body1continue1(loopDepth); // continue
			}
			catch (Error& error) {
				loopDepth = a_body1loopBody1cont3Catch1(error, loopDepth);
			} catch (...) {
				loopDepth = a_body1loopBody1cont3Catch1(unknown_error(), loopDepth);
			}
		}
		else
		{
			loopDepth = a_body1loopBody1cont5(loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1Catch1(const Error& __current_error,int loopDepth=0) 
	{
		try {
															#line 463 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(237787);
															#line 464 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			for(;;) {
															#line 465 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(438476);
															#line 5295 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				break;
			}
															#line 468 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(939594);
															#line 5300 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			loopDepth = a_body1loopBody1cont3(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1loopBody1cont5(int loopDepth) 
	{
															#line 481 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(990392);
															#line 5315 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont3Catch1(const Error& __current_error,int loopDepth=0) 
	{
		try {
															#line 477 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(157517);
															#line 5325 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			return a_body1continue1(loopDepth); // continue
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
															#line 450 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	FutureStream<int> inputStream;
															#line 450 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	PromiseStream<int> outputStream;
															#line 450 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	Future<Void> error;
															#line 451 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int ifstate;
															#line 452 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	std::vector<int> list522792;
															#line 456 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	decltype(std::begin(std::declval<std::vector<int>>())) RangeForbody1Iterator0;
															#line 5348 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
};
// This generated class is to be used only via actorFuzz17()
															#line 450 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz17Actor final : public Actor<int>, public FastAllocated<ActorFuzz17Actor>, public ActorFuzz17ActorState<ActorFuzz17Actor> {
															#line 5353 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
	using FastAllocated<ActorFuzz17Actor>::operator new;
	using FastAllocated<ActorFuzz17Actor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<int>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
															#line 450 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz17Actor(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 5363 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		 : Actor<int>(),
		   ActorFuzz17ActorState<ActorFuzz17Actor>(inputStream, outputStream, error)
	{
		fdb_probe_actor_enter("actorFuzz17", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("actorFuzz17");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("actorFuzz17", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		}

	}
};
}
															#line 450 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
[[nodiscard]] Future<int> actorFuzz17( FutureStream<int> const& inputStream, PromiseStream<int> const& outputStream, Future<Void> const& error ) {
															#line 450 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	return Future<int>(new ActorFuzz17Actor(inputStream, outputStream, error));
															#line 5390 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
}

#line 485 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"

															#line 5395 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
namespace {
// This generated class is to be used only via actorFuzz18()
															#line 486 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
template <class ActorFuzz18Actor>
															#line 486 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz18ActorState {
															#line 5402 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
															#line 486 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz18ActorState(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 486 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
															#line 486 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		 : inputStream(inputStream),
															#line 486 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   outputStream(outputStream),
															#line 486 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   error(error),
															#line 487 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   ifstate(0)
															#line 5415 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
	{
		fdb_probe_actor_create("actorFuzz18", reinterpret_cast<unsigned long>(this));

	}
	~ActorFuzz18ActorState() 
	{
		fdb_probe_actor_destroy("actorFuzz18", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
			try {
															#line 489 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(337649);
															#line 490 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				i910140 = int();
															#line 491 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				for(i910140 = 0;i910140 < 5;i910140++) {
															#line 492 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					outputStream.send(395297);
															#line 5437 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
					break;
				}
															#line 495 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(807261);
															#line 5442 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				loopDepth = a_body1cont4(loopDepth);
			}
			catch (Error& error) {
				loopDepth = a_body1Catch2(error, loopDepth);
			} catch (...) {
				loopDepth = a_body1Catch2(unknown_error(), loopDepth);
			}
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~ActorFuzz18ActorState();
		static_cast<ActorFuzz18Actor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 538 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!static_cast<ActorFuzz18Actor*>(this)->SAV<int>::futures) { (void)(517901); this->~ActorFuzz18ActorState(); static_cast<ActorFuzz18Actor*>(this)->destroy(); return 0; }
															#line 5471 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		new (&static_cast<ActorFuzz18Actor*>(this)->SAV< int >::value()) int(517901);
		this->~ActorFuzz18ActorState();
		static_cast<ActorFuzz18Actor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1Catch2(const Error& __current_error,int loopDepth=0) 
	{
		try {
															#line 497 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(628394);
															#line 5484 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			try {
															#line 499 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(658059);
															#line 500 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				return a_body1Catch2Catch1(operation_failed(), loopDepth);
															#line 5490 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			}
			catch (Error& error) {
				loopDepth = a_body1Catch2Catch1(error, loopDepth);
			} catch (...) {
				loopDepth = a_body1Catch2Catch1(unknown_error(), loopDepth);
			}
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont4(int loopDepth) 
	{
		try {
			loopDepth = a_body1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch2cont1(int loopDepth) 
	{
															#line 536 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(764202);
															#line 5523 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1Catch2Catch1(const Error& __current_error,int loopDepth=0) 
	{
		try {
															#line 502 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(787535);
															#line 503 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			if ((++ifstate & 1) == 1)
															#line 5535 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			{
															#line 504 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(945855);
															#line 505 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				FutureStream<int> __when_expr_0 = inputStream;
															#line 505 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				if (static_cast<ActorFuzz18Actor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 5543 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1Catch2Catch1when1(__when_expr_0.pop(), loopDepth); };
				static_cast<ActorFuzz18Actor*>(this)->actor_wait_state = 1;
															#line 505 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				__when_expr_0.addCallbackAndClear(static_cast<ActorSingleCallback< ActorFuzz18Actor, 0, int >*>(static_cast<ActorFuzz18Actor*>(this)));
															#line 5548 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				loopDepth = 0;
			}
			else
			{
															#line 509 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(705433);
															#line 5555 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				try {
															#line 511 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					outputStream.send(110258);
															#line 512 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					list917536 = std::vector<int>();
															#line 513 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					list917536.push_back(1);
															#line 514 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					list917536.push_back(2);
															#line 515 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					list917536.push_back(3);
															#line 516 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					for( auto i : list917536 ) {
															#line 517 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
						(void)i;
															#line 518 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
						outputStream.send(539878);
															#line 519 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
						return a_body1Catch2Catch1Catch1(operation_failed(), loopDepth);
															#line 5575 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
					}
															#line 521 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					outputStream.send(265595);
															#line 5579 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
					loopDepth = a_body1Catch2Catch1cont7(loopDepth);
				}
				catch (Error& error) {
					loopDepth = a_body1Catch2Catch1Catch1(error, loopDepth);
				} catch (...) {
					loopDepth = a_body1Catch2Catch1Catch1(unknown_error(), loopDepth);
				}
			}
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch2Catch1cont1(int loopDepth) 
	{
															#line 534 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(365388);
															#line 5601 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1Catch2cont1(loopDepth);

		return loopDepth;
	}
	int a_body1Catch2Catch1cont2(int const& input,int loopDepth) 
	{
															#line 506 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(input + 401313);
															#line 507 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(483948);
															#line 5612 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1Catch2Catch1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1Catch2Catch1cont2(int && input,int loopDepth) 
	{
															#line 506 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(input + 401313);
															#line 507 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(483948);
															#line 5623 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1Catch2Catch1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1Catch2Catch1when1(int const& input,int loopDepth) 
	{
		loopDepth = a_body1Catch2Catch1cont2(input, loopDepth);

		return loopDepth;
	}
	int a_body1Catch2Catch1when1(int && input,int loopDepth) 
	{
		loopDepth = a_body1Catch2Catch1cont2(std::move(input), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<ActorFuzz18Actor*>(this)->actor_wait_state > 0) static_cast<ActorFuzz18Actor*>(this)->actor_wait_state = 0;
		static_cast<ActorFuzz18Actor*>(this)->ActorSingleCallback< ActorFuzz18Actor, 0, int >::remove();

	}
	void a_callback_fire(ActorSingleCallback< ActorFuzz18Actor, 0, int >*,int const& value) 
	{
		fdb_probe_actor_enter("actorFuzz18", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch2Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz18", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorSingleCallback< ActorFuzz18Actor, 0, int >*,int && value) 
	{
		fdb_probe_actor_enter("actorFuzz18", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch2Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz18", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorSingleCallback< ActorFuzz18Actor, 0, int >*,Error err) 
	{
		fdb_probe_actor_enter("actorFuzz18", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz18", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1Catch2Catch1cont4(int loopDepth) 
	{
															#line 532 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(954545);
															#line 5695 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1Catch2Catch1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1Catch2Catch1Catch1(const Error& __current_error,int loopDepth=0) 
	{
		try {
															#line 523 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(919259);
															#line 5705 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			try {
															#line 525 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(770240);
															#line 526 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				return a_body1Catch2Catch1Catch1Catch1(operation_failed(), loopDepth);
															#line 5711 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			}
			catch (Error& error) {
				loopDepth = a_body1Catch2Catch1Catch1Catch1(error, loopDepth);
			} catch (...) {
				loopDepth = a_body1Catch2Catch1Catch1Catch1(unknown_error(), loopDepth);
			}
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch2Catch1cont7(int loopDepth) 
	{
		try {
			loopDepth = a_body1Catch2Catch1cont4(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch2Catch1Catch1Catch1(const Error& __current_error,int loopDepth=0) 
	{
		try {
															#line 528 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(383788);
															#line 529 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			return a_body1Catch1(operation_failed(), loopDepth);
															#line 5747 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
															#line 486 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	FutureStream<int> inputStream;
															#line 486 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	PromiseStream<int> outputStream;
															#line 486 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	Future<Void> error;
															#line 487 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int ifstate;
															#line 490 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int i910140;
															#line 512 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	std::vector<int> list917536;
															#line 5769 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
};
// This generated class is to be used only via actorFuzz18()
															#line 486 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz18Actor final : public Actor<int>, public ActorSingleCallback< ActorFuzz18Actor, 0, int >, public FastAllocated<ActorFuzz18Actor>, public ActorFuzz18ActorState<ActorFuzz18Actor> {
															#line 5774 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
	using FastAllocated<ActorFuzz18Actor>::operator new;
	using FastAllocated<ActorFuzz18Actor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<int>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorSingleCallback< ActorFuzz18Actor, 0, int >;
															#line 486 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz18Actor(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 5785 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		 : Actor<int>(),
		   ActorFuzz18ActorState<ActorFuzz18Actor>(inputStream, outputStream, error)
	{
		fdb_probe_actor_enter("actorFuzz18", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("actorFuzz18");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("actorFuzz18", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorSingleCallback< ActorFuzz18Actor, 0, int >*)0, actor_cancelled()); break;
		}

	}
};
}
															#line 486 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
[[nodiscard]] Future<int> actorFuzz18( FutureStream<int> const& inputStream, PromiseStream<int> const& outputStream, Future<Void> const& error ) {
															#line 486 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	return Future<int>(new ActorFuzz18Actor(inputStream, outputStream, error));
															#line 5813 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
}

#line 540 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"

															#line 5818 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
namespace {
// This generated class is to be used only via actorFuzz19()
															#line 541 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
template <class ActorFuzz19Actor>
															#line 541 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz19ActorState {
															#line 5825 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
															#line 541 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz19ActorState(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 541 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
															#line 541 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		 : inputStream(inputStream),
															#line 541 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   outputStream(outputStream),
															#line 541 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   error(error),
															#line 542 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   ifstate(0),
															#line 543 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   list476707()
															#line 5840 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
	{
		fdb_probe_actor_create("actorFuzz19", reinterpret_cast<unsigned long>(this));

	}
	~ActorFuzz19ActorState() 
	{
		fdb_probe_actor_destroy("actorFuzz19", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 544 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list476707.push_back(1);
															#line 545 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list476707.push_back(2);
															#line 546 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list476707.push_back(3);
															#line 547 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			RangeForbody1Iterator0 = std::begin(list476707);
															#line 5861 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			loopDepth = a_body1loopHead1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~ActorFuzz19ActorState();
		static_cast<ActorFuzz19Actor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 554 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!static_cast<ActorFuzz19Actor*>(this)->SAV<int>::futures) { (void)(592919); this->~ActorFuzz19ActorState(); static_cast<ActorFuzz19Actor*>(this)->destroy(); return 0; }
															#line 5884 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		new (&static_cast<ActorFuzz19Actor*>(this)->SAV< int >::value()) int(592919);
		this->~ActorFuzz19ActorState();
		static_cast<ActorFuzz19Actor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1(int loopDepth) 
	{
															#line 547 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!(RangeForbody1Iterator0 != std::end(list476707)))
															#line 5903 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		{
			return a_body1break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 547 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		auto i = *RangeForbody1Iterator0;
															#line 5909 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		{
															#line 548 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			(void)i;
															#line 549 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(492598);
															#line 550 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			FutureStream<int> __when_expr_0 = inputStream;
															#line 550 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			if (static_cast<ActorFuzz19Actor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 5919 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), std::max(0, loopDepth - 1)); else return a_body1loopBody1when1(__when_expr_0.pop(), loopDepth); };
			static_cast<ActorFuzz19Actor*>(this)->actor_wait_state = 1;
															#line 550 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorSingleCallback< ActorFuzz19Actor, 0, int >*>(static_cast<ActorFuzz19Actor*>(this)));
															#line 5924 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			loopDepth = 0;
		}

		return loopDepth;
	}
	int a_body1break1(int loopDepth) 
	{
		try {
			return a_body1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1cont1(int loopDepth) 
	{
															#line 547 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		++RangeForbody1Iterator0;
															#line 5947 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		if (loopDepth == 0) return a_body1loopHead1(0);

		return loopDepth;
	}
	int a_body1loopBody1cont3(int const& input,int loopDepth) 
	{
															#line 551 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(input + 138186);
															#line 552 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(742053);
															#line 5958 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont3(int && input,int loopDepth) 
	{
															#line 551 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(input + 138186);
															#line 552 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(742053);
															#line 5969 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1when1(int const& input,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont3(input, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1when1(int && input,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont3(std::move(input), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<ActorFuzz19Actor*>(this)->actor_wait_state > 0) static_cast<ActorFuzz19Actor*>(this)->actor_wait_state = 0;
		static_cast<ActorFuzz19Actor*>(this)->ActorSingleCallback< ActorFuzz19Actor, 0, int >::remove();

	}
	void a_callback_fire(ActorSingleCallback< ActorFuzz19Actor, 0, int >*,int const& value) 
	{
		fdb_probe_actor_enter("actorFuzz19", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz19", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorSingleCallback< ActorFuzz19Actor, 0, int >*,int && value) 
	{
		fdb_probe_actor_enter("actorFuzz19", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz19", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorSingleCallback< ActorFuzz19Actor, 0, int >*,Error err) 
	{
		fdb_probe_actor_enter("actorFuzz19", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz19", reinterpret_cast<unsigned long>(this), 0);

	}
															#line 541 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	FutureStream<int> inputStream;
															#line 541 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	PromiseStream<int> outputStream;
															#line 541 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	Future<Void> error;
															#line 542 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int ifstate;
															#line 543 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	std::vector<int> list476707;
															#line 547 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	decltype(std::begin(std::declval<std::vector<int>>())) RangeForbody1Iterator0;
															#line 6049 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
};
// This generated class is to be used only via actorFuzz19()
															#line 541 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz19Actor final : public Actor<int>, public ActorSingleCallback< ActorFuzz19Actor, 0, int >, public FastAllocated<ActorFuzz19Actor>, public ActorFuzz19ActorState<ActorFuzz19Actor> {
															#line 6054 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
	using FastAllocated<ActorFuzz19Actor>::operator new;
	using FastAllocated<ActorFuzz19Actor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<int>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorSingleCallback< ActorFuzz19Actor, 0, int >;
															#line 541 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz19Actor(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 6065 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		 : Actor<int>(),
		   ActorFuzz19ActorState<ActorFuzz19Actor>(inputStream, outputStream, error)
	{
		fdb_probe_actor_enter("actorFuzz19", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("actorFuzz19");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("actorFuzz19", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorSingleCallback< ActorFuzz19Actor, 0, int >*)0, actor_cancelled()); break;
		}

	}
};
}
															#line 541 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
[[nodiscard]] Future<int> actorFuzz19( FutureStream<int> const& inputStream, PromiseStream<int> const& outputStream, Future<Void> const& error ) {
															#line 541 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	return Future<int>(new ActorFuzz19Actor(inputStream, outputStream, error));
															#line 6093 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
}

#line 556 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"

															#line 6098 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
namespace {
// This generated class is to be used only via actorFuzz20()
															#line 557 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
template <class ActorFuzz20Actor>
															#line 557 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz20ActorState {
															#line 6105 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
															#line 557 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz20ActorState(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 557 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
															#line 557 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		 : inputStream(inputStream),
															#line 557 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   outputStream(outputStream),
															#line 557 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   error(error),
															#line 558 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   ifstate(0)
															#line 6118 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
	{
		fdb_probe_actor_create("actorFuzz20", reinterpret_cast<unsigned long>(this));

	}
	~ActorFuzz20ActorState() 
	{
		fdb_probe_actor_destroy("actorFuzz20", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 559 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			if ((++ifstate & 1) == 0)
															#line 6133 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			{
															#line 560 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(751400);
															#line 561 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				FutureStream<int> __when_expr_0 = inputStream;
															#line 561 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				if (static_cast<ActorFuzz20Actor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 6141 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.pop(), loopDepth); };
				static_cast<ActorFuzz20Actor*>(this)->actor_wait_state = 1;
															#line 561 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				__when_expr_0.addCallbackAndClear(static_cast<ActorSingleCallback< ActorFuzz20Actor, 0, int >*>(static_cast<ActorFuzz20Actor*>(this)));
															#line 6146 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				loopDepth = 0;
			}
			else
			{
															#line 565 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(760082);
															#line 566 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				return a_body1Catch1(operation_failed(), loopDepth);
															#line 6155 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			}
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~ActorFuzz20ActorState();
		static_cast<ActorFuzz20Actor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 568 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!static_cast<ActorFuzz20Actor*>(this)->SAV<int>::futures) { (void)(705285); this->~ActorFuzz20ActorState(); static_cast<ActorFuzz20Actor*>(this)->destroy(); return 0; }
															#line 6178 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		new (&static_cast<ActorFuzz20Actor*>(this)->SAV< int >::value()) int(705285);
		this->~ActorFuzz20ActorState();
		static_cast<ActorFuzz20Actor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont2(int const& input,int loopDepth) 
	{
															#line 562 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(input + 106231);
															#line 563 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(139622);
															#line 6192 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont2(int && input,int loopDepth) 
	{
															#line 562 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(input + 106231);
															#line 563 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(139622);
															#line 6203 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1when1(int const& input,int loopDepth) 
	{
		loopDepth = a_body1cont2(input, loopDepth);

		return loopDepth;
	}
	int a_body1when1(int && input,int loopDepth) 
	{
		loopDepth = a_body1cont2(std::move(input), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<ActorFuzz20Actor*>(this)->actor_wait_state > 0) static_cast<ActorFuzz20Actor*>(this)->actor_wait_state = 0;
		static_cast<ActorFuzz20Actor*>(this)->ActorSingleCallback< ActorFuzz20Actor, 0, int >::remove();

	}
	void a_callback_fire(ActorSingleCallback< ActorFuzz20Actor, 0, int >*,int const& value) 
	{
		fdb_probe_actor_enter("actorFuzz20", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz20", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorSingleCallback< ActorFuzz20Actor, 0, int >*,int && value) 
	{
		fdb_probe_actor_enter("actorFuzz20", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz20", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorSingleCallback< ActorFuzz20Actor, 0, int >*,Error err) 
	{
		fdb_probe_actor_enter("actorFuzz20", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz20", reinterpret_cast<unsigned long>(this), 0);

	}
															#line 557 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	FutureStream<int> inputStream;
															#line 557 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	PromiseStream<int> outputStream;
															#line 557 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	Future<Void> error;
															#line 558 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int ifstate;
															#line 6279 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
};
// This generated class is to be used only via actorFuzz20()
															#line 557 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz20Actor final : public Actor<int>, public ActorSingleCallback< ActorFuzz20Actor, 0, int >, public FastAllocated<ActorFuzz20Actor>, public ActorFuzz20ActorState<ActorFuzz20Actor> {
															#line 6284 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
	using FastAllocated<ActorFuzz20Actor>::operator new;
	using FastAllocated<ActorFuzz20Actor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<int>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorSingleCallback< ActorFuzz20Actor, 0, int >;
															#line 557 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz20Actor(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 6295 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		 : Actor<int>(),
		   ActorFuzz20ActorState<ActorFuzz20Actor>(inputStream, outputStream, error)
	{
		fdb_probe_actor_enter("actorFuzz20", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("actorFuzz20");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("actorFuzz20", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorSingleCallback< ActorFuzz20Actor, 0, int >*)0, actor_cancelled()); break;
		}

	}
};
}
															#line 557 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
[[nodiscard]] Future<int> actorFuzz20( FutureStream<int> const& inputStream, PromiseStream<int> const& outputStream, Future<Void> const& error ) {
															#line 557 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	return Future<int>(new ActorFuzz20Actor(inputStream, outputStream, error));
															#line 6323 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
}

#line 570 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"

															#line 6328 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
namespace {
// This generated class is to be used only via actorFuzz21()
															#line 571 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
template <class ActorFuzz21Actor>
															#line 571 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz21ActorState {
															#line 6335 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
															#line 571 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz21ActorState(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 571 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
															#line 571 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		 : inputStream(inputStream),
															#line 571 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   outputStream(outputStream),
															#line 571 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   error(error),
															#line 572 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   ifstate(0)
															#line 6348 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
	{
		fdb_probe_actor_create("actorFuzz21", reinterpret_cast<unsigned long>(this));

	}
	~ActorFuzz21ActorState() 
	{
		fdb_probe_actor_destroy("actorFuzz21", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 573 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			if (!static_cast<ActorFuzz21Actor*>(this)->SAV<int>::futures) { (void)(806394); this->~ActorFuzz21ActorState(); static_cast<ActorFuzz21Actor*>(this)->destroy(); return 0; }
															#line 6363 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			new (&static_cast<ActorFuzz21Actor*>(this)->SAV< int >::value()) int(806394);
			this->~ActorFuzz21ActorState();
			static_cast<ActorFuzz21Actor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~ActorFuzz21ActorState();
		static_cast<ActorFuzz21Actor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
															#line 571 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	FutureStream<int> inputStream;
															#line 571 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	PromiseStream<int> outputStream;
															#line 571 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	Future<Void> error;
															#line 572 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int ifstate;
															#line 6393 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
};
// This generated class is to be used only via actorFuzz21()
															#line 571 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz21Actor final : public Actor<int>, public FastAllocated<ActorFuzz21Actor>, public ActorFuzz21ActorState<ActorFuzz21Actor> {
															#line 6398 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
	using FastAllocated<ActorFuzz21Actor>::operator new;
	using FastAllocated<ActorFuzz21Actor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<int>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
															#line 571 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz21Actor(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 6408 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		 : Actor<int>(),
		   ActorFuzz21ActorState<ActorFuzz21Actor>(inputStream, outputStream, error)
	{
		fdb_probe_actor_enter("actorFuzz21", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("actorFuzz21");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("actorFuzz21", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		}

	}
};
}
															#line 571 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
[[nodiscard]] Future<int> actorFuzz21( FutureStream<int> const& inputStream, PromiseStream<int> const& outputStream, Future<Void> const& error ) {
															#line 571 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	return Future<int>(new ActorFuzz21Actor(inputStream, outputStream, error));
															#line 6435 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
}

#line 575 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"

															#line 6440 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
namespace {
// This generated class is to be used only via actorFuzz22()
															#line 576 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
template <class ActorFuzz22Actor>
															#line 576 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz22ActorState {
															#line 6447 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
															#line 576 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz22ActorState(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 576 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
															#line 576 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		 : inputStream(inputStream),
															#line 576 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   outputStream(outputStream),
															#line 576 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   error(error),
															#line 577 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   ifstate(0)
															#line 6460 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
	{
		fdb_probe_actor_create("actorFuzz22", reinterpret_cast<unsigned long>(this));

	}
	~ActorFuzz22ActorState() 
	{
		fdb_probe_actor_destroy("actorFuzz22", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
			try {
															#line 579 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(722878);
															#line 6476 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				try {
															#line 581 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					outputStream.send(369302);
															#line 582 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					if (!static_cast<ActorFuzz22Actor*>(this)->SAV<int>::futures) { (void)(416748); this->~ActorFuzz22ActorState(); static_cast<ActorFuzz22Actor*>(this)->destroy(); return 0; }
															#line 6482 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
					new (&static_cast<ActorFuzz22Actor*>(this)->SAV< int >::value()) int(416748);
					this->~ActorFuzz22ActorState();
					static_cast<ActorFuzz22Actor*>(this)->finishSendAndDelPromiseRef();
					return 0;
				}
				catch (Error& error) {
					loopDepth = a_body1Catch3(error, loopDepth);
				} catch (...) {
					loopDepth = a_body1Catch3(unknown_error(), loopDepth);
				}
			}
			catch (Error& error) {
				loopDepth = a_body1Catch2(error, loopDepth);
			} catch (...) {
				loopDepth = a_body1Catch2(unknown_error(), loopDepth);
			}
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~ActorFuzz22ActorState();
		static_cast<ActorFuzz22Actor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 618 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(646039);
															#line 619 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		list700360 = std::vector<int>();
															#line 620 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		list700360.push_back(1);
															#line 621 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		list700360.push_back(2);
															#line 622 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		list700360.push_back(3);
															#line 623 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		RangeForbody1cont1Iterator0 = std::begin(list700360);
															#line 6530 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1cont1loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1Catch2(const Error& __current_error,int loopDepth=0) 
	{
		try {
															#line 602 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(208944);
															#line 6540 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			try {
															#line 604 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(205829);
															#line 605 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				FutureStream<int> __when_expr_0 = inputStream;
															#line 605 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				if (static_cast<ActorFuzz22Actor*>(this)->actor_wait_state < 0) return a_body1Catch2Catch1(actor_cancelled(), loopDepth);
															#line 6548 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch2Catch1(__when_expr_0.getError(), loopDepth); else return a_body1Catch2when1(__when_expr_0.pop(), loopDepth); };
				static_cast<ActorFuzz22Actor*>(this)->actor_wait_state = 1;
															#line 605 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				__when_expr_0.addCallbackAndClear(static_cast<ActorSingleCallback< ActorFuzz22Actor, 0, int >*>(static_cast<ActorFuzz22Actor*>(this)));
															#line 6553 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				loopDepth = 0;
			}
			catch (Error& error) {
				loopDepth = a_body1Catch2Catch1(error, loopDepth);
			} catch (...) {
				loopDepth = a_body1Catch2Catch1(unknown_error(), loopDepth);
			}
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont2(int loopDepth) 
	{
															#line 600 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(456449);
															#line 6574 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1cont5(loopDepth);

		return loopDepth;
	}
	int a_body1Catch3(const Error& __current_error,int loopDepth=0) 
	{
		try {
															#line 584 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(568306);
															#line 585 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list504461 = std::vector<int>();
															#line 586 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list504461.push_back(1);
															#line 587 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list504461.push_back(2);
															#line 588 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list504461.push_back(3);
															#line 589 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			for( auto i : list504461 ) {
															#line 590 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				(void)i;
															#line 591 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(827088);
															#line 592 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				if ((++ifstate & 1) == 0)
															#line 6600 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				{
															#line 593 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					outputStream.send(909504);
															#line 594 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					if (!static_cast<ActorFuzz22Actor*>(this)->SAV<int>::futures) { (void)(528584); this->~ActorFuzz22ActorState(); static_cast<ActorFuzz22Actor*>(this)->destroy(); return 0; }
															#line 6606 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
					new (&static_cast<ActorFuzz22Actor*>(this)->SAV< int >::value()) int(528584);
					this->~ActorFuzz22ActorState();
					static_cast<ActorFuzz22Actor*>(this)->finishSendAndDelPromiseRef();
					return 0;
				}
															#line 596 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(275831);
															#line 6614 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			}
															#line 598 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(739194);
															#line 6618 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			loopDepth = a_body1cont2(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch2(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch2(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont5(int loopDepth) 
	{
		try {
			loopDepth = a_body1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch2cont1(int loopDepth) 
	{
															#line 616 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(803123);
															#line 6646 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1Catch2Catch1(const Error& __current_error,int loopDepth=0) 
	{
		try {
															#line 609 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(666594);
															#line 610 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			if ((++ifstate & 1) == 1)
															#line 6658 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			{
															#line 611 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(153749);
															#line 612 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				if (!static_cast<ActorFuzz22Actor*>(this)->SAV<int>::futures) { (void)(657441); this->~ActorFuzz22ActorState(); static_cast<ActorFuzz22Actor*>(this)->destroy(); return 0; }
															#line 6664 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				new (&static_cast<ActorFuzz22Actor*>(this)->SAV< int >::value()) int(657441);
				this->~ActorFuzz22ActorState();
				static_cast<ActorFuzz22Actor*>(this)->finishSendAndDelPromiseRef();
				return 0;
			}
															#line 614 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(312545);
															#line 6672 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			loopDepth = a_body1Catch2cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch2cont2(int const& input,int loopDepth) 
	{
															#line 606 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(input + 539161);
															#line 607 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(820020);
															#line 6689 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1Catch2cont4(loopDepth);

		return loopDepth;
	}
	int a_body1Catch2cont2(int && input,int loopDepth) 
	{
															#line 606 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(input + 539161);
															#line 607 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(820020);
															#line 6700 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1Catch2cont4(loopDepth);

		return loopDepth;
	}
	int a_body1Catch2when1(int const& input,int loopDepth) 
	{
		loopDepth = a_body1Catch2cont2(input, loopDepth);

		return loopDepth;
	}
	int a_body1Catch2when1(int && input,int loopDepth) 
	{
		loopDepth = a_body1Catch2cont2(std::move(input), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<ActorFuzz22Actor*>(this)->actor_wait_state > 0) static_cast<ActorFuzz22Actor*>(this)->actor_wait_state = 0;
		static_cast<ActorFuzz22Actor*>(this)->ActorSingleCallback< ActorFuzz22Actor, 0, int >::remove();

	}
	void a_callback_fire(ActorSingleCallback< ActorFuzz22Actor, 0, int >*,int const& value) 
	{
		fdb_probe_actor_enter("actorFuzz22", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch2when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch2Catch1(error, 0);
		} catch (...) {
			a_body1Catch2Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz22", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorSingleCallback< ActorFuzz22Actor, 0, int >*,int && value) 
	{
		fdb_probe_actor_enter("actorFuzz22", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch2Catch1(error, 0);
		} catch (...) {
			a_body1Catch2Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz22", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorSingleCallback< ActorFuzz22Actor, 0, int >*,Error err) 
	{
		fdb_probe_actor_enter("actorFuzz22", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch2Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch2Catch1(error, 0);
		} catch (...) {
			a_body1Catch2Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz22", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1Catch2cont4(int loopDepth) 
	{
		try {
			loopDepth = a_body1Catch2cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont6(int loopDepth) 
	{
															#line 649 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!static_cast<ActorFuzz22Actor*>(this)->SAV<int>::futures) { (void)(888702); this->~ActorFuzz22ActorState(); static_cast<ActorFuzz22Actor*>(this)->destroy(); return 0; }
															#line 6785 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		new (&static_cast<ActorFuzz22Actor*>(this)->SAV< int >::value()) int(888702);
		this->~ActorFuzz22ActorState();
		static_cast<ActorFuzz22Actor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1(int loopDepth) 
	{
															#line 623 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!(RangeForbody1cont1Iterator0 != std::end(list700360)))
															#line 6804 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		{
			return a_body1cont1break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 623 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		auto i = *RangeForbody1cont1Iterator0;
															#line 6810 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		{
															#line 624 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			(void)i;
															#line 625 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(434654);
															#line 6816 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			try {
															#line 627 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(292762);
															#line 6820 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				return a_body1cont1break1(loopDepth==0?0:loopDepth-1); // break
			}
			catch (Error& error) {
				loopDepth = a_body1cont1loopBody1Catch1(error, loopDepth);
			} catch (...) {
				loopDepth = a_body1cont1loopBody1Catch1(unknown_error(), loopDepth);
			}
		}

		return loopDepth;
	}
	int a_body1cont1break1(int loopDepth) 
	{
		try {
			return a_body1cont6(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont1loopBody1cont1(int loopDepth) 
	{
															#line 623 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		++RangeForbody1cont1Iterator0;
															#line 6849 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		if (loopDepth == 0) return a_body1cont1loopHead1(0);

		return loopDepth;
	}
	int a_body1cont1loopBody1cont3(int loopDepth) 
	{
															#line 647 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(893732);
															#line 6858 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1cont1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1Catch1(const Error& __current_error,int loopDepth=0) 
	{
		try {
															#line 630 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(540935);
															#line 6868 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			try {
															#line 632 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(202527);
															#line 633 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				i246439 = int();
															#line 634 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				for(i246439 = 0;i246439 < 5;i246439++) {
															#line 635 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					outputStream.send(141484);
															#line 6878 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
					continue;
				}
															#line 638 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(265555);
															#line 6883 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				loopDepth = a_body1cont1loopBody1Catch1cont4(loopDepth);
			}
			catch (Error& error) {
				loopDepth = a_body1cont1loopBody1Catch1Catch1(error, loopDepth);
			} catch (...) {
				loopDepth = a_body1cont1loopBody1Catch1Catch1(unknown_error(), loopDepth);
			}
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont1loopBody1Catch1cont1(int loopDepth) 
	{
															#line 645 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(957345);
															#line 6904 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1cont1loopBody1cont3(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1Catch1Catch1(const Error& __current_error,int loopDepth=0) 
	{
		try {
															#line 640 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(506444);
															#line 641 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			FutureStream<int> __when_expr_1 = inputStream;
															#line 641 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			if (static_cast<ActorFuzz22Actor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 6918 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), std::max(0, loopDepth - 1)); else return a_body1cont1loopBody1Catch1Catch1when1(__when_expr_1.pop(), loopDepth); };
			static_cast<ActorFuzz22Actor*>(this)->actor_wait_state = 2;
															#line 641 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			__when_expr_1.addCallbackAndClear(static_cast<ActorSingleCallback< ActorFuzz22Actor, 1, int >*>(static_cast<ActorFuzz22Actor*>(this)));
															#line 6923 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont1loopBody1Catch1cont4(int loopDepth) 
	{
		try {
			loopDepth = a_body1cont1loopBody1Catch1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont1loopBody1Catch1Catch1cont1(int const& input,int loopDepth) 
	{
															#line 642 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(input + 279285);
															#line 643 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(926817);
															#line 6953 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1cont1loopBody1Catch1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1Catch1Catch1cont1(int && input,int loopDepth) 
	{
															#line 642 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(input + 279285);
															#line 643 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(926817);
															#line 6964 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1cont1loopBody1Catch1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1Catch1Catch1when1(int const& input,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1Catch1Catch1cont1(input, loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1Catch1Catch1when1(int && input,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1Catch1Catch1cont1(std::move(input), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<ActorFuzz22Actor*>(this)->actor_wait_state > 0) static_cast<ActorFuzz22Actor*>(this)->actor_wait_state = 0;
		static_cast<ActorFuzz22Actor*>(this)->ActorSingleCallback< ActorFuzz22Actor, 1, int >::remove();

	}
	void a_callback_fire(ActorSingleCallback< ActorFuzz22Actor, 1, int >*,int const& value) 
	{
		fdb_probe_actor_enter("actorFuzz22", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1loopBody1Catch1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz22", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorSingleCallback< ActorFuzz22Actor, 1, int >*,int && value) 
	{
		fdb_probe_actor_enter("actorFuzz22", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1loopBody1Catch1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz22", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorSingleCallback< ActorFuzz22Actor, 1, int >*,Error err) 
	{
		fdb_probe_actor_enter("actorFuzz22", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz22", reinterpret_cast<unsigned long>(this), 1);

	}
															#line 576 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	FutureStream<int> inputStream;
															#line 576 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	PromiseStream<int> outputStream;
															#line 576 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	Future<Void> error;
															#line 577 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int ifstate;
															#line 585 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	std::vector<int> list504461;
															#line 619 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	std::vector<int> list700360;
															#line 623 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	decltype(std::begin(std::declval<std::vector<int>>())) RangeForbody1cont1Iterator0;
															#line 633 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int i246439;
															#line 7048 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
};
// This generated class is to be used only via actorFuzz22()
															#line 576 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz22Actor final : public Actor<int>, public ActorSingleCallback< ActorFuzz22Actor, 0, int >, public ActorSingleCallback< ActorFuzz22Actor, 1, int >, public FastAllocated<ActorFuzz22Actor>, public ActorFuzz22ActorState<ActorFuzz22Actor> {
															#line 7053 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
	using FastAllocated<ActorFuzz22Actor>::operator new;
	using FastAllocated<ActorFuzz22Actor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<int>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorSingleCallback< ActorFuzz22Actor, 0, int >;
friend struct ActorSingleCallback< ActorFuzz22Actor, 1, int >;
															#line 576 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz22Actor(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 7065 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		 : Actor<int>(),
		   ActorFuzz22ActorState<ActorFuzz22Actor>(inputStream, outputStream, error)
	{
		fdb_probe_actor_enter("actorFuzz22", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("actorFuzz22");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("actorFuzz22", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorSingleCallback< ActorFuzz22Actor, 0, int >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorSingleCallback< ActorFuzz22Actor, 1, int >*)0, actor_cancelled()); break;
		}

	}
};
}
															#line 576 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
[[nodiscard]] Future<int> actorFuzz22( FutureStream<int> const& inputStream, PromiseStream<int> const& outputStream, Future<Void> const& error ) {
															#line 576 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	return Future<int>(new ActorFuzz22Actor(inputStream, outputStream, error));
															#line 7094 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
}

#line 651 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"

															#line 7099 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
namespace {
// This generated class is to be used only via actorFuzz23()
															#line 652 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
template <class ActorFuzz23Actor>
															#line 652 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz23ActorState {
															#line 7106 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
															#line 652 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz23ActorState(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 652 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
															#line 652 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		 : inputStream(inputStream),
															#line 652 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   outputStream(outputStream),
															#line 652 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   error(error),
															#line 653 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   ifstate(0),
															#line 654 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   list316142()
															#line 7121 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
	{
		fdb_probe_actor_create("actorFuzz23", reinterpret_cast<unsigned long>(this));

	}
	~ActorFuzz23ActorState() 
	{
		fdb_probe_actor_destroy("actorFuzz23", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 655 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list316142.push_back(1);
															#line 656 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list316142.push_back(2);
															#line 657 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list316142.push_back(3);
															#line 658 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			for( auto i : list316142 ) {
															#line 659 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				(void)i;
															#line 660 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(562792);
															#line 661 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				if (!static_cast<ActorFuzz23Actor*>(this)->SAV<int>::futures) { (void)(231437); this->~ActorFuzz23ActorState(); static_cast<ActorFuzz23Actor*>(this)->destroy(); return 0; }
															#line 7148 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				new (&static_cast<ActorFuzz23Actor*>(this)->SAV< int >::value()) int(231437);
				this->~ActorFuzz23ActorState();
				static_cast<ActorFuzz23Actor*>(this)->finishSendAndDelPromiseRef();
				return 0;
			}
															#line 663 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			if (!static_cast<ActorFuzz23Actor*>(this)->SAV<int>::futures) { (void)(226698); this->~ActorFuzz23ActorState(); static_cast<ActorFuzz23Actor*>(this)->destroy(); return 0; }
															#line 7156 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			new (&static_cast<ActorFuzz23Actor*>(this)->SAV< int >::value()) int(226698);
			this->~ActorFuzz23ActorState();
			static_cast<ActorFuzz23Actor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~ActorFuzz23ActorState();
		static_cast<ActorFuzz23Actor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
															#line 652 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	FutureStream<int> inputStream;
															#line 652 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	PromiseStream<int> outputStream;
															#line 652 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	Future<Void> error;
															#line 653 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int ifstate;
															#line 654 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	std::vector<int> list316142;
															#line 7188 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
};
// This generated class is to be used only via actorFuzz23()
															#line 652 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz23Actor final : public Actor<int>, public FastAllocated<ActorFuzz23Actor>, public ActorFuzz23ActorState<ActorFuzz23Actor> {
															#line 7193 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
	using FastAllocated<ActorFuzz23Actor>::operator new;
	using FastAllocated<ActorFuzz23Actor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<int>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
															#line 652 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz23Actor(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 7203 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		 : Actor<int>(),
		   ActorFuzz23ActorState<ActorFuzz23Actor>(inputStream, outputStream, error)
	{
		fdb_probe_actor_enter("actorFuzz23", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("actorFuzz23");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("actorFuzz23", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		}

	}
};
}
															#line 652 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
[[nodiscard]] Future<int> actorFuzz23( FutureStream<int> const& inputStream, PromiseStream<int> const& outputStream, Future<Void> const& error ) {
															#line 652 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	return Future<int>(new ActorFuzz23Actor(inputStream, outputStream, error));
															#line 7230 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
}

#line 665 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"

															#line 7235 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
namespace {
// This generated class is to be used only via actorFuzz24()
															#line 666 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
template <class ActorFuzz24Actor>
															#line 666 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz24ActorState {
															#line 7242 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
															#line 666 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz24ActorState(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 666 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
															#line 666 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		 : inputStream(inputStream),
															#line 666 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   outputStream(outputStream),
															#line 666 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   error(error),
															#line 667 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   ifstate(0)
															#line 7255 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
	{
		fdb_probe_actor_create("actorFuzz24", reinterpret_cast<unsigned long>(this));

	}
	~ActorFuzz24ActorState() 
	{
		fdb_probe_actor_destroy("actorFuzz24", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 668 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			FutureStream<int> __when_expr_0 = inputStream;
															#line 668 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			if (static_cast<ActorFuzz24Actor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 7272 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.pop(), loopDepth); };
			static_cast<ActorFuzz24Actor*>(this)->actor_wait_state = 1;
															#line 668 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorSingleCallback< ActorFuzz24Actor, 0, int >*>(static_cast<ActorFuzz24Actor*>(this)));
															#line 7277 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~ActorFuzz24ActorState();
		static_cast<ActorFuzz24Actor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int const& input,int loopDepth) 
	{
															#line 669 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(input + 846672);
															#line 670 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!static_cast<ActorFuzz24Actor*>(this)->SAV<int>::futures) { (void)(835175); this->~ActorFuzz24ActorState(); static_cast<ActorFuzz24Actor*>(this)->destroy(); return 0; }
															#line 7302 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		new (&static_cast<ActorFuzz24Actor*>(this)->SAV< int >::value()) int(835175);
		this->~ActorFuzz24ActorState();
		static_cast<ActorFuzz24Actor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont1(int && input,int loopDepth) 
	{
															#line 669 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(input + 846672);
															#line 670 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!static_cast<ActorFuzz24Actor*>(this)->SAV<int>::futures) { (void)(835175); this->~ActorFuzz24ActorState(); static_cast<ActorFuzz24Actor*>(this)->destroy(); return 0; }
															#line 7316 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		new (&static_cast<ActorFuzz24Actor*>(this)->SAV< int >::value()) int(835175);
		this->~ActorFuzz24ActorState();
		static_cast<ActorFuzz24Actor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1when1(int const& input,int loopDepth) 
	{
		loopDepth = a_body1cont1(input, loopDepth);

		return loopDepth;
	}
	int a_body1when1(int && input,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(input), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<ActorFuzz24Actor*>(this)->actor_wait_state > 0) static_cast<ActorFuzz24Actor*>(this)->actor_wait_state = 0;
		static_cast<ActorFuzz24Actor*>(this)->ActorSingleCallback< ActorFuzz24Actor, 0, int >::remove();

	}
	void a_callback_fire(ActorSingleCallback< ActorFuzz24Actor, 0, int >*,int const& value) 
	{
		fdb_probe_actor_enter("actorFuzz24", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz24", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorSingleCallback< ActorFuzz24Actor, 0, int >*,int && value) 
	{
		fdb_probe_actor_enter("actorFuzz24", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz24", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorSingleCallback< ActorFuzz24Actor, 0, int >*,Error err) 
	{
		fdb_probe_actor_enter("actorFuzz24", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz24", reinterpret_cast<unsigned long>(this), 0);

	}
															#line 666 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	FutureStream<int> inputStream;
															#line 666 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	PromiseStream<int> outputStream;
															#line 666 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	Future<Void> error;
															#line 667 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int ifstate;
															#line 7395 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
};
// This generated class is to be used only via actorFuzz24()
															#line 666 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz24Actor final : public Actor<int>, public ActorSingleCallback< ActorFuzz24Actor, 0, int >, public FastAllocated<ActorFuzz24Actor>, public ActorFuzz24ActorState<ActorFuzz24Actor> {
															#line 7400 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
	using FastAllocated<ActorFuzz24Actor>::operator new;
	using FastAllocated<ActorFuzz24Actor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<int>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorSingleCallback< ActorFuzz24Actor, 0, int >;
															#line 666 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz24Actor(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 7411 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		 : Actor<int>(),
		   ActorFuzz24ActorState<ActorFuzz24Actor>(inputStream, outputStream, error)
	{
		fdb_probe_actor_enter("actorFuzz24", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("actorFuzz24");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("actorFuzz24", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorSingleCallback< ActorFuzz24Actor, 0, int >*)0, actor_cancelled()); break;
		}

	}
};
}
															#line 666 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
[[nodiscard]] Future<int> actorFuzz24( FutureStream<int> const& inputStream, PromiseStream<int> const& outputStream, Future<Void> const& error ) {
															#line 666 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	return Future<int>(new ActorFuzz24Actor(inputStream, outputStream, error));
															#line 7439 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
}

#line 672 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"

															#line 7444 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
namespace {
// This generated class is to be used only via actorFuzz25()
															#line 673 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
template <class ActorFuzz25Actor>
															#line 673 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz25ActorState {
															#line 7451 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
															#line 673 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz25ActorState(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 673 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
															#line 673 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		 : inputStream(inputStream),
															#line 673 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   outputStream(outputStream),
															#line 673 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   error(error),
															#line 674 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   ifstate(0)
															#line 7464 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
	{
		fdb_probe_actor_create("actorFuzz25", reinterpret_cast<unsigned long>(this));

	}
	~ActorFuzz25ActorState() 
	{
		fdb_probe_actor_destroy("actorFuzz25", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
			try {
															#line 676 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(843261);
															#line 677 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				if ((++ifstate & 1) == 0)
															#line 7482 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				{
															#line 678 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					outputStream.send(166067);
															#line 679 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					if ((++ifstate & 1) == 1)
															#line 7488 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
					{
															#line 680 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
						outputStream.send(135307);
															#line 681 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
						return a_body1Catch2(operation_failed(), loopDepth);
															#line 7494 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
					}
					else
					{
															#line 683 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
						outputStream.send(150379);
															#line 684 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
						FutureStream<int> __when_expr_0 = inputStream;
															#line 684 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
						if (static_cast<ActorFuzz25Actor*>(this)->actor_wait_state < 0) return a_body1Catch2(actor_cancelled(), loopDepth);
															#line 7504 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
						if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch2(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.pop(), loopDepth); };
						static_cast<ActorFuzz25Actor*>(this)->actor_wait_state = 1;
															#line 684 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
						__when_expr_0.addCallbackAndClear(static_cast<ActorSingleCallback< ActorFuzz25Actor, 0, int >*>(static_cast<ActorFuzz25Actor*>(this)));
															#line 7509 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
						loopDepth = 0;
					}
				}
				else
				{
					loopDepth = a_body1cont2(loopDepth);
				}
			}
			catch (Error& error) {
				loopDepth = a_body1Catch2(error, loopDepth);
			} catch (...) {
				loopDepth = a_body1Catch2(unknown_error(), loopDepth);
			}
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~ActorFuzz25ActorState();
		static_cast<ActorFuzz25Actor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 700 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!static_cast<ActorFuzz25Actor*>(this)->SAV<int>::futures) { (void)(592398); this->~ActorFuzz25ActorState(); static_cast<ActorFuzz25Actor*>(this)->destroy(); return 0; }
															#line 7544 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		new (&static_cast<ActorFuzz25Actor*>(this)->SAV< int >::value()) int(592398);
		this->~ActorFuzz25ActorState();
		static_cast<ActorFuzz25Actor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1Catch2(const Error& __current_error,int loopDepth=0) 
	{
		try {
															#line 692 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(573810);
															#line 693 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			if ((++ifstate & 1) == 0)
															#line 7559 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			{
															#line 694 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(313835);
															#line 695 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				throw_operation_failed();
															#line 696 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(749685);
															#line 7567 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			}
															#line 698 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(706935);
															#line 7571 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			loopDepth = a_body1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont2(int loopDepth) 
	{
															#line 690 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(327560);
															#line 7586 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1cont9(loopDepth);

		return loopDepth;
	}
	int a_body1cont3(int loopDepth) 
	{
															#line 688 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(908760);
															#line 7595 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1cont2(loopDepth);

		return loopDepth;
	}
	int a_body1cont5(int const& input,int loopDepth) 
	{
															#line 685 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(input + 234945);
															#line 686 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(806946);
															#line 7606 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1cont3(loopDepth);

		return loopDepth;
	}
	int a_body1cont5(int && input,int loopDepth) 
	{
															#line 685 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(input + 234945);
															#line 686 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(806946);
															#line 7617 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1cont3(loopDepth);

		return loopDepth;
	}
	int a_body1when1(int const& input,int loopDepth) 
	{
		loopDepth = a_body1cont5(input, loopDepth);

		return loopDepth;
	}
	int a_body1when1(int && input,int loopDepth) 
	{
		loopDepth = a_body1cont5(std::move(input), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<ActorFuzz25Actor*>(this)->actor_wait_state > 0) static_cast<ActorFuzz25Actor*>(this)->actor_wait_state = 0;
		static_cast<ActorFuzz25Actor*>(this)->ActorSingleCallback< ActorFuzz25Actor, 0, int >::remove();

	}
	void a_callback_fire(ActorSingleCallback< ActorFuzz25Actor, 0, int >*,int const& value) 
	{
		fdb_probe_actor_enter("actorFuzz25", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch2(error, 0);
		} catch (...) {
			a_body1Catch2(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz25", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorSingleCallback< ActorFuzz25Actor, 0, int >*,int && value) 
	{
		fdb_probe_actor_enter("actorFuzz25", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch2(error, 0);
		} catch (...) {
			a_body1Catch2(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz25", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorSingleCallback< ActorFuzz25Actor, 0, int >*,Error err) 
	{
		fdb_probe_actor_enter("actorFuzz25", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch2(err, 0);
		}
		catch (Error& error) {
			a_body1Catch2(error, 0);
		} catch (...) {
			a_body1Catch2(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz25", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont9(int loopDepth) 
	{
		try {
			loopDepth = a_body1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
															#line 673 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	FutureStream<int> inputStream;
															#line 673 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	PromiseStream<int> outputStream;
															#line 673 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	Future<Void> error;
															#line 674 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int ifstate;
															#line 7706 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
};
// This generated class is to be used only via actorFuzz25()
															#line 673 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz25Actor final : public Actor<int>, public ActorSingleCallback< ActorFuzz25Actor, 0, int >, public FastAllocated<ActorFuzz25Actor>, public ActorFuzz25ActorState<ActorFuzz25Actor> {
															#line 7711 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
	using FastAllocated<ActorFuzz25Actor>::operator new;
	using FastAllocated<ActorFuzz25Actor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<int>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorSingleCallback< ActorFuzz25Actor, 0, int >;
															#line 673 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz25Actor(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 7722 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		 : Actor<int>(),
		   ActorFuzz25ActorState<ActorFuzz25Actor>(inputStream, outputStream, error)
	{
		fdb_probe_actor_enter("actorFuzz25", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("actorFuzz25");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("actorFuzz25", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorSingleCallback< ActorFuzz25Actor, 0, int >*)0, actor_cancelled()); break;
		}

	}
};
}
															#line 673 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
[[nodiscard]] Future<int> actorFuzz25( FutureStream<int> const& inputStream, PromiseStream<int> const& outputStream, Future<Void> const& error ) {
															#line 673 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	return Future<int>(new ActorFuzz25Actor(inputStream, outputStream, error));
															#line 7750 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
}

#line 702 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"

															#line 7755 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
namespace {
// This generated class is to be used only via actorFuzz26()
															#line 703 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
template <class ActorFuzz26Actor>
															#line 703 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz26ActorState {
															#line 7762 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
															#line 703 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz26ActorState(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 703 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
															#line 703 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		 : inputStream(inputStream),
															#line 703 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   outputStream(outputStream),
															#line 703 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   error(error),
															#line 704 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   ifstate(0)
															#line 7775 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
	{
		fdb_probe_actor_create("actorFuzz26", reinterpret_cast<unsigned long>(this));

	}
	~ActorFuzz26ActorState() 
	{
		fdb_probe_actor_destroy("actorFuzz26", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 705 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			if ((++ifstate & 1) == 1)
															#line 7790 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			{
															#line 706 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(520263);
															#line 7794 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				try {
															#line 708 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					outputStream.send(306397);
															#line 709 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					FutureStream<int> __when_expr_0 = inputStream;
															#line 709 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					if (static_cast<ActorFuzz26Actor*>(this)->actor_wait_state < 0) return a_body1Catch2(actor_cancelled(), loopDepth);
															#line 7802 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
					if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch2(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.pop(), loopDepth); };
					static_cast<ActorFuzz26Actor*>(this)->actor_wait_state = 1;
															#line 709 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					__when_expr_0.addCallbackAndClear(static_cast<ActorSingleCallback< ActorFuzz26Actor, 0, int >*>(static_cast<ActorFuzz26Actor*>(this)));
															#line 7807 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
					loopDepth = 0;
				}
				catch (Error& error) {
					loopDepth = a_body1Catch2(error, loopDepth);
				} catch (...) {
					loopDepth = a_body1Catch2(unknown_error(), loopDepth);
				}
			}
			else
			{
															#line 758 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(398083);
															#line 759 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				if ((++ifstate & 1) == 1)
															#line 7822 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				{
															#line 760 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					outputStream.send(396069);
															#line 761 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					list327297 = std::vector<int>();
															#line 762 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					list327297.push_back(1);
															#line 763 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					list327297.push_back(2);
															#line 764 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					list327297.push_back(3);
															#line 765 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					for( auto i : list327297 ) {
															#line 766 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
						(void)i;
															#line 767 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
						outputStream.send(571919);
															#line 768 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
						if ((++ifstate & 1) == 0)
															#line 7842 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
						{
															#line 769 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
							outputStream.send(620625);
															#line 770 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
							if (!static_cast<ActorFuzz26Actor*>(this)->SAV<int>::futures) { (void)(270285); this->~ActorFuzz26ActorState(); static_cast<ActorFuzz26Actor*>(this)->destroy(); return 0; }
															#line 7848 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
							new (&static_cast<ActorFuzz26Actor*>(this)->SAV< int >::value()) int(270285);
							this->~ActorFuzz26ActorState();
							static_cast<ActorFuzz26Actor*>(this)->finishSendAndDelPromiseRef();
							return 0;
						}
															#line 772 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
						outputStream.send(892626);
															#line 7856 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
					}
															#line 774 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					outputStream.send(564398);
															#line 7860 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				}
															#line 776 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(614487);
															#line 7864 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				loopDepth = a_body1cont1(loopDepth);
			}
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~ActorFuzz26ActorState();
		static_cast<ActorFuzz26Actor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 778 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!static_cast<ActorFuzz26Actor*>(this)->SAV<int>::futures) { (void)(568400); this->~ActorFuzz26ActorState(); static_cast<ActorFuzz26Actor*>(this)->destroy(); return 0; }
															#line 7888 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		new (&static_cast<ActorFuzz26Actor*>(this)->SAV< int >::value()) int(568400);
		this->~ActorFuzz26ActorState();
		static_cast<ActorFuzz26Actor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont2(int loopDepth) 
	{
															#line 756 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(414082);
															#line 7900 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1Catch2(const Error& __current_error,int loopDepth=0) 
	{
		try {
															#line 727 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(936386);
															#line 7910 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			try {
															#line 729 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(259652);
															#line 730 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				FutureStream<int> __when_expr_1 = inputStream;
															#line 730 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				if (static_cast<ActorFuzz26Actor*>(this)->actor_wait_state < 0) return a_body1Catch2Catch1(actor_cancelled(), loopDepth);
															#line 7918 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch2Catch1(__when_expr_1.getError(), loopDepth); else return a_body1Catch2when1(__when_expr_1.pop(), loopDepth); };
				static_cast<ActorFuzz26Actor*>(this)->actor_wait_state = 2;
															#line 730 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				__when_expr_1.addCallbackAndClear(static_cast<ActorSingleCallback< ActorFuzz26Actor, 1, int >*>(static_cast<ActorFuzz26Actor*>(this)));
															#line 7923 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				loopDepth = 0;
			}
			catch (Error& error) {
				loopDepth = a_body1Catch2Catch1(error, loopDepth);
			} catch (...) {
				loopDepth = a_body1Catch2Catch1(unknown_error(), loopDepth);
			}
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont3(int const& input,int loopDepth) 
	{
															#line 710 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(input + 943232);
															#line 711 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(366272);
															#line 712 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if ((++ifstate & 1) == 0)
															#line 7948 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		{
															#line 713 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(700651);
															#line 714 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list649823 = std::vector<int>();
															#line 715 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list649823.push_back(1);
															#line 716 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list649823.push_back(2);
															#line 717 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list649823.push_back(3);
															#line 718 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			for( auto i : list649823 ) {
															#line 719 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				(void)i;
															#line 720 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(146918);
															#line 721 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				if (!static_cast<ActorFuzz26Actor*>(this)->SAV<int>::futures) { (void)(191890); this->~ActorFuzz26ActorState(); static_cast<ActorFuzz26Actor*>(this)->destroy(); return 0; }
															#line 7968 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				new (&static_cast<ActorFuzz26Actor*>(this)->SAV< int >::value()) int(191890);
				this->~ActorFuzz26ActorState();
				static_cast<ActorFuzz26Actor*>(this)->finishSendAndDelPromiseRef();
				return 0;
			}
															#line 723 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(987155);
															#line 7976 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		}
															#line 725 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(499733);
															#line 7980 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1cont7(loopDepth);

		return loopDepth;
	}
	int a_body1cont3(int && input,int loopDepth) 
	{
															#line 710 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(input + 943232);
															#line 711 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(366272);
															#line 712 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if ((++ifstate & 1) == 0)
															#line 7993 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		{
															#line 713 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(700651);
															#line 714 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list649823 = std::vector<int>();
															#line 715 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list649823.push_back(1);
															#line 716 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list649823.push_back(2);
															#line 717 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list649823.push_back(3);
															#line 718 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			for( auto i : list649823 ) {
															#line 719 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				(void)i;
															#line 720 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(146918);
															#line 721 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				if (!static_cast<ActorFuzz26Actor*>(this)->SAV<int>::futures) { (void)(191890); this->~ActorFuzz26ActorState(); static_cast<ActorFuzz26Actor*>(this)->destroy(); return 0; }
															#line 8013 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				new (&static_cast<ActorFuzz26Actor*>(this)->SAV< int >::value()) int(191890);
				this->~ActorFuzz26ActorState();
				static_cast<ActorFuzz26Actor*>(this)->finishSendAndDelPromiseRef();
				return 0;
			}
															#line 723 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(987155);
															#line 8021 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		}
															#line 725 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(499733);
															#line 8025 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1cont7(loopDepth);

		return loopDepth;
	}
	int a_body1when1(int const& input,int loopDepth) 
	{
		loopDepth = a_body1cont3(input, loopDepth);

		return loopDepth;
	}
	int a_body1when1(int && input,int loopDepth) 
	{
		loopDepth = a_body1cont3(std::move(input), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<ActorFuzz26Actor*>(this)->actor_wait_state > 0) static_cast<ActorFuzz26Actor*>(this)->actor_wait_state = 0;
		static_cast<ActorFuzz26Actor*>(this)->ActorSingleCallback< ActorFuzz26Actor, 0, int >::remove();

	}
	void a_callback_fire(ActorSingleCallback< ActorFuzz26Actor, 0, int >*,int const& value) 
	{
		fdb_probe_actor_enter("actorFuzz26", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch2(error, 0);
		} catch (...) {
			a_body1Catch2(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz26", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorSingleCallback< ActorFuzz26Actor, 0, int >*,int && value) 
	{
		fdb_probe_actor_enter("actorFuzz26", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch2(error, 0);
		} catch (...) {
			a_body1Catch2(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz26", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorSingleCallback< ActorFuzz26Actor, 0, int >*,Error err) 
	{
		fdb_probe_actor_enter("actorFuzz26", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch2(err, 0);
		}
		catch (Error& error) {
			a_body1Catch2(error, 0);
		} catch (...) {
			a_body1Catch2(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz26", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont7(int loopDepth) 
	{
		try {
			loopDepth = a_body1cont2(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch2cont1(int loopDepth) 
	{
															#line 754 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(133652);
															#line 8110 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1cont2(loopDepth);

		return loopDepth;
	}
	int a_body1Catch2Catch1(const Error& __current_error,int loopDepth=0) 
	{
		try {
															#line 749 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(873214);
															#line 750 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			FutureStream<int> __when_expr_2 = inputStream;
															#line 750 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			if (static_cast<ActorFuzz26Actor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 8124 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1Catch2Catch1when1(__when_expr_2.pop(), loopDepth); };
			static_cast<ActorFuzz26Actor*>(this)->actor_wait_state = 3;
															#line 750 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			__when_expr_2.addCallbackAndClear(static_cast<ActorSingleCallback< ActorFuzz26Actor, 2, int >*>(static_cast<ActorFuzz26Actor*>(this)));
															#line 8129 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch2cont2(int const& input,int loopDepth) 
	{
															#line 731 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(input + 247889);
															#line 732 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(402174);
															#line 733 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		i876439 = int();
															#line 734 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		for(i876439 = 0;i876439 < 5;i876439++) {
															#line 735 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(909715);
															#line 736 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list905706 = std::vector<int>();
															#line 737 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list905706.push_back(1);
															#line 738 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list905706.push_back(2);
															#line 739 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list905706.push_back(3);
															#line 740 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			for( auto i : list905706 ) {
															#line 741 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				(void)i;
															#line 742 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(558855);
															#line 743 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				if (!static_cast<ActorFuzz26Actor*>(this)->SAV<int>::futures) { (void)(784546); this->~ActorFuzz26ActorState(); static_cast<ActorFuzz26Actor*>(this)->destroy(); return 0; }
															#line 8168 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				new (&static_cast<ActorFuzz26Actor*>(this)->SAV< int >::value()) int(784546);
				this->~ActorFuzz26ActorState();
				static_cast<ActorFuzz26Actor*>(this)->finishSendAndDelPromiseRef();
				return 0;
			}
															#line 745 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(260752);
															#line 8176 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		}
															#line 747 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(438765);
															#line 8180 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1Catch2cont6(loopDepth);

		return loopDepth;
	}
	int a_body1Catch2cont2(int && input,int loopDepth) 
	{
															#line 731 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(input + 247889);
															#line 732 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(402174);
															#line 733 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		i876439 = int();
															#line 734 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		for(i876439 = 0;i876439 < 5;i876439++) {
															#line 735 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(909715);
															#line 736 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list905706 = std::vector<int>();
															#line 737 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list905706.push_back(1);
															#line 738 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list905706.push_back(2);
															#line 739 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			list905706.push_back(3);
															#line 740 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			for( auto i : list905706 ) {
															#line 741 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				(void)i;
															#line 742 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(558855);
															#line 743 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				if (!static_cast<ActorFuzz26Actor*>(this)->SAV<int>::futures) { (void)(784546); this->~ActorFuzz26ActorState(); static_cast<ActorFuzz26Actor*>(this)->destroy(); return 0; }
															#line 8213 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
				new (&static_cast<ActorFuzz26Actor*>(this)->SAV< int >::value()) int(784546);
				this->~ActorFuzz26ActorState();
				static_cast<ActorFuzz26Actor*>(this)->finishSendAndDelPromiseRef();
				return 0;
			}
															#line 745 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			outputStream.send(260752);
															#line 8221 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		}
															#line 747 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(438765);
															#line 8225 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1Catch2cont6(loopDepth);

		return loopDepth;
	}
	int a_body1Catch2when1(int const& input,int loopDepth) 
	{
		loopDepth = a_body1Catch2cont2(input, loopDepth);

		return loopDepth;
	}
	int a_body1Catch2when1(int && input,int loopDepth) 
	{
		loopDepth = a_body1Catch2cont2(std::move(input), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<ActorFuzz26Actor*>(this)->actor_wait_state > 0) static_cast<ActorFuzz26Actor*>(this)->actor_wait_state = 0;
		static_cast<ActorFuzz26Actor*>(this)->ActorSingleCallback< ActorFuzz26Actor, 1, int >::remove();

	}
	void a_callback_fire(ActorSingleCallback< ActorFuzz26Actor, 1, int >*,int const& value) 
	{
		fdb_probe_actor_enter("actorFuzz26", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch2when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch2Catch1(error, 0);
		} catch (...) {
			a_body1Catch2Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz26", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorSingleCallback< ActorFuzz26Actor, 1, int >*,int && value) 
	{
		fdb_probe_actor_enter("actorFuzz26", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch2Catch1(error, 0);
		} catch (...) {
			a_body1Catch2Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz26", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorSingleCallback< ActorFuzz26Actor, 1, int >*,Error err) 
	{
		fdb_probe_actor_enter("actorFuzz26", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch2Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch2Catch1(error, 0);
		} catch (...) {
			a_body1Catch2Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz26", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1Catch2cont6(int loopDepth) 
	{
		try {
			loopDepth = a_body1Catch2cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch2Catch1cont1(int const& input,int loopDepth) 
	{
															#line 751 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(input + 980301);
															#line 752 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(265293);
															#line 8312 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1Catch2cont1(loopDepth);

		return loopDepth;
	}
	int a_body1Catch2Catch1cont1(int && input,int loopDepth) 
	{
															#line 751 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(input + 980301);
															#line 752 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(265293);
															#line 8323 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = a_body1Catch2cont1(loopDepth);

		return loopDepth;
	}
	int a_body1Catch2Catch1when1(int const& input,int loopDepth) 
	{
		loopDepth = a_body1Catch2Catch1cont1(input, loopDepth);

		return loopDepth;
	}
	int a_body1Catch2Catch1when1(int && input,int loopDepth) 
	{
		loopDepth = a_body1Catch2Catch1cont1(std::move(input), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<ActorFuzz26Actor*>(this)->actor_wait_state > 0) static_cast<ActorFuzz26Actor*>(this)->actor_wait_state = 0;
		static_cast<ActorFuzz26Actor*>(this)->ActorSingleCallback< ActorFuzz26Actor, 2, int >::remove();

	}
	void a_callback_fire(ActorSingleCallback< ActorFuzz26Actor, 2, int >*,int const& value) 
	{
		fdb_probe_actor_enter("actorFuzz26", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch2Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz26", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorSingleCallback< ActorFuzz26Actor, 2, int >*,int && value) 
	{
		fdb_probe_actor_enter("actorFuzz26", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch2Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz26", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorSingleCallback< ActorFuzz26Actor, 2, int >*,Error err) 
	{
		fdb_probe_actor_enter("actorFuzz26", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz26", reinterpret_cast<unsigned long>(this), 2);

	}
															#line 703 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	FutureStream<int> inputStream;
															#line 703 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	PromiseStream<int> outputStream;
															#line 703 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	Future<Void> error;
															#line 704 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int ifstate;
															#line 714 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	std::vector<int> list649823;
															#line 733 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int i876439;
															#line 736 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	std::vector<int> list905706;
															#line 761 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	std::vector<int> list327297;
															#line 8407 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
};
// This generated class is to be used only via actorFuzz26()
															#line 703 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz26Actor final : public Actor<int>, public ActorSingleCallback< ActorFuzz26Actor, 0, int >, public ActorSingleCallback< ActorFuzz26Actor, 1, int >, public ActorSingleCallback< ActorFuzz26Actor, 2, int >, public FastAllocated<ActorFuzz26Actor>, public ActorFuzz26ActorState<ActorFuzz26Actor> {
															#line 8412 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
	using FastAllocated<ActorFuzz26Actor>::operator new;
	using FastAllocated<ActorFuzz26Actor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<int>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorSingleCallback< ActorFuzz26Actor, 0, int >;
friend struct ActorSingleCallback< ActorFuzz26Actor, 1, int >;
friend struct ActorSingleCallback< ActorFuzz26Actor, 2, int >;
															#line 703 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz26Actor(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 8425 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		 : Actor<int>(),
		   ActorFuzz26ActorState<ActorFuzz26Actor>(inputStream, outputStream, error)
	{
		fdb_probe_actor_enter("actorFuzz26", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("actorFuzz26");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("actorFuzz26", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorSingleCallback< ActorFuzz26Actor, 0, int >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorSingleCallback< ActorFuzz26Actor, 1, int >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorSingleCallback< ActorFuzz26Actor, 2, int >*)0, actor_cancelled()); break;
		}

	}
};
}
															#line 703 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
[[nodiscard]] Future<int> actorFuzz26( FutureStream<int> const& inputStream, PromiseStream<int> const& outputStream, Future<Void> const& error ) {
															#line 703 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	return Future<int>(new ActorFuzz26Actor(inputStream, outputStream, error));
															#line 8455 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
}

#line 780 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"

															#line 8460 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
namespace {
// This generated class is to be used only via actorFuzz27()
															#line 781 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
template <class ActorFuzz27Actor>
															#line 781 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz27ActorState {
															#line 8467 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
															#line 781 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz27ActorState(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 781 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
															#line 781 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		 : inputStream(inputStream),
															#line 781 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   outputStream(outputStream),
															#line 781 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   error(error),
															#line 782 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   ifstate(0)
															#line 8480 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
	{
		fdb_probe_actor_create("actorFuzz27", reinterpret_cast<unsigned long>(this));

	}
	~ActorFuzz27ActorState() 
	{
		fdb_probe_actor_destroy("actorFuzz27", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 783 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			FutureStream<int> __when_expr_0 = inputStream;
															#line 783 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			if (static_cast<ActorFuzz27Actor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 8497 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.pop(), loopDepth); };
			static_cast<ActorFuzz27Actor*>(this)->actor_wait_state = 1;
															#line 783 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorSingleCallback< ActorFuzz27Actor, 0, int >*>(static_cast<ActorFuzz27Actor*>(this)));
															#line 8502 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~ActorFuzz27ActorState();
		static_cast<ActorFuzz27Actor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int const& input,int loopDepth) 
	{
															#line 784 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(input + 312322);
															#line 785 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!static_cast<ActorFuzz27Actor*>(this)->SAV<int>::futures) { (void)(196907); this->~ActorFuzz27ActorState(); static_cast<ActorFuzz27Actor*>(this)->destroy(); return 0; }
															#line 8527 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		new (&static_cast<ActorFuzz27Actor*>(this)->SAV< int >::value()) int(196907);
		this->~ActorFuzz27ActorState();
		static_cast<ActorFuzz27Actor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont1(int && input,int loopDepth) 
	{
															#line 784 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(input + 312322);
															#line 785 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!static_cast<ActorFuzz27Actor*>(this)->SAV<int>::futures) { (void)(196907); this->~ActorFuzz27ActorState(); static_cast<ActorFuzz27Actor*>(this)->destroy(); return 0; }
															#line 8541 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		new (&static_cast<ActorFuzz27Actor*>(this)->SAV< int >::value()) int(196907);
		this->~ActorFuzz27ActorState();
		static_cast<ActorFuzz27Actor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1when1(int const& input,int loopDepth) 
	{
		loopDepth = a_body1cont1(input, loopDepth);

		return loopDepth;
	}
	int a_body1when1(int && input,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(input), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<ActorFuzz27Actor*>(this)->actor_wait_state > 0) static_cast<ActorFuzz27Actor*>(this)->actor_wait_state = 0;
		static_cast<ActorFuzz27Actor*>(this)->ActorSingleCallback< ActorFuzz27Actor, 0, int >::remove();

	}
	void a_callback_fire(ActorSingleCallback< ActorFuzz27Actor, 0, int >*,int const& value) 
	{
		fdb_probe_actor_enter("actorFuzz27", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz27", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorSingleCallback< ActorFuzz27Actor, 0, int >*,int && value) 
	{
		fdb_probe_actor_enter("actorFuzz27", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz27", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorSingleCallback< ActorFuzz27Actor, 0, int >*,Error err) 
	{
		fdb_probe_actor_enter("actorFuzz27", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz27", reinterpret_cast<unsigned long>(this), 0);

	}
															#line 781 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	FutureStream<int> inputStream;
															#line 781 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	PromiseStream<int> outputStream;
															#line 781 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	Future<Void> error;
															#line 782 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int ifstate;
															#line 8620 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
};
// This generated class is to be used only via actorFuzz27()
															#line 781 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz27Actor final : public Actor<int>, public ActorSingleCallback< ActorFuzz27Actor, 0, int >, public FastAllocated<ActorFuzz27Actor>, public ActorFuzz27ActorState<ActorFuzz27Actor> {
															#line 8625 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
	using FastAllocated<ActorFuzz27Actor>::operator new;
	using FastAllocated<ActorFuzz27Actor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<int>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorSingleCallback< ActorFuzz27Actor, 0, int >;
															#line 781 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz27Actor(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 8636 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		 : Actor<int>(),
		   ActorFuzz27ActorState<ActorFuzz27Actor>(inputStream, outputStream, error)
	{
		fdb_probe_actor_enter("actorFuzz27", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("actorFuzz27");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("actorFuzz27", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorSingleCallback< ActorFuzz27Actor, 0, int >*)0, actor_cancelled()); break;
		}

	}
};
}
															#line 781 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
[[nodiscard]] Future<int> actorFuzz27( FutureStream<int> const& inputStream, PromiseStream<int> const& outputStream, Future<Void> const& error ) {
															#line 781 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	return Future<int>(new ActorFuzz27Actor(inputStream, outputStream, error));
															#line 8664 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
}

#line 787 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"

															#line 8669 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
namespace {
// This generated class is to be used only via actorFuzz28()
															#line 788 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
template <class ActorFuzz28Actor>
															#line 788 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz28ActorState {
															#line 8676 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
															#line 788 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz28ActorState(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 788 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
															#line 788 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		 : inputStream(inputStream),
															#line 788 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   outputStream(outputStream),
															#line 788 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   error(error),
															#line 789 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   ifstate(0),
															#line 790 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   i223839()
															#line 8691 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
	{
		fdb_probe_actor_create("actorFuzz28", reinterpret_cast<unsigned long>(this));

	}
	~ActorFuzz28ActorState() 
	{
		fdb_probe_actor_destroy("actorFuzz28", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 791 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			for(i223839 = 0;i223839 < 5;i223839++) {
															#line 792 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(715827);
															#line 793 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				list555985 = std::vector<int>();
															#line 794 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				list555985.push_back(1);
															#line 795 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				list555985.push_back(2);
															#line 796 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				list555985.push_back(3);
															#line 797 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				for( auto i : list555985 ) {
															#line 798 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					(void)i;
															#line 799 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
					outputStream.send(529509);
															#line 8722 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
					break;
				}
															#line 802 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
				outputStream.send(449273);
															#line 8727 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			}
															#line 804 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			if (!static_cast<ActorFuzz28Actor*>(this)->SAV<int>::futures) { (void)(743922); this->~ActorFuzz28ActorState(); static_cast<ActorFuzz28Actor*>(this)->destroy(); return 0; }
															#line 8731 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			new (&static_cast<ActorFuzz28Actor*>(this)->SAV< int >::value()) int(743922);
			this->~ActorFuzz28ActorState();
			static_cast<ActorFuzz28Actor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~ActorFuzz28ActorState();
		static_cast<ActorFuzz28Actor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
															#line 788 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	FutureStream<int> inputStream;
															#line 788 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	PromiseStream<int> outputStream;
															#line 788 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	Future<Void> error;
															#line 789 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int ifstate;
															#line 790 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int i223839;
															#line 793 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	std::vector<int> list555985;
															#line 8765 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
};
// This generated class is to be used only via actorFuzz28()
															#line 788 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz28Actor final : public Actor<int>, public FastAllocated<ActorFuzz28Actor>, public ActorFuzz28ActorState<ActorFuzz28Actor> {
															#line 8770 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
	using FastAllocated<ActorFuzz28Actor>::operator new;
	using FastAllocated<ActorFuzz28Actor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<int>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
															#line 788 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz28Actor(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 8780 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		 : Actor<int>(),
		   ActorFuzz28ActorState<ActorFuzz28Actor>(inputStream, outputStream, error)
	{
		fdb_probe_actor_enter("actorFuzz28", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("actorFuzz28");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("actorFuzz28", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		}

	}
};
}
															#line 788 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
[[nodiscard]] Future<int> actorFuzz28( FutureStream<int> const& inputStream, PromiseStream<int> const& outputStream, Future<Void> const& error ) {
															#line 788 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	return Future<int>(new ActorFuzz28Actor(inputStream, outputStream, error));
															#line 8807 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
}

#line 806 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"

															#line 8812 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
namespace {
// This generated class is to be used only via actorFuzz29()
															#line 807 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
template <class ActorFuzz29Actor>
															#line 807 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz29ActorState {
															#line 8819 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
															#line 807 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz29ActorState(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 807 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
															#line 807 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		 : inputStream(inputStream),
															#line 807 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   outputStream(outputStream),
															#line 807 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   error(error),
															#line 808 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   ifstate(0),
															#line 809 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		   i797447()
															#line 8834 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
	{
		fdb_probe_actor_create("actorFuzz29", reinterpret_cast<unsigned long>(this));

	}
	~ActorFuzz29ActorState() 
	{
		fdb_probe_actor_destroy("actorFuzz29", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 810 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
			i797447 = 0;
															#line 8849 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
			loopDepth = a_body1loopHead1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~ActorFuzz29ActorState();
		static_cast<ActorFuzz29Actor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 816 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!static_cast<ActorFuzz29Actor*>(this)->SAV<int>::futures) { (void)(560881); this->~ActorFuzz29ActorState(); static_cast<ActorFuzz29Actor*>(this)->destroy(); return 0; }
															#line 8872 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		new (&static_cast<ActorFuzz29Actor*>(this)->SAV< int >::value()) int(560881);
		this->~ActorFuzz29ActorState();
		static_cast<ActorFuzz29Actor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1(int loopDepth) 
	{
															#line 810 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (!(i797447 < 5))
															#line 8891 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		{
			return a_body1break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 811 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(821092);
															#line 812 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		FutureStream<int> __when_expr_0 = inputStream;
															#line 812 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		if (static_cast<ActorFuzz29Actor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 8901 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), std::max(0, loopDepth - 1)); else return a_body1loopBody1when1(__when_expr_0.pop(), loopDepth); };
		static_cast<ActorFuzz29Actor*>(this)->actor_wait_state = 1;
															#line 812 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		__when_expr_0.addCallbackAndClear(static_cast<ActorSingleCallback< ActorFuzz29Actor, 0, int >*>(static_cast<ActorFuzz29Actor*>(this)));
															#line 8906 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1break1(int loopDepth) 
	{
		try {
			return a_body1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1cont1(int const& input,int loopDepth) 
	{
															#line 813 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(input + 900028);
															#line 814 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(617942);
															#line 810 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		i797447++;
															#line 8932 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		if (loopDepth == 0) return a_body1loopHead1(0);

		return loopDepth;
	}
	int a_body1loopBody1cont1(int && input,int loopDepth) 
	{
															#line 813 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(input + 900028);
															#line 814 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		outputStream.send(617942);
															#line 810 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
		i797447++;
															#line 8945 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		if (loopDepth == 0) return a_body1loopHead1(0);

		return loopDepth;
	}
	int a_body1loopBody1when1(int const& input,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont1(input, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1when1(int && input,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont1(std::move(input), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<ActorFuzz29Actor*>(this)->actor_wait_state > 0) static_cast<ActorFuzz29Actor*>(this)->actor_wait_state = 0;
		static_cast<ActorFuzz29Actor*>(this)->ActorSingleCallback< ActorFuzz29Actor, 0, int >::remove();

	}
	void a_callback_fire(ActorSingleCallback< ActorFuzz29Actor, 0, int >*,int const& value) 
	{
		fdb_probe_actor_enter("actorFuzz29", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz29", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorSingleCallback< ActorFuzz29Actor, 0, int >*,int && value) 
	{
		fdb_probe_actor_enter("actorFuzz29", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz29", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorSingleCallback< ActorFuzz29Actor, 0, int >*,Error err) 
	{
		fdb_probe_actor_enter("actorFuzz29", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("actorFuzz29", reinterpret_cast<unsigned long>(this), 0);

	}
															#line 807 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	FutureStream<int> inputStream;
															#line 807 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	PromiseStream<int> outputStream;
															#line 807 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	Future<Void> error;
															#line 808 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int ifstate;
															#line 809 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	int i797447;
															#line 9023 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
};
// This generated class is to be used only via actorFuzz29()
															#line 807 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
class ActorFuzz29Actor final : public Actor<int>, public ActorSingleCallback< ActorFuzz29Actor, 0, int >, public FastAllocated<ActorFuzz29Actor>, public ActorFuzz29ActorState<ActorFuzz29Actor> {
															#line 9028 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
public:
	using FastAllocated<ActorFuzz29Actor>::operator new;
	using FastAllocated<ActorFuzz29Actor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<int>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorSingleCallback< ActorFuzz29Actor, 0, int >;
															#line 807 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	ActorFuzz29Actor(FutureStream<int> const& inputStream,PromiseStream<int> const& outputStream,Future<Void> const& error) 
															#line 9039 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
		 : Actor<int>(),
		   ActorFuzz29ActorState<ActorFuzz29Actor>(inputStream, outputStream, error)
	{
		fdb_probe_actor_enter("actorFuzz29", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("actorFuzz29");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("actorFuzz29", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorSingleCallback< ActorFuzz29Actor, 0, int >*)0, actor_cancelled()); break;
		}

	}
};
}
															#line 807 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
[[nodiscard]] Future<int> actorFuzz29( FutureStream<int> const& inputStream, PromiseStream<int> const& outputStream, Future<Void> const& error ) {
															#line 807 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"
	return Future<int>(new ActorFuzz29Actor(inputStream, outputStream, error));
															#line 9067 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.g.cpp"
}

#line 818 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbrpc/ActorFuzz.actor.cpp"

std::pair<int, int> actorFuzzTests() {
	int testsOK = 0;
	testsOK += testFuzzActor(&actorFuzz0, "actorFuzz0", { 390229, 596271, 574865 });
	testsOK +=
	    testFuzzActor(&actorFuzz1,
	                  "actorFuzz1",
	                  { 477566, 815578, 477566, 815578, 477566, 815578, 477566, 815578, 477566, 815578, 917160 });
	testsOK += testFuzzActor(&actorFuzz2, "actorFuzz2", { 476677, 930237 });
	testsOK += testFuzzActor(&actorFuzz3, "actorFuzz3", { 1000 });
	testsOK += testFuzzActor(&actorFuzz4, "actorFuzz4", { 180600, 177605, 177605, 177605, 954508, 810052 });
	testsOK += testFuzzActor(&actorFuzz5, "actorFuzz5", { 1000 });
	testsOK += testFuzzActor(&actorFuzz6, "actorFuzz6", { 320321, 266526, 762336, 463730, 320321, 266526, 762336,
	                                                      463730, 320321, 266526, 762336, 463730, 320321, 266526,
	                                                      762336, 463730, 320321, 266526, 762336, 463730, 945289 });
	testsOK += testFuzzActor(
	    &actorFuzz7,
	    "actorFuzz7",
	    { 406152, 478841, 609181, 634881, 253861, 592023, 240597, 253861, 593023, 240597, 253861, 594023, 240597,
	      415949, 169335, 478331, 634881, 253861, 596023, 240597, 253861, 597023, 240597, 253861, 598023, 240597,
	      415949, 173335, 478331, 634881, 253861, 600023, 240597, 253861, 601023, 240597, 253861, 602023, 240597,
	      415949, 177335, 478331, 634881, 253861, 604023, 240597, 253861, 605023, 240597, 253861, 606023, 240597,
	      415949, 181335, 478331, 634881, 253861, 608023, 240597, 253861, 609023, 240597, 253861, 610023, 240597,
	      415949, 185335, 478331, 331905, 946924, 663973, 797073, 971923, 295772, 923567, 559259, 559259, 559259,
	      325678, 679187, 295772, 923567, 559259, 559259, 559259, 325678, 679187, 295772, 923567, 559259, 559259,
	      559259, 325678, 679187, 295772, 923567, 559259, 559259, 559259, 325678, 679187, 295772, 923567, 559259,
	      559259, 559259, 325678, 679187, 534407, 814172, 949658 });
	testsOK += testFuzzActor(&actorFuzz8, "actorFuzz8", { 285937, 696473 });
	testsOK += testFuzzActor(&actorFuzz9, "actorFuzz9", { 141463, 397424 });
	testsOK += testFuzzActor(&actorFuzz10, "actorFuzz10", { 543113, 1000 });
	testsOK += testFuzzActor(&actorFuzz11, "actorFuzz11", { 1000 });
	testsOK += testFuzzActor(&actorFuzz12, "actorFuzz12", { 970588, 981887 });
	testsOK += testFuzzActor(&actorFuzz13, "actorFuzz13", { 861219 });
	testsOK += testFuzzActor(&actorFuzz14, "actorFuzz14", { 527098, 527098, 527098, 628047 });
	testsOK += testFuzzActor(&actorFuzz15,
	                         "actorFuzz15",
	                         { 582389,
	                           240216,
	                           732317,
	                           582389,
	                           240216,
	                           732317,
	                           582389,
	                           240216,
	                           732317,
	                           582389,
	                           240216,
	                           732317,
	                           582389,
	                           240216,
	                           732317,
	                           884781 });
	testsOK += testFuzzActor(&actorFuzz16, "actorFuzz16", { 943071, 492690, 908751, 198776, 537939 });
	testsOK += testFuzzActor(&actorFuzz17, "actorFuzz17", { 249436, 416782, 249436, 416782, 249436, 416782, 299183 });
	testsOK += testFuzzActor(&actorFuzz18, "actorFuzz18", { 337649, 395297, 807261, 517901 });
	testsOK += testFuzzActor(&actorFuzz19,
	                         "actorFuzz19",
	                         { 492598, 139186, 742053, 492598, 140186, 742053, 492598, 141186, 742053, 592919 });
	testsOK += testFuzzActor(&actorFuzz20, "actorFuzz20", { 760082, 1000 });
	testsOK += testFuzzActor(&actorFuzz21, "actorFuzz21", { 806394 });
	testsOK += testFuzzActor(&actorFuzz22, "actorFuzz22", { 722878, 369302, 416748 });
	testsOK += testFuzzActor(&actorFuzz23, "actorFuzz23", { 562792, 231437 });
	testsOK += testFuzzActor(&actorFuzz24, "actorFuzz24", { 847672, 835175 });
	testsOK += testFuzzActor(&actorFuzz25, "actorFuzz25", { 843261, 327560, 592398 });
	testsOK += testFuzzActor(&actorFuzz26, "actorFuzz26", { 520263, 306397, 944232, 366272, 700651, 146918, 191890 });
	testsOK += testFuzzActor(&actorFuzz27, "actorFuzz27", { 313322, 196907 });
	testsOK += testFuzzActor(&actorFuzz28,
	                         "actorFuzz28",
	                         { 715827,
	                           529509,
	                           449273,
	                           715827,
	                           529509,
	                           449273,
	                           715827,
	                           529509,
	                           449273,
	                           715827,
	                           529509,
	                           449273,
	                           715827,
	                           529509,
	                           449273,
	                           743922 });
	testsOK += testFuzzActor(&actorFuzz29,
	                         "actorFuzz29",
	                         { 821092,
	                           901028,
	                           617942,
	                           821092,
	                           902028,
	                           617942,
	                           821092,
	                           903028,
	                           617942,
	                           821092,
	                           904028,
	                           617942,
	                           821092,
	                           905028,
	                           617942,
	                           560881 });
	return std::make_pair(testsOK, 30);
}
#endif // WIN32
