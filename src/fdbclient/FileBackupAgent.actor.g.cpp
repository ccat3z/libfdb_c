#define POST_ACTOR_COMPILER 1
#line 1 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
/*
 * FileBackupAgent.actor.cpp
 *
 * This source file is part of the FoundationDB open source project
 *
 * Copyright 2013-2022 Apple Inc. and the FoundationDB project authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "fdbclient/CommitProxyInterface.h"
#include "fdbclient/DatabaseConfiguration.h"
#include "fdbclient/TenantEntryCache.actor.h"
#include "fdbclient/TenantManagement.actor.h"
#include "fdbrpc/TenantInfo.h"
#include "fdbrpc/simulator.h"
#include "flow/EncryptUtils.h"
#include "flow/FastRef.h"
#include "flow/flow.h"
#include "fmt/format.h"
#include "fdbclient/BackupAgent.actor.h"
#include "fdbclient/BackupContainer.h"
#include "fdbclient/BlobCipher.h"
#include "fdbclient/ClientBooleanParams.h"
#include "fdbclient/DatabaseContext.h"
#include "fdbclient/FDBTypes.h"
#include "fdbclient/GetEncryptCipherKeys.h"
#include "fdbclient/JsonBuilder.h"
#include "fdbclient/KeyBackedTypes.actor.h"
#include "fdbclient/KeyRangeMap.h"
#include "fdbclient/Knobs.h"
#include "fdbclient/ManagementAPI.actor.h"
#include "fdbclient/RestoreInterface.h"
#include "fdbclient/Status.h"
#include "fdbclient/SystemData.h"
#include "fdbclient/TaskBucket.h"
#include "fdbclient/Tenant.h"
#include "flow/network.h"
#include "flow/Trace.h"

#include <cinttypes>
#include <ctime>
#include <climits>
#include "flow/IAsyncFile.h"
#include "flow/genericactors.actor.h"
#include "flow/Hash3.h"
#include "flow/xxhash.h"

#include <memory>
#include <numeric>
#include <boost/algorithm/string/split.hpp>
#include <boost/algorithm/string/classification.hpp>
#include <algorithm>
#include <unordered_map>
#include <utility>
#include <variant>

#include "flow/actorcompiler.h" // This must be the last #include.

Optional<std::string> fileBackupAgentProxy = Optional<std::string>();

#define SevFRTestInfo SevVerbose
// #define SevFRTestInfo SevInfo

static std::string boolToYesOrNo(bool val) {
	return val ? std::string("Yes") : std::string("No");
}

static std::string versionToString(Optional<Version> version) {
	if (version.present())
		return std::to_string(version.get());
	else
		return "N/A";
}

static std::string timeStampToString(Optional<int64_t> epochs) {
	if (!epochs.present())
		return "N/A";
	return BackupAgentBase::formatTime(epochs.get());
}

static Future<Optional<int64_t>> getTimestampFromVersion(Optional<Version> ver,
                                                         Reference<ReadYourWritesTransaction> tr) {
	if (!ver.present())
		return Optional<int64_t>();

	return timeKeeperEpochsFromVersion(ver.get(), tr);
}

// Time format :
// <= 59 seconds
// <= 59.99 minutes
// <= 23.99 hours
// N.NN days
std::string secondsToTimeFormat(int64_t seconds) {
	if (seconds >= 86400)
		return format("%.2f day(s)", seconds / 86400.0);
	else if (seconds >= 3600)
		return format("%.2f hour(s)", seconds / 3600.0);
	else if (seconds >= 60)
		return format("%.2f minute(s)", seconds / 60.0);
	else
		return format("%lld second(s)", seconds);
}

const Key FileBackupAgent::keyLastRestorable = "last_restorable"_sr;

// For convenience
typedef FileBackupAgent::ERestoreState ERestoreState;

StringRef FileBackupAgent::restoreStateText(ERestoreState id) {
	switch (id) {
	case ERestoreState::UNITIALIZED:
		return "unitialized"_sr;
	case ERestoreState::QUEUED:
		return "queued"_sr;
	case ERestoreState::STARTING:
		return "starting"_sr;
	case ERestoreState::RUNNING:
		return "running"_sr;
	case ERestoreState::COMPLETED:
		return "completed"_sr;
	case ERestoreState::ABORTED:
		return "aborted"_sr;
	default:
		return "Unknown"_sr;
	}
}

Key FileBackupAgent::getPauseKey() {
	FileBackupAgent backupAgent;
	return backupAgent.taskBucket->getPauseKey();
}

															#line 147 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via getAll_impl()
															#line 145 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class TagUidMap_GetAll_implActor>
															#line 145 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class TagUidMap_GetAll_implActorState {
															#line 153 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 145 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	TagUidMap_GetAll_implActorState(TagUidMap* const& tagsMap,Reference<ReadYourWritesTransaction> const& tr,Snapshot const& snapshot) 
															#line 145 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 145 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : tagsMap(tagsMap),
															#line 145 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tr(tr),
															#line 145 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   snapshot(snapshot),
															#line 148 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   prefix(tagsMap->prefix)
															#line 166 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("getAll_impl", reinterpret_cast<unsigned long>(this));

	}
	~TagUidMap_GetAll_implActorState() 
	{
		fdb_probe_actor_destroy("getAll_impl", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 149 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<TagMap::RangeResultType> __when_expr_0 = tagsMap->getRange(tr, std::string(), {}, 1e6, snapshot);
															#line 149 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<TagUidMap_GetAll_implActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 183 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<TagUidMap_GetAll_implActor*>(this)->actor_wait_state = 1;
															#line 149 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< TagUidMap_GetAll_implActor, 0, TagMap::RangeResultType >*>(static_cast<TagUidMap_GetAll_implActor*>(this)));
															#line 188 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~TagUidMap_GetAll_implActorState();
		static_cast<TagUidMap_GetAll_implActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(TagMap::RangeResultType const& tagPairs,int loopDepth) 
	{
															#line 150 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		std::vector<KeyBackedTag> results;
															#line 151 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		for( auto& p : tagPairs.results ) {
															#line 152 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			results.push_back(KeyBackedTag(p.first, prefix));
															#line 215 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 153 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<TagUidMap_GetAll_implActor*>(this)->SAV<std::vector<KeyBackedTag>>::futures) { (void)(results); this->~TagUidMap_GetAll_implActorState(); static_cast<TagUidMap_GetAll_implActor*>(this)->destroy(); return 0; }
															#line 219 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<TagUidMap_GetAll_implActor*>(this)->SAV< std::vector<KeyBackedTag> >::value()) std::vector<KeyBackedTag>(results);
		this->~TagUidMap_GetAll_implActorState();
		static_cast<TagUidMap_GetAll_implActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont1(TagMap::RangeResultType && tagPairs,int loopDepth) 
	{
															#line 150 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		std::vector<KeyBackedTag> results;
															#line 151 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		for( auto& p : tagPairs.results ) {
															#line 152 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			results.push_back(KeyBackedTag(p.first, prefix));
															#line 235 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 153 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<TagUidMap_GetAll_implActor*>(this)->SAV<std::vector<KeyBackedTag>>::futures) { (void)(results); this->~TagUidMap_GetAll_implActorState(); static_cast<TagUidMap_GetAll_implActor*>(this)->destroy(); return 0; }
															#line 239 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<TagUidMap_GetAll_implActor*>(this)->SAV< std::vector<KeyBackedTag> >::value()) std::vector<KeyBackedTag>(results);
		this->~TagUidMap_GetAll_implActorState();
		static_cast<TagUidMap_GetAll_implActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1when1(TagMap::RangeResultType const& tagPairs,int loopDepth) 
	{
		loopDepth = a_body1cont1(tagPairs, loopDepth);

		return loopDepth;
	}
	int a_body1when1(TagMap::RangeResultType && tagPairs,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(tagPairs), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<TagUidMap_GetAll_implActor*>(this)->actor_wait_state > 0) static_cast<TagUidMap_GetAll_implActor*>(this)->actor_wait_state = 0;
		static_cast<TagUidMap_GetAll_implActor*>(this)->ActorCallback< TagUidMap_GetAll_implActor, 0, TagMap::RangeResultType >::remove();

	}
	void a_callback_fire(ActorCallback< TagUidMap_GetAll_implActor, 0, TagMap::RangeResultType >*,TagMap::RangeResultType const& value) 
	{
		fdb_probe_actor_enter("getAll_impl", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getAll_impl", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< TagUidMap_GetAll_implActor, 0, TagMap::RangeResultType >*,TagMap::RangeResultType && value) 
	{
		fdb_probe_actor_enter("getAll_impl", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getAll_impl", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< TagUidMap_GetAll_implActor, 0, TagMap::RangeResultType >*,Error err) 
	{
		fdb_probe_actor_enter("getAll_impl", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getAll_impl", reinterpret_cast<unsigned long>(this), 0);

	}
															#line 145 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	TagUidMap* tagsMap;
															#line 145 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 145 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Snapshot snapshot;
															#line 148 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key prefix;
															#line 318 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via getAll_impl()
															#line 145 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class TagUidMap_GetAll_implActor final : public Actor<std::vector<KeyBackedTag>>, public ActorCallback< TagUidMap_GetAll_implActor, 0, TagMap::RangeResultType >, public FastAllocated<TagUidMap_GetAll_implActor>, public TagUidMap_GetAll_implActorState<TagUidMap_GetAll_implActor> {
															#line 323 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<TagUidMap_GetAll_implActor>::operator new;
	using FastAllocated<TagUidMap_GetAll_implActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<std::vector<KeyBackedTag>>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< TagUidMap_GetAll_implActor, 0, TagMap::RangeResultType >;
															#line 145 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	TagUidMap_GetAll_implActor(TagUidMap* const& tagsMap,Reference<ReadYourWritesTransaction> const& tr,Snapshot const& snapshot) 
															#line 334 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<std::vector<KeyBackedTag>>(),
		   TagUidMap_GetAll_implActorState<TagUidMap_GetAll_implActor>(tagsMap, tr, snapshot)
	{
		fdb_probe_actor_enter("getAll_impl", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("getAll_impl");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("getAll_impl", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< TagUidMap_GetAll_implActor, 0, TagMap::RangeResultType >*)0, actor_cancelled()); break;
		}

	}
};
															#line 145 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] Future<std::vector<KeyBackedTag>> TagUidMap::getAll_impl( TagUidMap* const& tagsMap, Reference<ReadYourWritesTransaction> const& tr, Snapshot const& snapshot ) {
															#line 145 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<std::vector<KeyBackedTag>>(new TagUidMap_GetAll_implActor(tagsMap, tr, snapshot));
															#line 361 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 155 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

KeyBackedTag::KeyBackedTag(std::string tagName, StringRef tagMapPrefix)
  : KeyBackedProperty<UidAndAbortedFlagT>(TagUidMap(tagMapPrefix).getProperty(tagName)), tagName(tagName),
    tagMapPrefix(tagMapPrefix) {}

class RestoreConfig : public KeyBackedTaskConfig {
public:
	RestoreConfig(UID uid = UID()) : KeyBackedTaskConfig(fileRestorePrefixRange.begin, uid) {}
	RestoreConfig(Reference<Task> task) : KeyBackedTaskConfig(fileRestorePrefixRange.begin, task) {}

	KeyBackedProperty<ERestoreState> stateEnum() { return configSpace.pack(__FUNCTION__sr); }
	Future<StringRef> stateText(Reference<ReadYourWritesTransaction> tr) {
		return map(stateEnum().getD(tr),
		           [](ERestoreState s) -> StringRef { return FileBackupAgent::restoreStateText(s); });
	}
	KeyBackedProperty<Key> addPrefix() { return configSpace.pack(__FUNCTION__sr); }
	KeyBackedProperty<Key> removePrefix() { return configSpace.pack(__FUNCTION__sr); }
	KeyBackedProperty<bool> onlyApplyMutationLogs() { return configSpace.pack(__FUNCTION__sr); }
	KeyBackedProperty<bool> inconsistentSnapshotOnly() { return configSpace.pack(__FUNCTION__sr); }
	KeyBackedProperty<bool> unlockDBAfterRestore() { return configSpace.pack(__FUNCTION__sr); }
	// XXX: Remove restoreRange() once it is safe to remove. It has been changed to restoreRanges
	KeyBackedProperty<KeyRange> restoreRange() { return configSpace.pack(__FUNCTION__sr); }
	// XXX: Changed to restoreRangeSet. It can be removed.
	KeyBackedProperty<std::vector<KeyRange>> restoreRanges() { return configSpace.pack(__FUNCTION__sr); }
	KeyBackedSet<KeyRange> restoreRangeSet() { return configSpace.pack(__FUNCTION__sr); }
	KeyBackedProperty<Key> batchFuture() { return configSpace.pack(__FUNCTION__sr); }
	KeyBackedProperty<Version> beginVersion() { return configSpace.pack(__FUNCTION__sr); }
	KeyBackedProperty<Version> restoreVersion() { return configSpace.pack(__FUNCTION__sr); }
	KeyBackedProperty<Version> firstConsistentVersion() { return configSpace.pack(__FUNCTION__sr); }

	KeyBackedProperty<Reference<IBackupContainer>> sourceContainer() { return configSpace.pack(__FUNCTION__sr); }
	// Get the source container as a bare URL, without creating a container instance
	KeyBackedProperty<Value> sourceContainerURL() { return configSpace.pack("sourceContainer"_sr); }

	// Total bytes written by all log and range restore tasks.
	KeyBackedBinaryValue<int64_t> bytesWritten() { return configSpace.pack(__FUNCTION__sr); }
	// File blocks that have had tasks created for them by the Dispatch task
	KeyBackedBinaryValue<int64_t> filesBlocksDispatched() { return configSpace.pack(__FUNCTION__sr); }
	// File blocks whose tasks have finished
	KeyBackedBinaryValue<int64_t> fileBlocksFinished() { return configSpace.pack(__FUNCTION__sr); }
	// Total number of files in the fileMap
	KeyBackedBinaryValue<int64_t> fileCount() { return configSpace.pack(__FUNCTION__sr); }
	// Total number of file blocks in the fileMap
	KeyBackedBinaryValue<int64_t> fileBlockCount() { return configSpace.pack(__FUNCTION__sr); }

	Future<std::vector<KeyRange>> getRestoreRangesOrDefault(Reference<ReadYourWritesTransaction> tr) {
		return getRestoreRangesOrDefault_impl(this, tr);
	}

																#line 414 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via getRestoreRangesOrDefault_impl()
															#line 204 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class GetRestoreRangesOrDefault_implActor>
															#line 204 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class GetRestoreRangesOrDefault_implActorState {
															#line 420 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 204 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	GetRestoreRangesOrDefault_implActorState(RestoreConfig* const& self,Reference<ReadYourWritesTransaction> const& tr) 
															#line 204 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 204 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : self(self),
															#line 204 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tr(tr),
															#line 206 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   ranges(),
															#line 207 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   batchSize(BUGGIFY ? 1 : CLIENT_KNOBS->RESTORE_RANGES_READ_BATCH),
															#line 208 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   begin(),
															#line 209 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   arena()
															#line 437 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("getRestoreRangesOrDefault_impl", reinterpret_cast<unsigned long>(this));

	}
	~GetRestoreRangesOrDefault_implActorState() 
	{
		fdb_probe_actor_destroy("getRestoreRangesOrDefault_impl", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 210 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			;
															#line 452 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = a_body1loopHead1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~GetRestoreRangesOrDefault_implActorState();
		static_cast<GetRestoreRangesOrDefault_implActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 222 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (ranges.empty())
															#line 475 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 223 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<std::vector<KeyRange>> __when_expr_1 = self->restoreRanges().getD(tr);
															#line 223 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<GetRestoreRangesOrDefault_implActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 481 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
			static_cast<GetRestoreRangesOrDefault_implActor*>(this)->actor_wait_state = 2;
															#line 223 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< GetRestoreRangesOrDefault_implActor, 1, std::vector<KeyRange> >*>(static_cast<GetRestoreRangesOrDefault_implActor*>(this)));
															#line 486 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont2(loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1(int loopDepth) 
	{
															#line 211 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<KeyBackedSet<KeyRange>::RangeResultType> __when_expr_0 = self->restoreRangeSet().getRange(tr, begin, {}, batchSize);
															#line 211 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<GetRestoreRangesOrDefault_implActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 509 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), std::max(0, loopDepth - 1)); else return a_body1loopBody1when1(__when_expr_0.get(), loopDepth); };
		static_cast<GetRestoreRangesOrDefault_implActor*>(this)->actor_wait_state = 1;
															#line 211 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< GetRestoreRangesOrDefault_implActor, 0, KeyBackedSet<KeyRange>::RangeResultType >*>(static_cast<GetRestoreRangesOrDefault_implActor*>(this)));
															#line 514 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1break1(int loopDepth) 
	{
		try {
			return a_body1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1cont1(KeyBackedSet<KeyRange>::RangeResultType const& rangeResult,int loopDepth) 
	{
															#line 213 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		ranges.insert(ranges.end(), rangeResult.results.begin(), rangeResult.results.end());
															#line 214 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!rangeResult.more)
															#line 538 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
			return a_body1break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 217 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		ASSERT(!rangeResult.results.empty());
															#line 218 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		begin = KeyRangeRef(KeyRef(arena, ranges.back().begin), keyAfter(ranges.back().end, arena));
															#line 546 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (loopDepth == 0) return a_body1loopHead1(0);

		return loopDepth;
	}
	int a_body1loopBody1cont1(KeyBackedSet<KeyRange>::RangeResultType && rangeResult,int loopDepth) 
	{
															#line 213 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		ranges.insert(ranges.end(), rangeResult.results.begin(), rangeResult.results.end());
															#line 214 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!rangeResult.more)
															#line 557 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
			return a_body1break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 217 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		ASSERT(!rangeResult.results.empty());
															#line 218 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		begin = KeyRangeRef(KeyRef(arena, ranges.back().begin), keyAfter(ranges.back().end, arena));
															#line 565 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (loopDepth == 0) return a_body1loopHead1(0);

		return loopDepth;
	}
	int a_body1loopBody1when1(KeyBackedSet<KeyRange>::RangeResultType const& rangeResult,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont1(rangeResult, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1when1(KeyBackedSet<KeyRange>::RangeResultType && rangeResult,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont1(std::move(rangeResult), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<GetRestoreRangesOrDefault_implActor*>(this)->actor_wait_state > 0) static_cast<GetRestoreRangesOrDefault_implActor*>(this)->actor_wait_state = 0;
		static_cast<GetRestoreRangesOrDefault_implActor*>(this)->ActorCallback< GetRestoreRangesOrDefault_implActor, 0, KeyBackedSet<KeyRange>::RangeResultType >::remove();

	}
	void a_callback_fire(ActorCallback< GetRestoreRangesOrDefault_implActor, 0, KeyBackedSet<KeyRange>::RangeResultType >*,KeyBackedSet<KeyRange>::RangeResultType const& value) 
	{
		fdb_probe_actor_enter("getRestoreRangesOrDefault_impl", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getRestoreRangesOrDefault_impl", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< GetRestoreRangesOrDefault_implActor, 0, KeyBackedSet<KeyRange>::RangeResultType >*,KeyBackedSet<KeyRange>::RangeResultType && value) 
	{
		fdb_probe_actor_enter("getRestoreRangesOrDefault_impl", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getRestoreRangesOrDefault_impl", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< GetRestoreRangesOrDefault_implActor, 0, KeyBackedSet<KeyRange>::RangeResultType >*,Error err) 
	{
		fdb_probe_actor_enter("getRestoreRangesOrDefault_impl", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getRestoreRangesOrDefault_impl", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont2(int loopDepth) 
	{
															#line 230 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<GetRestoreRangesOrDefault_implActor*>(this)->SAV<std::vector<KeyRange>>::futures) { (void)(ranges); this->~GetRestoreRangesOrDefault_implActorState(); static_cast<GetRestoreRangesOrDefault_implActor*>(this)->destroy(); return 0; }
															#line 637 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<GetRestoreRangesOrDefault_implActor*>(this)->SAV< std::vector<KeyRange> >::value()) std::vector<KeyRange>(std::move(ranges)); // state_var_RVO
		this->~GetRestoreRangesOrDefault_implActorState();
		static_cast<GetRestoreRangesOrDefault_implActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont3(std::vector<KeyRange> const& _ranges,int loopDepth) 
	{
															#line 224 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		ranges = _ranges;
															#line 225 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (ranges.empty())
															#line 651 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 226 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<KeyRange> __when_expr_2 = self->restoreRange().getD(tr);
															#line 226 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<GetRestoreRangesOrDefault_implActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 657 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont3when1(__when_expr_2.get(), loopDepth); };
			static_cast<GetRestoreRangesOrDefault_implActor*>(this)->actor_wait_state = 3;
															#line 226 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< GetRestoreRangesOrDefault_implActor, 2, KeyRange >*>(static_cast<GetRestoreRangesOrDefault_implActor*>(this)));
															#line 662 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont4(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont3(std::vector<KeyRange> && _ranges,int loopDepth) 
	{
															#line 224 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		ranges = _ranges;
															#line 225 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (ranges.empty())
															#line 678 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 226 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<KeyRange> __when_expr_2 = self->restoreRange().getD(tr);
															#line 226 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<GetRestoreRangesOrDefault_implActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 684 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont3when1(__when_expr_2.get(), loopDepth); };
			static_cast<GetRestoreRangesOrDefault_implActor*>(this)->actor_wait_state = 3;
															#line 226 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< GetRestoreRangesOrDefault_implActor, 2, KeyRange >*>(static_cast<GetRestoreRangesOrDefault_implActor*>(this)));
															#line 689 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont4(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont1when1(std::vector<KeyRange> const& _ranges,int loopDepth) 
	{
		loopDepth = a_body1cont3(_ranges, loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(std::vector<KeyRange> && _ranges,int loopDepth) 
	{
		loopDepth = a_body1cont3(std::move(_ranges), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<GetRestoreRangesOrDefault_implActor*>(this)->actor_wait_state > 0) static_cast<GetRestoreRangesOrDefault_implActor*>(this)->actor_wait_state = 0;
		static_cast<GetRestoreRangesOrDefault_implActor*>(this)->ActorCallback< GetRestoreRangesOrDefault_implActor, 1, std::vector<KeyRange> >::remove();

	}
	void a_callback_fire(ActorCallback< GetRestoreRangesOrDefault_implActor, 1, std::vector<KeyRange> >*,std::vector<KeyRange> const& value) 
	{
		fdb_probe_actor_enter("getRestoreRangesOrDefault_impl", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getRestoreRangesOrDefault_impl", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< GetRestoreRangesOrDefault_implActor, 1, std::vector<KeyRange> >*,std::vector<KeyRange> && value) 
	{
		fdb_probe_actor_enter("getRestoreRangesOrDefault_impl", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getRestoreRangesOrDefault_impl", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< GetRestoreRangesOrDefault_implActor, 1, std::vector<KeyRange> >*,Error err) 
	{
		fdb_probe_actor_enter("getRestoreRangesOrDefault_impl", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getRestoreRangesOrDefault_impl", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont4(int loopDepth) 
	{
		loopDepth = a_body1cont2(loopDepth);

		return loopDepth;
	}
	int a_body1cont5(KeyRange const& range,int loopDepth) 
	{
															#line 227 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		ranges.push_back(range);
															#line 772 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont4(loopDepth);

		return loopDepth;
	}
	int a_body1cont5(KeyRange && range,int loopDepth) 
	{
															#line 227 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		ranges.push_back(range);
															#line 781 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont4(loopDepth);

		return loopDepth;
	}
	int a_body1cont3when1(KeyRange const& range,int loopDepth) 
	{
		loopDepth = a_body1cont5(range, loopDepth);

		return loopDepth;
	}
	int a_body1cont3when1(KeyRange && range,int loopDepth) 
	{
		loopDepth = a_body1cont5(std::move(range), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<GetRestoreRangesOrDefault_implActor*>(this)->actor_wait_state > 0) static_cast<GetRestoreRangesOrDefault_implActor*>(this)->actor_wait_state = 0;
		static_cast<GetRestoreRangesOrDefault_implActor*>(this)->ActorCallback< GetRestoreRangesOrDefault_implActor, 2, KeyRange >::remove();

	}
	void a_callback_fire(ActorCallback< GetRestoreRangesOrDefault_implActor, 2, KeyRange >*,KeyRange const& value) 
	{
		fdb_probe_actor_enter("getRestoreRangesOrDefault_impl", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont3when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getRestoreRangesOrDefault_impl", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< GetRestoreRangesOrDefault_implActor, 2, KeyRange >*,KeyRange && value) 
	{
		fdb_probe_actor_enter("getRestoreRangesOrDefault_impl", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont3when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getRestoreRangesOrDefault_impl", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< GetRestoreRangesOrDefault_implActor, 2, KeyRange >*,Error err) 
	{
		fdb_probe_actor_enter("getRestoreRangesOrDefault_impl", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getRestoreRangesOrDefault_impl", reinterpret_cast<unsigned long>(this), 2);

	}
															#line 204 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	RestoreConfig* self;
															#line 204 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 206 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::vector<KeyRange> ranges;
															#line 207 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int batchSize;
															#line 208 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<KeyRange> begin;
															#line 209 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Arena arena;
															#line 861 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via getRestoreRangesOrDefault_impl()
															#line 204 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class GetRestoreRangesOrDefault_implActor final : public Actor<std::vector<KeyRange>>, public ActorCallback< GetRestoreRangesOrDefault_implActor, 0, KeyBackedSet<KeyRange>::RangeResultType >, public ActorCallback< GetRestoreRangesOrDefault_implActor, 1, std::vector<KeyRange> >, public ActorCallback< GetRestoreRangesOrDefault_implActor, 2, KeyRange >, public FastAllocated<GetRestoreRangesOrDefault_implActor>, public GetRestoreRangesOrDefault_implActorState<GetRestoreRangesOrDefault_implActor> {
															#line 866 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<GetRestoreRangesOrDefault_implActor>::operator new;
	using FastAllocated<GetRestoreRangesOrDefault_implActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<std::vector<KeyRange>>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< GetRestoreRangesOrDefault_implActor, 0, KeyBackedSet<KeyRange>::RangeResultType >;
friend struct ActorCallback< GetRestoreRangesOrDefault_implActor, 1, std::vector<KeyRange> >;
friend struct ActorCallback< GetRestoreRangesOrDefault_implActor, 2, KeyRange >;
															#line 204 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	GetRestoreRangesOrDefault_implActor(RestoreConfig* const& self,Reference<ReadYourWritesTransaction> const& tr) 
															#line 879 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<std::vector<KeyRange>>(),
		   GetRestoreRangesOrDefault_implActorState<GetRestoreRangesOrDefault_implActor>(self, tr)
	{
		fdb_probe_actor_enter("getRestoreRangesOrDefault_impl", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("getRestoreRangesOrDefault_impl");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("getRestoreRangesOrDefault_impl", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< GetRestoreRangesOrDefault_implActor, 0, KeyBackedSet<KeyRange>::RangeResultType >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< GetRestoreRangesOrDefault_implActor, 1, std::vector<KeyRange> >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< GetRestoreRangesOrDefault_implActor, 2, KeyRange >*)0, actor_cancelled()); break;
		}

	}
};
															#line 204 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<std::vector<KeyRange>> getRestoreRangesOrDefault_impl( RestoreConfig* const& self, Reference<ReadYourWritesTransaction> const& tr ) {
															#line 204 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<std::vector<KeyRange>>(new GetRestoreRangesOrDefault_implActor(self, tr));
															#line 908 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 232 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

	// Describes a file to load blocks from during restore.  Ordered by version and then fileName to enable
	// incrementally advancing through the map, saving the version and path of the next starting point.
	struct RestoreFile {
		Version version;
		std::string fileName;
		bool isRange{ false }; // false for log file
		int64_t blockSize{ 0 };
		int64_t fileSize{ 0 };
		Version endVersion{ ::invalidVersion }; // not meaningful for range files

		Tuple pack() const {
			return Tuple::makeTuple(version, fileName, (int)isRange, fileSize, blockSize, endVersion);
		}
		static RestoreFile unpack(Tuple const& t) {
			RestoreFile r;
			int i = 0;
			r.version = t.getInt(i++);
			r.fileName = t.getString(i++).toString();
			r.isRange = t.getInt(i++) != 0;
			r.fileSize = t.getInt(i++);
			r.blockSize = t.getInt(i++);
			r.endVersion = t.getInt(i++);
			return r;
		}
	};

	typedef KeyBackedSet<RestoreFile> FileSetT;
	FileSetT fileSet() { return configSpace.pack(__FUNCTION__sr); }

	Future<bool> isRunnable(Reference<ReadYourWritesTransaction> tr) {
		return map(stateEnum().getD(tr), [](ERestoreState s) -> bool {
			return s != ERestoreState::ABORTED && s != ERestoreState::COMPLETED && s != ERestoreState::UNITIALIZED;
		});
	}

	Future<Void> logError(Database cx, Error e, std::string const& details, void* taskInstance = nullptr) {
		if (!uid.isValid()) {
			TraceEvent(SevError, "FileRestoreErrorNoUID").error(e).detail("Description", details);
			return Void();
		}
		TraceEvent t(SevWarn, "FileRestoreError");
		t.error(e)
		    .detail("RestoreUID", uid)
		    .detail("Description", details)
		    .detail("TaskInstance", (uint64_t)taskInstance);
		// key_not_found could happen
		if (e.code() == error_code_key_not_found)
			t.backtrace();

		return updateErrorInfo(cx, e, details);
	}

	Key mutationLogPrefix() { return uidPrefixKey(applyLogKeys.begin, uid); }

	Key applyMutationsMapPrefix() { return uidPrefixKey(applyMutationsKeyVersionMapRange.begin, uid); }

																#line 969 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via getApplyVersionLag_impl()
															#line 289 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class GetApplyVersionLag_implActor>
															#line 289 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class GetApplyVersionLag_implActorState {
															#line 975 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 289 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	GetApplyVersionLag_implActorState(Reference<ReadYourWritesTransaction> const& tr,UID const& uid) 
															#line 289 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 289 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : tr(tr),
															#line 289 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   uid(uid),
															#line 290 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   beginVal(tr->get(uidPrefixKey(applyMutationsBeginRange.begin, uid), Snapshot::True)),
															#line 292 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   endVal(tr->get(uidPrefixKey(applyMutationsEndRange.begin, uid), Snapshot::True))
															#line 988 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("getApplyVersionLag_impl", reinterpret_cast<unsigned long>(this));

	}
	~GetApplyVersionLag_implActorState() 
	{
		fdb_probe_actor_destroy("getApplyVersionLag_impl", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_0 = success(beginVal) && success(endVal);
															#line 293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<GetApplyVersionLag_implActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 1005 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<GetApplyVersionLag_implActor*>(this)->actor_wait_state = 1;
															#line 293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< GetApplyVersionLag_implActor, 0, Void >*>(static_cast<GetApplyVersionLag_implActor*>(this)));
															#line 1010 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~GetApplyVersionLag_implActorState();
		static_cast<GetApplyVersionLag_implActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Void const& _,int loopDepth) 
	{
															#line 295 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!beginVal.get().present() || !endVal.get().present())
															#line 1033 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 296 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<GetApplyVersionLag_implActor*>(this)->SAV<int64_t>::futures) { (void)(0); this->~GetApplyVersionLag_implActorState(); static_cast<GetApplyVersionLag_implActor*>(this)->destroy(); return 0; }
															#line 1037 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<GetApplyVersionLag_implActor*>(this)->SAV< int64_t >::value()) int64_t(0);
			this->~GetApplyVersionLag_implActorState();
			static_cast<GetApplyVersionLag_implActor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 298 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Version beginVersion = BinaryReader::fromStringRef<Version>(beginVal.get().get(), Unversioned());
															#line 299 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Version endVersion = BinaryReader::fromStringRef<Version>(endVal.get().get(), Unversioned());
															#line 300 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<GetApplyVersionLag_implActor*>(this)->SAV<int64_t>::futures) { (void)(endVersion - beginVersion); this->~GetApplyVersionLag_implActorState(); static_cast<GetApplyVersionLag_implActor*>(this)->destroy(); return 0; }
															#line 1049 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<GetApplyVersionLag_implActor*>(this)->SAV< int64_t >::value()) int64_t(endVersion - beginVersion);
		this->~GetApplyVersionLag_implActorState();
		static_cast<GetApplyVersionLag_implActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont1(Void && _,int loopDepth) 
	{
															#line 295 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!beginVal.get().present() || !endVal.get().present())
															#line 1061 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 296 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<GetApplyVersionLag_implActor*>(this)->SAV<int64_t>::futures) { (void)(0); this->~GetApplyVersionLag_implActorState(); static_cast<GetApplyVersionLag_implActor*>(this)->destroy(); return 0; }
															#line 1065 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<GetApplyVersionLag_implActor*>(this)->SAV< int64_t >::value()) int64_t(0);
			this->~GetApplyVersionLag_implActorState();
			static_cast<GetApplyVersionLag_implActor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 298 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Version beginVersion = BinaryReader::fromStringRef<Version>(beginVal.get().get(), Unversioned());
															#line 299 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Version endVersion = BinaryReader::fromStringRef<Version>(endVal.get().get(), Unversioned());
															#line 300 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<GetApplyVersionLag_implActor*>(this)->SAV<int64_t>::futures) { (void)(endVersion - beginVersion); this->~GetApplyVersionLag_implActorState(); static_cast<GetApplyVersionLag_implActor*>(this)->destroy(); return 0; }
															#line 1077 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<GetApplyVersionLag_implActor*>(this)->SAV< int64_t >::value()) int64_t(endVersion - beginVersion);
		this->~GetApplyVersionLag_implActorState();
		static_cast<GetApplyVersionLag_implActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<GetApplyVersionLag_implActor*>(this)->actor_wait_state > 0) static_cast<GetApplyVersionLag_implActor*>(this)->actor_wait_state = 0;
		static_cast<GetApplyVersionLag_implActor*>(this)->ActorCallback< GetApplyVersionLag_implActor, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< GetApplyVersionLag_implActor, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("getApplyVersionLag_impl", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getApplyVersionLag_impl", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< GetApplyVersionLag_implActor, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("getApplyVersionLag_impl", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getApplyVersionLag_impl", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< GetApplyVersionLag_implActor, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("getApplyVersionLag_impl", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getApplyVersionLag_impl", reinterpret_cast<unsigned long>(this), 0);

	}
															#line 289 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 289 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	UID uid;
															#line 290 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<Optional<Value>> beginVal;
															#line 292 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<Optional<Value>> endVal;
															#line 1156 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via getApplyVersionLag_impl()
															#line 289 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class GetApplyVersionLag_implActor final : public Actor<int64_t>, public ActorCallback< GetApplyVersionLag_implActor, 0, Void >, public FastAllocated<GetApplyVersionLag_implActor>, public GetApplyVersionLag_implActorState<GetApplyVersionLag_implActor> {
															#line 1161 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<GetApplyVersionLag_implActor>::operator new;
	using FastAllocated<GetApplyVersionLag_implActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<int64_t>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< GetApplyVersionLag_implActor, 0, Void >;
															#line 289 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	GetApplyVersionLag_implActor(Reference<ReadYourWritesTransaction> const& tr,UID const& uid) 
															#line 1172 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<int64_t>(),
		   GetApplyVersionLag_implActorState<GetApplyVersionLag_implActor>(tr, uid)
	{
		fdb_probe_actor_enter("getApplyVersionLag_impl", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("getApplyVersionLag_impl");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("getApplyVersionLag_impl", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< GetApplyVersionLag_implActor, 0, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 289 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<int64_t> getApplyVersionLag_impl( Reference<ReadYourWritesTransaction> const& tr, UID const& uid ) {
															#line 289 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<int64_t>(new GetApplyVersionLag_implActor(tr, uid));
															#line 1199 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 302 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

	Future<int64_t> getApplyVersionLag(Reference<ReadYourWritesTransaction> tr) {
		return getApplyVersionLag_impl(tr, uid);
	}

	void initApplyMutations(Reference<ReadYourWritesTransaction> tr,
	                        Key addPrefix,
	                        Key removePrefix,
	                        OnlyApplyMutationLogs onlyApplyMutationLogs) {
		// Set these because they have to match the applyMutations values.
		this->addPrefix().set(tr, addPrefix);
		this->removePrefix().set(tr, removePrefix);

		// Skip applyMutationsKeyVersionCount, applyMutationsKeyVersionMap, applyMutationsEnd, applyMutationsBegin
		// for only-apply-mutation-logs restore. They were initialized in preloadApplyMutationsKeyVersionMap
		clearApplyMutationsKeys(tr, onlyApplyMutationLogs);

		// Initialize add/remove prefix, range version map count and set the map's start key to InvalidVersion
		tr->set(uidPrefixKey(applyMutationsAddPrefixRange.begin, uid), addPrefix);
		tr->set(uidPrefixKey(applyMutationsRemovePrefixRange.begin, uid), removePrefix);

		// Skip init applyMutationsKeyVersionCount and applyMutationsKeyVersionMap for only-apply-mutation-logs restore.
		// They were initialized in preloadApplyMutationsKeyVersionMap
		if (!onlyApplyMutationLogs) {
			int64_t startCount = 0;
			tr->set(uidPrefixKey(applyMutationsKeyVersionCountRange.begin, uid), StringRef((uint8_t*)&startCount, 8));
			Key mapStart = uidPrefixKey(applyMutationsKeyVersionMapRange.begin, uid);
			tr->set(mapStart, BinaryWriter::toValue<Version>(invalidVersion, Unversioned()));
		}
	}

	void clearApplyMutationsKeys(Reference<ReadYourWritesTransaction> tr, bool skipMutationKeyVersionMap = false) {
		tr->setOption(FDBTransactionOptions::COMMIT_ON_FIRST_PROXY);

		// Clear add/remove prefix keys
		tr->clear(uidPrefixKey(applyMutationsAddPrefixRange.begin, uid));
		tr->clear(uidPrefixKey(applyMutationsRemovePrefixRange.begin, uid));

		// Clear range version map and count key
		if (!skipMutationKeyVersionMap) {
			tr->clear(uidPrefixKey(applyMutationsKeyVersionCountRange.begin, uid));
			Key mapStart = uidPrefixKey(applyMutationsKeyVersionMapRange.begin, uid);
			tr->clear(KeyRangeRef(mapStart, strinc(mapStart)));
		}

		// Clear any loaded mutations that have not yet been applied
		Key mutationPrefix = mutationLogPrefix();
		tr->clear(KeyRangeRef(mutationPrefix, strinc(mutationPrefix)));

		if (!skipMutationKeyVersionMap) {
			// Clear end and begin versions (intentionally in this order)
			tr->clear(uidPrefixKey(applyMutationsEndRange.begin, uid));
			tr->clear(uidPrefixKey(applyMutationsBeginRange.begin, uid));
		}
	}

	void setApplyBeginVersion(Reference<ReadYourWritesTransaction> tr, Version ver) {
		tr->set(uidPrefixKey(applyMutationsBeginRange.begin, uid), BinaryWriter::toValue(ver, Unversioned()));
	}

	Future<Version> getApplyBeginVersion(Reference<ReadYourWritesTransaction> tr) {
		return map(tr->get(uidPrefixKey(applyMutationsBeginRange.begin, uid)),
		           [=](Optional<Value> const& value) -> Version {
			           return value.present() ? BinaryReader::fromStringRef<Version>(value.get(), Unversioned()) : 0;
		           });
	}

	void setApplyEndVersion(Reference<ReadYourWritesTransaction> tr, Version ver) {
		tr->set(uidPrefixKey(applyMutationsEndRange.begin, uid), BinaryWriter::toValue(ver, Unversioned()));
	}

	Future<Version> getApplyEndVersion(Reference<ReadYourWritesTransaction> tr) {
		return map(tr->get(uidPrefixKey(applyMutationsEndRange.begin, uid)),
		           [=](Optional<Value> const& value) -> Version {
			           return value.present() ? BinaryReader::fromStringRef<Version>(value.get(), Unversioned()) : 0;
		           });
	}

																#line 1281 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via getCurrentVersion_impl()
															#line 380 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class GetCurrentVersion_implActor>
															#line 380 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class GetCurrentVersion_implActorState {
															#line 1287 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 380 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	GetCurrentVersion_implActorState(RestoreConfig* const& self,Reference<ReadYourWritesTransaction> const& tr) 
															#line 380 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 380 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : self(self),
															#line 380 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tr(tr)
															#line 1296 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("getCurrentVersion_impl", reinterpret_cast<unsigned long>(this));

	}
	~GetCurrentVersion_implActorState() 
	{
		fdb_probe_actor_destroy("getCurrentVersion_impl", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 381 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<ERestoreState> __when_expr_0 = self->stateEnum().getD(tr);
															#line 381 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<GetCurrentVersion_implActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 1313 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<GetCurrentVersion_implActor*>(this)->actor_wait_state = 1;
															#line 381 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< GetCurrentVersion_implActor, 0, ERestoreState >*>(static_cast<GetCurrentVersion_implActor*>(this)));
															#line 1318 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~GetCurrentVersion_implActorState();
		static_cast<GetCurrentVersion_implActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 382 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		version = -1;
															#line 383 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (status == ERestoreState::RUNNING)
															#line 1343 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 384 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_1 = store(version, self->getApplyBeginVersion(tr));
															#line 384 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<GetCurrentVersion_implActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 1349 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
			static_cast<GetCurrentVersion_implActor*>(this)->actor_wait_state = 2;
															#line 384 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< GetCurrentVersion_implActor, 1, Void >*>(static_cast<GetCurrentVersion_implActor*>(this)));
															#line 1354 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
															#line 385 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (status == ERestoreState::COMPLETED)
															#line 1361 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 386 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				StrictFuture<Void> __when_expr_2 = store(version, self->restoreVersion().getD(tr));
															#line 386 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (static_cast<GetCurrentVersion_implActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 1367 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont1when2(__when_expr_2.get(), loopDepth); };
				static_cast<GetCurrentVersion_implActor*>(this)->actor_wait_state = 3;
															#line 386 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< GetCurrentVersion_implActor, 2, Void >*>(static_cast<GetCurrentVersion_implActor*>(this)));
															#line 1372 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				loopDepth = 0;
			}
			else
			{
				loopDepth = a_body1cont4(loopDepth);
			}
		}

		return loopDepth;
	}
	int a_body1when1(ERestoreState const& __status,int loopDepth) 
	{
															#line 381 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		status = __status;
															#line 1387 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1when1(ERestoreState && __status,int loopDepth) 
	{
		status = std::move(__status);
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<GetCurrentVersion_implActor*>(this)->actor_wait_state > 0) static_cast<GetCurrentVersion_implActor*>(this)->actor_wait_state = 0;
		static_cast<GetCurrentVersion_implActor*>(this)->ActorCallback< GetCurrentVersion_implActor, 0, ERestoreState >::remove();

	}
	void a_callback_fire(ActorCallback< GetCurrentVersion_implActor, 0, ERestoreState >*,ERestoreState const& value) 
	{
		fdb_probe_actor_enter("getCurrentVersion_impl", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getCurrentVersion_impl", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< GetCurrentVersion_implActor, 0, ERestoreState >*,ERestoreState && value) 
	{
		fdb_probe_actor_enter("getCurrentVersion_impl", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getCurrentVersion_impl", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< GetCurrentVersion_implActor, 0, ERestoreState >*,Error err) 
	{
		fdb_probe_actor_enter("getCurrentVersion_impl", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getCurrentVersion_impl", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont2(int loopDepth) 
	{
															#line 388 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<GetCurrentVersion_implActor*>(this)->SAV<Version>::futures) { (void)(version); this->~GetCurrentVersion_implActorState(); static_cast<GetCurrentVersion_implActor*>(this)->destroy(); return 0; }
															#line 1454 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<GetCurrentVersion_implActor*>(this)->SAV< Version >::value()) Version(std::move(version)); // state_var_RVO
		this->~GetCurrentVersion_implActorState();
		static_cast<GetCurrentVersion_implActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont3(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2(loopDepth);

		return loopDepth;
	}
	int a_body1cont3(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2(loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<GetCurrentVersion_implActor*>(this)->actor_wait_state > 0) static_cast<GetCurrentVersion_implActor*>(this)->actor_wait_state = 0;
		static_cast<GetCurrentVersion_implActor*>(this)->ActorCallback< GetCurrentVersion_implActor, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< GetCurrentVersion_implActor, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("getCurrentVersion_impl", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getCurrentVersion_impl", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< GetCurrentVersion_implActor, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("getCurrentVersion_impl", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getCurrentVersion_impl", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< GetCurrentVersion_implActor, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("getCurrentVersion_impl", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getCurrentVersion_impl", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont4(int loopDepth) 
	{
		loopDepth = a_body1cont2(loopDepth);

		return loopDepth;
	}
	int a_body1cont5(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont4(loopDepth);

		return loopDepth;
	}
	int a_body1cont5(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont4(loopDepth);

		return loopDepth;
	}
	int a_body1cont1when2(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont5(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1when2(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont5(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<GetCurrentVersion_implActor*>(this)->actor_wait_state > 0) static_cast<GetCurrentVersion_implActor*>(this)->actor_wait_state = 0;
		static_cast<GetCurrentVersion_implActor*>(this)->ActorCallback< GetCurrentVersion_implActor, 2, Void >::remove();

	}
	void a_callback_fire(ActorCallback< GetCurrentVersion_implActor, 2, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("getCurrentVersion_impl", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont1when2(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getCurrentVersion_impl", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< GetCurrentVersion_implActor, 2, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("getCurrentVersion_impl", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont1when2(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getCurrentVersion_impl", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< GetCurrentVersion_implActor, 2, Void >*,Error err) 
	{
		fdb_probe_actor_enter("getCurrentVersion_impl", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getCurrentVersion_impl", reinterpret_cast<unsigned long>(this), 2);

	}
															#line 380 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	RestoreConfig* self;
															#line 380 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 381 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	ERestoreState status;
															#line 382 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version version;
															#line 1626 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via getCurrentVersion_impl()
															#line 380 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class GetCurrentVersion_implActor final : public Actor<Version>, public ActorCallback< GetCurrentVersion_implActor, 0, ERestoreState >, public ActorCallback< GetCurrentVersion_implActor, 1, Void >, public ActorCallback< GetCurrentVersion_implActor, 2, Void >, public FastAllocated<GetCurrentVersion_implActor>, public GetCurrentVersion_implActorState<GetCurrentVersion_implActor> {
															#line 1631 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<GetCurrentVersion_implActor>::operator new;
	using FastAllocated<GetCurrentVersion_implActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Version>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< GetCurrentVersion_implActor, 0, ERestoreState >;
friend struct ActorCallback< GetCurrentVersion_implActor, 1, Void >;
friend struct ActorCallback< GetCurrentVersion_implActor, 2, Void >;
															#line 380 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	GetCurrentVersion_implActor(RestoreConfig* const& self,Reference<ReadYourWritesTransaction> const& tr) 
															#line 1644 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Version>(),
		   GetCurrentVersion_implActorState<GetCurrentVersion_implActor>(self, tr)
	{
		fdb_probe_actor_enter("getCurrentVersion_impl", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("getCurrentVersion_impl");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("getCurrentVersion_impl", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< GetCurrentVersion_implActor, 0, ERestoreState >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< GetCurrentVersion_implActor, 1, Void >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< GetCurrentVersion_implActor, 2, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 380 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Version> getCurrentVersion_impl( RestoreConfig* const& self, Reference<ReadYourWritesTransaction> const& tr ) {
															#line 380 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Version>(new GetCurrentVersion_implActor(self, tr));
															#line 1673 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 390 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

	Future<Version> getCurrentVersion(Reference<ReadYourWritesTransaction> tr) {
		return getCurrentVersion_impl(this, tr);
	}

																#line 1682 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
[[nodiscard]] static Future<std::string> getProgress_impl( RestoreConfig const& restore, Reference<ReadYourWritesTransaction> const& tr );
template <class> friend class RestoreConfig_GetProgress_implActorState;

#line 396 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<std::string> getProgress(Reference<ReadYourWritesTransaction> tr) { return getProgress_impl(*this, tr); }

																#line 1689 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
[[nodiscard]] static Future<std::string> getFullStatus_impl( RestoreConfig const& restore, Reference<ReadYourWritesTransaction> const& tr );
template <class> friend class RestoreConfig_GetFullStatus_implActorState;

#line 399 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<std::string> getFullStatus(Reference<ReadYourWritesTransaction> tr) { return getFullStatus_impl(*this, tr); }
};

typedef RestoreConfig::RestoreFile RestoreFile;

															#line 1699 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via getProgress_impl()
															#line 404 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class RestoreConfig_GetProgress_implActor>
															#line 404 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class RestoreConfig_GetProgress_implActorState {
															#line 1705 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 404 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	RestoreConfig_GetProgress_implActorState(RestoreConfig const& restore,Reference<ReadYourWritesTransaction> const& tr) 
															#line 404 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 404 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : restore(restore),
															#line 404 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tr(tr)
															#line 1714 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("getProgress_impl", reinterpret_cast<unsigned long>(this));

	}
	~RestoreConfig_GetProgress_implActorState() 
	{
		fdb_probe_actor_destroy("getProgress_impl", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 406 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 407 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 409 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			fileCount = restore.fileCount().getD(tr);
															#line 410 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			fileBlockCount = restore.fileBlockCount().getD(tr);
															#line 411 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			fileBlocksDispatched = restore.filesBlocksDispatched().getD(tr);
															#line 412 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			fileBlocksFinished = restore.fileBlocksFinished().getD(tr);
															#line 413 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			bytesWritten = restore.bytesWritten().getD(tr);
															#line 414 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			status = restore.stateText(tr);
															#line 415 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			currentVersion = restore.getCurrentVersion(tr);
															#line 416 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			lag = restore.getApplyVersionLag(tr);
															#line 417 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			firstConsistentVersion = restore.firstConsistentVersion().getD(tr);
															#line 418 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tag = restore.tag().getD(tr);
															#line 419 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			lastError = restore.lastError().getD(tr);
															#line 422 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			uid = restore.getUid();
															#line 423 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_0 = success(fileCount) && success(fileBlockCount) && success(fileBlocksDispatched) && success(fileBlocksFinished) && success(bytesWritten) && success(status) && success(currentVersion) && success(lag) && success(firstConsistentVersion) && success(tag) && success(lastError);
															#line 423 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<RestoreConfig_GetProgress_implActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 1759 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<RestoreConfig_GetProgress_implActor*>(this)->actor_wait_state = 1;
															#line 423 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< RestoreConfig_GetProgress_implActor, 0, Void >*>(static_cast<RestoreConfig_GetProgress_implActor*>(this)));
															#line 1764 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~RestoreConfig_GetProgress_implActorState();
		static_cast<RestoreConfig_GetProgress_implActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Void const& _,int loopDepth) 
	{
															#line 427 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		std::string errstr = "None";
															#line 428 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (lastError.get().second != 0)
															#line 1789 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 429 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			errstr = format("'%s' %" PRId64 "s ago.\n", lastError.get().first.c_str(), (tr->getReadVersion().get() - lastError.get().second) / CLIENT_KNOBS->CORE_VERSIONSPERSECOND);
															#line 1793 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 433 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FileRestoreProgress") .detail("RestoreUID", uid) .detail("Tag", tag.get()) .detail("State", status.get().toString()) .detail("FileCount", fileCount.get()) .detail("FileBlocksFinished", fileBlocksFinished.get()) .detail("FileBlocksTotal", fileBlockCount.get()) .detail("FileBlocksInProgress", fileBlocksDispatched.get() - fileBlocksFinished.get()) .detail("BytesWritten", bytesWritten.get()) .detail("CurrentVersion", currentVersion.get()) .detail("FirstConsistentVersion", firstConsistentVersion.get()) .detail("ApplyLag", lag.get()) .detail("TaskInstance", THIS_ADDR);
															#line 447 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<RestoreConfig_GetProgress_implActor*>(this)->SAV<std::string>::futures) { (void)(format("Tag: %s  UID: %s  State: %s  Blocks: %lld/%lld  BlocksInProgress: %lld  Files: %lld  BytesWritten: " "%lld  CurrentVersion: %lld FirstConsistentVersion: %lld  ApplyVersionLag: %lld  LastError: %s", tag.get().c_str(), uid.toString().c_str(), status.get().toString().c_str(), fileBlocksFinished.get(), fileBlockCount.get(), fileBlocksDispatched.get() - fileBlocksFinished.get(), fileCount.get(), bytesWritten.get(), currentVersion.get(), firstConsistentVersion.get(), lag.get(), errstr.c_str())); this->~RestoreConfig_GetProgress_implActorState(); static_cast<RestoreConfig_GetProgress_implActor*>(this)->destroy(); return 0; }
															#line 1799 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<RestoreConfig_GetProgress_implActor*>(this)->SAV< std::string >::value()) std::string(format("Tag: %s  UID: %s  State: %s  Blocks: %lld/%lld  BlocksInProgress: %lld  Files: %lld  BytesWritten: " "%lld  CurrentVersion: %lld FirstConsistentVersion: %lld  ApplyVersionLag: %lld  LastError: %s", tag.get().c_str(), uid.toString().c_str(), status.get().toString().c_str(), fileBlocksFinished.get(), fileBlockCount.get(), fileBlocksDispatched.get() - fileBlocksFinished.get(), fileCount.get(), bytesWritten.get(), currentVersion.get(), firstConsistentVersion.get(), lag.get(), errstr.c_str()));
		this->~RestoreConfig_GetProgress_implActorState();
		static_cast<RestoreConfig_GetProgress_implActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont1(Void && _,int loopDepth) 
	{
															#line 427 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		std::string errstr = "None";
															#line 428 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (lastError.get().second != 0)
															#line 1813 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 429 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			errstr = format("'%s' %" PRId64 "s ago.\n", lastError.get().first.c_str(), (tr->getReadVersion().get() - lastError.get().second) / CLIENT_KNOBS->CORE_VERSIONSPERSECOND);
															#line 1817 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 433 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FileRestoreProgress") .detail("RestoreUID", uid) .detail("Tag", tag.get()) .detail("State", status.get().toString()) .detail("FileCount", fileCount.get()) .detail("FileBlocksFinished", fileBlocksFinished.get()) .detail("FileBlocksTotal", fileBlockCount.get()) .detail("FileBlocksInProgress", fileBlocksDispatched.get() - fileBlocksFinished.get()) .detail("BytesWritten", bytesWritten.get()) .detail("CurrentVersion", currentVersion.get()) .detail("FirstConsistentVersion", firstConsistentVersion.get()) .detail("ApplyLag", lag.get()) .detail("TaskInstance", THIS_ADDR);
															#line 447 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<RestoreConfig_GetProgress_implActor*>(this)->SAV<std::string>::futures) { (void)(format("Tag: %s  UID: %s  State: %s  Blocks: %lld/%lld  BlocksInProgress: %lld  Files: %lld  BytesWritten: " "%lld  CurrentVersion: %lld FirstConsistentVersion: %lld  ApplyVersionLag: %lld  LastError: %s", tag.get().c_str(), uid.toString().c_str(), status.get().toString().c_str(), fileBlocksFinished.get(), fileBlockCount.get(), fileBlocksDispatched.get() - fileBlocksFinished.get(), fileCount.get(), bytesWritten.get(), currentVersion.get(), firstConsistentVersion.get(), lag.get(), errstr.c_str())); this->~RestoreConfig_GetProgress_implActorState(); static_cast<RestoreConfig_GetProgress_implActor*>(this)->destroy(); return 0; }
															#line 1823 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<RestoreConfig_GetProgress_implActor*>(this)->SAV< std::string >::value()) std::string(format("Tag: %s  UID: %s  State: %s  Blocks: %lld/%lld  BlocksInProgress: %lld  Files: %lld  BytesWritten: " "%lld  CurrentVersion: %lld FirstConsistentVersion: %lld  ApplyVersionLag: %lld  LastError: %s", tag.get().c_str(), uid.toString().c_str(), status.get().toString().c_str(), fileBlocksFinished.get(), fileBlockCount.get(), fileBlocksDispatched.get() - fileBlocksFinished.get(), fileCount.get(), bytesWritten.get(), currentVersion.get(), firstConsistentVersion.get(), lag.get(), errstr.c_str()));
		this->~RestoreConfig_GetProgress_implActorState();
		static_cast<RestoreConfig_GetProgress_implActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<RestoreConfig_GetProgress_implActor*>(this)->actor_wait_state > 0) static_cast<RestoreConfig_GetProgress_implActor*>(this)->actor_wait_state = 0;
		static_cast<RestoreConfig_GetProgress_implActor*>(this)->ActorCallback< RestoreConfig_GetProgress_implActor, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< RestoreConfig_GetProgress_implActor, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("getProgress_impl", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getProgress_impl", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< RestoreConfig_GetProgress_implActor, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("getProgress_impl", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getProgress_impl", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< RestoreConfig_GetProgress_implActor, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("getProgress_impl", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getProgress_impl", reinterpret_cast<unsigned long>(this), 0);

	}
															#line 404 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	RestoreConfig restore;
															#line 404 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 409 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<int64_t> fileCount;
															#line 410 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<int64_t> fileBlockCount;
															#line 411 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<int64_t> fileBlocksDispatched;
															#line 412 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<int64_t> fileBlocksFinished;
															#line 413 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<int64_t> bytesWritten;
															#line 414 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<StringRef> status;
															#line 415 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<Version> currentVersion;
															#line 416 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<Version> lag;
															#line 417 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<Version> firstConsistentVersion;
															#line 418 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<std::string> tag;
															#line 419 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<std::pair<std::string, Version>> lastError;
															#line 422 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	UID uid;
															#line 1922 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via getProgress_impl()
															#line 404 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class RestoreConfig_GetProgress_implActor final : public Actor<std::string>, public ActorCallback< RestoreConfig_GetProgress_implActor, 0, Void >, public FastAllocated<RestoreConfig_GetProgress_implActor>, public RestoreConfig_GetProgress_implActorState<RestoreConfig_GetProgress_implActor> {
															#line 1927 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<RestoreConfig_GetProgress_implActor>::operator new;
	using FastAllocated<RestoreConfig_GetProgress_implActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<std::string>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< RestoreConfig_GetProgress_implActor, 0, Void >;
															#line 404 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	RestoreConfig_GetProgress_implActor(RestoreConfig const& restore,Reference<ReadYourWritesTransaction> const& tr) 
															#line 1938 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<std::string>(),
		   RestoreConfig_GetProgress_implActorState<RestoreConfig_GetProgress_implActor>(restore, tr)
	{
		fdb_probe_actor_enter("getProgress_impl", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("getProgress_impl");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("getProgress_impl", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< RestoreConfig_GetProgress_implActor, 0, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 404 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] Future<std::string> RestoreConfig::getProgress_impl( RestoreConfig const& restore, Reference<ReadYourWritesTransaction> const& tr ) {
															#line 404 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<std::string>(new RestoreConfig_GetProgress_implActor(restore, tr));
															#line 1965 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 462 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

															#line 1970 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via getFullStatus_impl()
															#line 463 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class RestoreConfig_GetFullStatus_implActor>
															#line 463 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class RestoreConfig_GetFullStatus_implActorState {
															#line 1976 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 463 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	RestoreConfig_GetFullStatus_implActorState(RestoreConfig const& restore,Reference<ReadYourWritesTransaction> const& tr) 
															#line 463 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 463 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : restore(restore),
															#line 463 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tr(tr)
															#line 1985 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("getFullStatus_impl", reinterpret_cast<unsigned long>(this));

	}
	~RestoreConfig_GetFullStatus_implActorState() 
	{
		fdb_probe_actor_destroy("getFullStatus_impl", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 465 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 466 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 468 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			ranges = restore.getRestoreRangesOrDefault(tr);
															#line 469 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			addPrefix = restore.addPrefix().getD(tr);
															#line 470 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			removePrefix = restore.removePrefix().getD(tr);
															#line 471 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			url = restore.sourceContainerURL().getD(tr);
															#line 472 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			restoreVersion = restore.restoreVersion().getD(tr);
															#line 473 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			progress = restore.getProgress(tr);
															#line 476 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_0 = success(ranges) && success(addPrefix) && success(removePrefix) && success(url) && success(restoreVersion) && success(progress);
															#line 476 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<RestoreConfig_GetFullStatus_implActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 2018 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<RestoreConfig_GetFullStatus_implActor*>(this)->actor_wait_state = 1;
															#line 476 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< RestoreConfig_GetFullStatus_implActor, 0, Void >*>(static_cast<RestoreConfig_GetFullStatus_implActor*>(this)));
															#line 2023 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~RestoreConfig_GetFullStatus_implActorState();
		static_cast<RestoreConfig_GetFullStatus_implActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Void const& _,int loopDepth) 
	{
															#line 479 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		std::string returnStr;
															#line 480 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		returnStr = format("%s  URL: %s", progress.get().c_str(), url.get().toString().c_str());
															#line 481 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		for( auto& range : ranges.get() ) {
															#line 482 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			returnStr += format("  Range: '%s'-'%s'", printable(range.begin).c_str(), printable(range.end).c_str());
															#line 2052 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 484 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		returnStr += format("  AddPrefix: '%s'  RemovePrefix: '%s'  Version: %lld", printable(addPrefix.get()).c_str(), printable(removePrefix.get()).c_str(), restoreVersion.get());
															#line 488 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<RestoreConfig_GetFullStatus_implActor*>(this)->SAV<std::string>::futures) { (void)(returnStr); this->~RestoreConfig_GetFullStatus_implActorState(); static_cast<RestoreConfig_GetFullStatus_implActor*>(this)->destroy(); return 0; }
															#line 2058 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<RestoreConfig_GetFullStatus_implActor*>(this)->SAV< std::string >::value()) std::string(returnStr);
		this->~RestoreConfig_GetFullStatus_implActorState();
		static_cast<RestoreConfig_GetFullStatus_implActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont1(Void && _,int loopDepth) 
	{
															#line 479 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		std::string returnStr;
															#line 480 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		returnStr = format("%s  URL: %s", progress.get().c_str(), url.get().toString().c_str());
															#line 481 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		for( auto& range : ranges.get() ) {
															#line 482 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			returnStr += format("  Range: '%s'-'%s'", printable(range.begin).c_str(), printable(range.end).c_str());
															#line 2076 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 484 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		returnStr += format("  AddPrefix: '%s'  RemovePrefix: '%s'  Version: %lld", printable(addPrefix.get()).c_str(), printable(removePrefix.get()).c_str(), restoreVersion.get());
															#line 488 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<RestoreConfig_GetFullStatus_implActor*>(this)->SAV<std::string>::futures) { (void)(returnStr); this->~RestoreConfig_GetFullStatus_implActorState(); static_cast<RestoreConfig_GetFullStatus_implActor*>(this)->destroy(); return 0; }
															#line 2082 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<RestoreConfig_GetFullStatus_implActor*>(this)->SAV< std::string >::value()) std::string(returnStr);
		this->~RestoreConfig_GetFullStatus_implActorState();
		static_cast<RestoreConfig_GetFullStatus_implActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<RestoreConfig_GetFullStatus_implActor*>(this)->actor_wait_state > 0) static_cast<RestoreConfig_GetFullStatus_implActor*>(this)->actor_wait_state = 0;
		static_cast<RestoreConfig_GetFullStatus_implActor*>(this)->ActorCallback< RestoreConfig_GetFullStatus_implActor, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< RestoreConfig_GetFullStatus_implActor, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("getFullStatus_impl", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getFullStatus_impl", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< RestoreConfig_GetFullStatus_implActor, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("getFullStatus_impl", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getFullStatus_impl", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< RestoreConfig_GetFullStatus_implActor, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("getFullStatus_impl", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getFullStatus_impl", reinterpret_cast<unsigned long>(this), 0);

	}
															#line 463 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	RestoreConfig restore;
															#line 463 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 468 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<std::vector<KeyRange>> ranges;
															#line 469 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<Key> addPrefix;
															#line 470 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<Key> removePrefix;
															#line 471 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<Key> url;
															#line 472 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<Version> restoreVersion;
															#line 473 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<std::string> progress;
															#line 2169 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via getFullStatus_impl()
															#line 463 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class RestoreConfig_GetFullStatus_implActor final : public Actor<std::string>, public ActorCallback< RestoreConfig_GetFullStatus_implActor, 0, Void >, public FastAllocated<RestoreConfig_GetFullStatus_implActor>, public RestoreConfig_GetFullStatus_implActorState<RestoreConfig_GetFullStatus_implActor> {
															#line 2174 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<RestoreConfig_GetFullStatus_implActor>::operator new;
	using FastAllocated<RestoreConfig_GetFullStatus_implActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<std::string>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< RestoreConfig_GetFullStatus_implActor, 0, Void >;
															#line 463 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	RestoreConfig_GetFullStatus_implActor(RestoreConfig const& restore,Reference<ReadYourWritesTransaction> const& tr) 
															#line 2185 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<std::string>(),
		   RestoreConfig_GetFullStatus_implActorState<RestoreConfig_GetFullStatus_implActor>(restore, tr)
	{
		fdb_probe_actor_enter("getFullStatus_impl", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("getFullStatus_impl");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("getFullStatus_impl", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< RestoreConfig_GetFullStatus_implActor, 0, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 463 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] Future<std::string> RestoreConfig::getFullStatus_impl( RestoreConfig const& restore, Reference<ReadYourWritesTransaction> const& tr ) {
															#line 463 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<std::string>(new RestoreConfig_GetFullStatus_implActor(restore, tr));
															#line 2212 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 490 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

FileBackupAgent::FileBackupAgent()
  : subspace(Subspace(fileBackupPrefixRange.begin))
    // The other subspaces have logUID -> value
    ,
    config(subspace.get(BackupAgentBase::keyConfig)), lastRestorable(subspace.get(FileBackupAgent::keyLastRestorable)),
    taskBucket(new TaskBucket(subspace.get(BackupAgentBase::keyTasks),
                              AccessSystemKeys::True,
                              PriorityBatch::False,
                              LockAware::True)),
    futureBucket(new FutureBucket(subspace.get(BackupAgentBase::keyFutures), AccessSystemKeys::True, LockAware::True)) {
}

namespace fileBackup {

// Return a block of contiguous padding bytes, growing if needed.
Value makePadding(int size) {
	static Value pad;
	if (pad.size() < size) {
		pad = makeString(size);
		memset(mutateString(pad), '\xff', pad.size());
	}

	return pad.substr(0, size);
}

struct IRangeFileWriter {
public:
	virtual Future<Void> padEnd(bool final) = 0;

	virtual Future<Void> writeKV(Key k, Value v) = 0;

	virtual Future<Void> writeKey(Key k) = 0;

	virtual Future<Void> finish() = 0;

	virtual ~IRangeFileWriter() {}
};

struct SnapshotFileBackupEncryptionKeys {
	Reference<BlobCipherKey> textCipherKey;
	Optional<Reference<BlobCipherKey>> headerCipherKey;
	StringRef ivRef;
};

// File Format handlers.
// Both Range and Log formats are designed to be readable starting at any BACKUP_RANGEFILE_BLOCK_SIZE boundary
// so they can be read in parallel.
//
// Writer instances must be kept alive while any member actors are in progress.
//
// EncryptedRangeFileWriter must be used as follows:
//   1 - writeKey(key) the queried key range begin
//   2 - writeKV(k, v) each kv pair to restore
//   3 - writeKey(key) the queried key range end
//   4 - finish()
//
// EncryptedRangeFileWriter will insert the required padding, header, and extra
// end/begin keys around the 1MB boundaries as needed.
//
// Example:
//   The range a-z is queries and returns c-j which covers 3 blocks across 2 tenants.
//   The client code writes keys in this sequence:
//             t1a t1c t1d t1e t1f t1g t2h t2i t2j t2z
//
//   H = header   P = padding   a...z = keys  v = value | = block boundary
//
//   Encoded file:  H t1a t1cv t1dv t1ev P | H t1e t1ev t1fv t1gv t2 P | H t2 t2hv t2iv t2jv t2z
//   Decoded in blocks yields:
//           Block 1: range [t1a, t1e) with kv pairs t1cv, t1dv
//           Block 2: range [t1e, t2) with kv pairs t1ev, t1fv, t1gv
//           Block 3: range [t2, t2z) with kv pairs t2hv, t2iv, t2jv
//
//   NOTE: All blocks except for the final block will have one last
//   value which will not be used.  This isn't actually a waste since
//   if the next KV pair wouldn't fit within the block after the value
//   then the space after the final key to the next 1MB boundary would
//   just be padding anyway.
//
//   NOTE: For the EncryptedRangeFileWriter blocks will be split either on the BACKUP_RANGEFILE_BLOCK_SIZE boundary or
//   when a new tenant id is encountered. If a block is split for crossing tenant boundaries then the last key will be
//   truncated to just the tenant prefix and the value will be empty (to avoid having sensitive data of one tenant be
//   encrypted with a key for a different tenant)
struct EncryptedRangeFileWriter : public IRangeFileWriter {
	struct Options {
		constexpr static FileIdentifier file_identifier = 3152016;

		bool configurableEncryptionEnabled = false;

		Options() {}

		template <class Ar>
		void serialize(Ar& ar) {
			serializer(ar, configurableEncryptionEnabled);
		}
	};

	EncryptedRangeFileWriter(Database cx,
	                         Arena* arena,
	                         EncryptionAtRestMode encryptMode,
	                         Optional<Reference<TenantEntryCache<Void>>> tenantCache,
	                         Reference<IBackupFile> file = Reference<IBackupFile>(),
	                         int blockSize = 0,
	                         Options options = Options())
	  : cx(cx), arena(arena), file(file), encryptMode(encryptMode), tenantCache(tenantCache), blockSize(blockSize),
	    blockEnd(0), fileVersion(BACKUP_AGENT_ENCRYPTED_SNAPSHOT_FILE_VERSION), options(options) {
		buffer = makeString(blockSize);
		wPtr = mutateString(buffer);
	}

																#line 2326 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via decryptImpl()
															#line 600 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class DecryptImplActor>
															#line 600 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class DecryptImplActorState {
															#line 2332 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 600 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	DecryptImplActorState(Database const& cx,std::variant<BlobCipherEncryptHeaderRef, BlobCipherEncryptHeader> const& headerVariant,const uint8_t* const& dataP,int64_t const& dataLen,Arena* const& arena) 
															#line 600 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 600 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : cx(cx),
															#line 600 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   headerVariant(headerVariant),
															#line 600 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   dataP(dataP),
															#line 600 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   dataLen(dataLen),
															#line 600 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   arena(arena)
															#line 2347 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("decryptImpl", reinterpret_cast<unsigned long>(this));

	}
	~DecryptImplActorState() 
	{
		fdb_probe_actor_destroy("decryptImpl", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 606 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			Reference<AsyncVar<ClientDBInfo> const> dbInfo = cx->clientInfo;
															#line 607 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (std::holds_alternative<BlobCipherEncryptHeaderRef>(headerVariant))
															#line 2364 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 608 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				headerRef = std::get<BlobCipherEncryptHeaderRef>(headerVariant);
															#line 609 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				StrictFuture<TextAndHeaderCipherKeys> __when_expr_0 = GetEncryptCipherKeys<ClientDBInfo>::getEncryptCipherKeys( dbInfo, headerRef, BlobCipherMetrics::RESTORE);
															#line 609 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (static_cast<DecryptImplActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 2372 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
				static_cast<DecryptImplActor*>(this)->actor_wait_state = 1;
															#line 609 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< DecryptImplActor, 0, TextAndHeaderCipherKeys >*>(static_cast<DecryptImplActor*>(this)));
															#line 2377 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				loopDepth = 0;
			}
			else
			{
															#line 620 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				header = std::get<BlobCipherEncryptHeader>(headerVariant);
															#line 621 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				StrictFuture<TextAndHeaderCipherKeys> __when_expr_1 = GetEncryptCipherKeys<ClientDBInfo>::getEncryptCipherKeys(dbInfo, header, BlobCipherMetrics::RESTORE);
															#line 621 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (static_cast<DecryptImplActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 2388 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1when2(__when_expr_1.get(), loopDepth); };
				static_cast<DecryptImplActor*>(this)->actor_wait_state = 2;
															#line 621 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< DecryptImplActor, 1, TextAndHeaderCipherKeys >*>(static_cast<DecryptImplActor*>(this)));
															#line 2393 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				loopDepth = 0;
			}
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~DecryptImplActorState();
		static_cast<DecryptImplActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont2(TextAndHeaderCipherKeys const& cipherKeys,int loopDepth) 
	{
															#line 611 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		EncryptHeaderCipherDetails cipherDetails = headerRef.getCipherDetails();
															#line 612 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		cipherDetails.textCipherDetails.validateCipherDetailsWithCipherKey(cipherKeys.cipherTextKey);
															#line 613 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (cipherDetails.headerCipherDetails.present())
															#line 2421 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 614 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			cipherDetails.headerCipherDetails.get().validateCipherDetailsWithCipherKey(cipherKeys.cipherHeaderKey);
															#line 2425 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 616 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		DecryptBlobCipherAes256Ctr decryptor( cipherKeys.cipherTextKey, cipherKeys.cipherHeaderKey, headerRef.getIV(), BlobCipherMetrics::RESTORE);
															#line 618 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<DecryptImplActor*>(this)->SAV<StringRef>::futures) { (void)(decryptor.decrypt(dataP, dataLen, headerRef, *arena)); this->~DecryptImplActorState(); static_cast<DecryptImplActor*>(this)->destroy(); return 0; }
															#line 2431 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<DecryptImplActor*>(this)->SAV< StringRef >::value()) StringRef(decryptor.decrypt(dataP, dataLen, headerRef, *arena));
		this->~DecryptImplActorState();
		static_cast<DecryptImplActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont2(TextAndHeaderCipherKeys && cipherKeys,int loopDepth) 
	{
															#line 611 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		EncryptHeaderCipherDetails cipherDetails = headerRef.getCipherDetails();
															#line 612 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		cipherDetails.textCipherDetails.validateCipherDetailsWithCipherKey(cipherKeys.cipherTextKey);
															#line 613 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (cipherDetails.headerCipherDetails.present())
															#line 2447 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 614 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			cipherDetails.headerCipherDetails.get().validateCipherDetailsWithCipherKey(cipherKeys.cipherHeaderKey);
															#line 2451 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 616 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		DecryptBlobCipherAes256Ctr decryptor( cipherKeys.cipherTextKey, cipherKeys.cipherHeaderKey, headerRef.getIV(), BlobCipherMetrics::RESTORE);
															#line 618 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<DecryptImplActor*>(this)->SAV<StringRef>::futures) { (void)(decryptor.decrypt(dataP, dataLen, headerRef, *arena)); this->~DecryptImplActorState(); static_cast<DecryptImplActor*>(this)->destroy(); return 0; }
															#line 2457 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<DecryptImplActor*>(this)->SAV< StringRef >::value()) StringRef(decryptor.decrypt(dataP, dataLen, headerRef, *arena));
		this->~DecryptImplActorState();
		static_cast<DecryptImplActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1when1(TextAndHeaderCipherKeys const& cipherKeys,int loopDepth) 
	{
		loopDepth = a_body1cont2(cipherKeys, loopDepth);

		return loopDepth;
	}
	int a_body1when1(TextAndHeaderCipherKeys && cipherKeys,int loopDepth) 
	{
		loopDepth = a_body1cont2(std::move(cipherKeys), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<DecryptImplActor*>(this)->actor_wait_state > 0) static_cast<DecryptImplActor*>(this)->actor_wait_state = 0;
		static_cast<DecryptImplActor*>(this)->ActorCallback< DecryptImplActor, 0, TextAndHeaderCipherKeys >::remove();

	}
	void a_callback_fire(ActorCallback< DecryptImplActor, 0, TextAndHeaderCipherKeys >*,TextAndHeaderCipherKeys const& value) 
	{
		fdb_probe_actor_enter("decryptImpl", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decryptImpl", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< DecryptImplActor, 0, TextAndHeaderCipherKeys >*,TextAndHeaderCipherKeys && value) 
	{
		fdb_probe_actor_enter("decryptImpl", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decryptImpl", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< DecryptImplActor, 0, TextAndHeaderCipherKeys >*,Error err) 
	{
		fdb_probe_actor_enter("decryptImpl", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decryptImpl", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont5(TextAndHeaderCipherKeys const& cipherKeys,int loopDepth) 
	{
															#line 623 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		header.cipherTextDetails.validateCipherDetailsWithCipherKey(cipherKeys.cipherTextKey);
															#line 624 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (header.cipherHeaderDetails.isValid())
															#line 2534 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 625 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			header.cipherHeaderDetails.validateCipherDetailsWithCipherKey(cipherKeys.cipherHeaderKey);
															#line 2538 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 627 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		DecryptBlobCipherAes256Ctr decryptor( cipherKeys.cipherTextKey, cipherKeys.cipherHeaderKey, header.iv, BlobCipherMetrics::RESTORE);
															#line 629 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<DecryptImplActor*>(this)->SAV<StringRef>::futures) { (void)(decryptor.decrypt(dataP, dataLen, header, *arena)->toStringRef()); this->~DecryptImplActorState(); static_cast<DecryptImplActor*>(this)->destroy(); return 0; }
															#line 2544 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<DecryptImplActor*>(this)->SAV< StringRef >::value()) StringRef(decryptor.decrypt(dataP, dataLen, header, *arena)->toStringRef());
		this->~DecryptImplActorState();
		static_cast<DecryptImplActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont5(TextAndHeaderCipherKeys && cipherKeys,int loopDepth) 
	{
															#line 623 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		header.cipherTextDetails.validateCipherDetailsWithCipherKey(cipherKeys.cipherTextKey);
															#line 624 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (header.cipherHeaderDetails.isValid())
															#line 2558 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 625 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			header.cipherHeaderDetails.validateCipherDetailsWithCipherKey(cipherKeys.cipherHeaderKey);
															#line 2562 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 627 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		DecryptBlobCipherAes256Ctr decryptor( cipherKeys.cipherTextKey, cipherKeys.cipherHeaderKey, header.iv, BlobCipherMetrics::RESTORE);
															#line 629 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<DecryptImplActor*>(this)->SAV<StringRef>::futures) { (void)(decryptor.decrypt(dataP, dataLen, header, *arena)->toStringRef()); this->~DecryptImplActorState(); static_cast<DecryptImplActor*>(this)->destroy(); return 0; }
															#line 2568 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<DecryptImplActor*>(this)->SAV< StringRef >::value()) StringRef(decryptor.decrypt(dataP, dataLen, header, *arena)->toStringRef());
		this->~DecryptImplActorState();
		static_cast<DecryptImplActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1when2(TextAndHeaderCipherKeys const& cipherKeys,int loopDepth) 
	{
		loopDepth = a_body1cont5(cipherKeys, loopDepth);

		return loopDepth;
	}
	int a_body1when2(TextAndHeaderCipherKeys && cipherKeys,int loopDepth) 
	{
		loopDepth = a_body1cont5(std::move(cipherKeys), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<DecryptImplActor*>(this)->actor_wait_state > 0) static_cast<DecryptImplActor*>(this)->actor_wait_state = 0;
		static_cast<DecryptImplActor*>(this)->ActorCallback< DecryptImplActor, 1, TextAndHeaderCipherKeys >::remove();

	}
	void a_callback_fire(ActorCallback< DecryptImplActor, 1, TextAndHeaderCipherKeys >*,TextAndHeaderCipherKeys const& value) 
	{
		fdb_probe_actor_enter("decryptImpl", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1when2(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decryptImpl", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< DecryptImplActor, 1, TextAndHeaderCipherKeys >*,TextAndHeaderCipherKeys && value) 
	{
		fdb_probe_actor_enter("decryptImpl", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1when2(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decryptImpl", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< DecryptImplActor, 1, TextAndHeaderCipherKeys >*,Error err) 
	{
		fdb_probe_actor_enter("decryptImpl", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decryptImpl", reinterpret_cast<unsigned long>(this), 1);

	}
															#line 600 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Database cx;
															#line 600 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::variant<BlobCipherEncryptHeaderRef, BlobCipherEncryptHeader> headerVariant;
															#line 600 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	const uint8_t* dataP;
															#line 600 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int64_t dataLen;
															#line 600 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Arena* arena;
															#line 608 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	BlobCipherEncryptHeaderRef headerRef;
															#line 620 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	BlobCipherEncryptHeader header;
															#line 2653 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via decryptImpl()
															#line 600 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class DecryptImplActor final : public Actor<StringRef>, public ActorCallback< DecryptImplActor, 0, TextAndHeaderCipherKeys >, public ActorCallback< DecryptImplActor, 1, TextAndHeaderCipherKeys >, public FastAllocated<DecryptImplActor>, public DecryptImplActorState<DecryptImplActor> {
															#line 2658 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<DecryptImplActor>::operator new;
	using FastAllocated<DecryptImplActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<StringRef>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< DecryptImplActor, 0, TextAndHeaderCipherKeys >;
friend struct ActorCallback< DecryptImplActor, 1, TextAndHeaderCipherKeys >;
															#line 600 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	DecryptImplActor(Database const& cx,std::variant<BlobCipherEncryptHeaderRef, BlobCipherEncryptHeader> const& headerVariant,const uint8_t* const& dataP,int64_t const& dataLen,Arena* const& arena) 
															#line 2670 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<StringRef>(),
		   DecryptImplActorState<DecryptImplActor>(cx, headerVariant, dataP, dataLen, arena)
	{
		fdb_probe_actor_enter("decryptImpl", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("decryptImpl");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("decryptImpl", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< DecryptImplActor, 0, TextAndHeaderCipherKeys >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< DecryptImplActor, 1, TextAndHeaderCipherKeys >*)0, actor_cancelled()); break;
		}

	}
};
															#line 600 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<StringRef> decryptImpl( Database const& cx, std::variant<BlobCipherEncryptHeaderRef, BlobCipherEncryptHeader> const& headerVariant, const uint8_t* const& dataP, int64_t const& dataLen, Arena* const& arena ) {
															#line 600 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<StringRef>(new DecryptImplActor(cx, headerVariant, dataP, dataLen, arena));
															#line 2698 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 632 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

	static Future<StringRef> decrypt(Database cx,
	                                 std::variant<BlobCipherEncryptHeaderRef, BlobCipherEncryptHeader> header,
	                                 const uint8_t* dataP,
	                                 int64_t dataLen,
	                                 Arena* arena) {
		return decryptImpl(cx, header, dataP, dataLen, arena);
	}

																#line 2711 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via refreshKey()
															#line 641 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class RefreshKeyActor>
															#line 641 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class RefreshKeyActorState {
															#line 2717 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 641 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	RefreshKeyActorState(EncryptedRangeFileWriter* const& self,EncryptCipherDomainId const& domainId) 
															#line 641 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 641 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : self(self),
															#line 641 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   domainId(domainId)
															#line 2726 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("refreshKey", reinterpret_cast<unsigned long>(this));

	}
	~RefreshKeyActorState() 
	{
		fdb_probe_actor_destroy("refreshKey", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 643 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			Reference<AsyncVar<ClientDBInfo> const> dbInfo = self->cx->clientInfo;
															#line 644 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<TextAndHeaderCipherKeys> __when_expr_0 = GetEncryptCipherKeys<ClientDBInfo>::getLatestEncryptCipherKeysForDomain( dbInfo, domainId, BlobCipherMetrics::BACKUP);
															#line 644 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<RefreshKeyActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 2745 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<RefreshKeyActor*>(this)->actor_wait_state = 1;
															#line 644 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< RefreshKeyActor, 0, TextAndHeaderCipherKeys >*>(static_cast<RefreshKeyActor*>(this)));
															#line 2750 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~RefreshKeyActorState();
		static_cast<RefreshKeyActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(TextAndHeaderCipherKeys const& cipherKeys,int loopDepth) 
	{
															#line 647 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<RefreshKeyActor*>(this)->SAV<Reference<BlobCipherKey>>::futures) { (void)(cipherKeys.cipherTextKey); this->~RefreshKeyActorState(); static_cast<RefreshKeyActor*>(this)->destroy(); return 0; }
															#line 2773 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<RefreshKeyActor*>(this)->SAV< Reference<BlobCipherKey> >::value()) Reference<BlobCipherKey>(cipherKeys.cipherTextKey);
		this->~RefreshKeyActorState();
		static_cast<RefreshKeyActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont1(TextAndHeaderCipherKeys && cipherKeys,int loopDepth) 
	{
															#line 647 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<RefreshKeyActor*>(this)->SAV<Reference<BlobCipherKey>>::futures) { (void)(cipherKeys.cipherTextKey); this->~RefreshKeyActorState(); static_cast<RefreshKeyActor*>(this)->destroy(); return 0; }
															#line 2785 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<RefreshKeyActor*>(this)->SAV< Reference<BlobCipherKey> >::value()) Reference<BlobCipherKey>(cipherKeys.cipherTextKey);
		this->~RefreshKeyActorState();
		static_cast<RefreshKeyActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1when1(TextAndHeaderCipherKeys const& cipherKeys,int loopDepth) 
	{
		loopDepth = a_body1cont1(cipherKeys, loopDepth);

		return loopDepth;
	}
	int a_body1when1(TextAndHeaderCipherKeys && cipherKeys,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(cipherKeys), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<RefreshKeyActor*>(this)->actor_wait_state > 0) static_cast<RefreshKeyActor*>(this)->actor_wait_state = 0;
		static_cast<RefreshKeyActor*>(this)->ActorCallback< RefreshKeyActor, 0, TextAndHeaderCipherKeys >::remove();

	}
	void a_callback_fire(ActorCallback< RefreshKeyActor, 0, TextAndHeaderCipherKeys >*,TextAndHeaderCipherKeys const& value) 
	{
		fdb_probe_actor_enter("refreshKey", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("refreshKey", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< RefreshKeyActor, 0, TextAndHeaderCipherKeys >*,TextAndHeaderCipherKeys && value) 
	{
		fdb_probe_actor_enter("refreshKey", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("refreshKey", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< RefreshKeyActor, 0, TextAndHeaderCipherKeys >*,Error err) 
	{
		fdb_probe_actor_enter("refreshKey", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("refreshKey", reinterpret_cast<unsigned long>(this), 0);

	}
															#line 641 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	EncryptedRangeFileWriter* self;
															#line 641 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	EncryptCipherDomainId domainId;
															#line 2860 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via refreshKey()
															#line 641 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class RefreshKeyActor final : public Actor<Reference<BlobCipherKey>>, public ActorCallback< RefreshKeyActor, 0, TextAndHeaderCipherKeys >, public FastAllocated<RefreshKeyActor>, public RefreshKeyActorState<RefreshKeyActor> {
															#line 2865 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<RefreshKeyActor>::operator new;
	using FastAllocated<RefreshKeyActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Reference<BlobCipherKey>>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< RefreshKeyActor, 0, TextAndHeaderCipherKeys >;
															#line 641 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	RefreshKeyActor(EncryptedRangeFileWriter* const& self,EncryptCipherDomainId const& domainId) 
															#line 2876 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Reference<BlobCipherKey>>(),
		   RefreshKeyActorState<RefreshKeyActor>(self, domainId)
	{
		fdb_probe_actor_enter("refreshKey", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("refreshKey");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("refreshKey", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< RefreshKeyActor, 0, TextAndHeaderCipherKeys >*)0, actor_cancelled()); break;
		}

	}
};
															#line 641 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Reference<BlobCipherKey>> refreshKey( EncryptedRangeFileWriter* const& self, EncryptCipherDomainId const& domainId ) {
															#line 641 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Reference<BlobCipherKey>>(new RefreshKeyActor(self, domainId));
															#line 2903 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 649 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

																#line 2908 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via encrypt()
															#line 650 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class EncryptActor>
															#line 650 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class EncryptActorState {
															#line 2914 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 650 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	EncryptActorState(EncryptedRangeFileWriter* const& self) 
															#line 650 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 650 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : self(self)
															#line 2921 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("encrypt", reinterpret_cast<unsigned long>(this));

	}
	~EncryptActorState() 
	{
		fdb_probe_actor_destroy("encrypt", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 652 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			ASSERT(self->cipherKeys.headerCipherKey.present() && self->cipherKeys.headerCipherKey.get().isValid() && self->cipherKeys.textCipherKey.isValid());
															#line 655 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (self->cipherKeys.headerCipherKey.get()->isExpired() || self->cipherKeys.headerCipherKey.get()->needsRefresh())
															#line 2938 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 657 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				StrictFuture<Reference<BlobCipherKey>> __when_expr_0 = refreshKey(self, self->cipherKeys.headerCipherKey.get()->getDomainId());
															#line 657 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (static_cast<EncryptActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 2944 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
				static_cast<EncryptActor*>(this)->actor_wait_state = 1;
															#line 657 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< EncryptActor, 0, Reference<BlobCipherKey> >*>(static_cast<EncryptActor*>(this)));
															#line 2949 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				loopDepth = 0;
			}
			else
			{
				loopDepth = a_body1cont1(loopDepth);
			}
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~EncryptActorState();
		static_cast<EncryptActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 661 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (self->cipherKeys.textCipherKey->isExpired() || self->cipherKeys.textCipherKey->needsRefresh())
															#line 2977 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 662 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Reference<BlobCipherKey>> __when_expr_1 = refreshKey(self, self->cipherKeys.textCipherKey->getDomainId());
															#line 662 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<EncryptActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 2983 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
			static_cast<EncryptActor*>(this)->actor_wait_state = 2;
															#line 662 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< EncryptActor, 1, Reference<BlobCipherKey> >*>(static_cast<EncryptActor*>(this)));
															#line 2988 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont4(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont2(Reference<BlobCipherKey> const& cipherKey,int loopDepth) 
	{
															#line 659 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		self->cipherKeys.headerCipherKey = cipherKey;
															#line 3002 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont2(Reference<BlobCipherKey> && cipherKey,int loopDepth) 
	{
															#line 659 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		self->cipherKeys.headerCipherKey = cipherKey;
															#line 3011 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1when1(Reference<BlobCipherKey> const& cipherKey,int loopDepth) 
	{
		loopDepth = a_body1cont2(cipherKey, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Reference<BlobCipherKey> && cipherKey,int loopDepth) 
	{
		loopDepth = a_body1cont2(std::move(cipherKey), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<EncryptActor*>(this)->actor_wait_state > 0) static_cast<EncryptActor*>(this)->actor_wait_state = 0;
		static_cast<EncryptActor*>(this)->ActorCallback< EncryptActor, 0, Reference<BlobCipherKey> >::remove();

	}
	void a_callback_fire(ActorCallback< EncryptActor, 0, Reference<BlobCipherKey> >*,Reference<BlobCipherKey> const& value) 
	{
		fdb_probe_actor_enter("encrypt", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("encrypt", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< EncryptActor, 0, Reference<BlobCipherKey> >*,Reference<BlobCipherKey> && value) 
	{
		fdb_probe_actor_enter("encrypt", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("encrypt", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< EncryptActor, 0, Reference<BlobCipherKey> >*,Error err) 
	{
		fdb_probe_actor_enter("encrypt", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("encrypt", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont4(int loopDepth) 
	{
															#line 665 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		EncryptBlobCipherAes265Ctr encryptor( self->cipherKeys.textCipherKey, self->cipherKeys.headerCipherKey, self->cipherKeys.ivRef.begin(), AES_256_IV_LENGTH, getEncryptAuthTokenMode(EncryptAuthTokenMode::ENCRYPT_HEADER_AUTH_TOKEN_MODE_SINGLE), BlobCipherMetrics::BACKUP);
															#line 672 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		int64_t payloadSize = self->wPtr - self->dataPayloadStart;
															#line 673 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StringRef encryptedData;
															#line 674 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (self->options.configurableEncryptionEnabled)
															#line 3089 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 675 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			BlobCipherEncryptHeaderRef headerRef;
															#line 676 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			encryptedData = encryptor.encrypt(self->dataPayloadStart, payloadSize, &headerRef, *self->arena);
															#line 677 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			Standalone<StringRef> serialized = BlobCipherEncryptHeaderRef::toStringRef(headerRef);
															#line 678 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			self->arena->dependsOn(serialized.arena());
															#line 679 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			ASSERT(serialized.size() == self->encryptHeader.size());
															#line 680 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			std::memcpy(mutateString(self->encryptHeader), serialized.begin(), self->encryptHeader.size());
															#line 3103 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		else
		{
															#line 682 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			BlobCipherEncryptHeader header;
															#line 683 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			encryptedData = encryptor.encrypt(self->dataPayloadStart, payloadSize, &header, *self->arena)->toStringRef();
															#line 685 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StringRef encryptHeaderStringRef = BlobCipherEncryptHeader::toStringRef(header, *self->arena);
															#line 686 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			ASSERT(encryptHeaderStringRef.size() == self->encryptHeader.size());
															#line 687 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			std::memcpy(mutateString(self->encryptHeader), encryptHeaderStringRef.begin(), self->encryptHeader.size());
															#line 3117 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 691 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		std::memcpy(self->dataPayloadStart, encryptedData.begin(), payloadSize);
															#line 692 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<EncryptActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~EncryptActorState(); static_cast<EncryptActor*>(this)->destroy(); return 0; }
															#line 3123 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<EncryptActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~EncryptActorState();
		static_cast<EncryptActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont5(Reference<BlobCipherKey> const& cipherKey,int loopDepth) 
	{
															#line 663 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		self->cipherKeys.textCipherKey = cipherKey;
															#line 3135 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont4(loopDepth);

		return loopDepth;
	}
	int a_body1cont5(Reference<BlobCipherKey> && cipherKey,int loopDepth) 
	{
															#line 663 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		self->cipherKeys.textCipherKey = cipherKey;
															#line 3144 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont4(loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Reference<BlobCipherKey> const& cipherKey,int loopDepth) 
	{
		loopDepth = a_body1cont5(cipherKey, loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Reference<BlobCipherKey> && cipherKey,int loopDepth) 
	{
		loopDepth = a_body1cont5(std::move(cipherKey), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<EncryptActor*>(this)->actor_wait_state > 0) static_cast<EncryptActor*>(this)->actor_wait_state = 0;
		static_cast<EncryptActor*>(this)->ActorCallback< EncryptActor, 1, Reference<BlobCipherKey> >::remove();

	}
	void a_callback_fire(ActorCallback< EncryptActor, 1, Reference<BlobCipherKey> >*,Reference<BlobCipherKey> const& value) 
	{
		fdb_probe_actor_enter("encrypt", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("encrypt", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< EncryptActor, 1, Reference<BlobCipherKey> >*,Reference<BlobCipherKey> && value) 
	{
		fdb_probe_actor_enter("encrypt", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("encrypt", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< EncryptActor, 1, Reference<BlobCipherKey> >*,Error err) 
	{
		fdb_probe_actor_enter("encrypt", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("encrypt", reinterpret_cast<unsigned long>(this), 1);

	}
															#line 650 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	EncryptedRangeFileWriter* self;
															#line 3214 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via encrypt()
															#line 650 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class EncryptActor final : public Actor<Void>, public ActorCallback< EncryptActor, 0, Reference<BlobCipherKey> >, public ActorCallback< EncryptActor, 1, Reference<BlobCipherKey> >, public FastAllocated<EncryptActor>, public EncryptActorState<EncryptActor> {
															#line 3219 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<EncryptActor>::operator new;
	using FastAllocated<EncryptActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< EncryptActor, 0, Reference<BlobCipherKey> >;
friend struct ActorCallback< EncryptActor, 1, Reference<BlobCipherKey> >;
															#line 650 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	EncryptActor(EncryptedRangeFileWriter* const& self) 
															#line 3231 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   EncryptActorState<EncryptActor>(self)
	{
		fdb_probe_actor_enter("encrypt", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("encrypt");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("encrypt", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< EncryptActor, 0, Reference<BlobCipherKey> >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< EncryptActor, 1, Reference<BlobCipherKey> >*)0, actor_cancelled()); break;
		}

	}
};
															#line 650 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> encrypt( EncryptedRangeFileWriter* const& self ) {
															#line 650 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new EncryptActor(self));
															#line 3259 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 694 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

																#line 3264 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via updateEncryptionKeysCtx()
															#line 695 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class UpdateEncryptionKeysCtxActor>
															#line 695 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class UpdateEncryptionKeysCtxActorState {
															#line 3270 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 695 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	UpdateEncryptionKeysCtxActorState(EncryptedRangeFileWriter* const& self,KeyRef const& key,SnapshotBackupUseTenantCache const& checkTenantCache) 
															#line 695 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 695 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : self(self),
															#line 695 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   key(key),
															#line 695 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   checkTenantCache(checkTenantCache)
															#line 3281 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("updateEncryptionKeysCtx", reinterpret_cast<unsigned long>(this));

	}
	~UpdateEncryptionKeysCtxActorState() 
	{
		fdb_probe_actor_destroy("updateEncryptionKeysCtx", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 698 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<EncryptCipherDomainId> __when_expr_0 = getEncryptionDomainDetails(key, self->encryptMode, self->tenantCache, checkTenantCache);
															#line 698 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<UpdateEncryptionKeysCtxActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 3298 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<UpdateEncryptionKeysCtxActor*>(this)->actor_wait_state = 1;
															#line 698 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< UpdateEncryptionKeysCtxActor, 0, EncryptCipherDomainId >*>(static_cast<UpdateEncryptionKeysCtxActor*>(this)));
															#line 3303 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~UpdateEncryptionKeysCtxActorState();
		static_cast<UpdateEncryptionKeysCtxActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 700 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		dbInfo = self->cx->clientInfo;
															#line 703 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<TextAndHeaderCipherKeys> __when_expr_1 = GetEncryptCipherKeys<ClientDBInfo>::getLatestEncryptCipherKeysForDomain( dbInfo, curDomainId, BlobCipherMetrics::BACKUP);
															#line 703 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<UpdateEncryptionKeysCtxActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 3330 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<UpdateEncryptionKeysCtxActor*>(this)->actor_wait_state = 2;
															#line 703 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< UpdateEncryptionKeysCtxActor, 1, TextAndHeaderCipherKeys >*>(static_cast<UpdateEncryptionKeysCtxActor*>(this)));
															#line 3335 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1when1(EncryptCipherDomainId const& __curDomainId,int loopDepth) 
	{
															#line 698 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		curDomainId = __curDomainId;
															#line 3344 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1when1(EncryptCipherDomainId && __curDomainId,int loopDepth) 
	{
		curDomainId = std::move(__curDomainId);
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<UpdateEncryptionKeysCtxActor*>(this)->actor_wait_state > 0) static_cast<UpdateEncryptionKeysCtxActor*>(this)->actor_wait_state = 0;
		static_cast<UpdateEncryptionKeysCtxActor*>(this)->ActorCallback< UpdateEncryptionKeysCtxActor, 0, EncryptCipherDomainId >::remove();

	}
	void a_callback_fire(ActorCallback< UpdateEncryptionKeysCtxActor, 0, EncryptCipherDomainId >*,EncryptCipherDomainId const& value) 
	{
		fdb_probe_actor_enter("updateEncryptionKeysCtx", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("updateEncryptionKeysCtx", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< UpdateEncryptionKeysCtxActor, 0, EncryptCipherDomainId >*,EncryptCipherDomainId && value) 
	{
		fdb_probe_actor_enter("updateEncryptionKeysCtx", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("updateEncryptionKeysCtx", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< UpdateEncryptionKeysCtxActor, 0, EncryptCipherDomainId >*,Error err) 
	{
		fdb_probe_actor_enter("updateEncryptionKeysCtx", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("updateEncryptionKeysCtx", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont2(TextAndHeaderCipherKeys const& textAndHeaderCipherKeys,int loopDepth) 
	{
															#line 706 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		self->cipherKeys.textCipherKey = textAndHeaderCipherKeys.cipherTextKey;
															#line 707 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		self->cipherKeys.headerCipherKey = textAndHeaderCipherKeys.cipherHeaderKey;
															#line 710 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		self->cipherKeys.ivRef = makeString(AES_256_IV_LENGTH, *self->arena);
															#line 711 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		deterministicRandom()->randomBytes(mutateString(self->cipherKeys.ivRef), AES_256_IV_LENGTH);
															#line 712 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<UpdateEncryptionKeysCtxActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~UpdateEncryptionKeysCtxActorState(); static_cast<UpdateEncryptionKeysCtxActor*>(this)->destroy(); return 0; }
															#line 3419 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<UpdateEncryptionKeysCtxActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~UpdateEncryptionKeysCtxActorState();
		static_cast<UpdateEncryptionKeysCtxActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont2(TextAndHeaderCipherKeys && textAndHeaderCipherKeys,int loopDepth) 
	{
															#line 706 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		self->cipherKeys.textCipherKey = textAndHeaderCipherKeys.cipherTextKey;
															#line 707 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		self->cipherKeys.headerCipherKey = textAndHeaderCipherKeys.cipherHeaderKey;
															#line 710 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		self->cipherKeys.ivRef = makeString(AES_256_IV_LENGTH, *self->arena);
															#line 711 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		deterministicRandom()->randomBytes(mutateString(self->cipherKeys.ivRef), AES_256_IV_LENGTH);
															#line 712 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<UpdateEncryptionKeysCtxActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~UpdateEncryptionKeysCtxActorState(); static_cast<UpdateEncryptionKeysCtxActor*>(this)->destroy(); return 0; }
															#line 3439 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<UpdateEncryptionKeysCtxActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~UpdateEncryptionKeysCtxActorState();
		static_cast<UpdateEncryptionKeysCtxActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont1when1(TextAndHeaderCipherKeys const& textAndHeaderCipherKeys,int loopDepth) 
	{
		loopDepth = a_body1cont2(textAndHeaderCipherKeys, loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(TextAndHeaderCipherKeys && textAndHeaderCipherKeys,int loopDepth) 
	{
		loopDepth = a_body1cont2(std::move(textAndHeaderCipherKeys), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<UpdateEncryptionKeysCtxActor*>(this)->actor_wait_state > 0) static_cast<UpdateEncryptionKeysCtxActor*>(this)->actor_wait_state = 0;
		static_cast<UpdateEncryptionKeysCtxActor*>(this)->ActorCallback< UpdateEncryptionKeysCtxActor, 1, TextAndHeaderCipherKeys >::remove();

	}
	void a_callback_fire(ActorCallback< UpdateEncryptionKeysCtxActor, 1, TextAndHeaderCipherKeys >*,TextAndHeaderCipherKeys const& value) 
	{
		fdb_probe_actor_enter("updateEncryptionKeysCtx", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("updateEncryptionKeysCtx", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< UpdateEncryptionKeysCtxActor, 1, TextAndHeaderCipherKeys >*,TextAndHeaderCipherKeys && value) 
	{
		fdb_probe_actor_enter("updateEncryptionKeysCtx", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("updateEncryptionKeysCtx", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< UpdateEncryptionKeysCtxActor, 1, TextAndHeaderCipherKeys >*,Error err) 
	{
		fdb_probe_actor_enter("updateEncryptionKeysCtx", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("updateEncryptionKeysCtx", reinterpret_cast<unsigned long>(this), 1);

	}
															#line 695 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	EncryptedRangeFileWriter* self;
															#line 695 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	KeyRef key;
															#line 695 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	SnapshotBackupUseTenantCache checkTenantCache;
															#line 698 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	EncryptCipherDomainId curDomainId;
															#line 700 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<AsyncVar<ClientDBInfo> const> dbInfo;
															#line 3520 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via updateEncryptionKeysCtx()
															#line 695 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class UpdateEncryptionKeysCtxActor final : public Actor<Void>, public ActorCallback< UpdateEncryptionKeysCtxActor, 0, EncryptCipherDomainId >, public ActorCallback< UpdateEncryptionKeysCtxActor, 1, TextAndHeaderCipherKeys >, public FastAllocated<UpdateEncryptionKeysCtxActor>, public UpdateEncryptionKeysCtxActorState<UpdateEncryptionKeysCtxActor> {
															#line 3525 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<UpdateEncryptionKeysCtxActor>::operator new;
	using FastAllocated<UpdateEncryptionKeysCtxActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< UpdateEncryptionKeysCtxActor, 0, EncryptCipherDomainId >;
friend struct ActorCallback< UpdateEncryptionKeysCtxActor, 1, TextAndHeaderCipherKeys >;
															#line 695 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	UpdateEncryptionKeysCtxActor(EncryptedRangeFileWriter* const& self,KeyRef const& key,SnapshotBackupUseTenantCache const& checkTenantCache) 
															#line 3537 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   UpdateEncryptionKeysCtxActorState<UpdateEncryptionKeysCtxActor>(self, key, checkTenantCache)
	{
		fdb_probe_actor_enter("updateEncryptionKeysCtx", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("updateEncryptionKeysCtx");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("updateEncryptionKeysCtx", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< UpdateEncryptionKeysCtxActor, 0, EncryptCipherDomainId >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< UpdateEncryptionKeysCtxActor, 1, TextAndHeaderCipherKeys >*)0, actor_cancelled()); break;
		}

	}
};
															#line 695 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> updateEncryptionKeysCtx( EncryptedRangeFileWriter* const& self, KeyRef const& key, SnapshotBackupUseTenantCache const& checkTenantCache ) {
															#line 695 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new UpdateEncryptionKeysCtxActor(self, key, checkTenantCache));
															#line 3565 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 714 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

	// Returns the number of bytes that have been written to the buffer
	static int64_t currentBufferSize(EncryptedRangeFileWriter* self) { return self->wPtr - self->buffer.begin(); }

	static int64_t expectedFileSize(EncryptedRangeFileWriter* self) {
		// Return what has already been written to file plus the size of the current buffer
		// which indicates how many bytes the file will contain once the buffer is written
		return self->file->size() + currentBufferSize(self);
	}

	static void copyToBuffer(EncryptedRangeFileWriter* self, const void* src, size_t size) {
		if (size > 0) {
			std::memcpy(self->wPtr, src, size);
			self->wPtr += size;
			ASSERT(currentBufferSize(self) <= self->blockSize);
		}
	}

	static void appendStringRefWithLenToBuffer(EncryptedRangeFileWriter* self, StringRef* s) {
		// Append the string length followed by the string to the buffer
		uint32_t lenBuf = bigEndian32((uint32_t)s->size());
		copyToBuffer(self, &lenBuf, sizeof(lenBuf));
		copyToBuffer(self, s->begin(), s->size());
	}

																#line 3594 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via getEncryptionDomainDetails()
															#line 739 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class GetEncryptionDomainDetailsActor>
															#line 739 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class GetEncryptionDomainDetailsActorState {
															#line 3600 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 739 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	GetEncryptionDomainDetailsActorState(KeyRef const& key,EncryptionAtRestMode const& encryptMode,Optional<Reference<TenantEntryCache<Void>>> const& tenantCache,SnapshotBackupUseTenantCache const& checkTenantCache) 
															#line 739 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 739 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : key(key),
															#line 739 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   encryptMode(encryptMode),
															#line 739 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tenantCache(tenantCache),
															#line 739 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   checkTenantCache(checkTenantCache)
															#line 3613 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("getEncryptionDomainDetails", reinterpret_cast<unsigned long>(this));

	}
	~GetEncryptionDomainDetailsActorState() 
	{
		fdb_probe_actor_destroy("getEncryptionDomainDetails", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 744 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (isSystemKey(key))
															#line 3628 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 745 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (!static_cast<GetEncryptionDomainDetailsActor*>(this)->SAV<EncryptCipherDomainId>::futures) { (void)(SYSTEM_KEYSPACE_ENCRYPT_DOMAIN_ID); this->~GetEncryptionDomainDetailsActorState(); static_cast<GetEncryptionDomainDetailsActor*>(this)->destroy(); return 0; }
															#line 3632 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				new (&static_cast<GetEncryptionDomainDetailsActor*>(this)->SAV< EncryptCipherDomainId >::value()) EncryptCipherDomainId(SYSTEM_KEYSPACE_ENCRYPT_DOMAIN_ID);
				this->~GetEncryptionDomainDetailsActorState();
				static_cast<GetEncryptionDomainDetailsActor*>(this)->finishSendAndDelPromiseRef();
				return 0;
			}
															#line 747 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (key.size() < TenantAPI::PREFIX_SIZE || encryptMode.mode == EncryptionAtRestMode::CLUSTER_AWARE)
															#line 3640 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 748 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (!static_cast<GetEncryptionDomainDetailsActor*>(this)->SAV<EncryptCipherDomainId>::futures) { (void)(FDB_DEFAULT_ENCRYPT_DOMAIN_ID); this->~GetEncryptionDomainDetailsActorState(); static_cast<GetEncryptionDomainDetailsActor*>(this)->destroy(); return 0; }
															#line 3644 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				new (&static_cast<GetEncryptionDomainDetailsActor*>(this)->SAV< EncryptCipherDomainId >::value()) EncryptCipherDomainId(FDB_DEFAULT_ENCRYPT_DOMAIN_ID);
				this->~GetEncryptionDomainDetailsActorState();
				static_cast<GetEncryptionDomainDetailsActor*>(this)->finishSendAndDelPromiseRef();
				return 0;
			}
															#line 751 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			KeyRef tenantPrefix = KeyRef(key.begin(), TenantAPI::PREFIX_SIZE);
															#line 752 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tenantId = TenantAPI::prefixToId(tenantPrefix);
															#line 756 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (checkTenantCache && tenantCache.present())
															#line 3656 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 757 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				StrictFuture<Optional<TenantEntryCachePayload<Void>>> __when_expr_0 = tenantCache.get()->getById(tenantId);
															#line 757 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (static_cast<GetEncryptionDomainDetailsActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 3662 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
				static_cast<GetEncryptionDomainDetailsActor*>(this)->actor_wait_state = 1;
															#line 757 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< GetEncryptionDomainDetailsActor, 0, Optional<TenantEntryCachePayload<Void>> >*>(static_cast<GetEncryptionDomainDetailsActor*>(this)));
															#line 3667 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				loopDepth = 0;
			}
			else
			{
				loopDepth = a_body1cont1(loopDepth);
			}
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~GetEncryptionDomainDetailsActorState();
		static_cast<GetEncryptionDomainDetailsActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 762 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<GetEncryptionDomainDetailsActor*>(this)->SAV<EncryptCipherDomainId>::futures) { (void)(tenantId); this->~GetEncryptionDomainDetailsActorState(); static_cast<GetEncryptionDomainDetailsActor*>(this)->destroy(); return 0; }
															#line 3695 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<GetEncryptionDomainDetailsActor*>(this)->SAV< EncryptCipherDomainId >::value()) EncryptCipherDomainId(std::move(tenantId)); // state_var_RVO
		this->~GetEncryptionDomainDetailsActorState();
		static_cast<GetEncryptionDomainDetailsActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont4(Optional<TenantEntryCachePayload<Void>> const& payload,int loopDepth) 
	{
															#line 758 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!payload.present())
															#line 3707 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 759 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<GetEncryptionDomainDetailsActor*>(this)->SAV<EncryptCipherDomainId>::futures) { (void)(FDB_DEFAULT_ENCRYPT_DOMAIN_ID); this->~GetEncryptionDomainDetailsActorState(); static_cast<GetEncryptionDomainDetailsActor*>(this)->destroy(); return 0; }
															#line 3711 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<GetEncryptionDomainDetailsActor*>(this)->SAV< EncryptCipherDomainId >::value()) EncryptCipherDomainId(FDB_DEFAULT_ENCRYPT_DOMAIN_ID);
			this->~GetEncryptionDomainDetailsActorState();
			static_cast<GetEncryptionDomainDetailsActor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont4(Optional<TenantEntryCachePayload<Void>> && payload,int loopDepth) 
	{
															#line 758 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!payload.present())
															#line 3725 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 759 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<GetEncryptionDomainDetailsActor*>(this)->SAV<EncryptCipherDomainId>::futures) { (void)(FDB_DEFAULT_ENCRYPT_DOMAIN_ID); this->~GetEncryptionDomainDetailsActorState(); static_cast<GetEncryptionDomainDetailsActor*>(this)->destroy(); return 0; }
															#line 3729 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<GetEncryptionDomainDetailsActor*>(this)->SAV< EncryptCipherDomainId >::value()) EncryptCipherDomainId(FDB_DEFAULT_ENCRYPT_DOMAIN_ID);
			this->~GetEncryptionDomainDetailsActorState();
			static_cast<GetEncryptionDomainDetailsActor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1when1(Optional<TenantEntryCachePayload<Void>> const& payload,int loopDepth) 
	{
		loopDepth = a_body1cont4(payload, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Optional<TenantEntryCachePayload<Void>> && payload,int loopDepth) 
	{
		loopDepth = a_body1cont4(std::move(payload), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<GetEncryptionDomainDetailsActor*>(this)->actor_wait_state > 0) static_cast<GetEncryptionDomainDetailsActor*>(this)->actor_wait_state = 0;
		static_cast<GetEncryptionDomainDetailsActor*>(this)->ActorCallback< GetEncryptionDomainDetailsActor, 0, Optional<TenantEntryCachePayload<Void>> >::remove();

	}
	void a_callback_fire(ActorCallback< GetEncryptionDomainDetailsActor, 0, Optional<TenantEntryCachePayload<Void>> >*,Optional<TenantEntryCachePayload<Void>> const& value) 
	{
		fdb_probe_actor_enter("getEncryptionDomainDetails", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getEncryptionDomainDetails", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< GetEncryptionDomainDetailsActor, 0, Optional<TenantEntryCachePayload<Void>> >*,Optional<TenantEntryCachePayload<Void>> && value) 
	{
		fdb_probe_actor_enter("getEncryptionDomainDetails", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getEncryptionDomainDetails", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< GetEncryptionDomainDetailsActor, 0, Optional<TenantEntryCachePayload<Void>> >*,Error err) 
	{
		fdb_probe_actor_enter("getEncryptionDomainDetails", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getEncryptionDomainDetails", reinterpret_cast<unsigned long>(this), 0);

	}
															#line 739 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	KeyRef key;
															#line 739 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	EncryptionAtRestMode encryptMode;
															#line 739 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<Reference<TenantEntryCache<Void>>> tenantCache;
															#line 739 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	SnapshotBackupUseTenantCache checkTenantCache;
															#line 752 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int64_t tenantId;
															#line 3812 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via getEncryptionDomainDetails()
															#line 739 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class GetEncryptionDomainDetailsActor final : public Actor<EncryptCipherDomainId>, public ActorCallback< GetEncryptionDomainDetailsActor, 0, Optional<TenantEntryCachePayload<Void>> >, public FastAllocated<GetEncryptionDomainDetailsActor>, public GetEncryptionDomainDetailsActorState<GetEncryptionDomainDetailsActor> {
															#line 3817 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<GetEncryptionDomainDetailsActor>::operator new;
	using FastAllocated<GetEncryptionDomainDetailsActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<EncryptCipherDomainId>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< GetEncryptionDomainDetailsActor, 0, Optional<TenantEntryCachePayload<Void>> >;
															#line 739 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	GetEncryptionDomainDetailsActor(KeyRef const& key,EncryptionAtRestMode const& encryptMode,Optional<Reference<TenantEntryCache<Void>>> const& tenantCache,SnapshotBackupUseTenantCache const& checkTenantCache) 
															#line 3828 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<EncryptCipherDomainId>(),
		   GetEncryptionDomainDetailsActorState<GetEncryptionDomainDetailsActor>(key, encryptMode, tenantCache, checkTenantCache)
	{
		fdb_probe_actor_enter("getEncryptionDomainDetails", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("getEncryptionDomainDetails");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("getEncryptionDomainDetails", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< GetEncryptionDomainDetailsActor, 0, Optional<TenantEntryCachePayload<Void>> >*)0, actor_cancelled()); break;
		}

	}
};
															#line 739 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<EncryptCipherDomainId> getEncryptionDomainDetails( KeyRef const& key, EncryptionAtRestMode const& encryptMode, Optional<Reference<TenantEntryCache<Void>>> const& tenantCache, SnapshotBackupUseTenantCache const& checkTenantCache ) {
															#line 739 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<EncryptCipherDomainId>(new GetEncryptionDomainDetailsActor(key, encryptMode, tenantCache, checkTenantCache));
															#line 3855 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 764 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

	// Handles the first block and internal blocks.  Ends current block if needed.
	// The final flag is used in simulation to pad the file's final block to a whole block size
																#line 3862 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via newBlock()
															#line 767 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class NewBlockActor>
															#line 767 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class NewBlockActorState {
															#line 3868 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 767 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	NewBlockActorState(EncryptedRangeFileWriter* const& self,int const& bytesNeeded,KeyRef const& lastKey,bool const& writeValue,bool const& final = false) 
															#line 767 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 767 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : self(self),
															#line 767 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   bytesNeeded(bytesNeeded),
															#line 767 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   lastKey(lastKey),
															#line 767 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   writeValue(writeValue),
															#line 767 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   final(final)
															#line 3883 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("newBlock", reinterpret_cast<unsigned long>(this));

	}
	~NewBlockActorState() 
	{
		fdb_probe_actor_destroy("newBlock", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 773 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			int bytesLeft = self->blockEnd - expectedFileSize(self);
															#line 774 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			ASSERT(bytesLeft >= 0);
															#line 775 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (bytesLeft > 0)
															#line 3902 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 776 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				paddingFFs = makePadding(bytesLeft);
															#line 777 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				copyToBuffer(self, paddingFFs.begin(), bytesLeft);
															#line 3908 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
															#line 780 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (expectedFileSize(self) > 0)
															#line 3912 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 782 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				ASSERT(currentBufferSize(self) == self->blockSize);
															#line 783 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				StrictFuture<Void> __when_expr_0 = encrypt(self);
															#line 783 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (static_cast<NewBlockActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 3920 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
				static_cast<NewBlockActor*>(this)->actor_wait_state = 1;
															#line 783 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< NewBlockActor, 0, Void >*>(static_cast<NewBlockActor*>(this)));
															#line 3925 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				loopDepth = 0;
			}
			else
			{
				loopDepth = a_body1cont1(loopDepth);
			}
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~NewBlockActorState();
		static_cast<NewBlockActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 790 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (final)
															#line 3953 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 791 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			ASSERT(g_network->isSimulated());
															#line 792 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<NewBlockActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~NewBlockActorState(); static_cast<NewBlockActor*>(this)->destroy(); return 0; }
															#line 3959 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<NewBlockActor*>(this)->SAV< Void >::value()) Void(Void());
			this->~NewBlockActorState();
			static_cast<NewBlockActor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 796 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		self->blockEnd += self->blockSize;
															#line 799 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		copyToBuffer(self, (uint8_t*)&self->fileVersion, sizeof(self->fileVersion));
															#line 802 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		self->options.configurableEncryptionEnabled = CLIENT_KNOBS->ENABLE_CONFIGURABLE_ENCRYPTION;
															#line 803 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Value serialized = ObjectWriter::toValue(self->options, IncludeVersion(ProtocolVersion::withEncryptedSnapshotBackupFile()));
															#line 805 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		appendStringRefWithLenToBuffer(self, &serialized);
															#line 808 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		uint32_t headerSize = 0;
															#line 809 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (self->options.configurableEncryptionEnabled)
															#line 3979 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 810 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			EncryptAuthTokenMode authTokenMode = getEncryptAuthTokenMode(EncryptAuthTokenMode::ENCRYPT_HEADER_AUTH_TOKEN_MODE_SINGLE);
															#line 812 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			EncryptAuthTokenAlgo authTokenAlgo = getAuthTokenAlgoFromMode(authTokenMode);
															#line 813 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			headerSize = BlobCipherEncryptHeaderRef::getHeaderSize( CLIENT_KNOBS->ENCRYPT_HEADER_FLAGS_VERSION, getEncryptCurrentAlgoHeaderVersion(authTokenMode, authTokenAlgo), ENCRYPT_CIPHER_MODE_AES_256_CTR, authTokenMode, authTokenAlgo);
															#line 3987 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		else
		{
															#line 820 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			headerSize = BlobCipherEncryptHeader::headerSize;
															#line 3993 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 822 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		ASSERT(headerSize > 0);
															#line 824 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		copyToBuffer(self, (uint8_t*)&headerSize, sizeof(headerSize));
															#line 826 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		self->encryptHeader = StringRef(self->wPtr, headerSize);
															#line 827 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		self->wPtr += headerSize;
															#line 828 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		self->dataPayloadStart = self->wPtr;
															#line 831 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (self->blockEnd > self->blockSize)
															#line 4007 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 832 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			appendStringRefWithLenToBuffer(self, &lastKey);
															#line 833 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			appendStringRefWithLenToBuffer(self, &self->lastKey);
															#line 834 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (writeValue)
															#line 4015 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 835 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				appendStringRefWithLenToBuffer(self, &self->lastValue);
															#line 4019 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
		}
															#line 840 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (expectedFileSize(self) + bytesNeeded > self->blockEnd)
															#line 4024 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 841 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			return a_body1Catch1(backup_bad_block_size(), loopDepth);
															#line 4028 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 844 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<NewBlockActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~NewBlockActorState(); static_cast<NewBlockActor*>(this)->destroy(); return 0; }
															#line 4032 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<NewBlockActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~NewBlockActorState();
		static_cast<NewBlockActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont3(Void const& _,int loopDepth) 
	{
															#line 784 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = self->file->append(self->buffer.begin(), self->blockSize);
															#line 784 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<NewBlockActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 4046 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont3when1(__when_expr_1.get(), loopDepth); };
		static_cast<NewBlockActor*>(this)->actor_wait_state = 2;
															#line 784 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< NewBlockActor, 1, Void >*>(static_cast<NewBlockActor*>(this)));
															#line 4051 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont3(Void && _,int loopDepth) 
	{
															#line 784 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = self->file->append(self->buffer.begin(), self->blockSize);
															#line 784 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<NewBlockActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 4062 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont3when1(__when_expr_1.get(), loopDepth); };
		static_cast<NewBlockActor*>(this)->actor_wait_state = 2;
															#line 784 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< NewBlockActor, 1, Void >*>(static_cast<NewBlockActor*>(this)));
															#line 4067 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<NewBlockActor*>(this)->actor_wait_state > 0) static_cast<NewBlockActor*>(this)->actor_wait_state = 0;
		static_cast<NewBlockActor*>(this)->ActorCallback< NewBlockActor, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< NewBlockActor, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("newBlock", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("newBlock", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< NewBlockActor, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("newBlock", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("newBlock", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< NewBlockActor, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("newBlock", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("newBlock", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont4(Void const& _,int loopDepth) 
	{
															#line 787 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		self->wPtr = mutateString(self->buffer);
															#line 4139 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont4(Void && _,int loopDepth) 
	{
															#line 787 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		self->wPtr = mutateString(self->buffer);
															#line 4148 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont3when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont4(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont3when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont4(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<NewBlockActor*>(this)->actor_wait_state > 0) static_cast<NewBlockActor*>(this)->actor_wait_state = 0;
		static_cast<NewBlockActor*>(this)->ActorCallback< NewBlockActor, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< NewBlockActor, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("newBlock", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont3when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("newBlock", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< NewBlockActor, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("newBlock", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont3when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("newBlock", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< NewBlockActor, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("newBlock", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("newBlock", reinterpret_cast<unsigned long>(this), 1);

	}
															#line 767 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	EncryptedRangeFileWriter* self;
															#line 767 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int bytesNeeded;
															#line 767 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	KeyRef lastKey;
															#line 767 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	bool writeValue;
															#line 767 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	bool final;
															#line 776 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Value paddingFFs;
															#line 4228 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via newBlock()
															#line 767 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class NewBlockActor final : public Actor<Void>, public ActorCallback< NewBlockActor, 0, Void >, public ActorCallback< NewBlockActor, 1, Void >, public FastAllocated<NewBlockActor>, public NewBlockActorState<NewBlockActor> {
															#line 4233 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<NewBlockActor>::operator new;
	using FastAllocated<NewBlockActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< NewBlockActor, 0, Void >;
friend struct ActorCallback< NewBlockActor, 1, Void >;
															#line 767 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	NewBlockActor(EncryptedRangeFileWriter* const& self,int const& bytesNeeded,KeyRef const& lastKey,bool const& writeValue,bool const& final = false) 
															#line 4245 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   NewBlockActorState<NewBlockActor>(self, bytesNeeded, lastKey, writeValue, final)
	{
		fdb_probe_actor_enter("newBlock", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("newBlock");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("newBlock", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< NewBlockActor, 0, Void >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< NewBlockActor, 1, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 767 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> newBlock( EncryptedRangeFileWriter* const& self, int const& bytesNeeded, KeyRef const& lastKey, bool const& writeValue, bool const& final = false ) {
															#line 767 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new NewBlockActor(self, bytesNeeded, lastKey, writeValue, final));
															#line 4273 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 846 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

	Future<Void> padEnd(bool final) {
		if (expectedFileSize(this) > 0) {
			return newBlock(this, 0, StringRef(), true, final);
		}
		return Void();
	}

	// Ends the current block if necessary based on bytesNeeded.
																#line 4286 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via newBlockIfNeeded()
															#line 855 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class NewBlockIfNeededActor>
															#line 855 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class NewBlockIfNeededActorState {
															#line 4292 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 855 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	NewBlockIfNeededActorState(EncryptedRangeFileWriter* const& self,int const& bytesNeeded) 
															#line 855 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 855 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : self(self),
															#line 855 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   bytesNeeded(bytesNeeded)
															#line 4301 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("newBlockIfNeeded", reinterpret_cast<unsigned long>(this));

	}
	~NewBlockIfNeededActorState() 
	{
		fdb_probe_actor_destroy("newBlockIfNeeded", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 856 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (expectedFileSize(self) + bytesNeeded > self->blockEnd)
															#line 4316 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 857 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				StrictFuture<Void> __when_expr_0 = newBlock(self, bytesNeeded, self->lastKey, true);
															#line 857 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (static_cast<NewBlockIfNeededActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 4322 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
				static_cast<NewBlockIfNeededActor*>(this)->actor_wait_state = 1;
															#line 857 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< NewBlockIfNeededActor, 0, Void >*>(static_cast<NewBlockIfNeededActor*>(this)));
															#line 4327 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				loopDepth = 0;
			}
			else
			{
				loopDepth = a_body1cont1(loopDepth);
			}
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~NewBlockIfNeededActorState();
		static_cast<NewBlockIfNeededActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 859 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<NewBlockIfNeededActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~NewBlockIfNeededActorState(); static_cast<NewBlockIfNeededActor*>(this)->destroy(); return 0; }
															#line 4355 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<NewBlockIfNeededActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~NewBlockIfNeededActorState();
		static_cast<NewBlockIfNeededActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont2(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont2(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<NewBlockIfNeededActor*>(this)->actor_wait_state > 0) static_cast<NewBlockIfNeededActor*>(this)->actor_wait_state = 0;
		static_cast<NewBlockIfNeededActor*>(this)->ActorCallback< NewBlockIfNeededActor, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< NewBlockIfNeededActor, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("newBlockIfNeeded", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("newBlockIfNeeded", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< NewBlockIfNeededActor, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("newBlockIfNeeded", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("newBlockIfNeeded", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< NewBlockIfNeededActor, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("newBlockIfNeeded", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("newBlockIfNeeded", reinterpret_cast<unsigned long>(this), 0);

	}
															#line 855 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	EncryptedRangeFileWriter* self;
															#line 855 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int bytesNeeded;
															#line 4442 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via newBlockIfNeeded()
															#line 855 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class NewBlockIfNeededActor final : public Actor<Void>, public ActorCallback< NewBlockIfNeededActor, 0, Void >, public FastAllocated<NewBlockIfNeededActor>, public NewBlockIfNeededActorState<NewBlockIfNeededActor> {
															#line 4447 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<NewBlockIfNeededActor>::operator new;
	using FastAllocated<NewBlockIfNeededActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< NewBlockIfNeededActor, 0, Void >;
															#line 855 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	NewBlockIfNeededActor(EncryptedRangeFileWriter* const& self,int const& bytesNeeded) 
															#line 4458 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   NewBlockIfNeededActorState<NewBlockIfNeededActor>(self, bytesNeeded)
	{
		fdb_probe_actor_enter("newBlockIfNeeded", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("newBlockIfNeeded");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("newBlockIfNeeded", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< NewBlockIfNeededActor, 0, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 855 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> newBlockIfNeeded( EncryptedRangeFileWriter* const& self, int const& bytesNeeded ) {
															#line 855 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new NewBlockIfNeededActor(self, bytesNeeded));
															#line 4485 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 861 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

																#line 4490 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via handleTenantBondary()
															#line 862 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class HandleTenantBondaryActor>
															#line 862 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class HandleTenantBondaryActorState {
															#line 4496 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 862 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	HandleTenantBondaryActorState(EncryptedRangeFileWriter* const& self,Key const& k,Value const& v,bool const& writeValue,EncryptCipherDomainId const& curKeyDomainId,SnapshotBackupUseTenantCache const& checkTenantCache) 
															#line 862 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 862 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : self(self),
															#line 862 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   k(k),
															#line 862 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   v(v),
															#line 862 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   writeValue(writeValue),
															#line 862 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   curKeyDomainId(curKeyDomainId),
															#line 862 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   checkTenantCache(checkTenantCache),
															#line 868 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   endKey(k)
															#line 4515 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("handleTenantBondary", reinterpret_cast<unsigned long>(this));

	}
	~HandleTenantBondaryActorState() 
	{
		fdb_probe_actor_destroy("handleTenantBondary", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 870 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (curKeyDomainId != SYSTEM_KEYSPACE_ENCRYPT_DOMAIN_ID && curKeyDomainId != FDB_DEFAULT_ENCRYPT_DOMAIN_ID)
															#line 4530 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 871 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				endKey = StringRef(k.begin(), TenantAPI::PREFIX_SIZE);
															#line 4534 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
															#line 874 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			newValue = StringRef();
															#line 875 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			self->lastKey = k;
															#line 876 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			self->lastValue = v;
															#line 877 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			appendStringRefWithLenToBuffer(self, &endKey);
															#line 878 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			appendStringRefWithLenToBuffer(self, &newValue);
															#line 879 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_0 = newBlock(self, 0, endKey, writeValue);
															#line 879 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<HandleTenantBondaryActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 4550 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<HandleTenantBondaryActor*>(this)->actor_wait_state = 1;
															#line 879 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< HandleTenantBondaryActor, 0, Void >*>(static_cast<HandleTenantBondaryActor*>(this)));
															#line 4555 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~HandleTenantBondaryActorState();
		static_cast<HandleTenantBondaryActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Void const& _,int loopDepth) 
	{
															#line 880 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = updateEncryptionKeysCtx(self, self->lastKey, checkTenantCache);
															#line 880 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<HandleTenantBondaryActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 4580 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<HandleTenantBondaryActor*>(this)->actor_wait_state = 2;
															#line 880 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< HandleTenantBondaryActor, 1, Void >*>(static_cast<HandleTenantBondaryActor*>(this)));
															#line 4585 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Void && _,int loopDepth) 
	{
															#line 880 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = updateEncryptionKeysCtx(self, self->lastKey, checkTenantCache);
															#line 880 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<HandleTenantBondaryActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 4596 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<HandleTenantBondaryActor*>(this)->actor_wait_state = 2;
															#line 880 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< HandleTenantBondaryActor, 1, Void >*>(static_cast<HandleTenantBondaryActor*>(this)));
															#line 4601 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<HandleTenantBondaryActor*>(this)->actor_wait_state > 0) static_cast<HandleTenantBondaryActor*>(this)->actor_wait_state = 0;
		static_cast<HandleTenantBondaryActor*>(this)->ActorCallback< HandleTenantBondaryActor, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< HandleTenantBondaryActor, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("handleTenantBondary", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("handleTenantBondary", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< HandleTenantBondaryActor, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("handleTenantBondary", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("handleTenantBondary", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< HandleTenantBondaryActor, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("handleTenantBondary", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("handleTenantBondary", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont3(Void const& _,int loopDepth) 
	{
															#line 881 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<HandleTenantBondaryActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~HandleTenantBondaryActorState(); static_cast<HandleTenantBondaryActor*>(this)->destroy(); return 0; }
															#line 4673 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<HandleTenantBondaryActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~HandleTenantBondaryActorState();
		static_cast<HandleTenantBondaryActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont3(Void && _,int loopDepth) 
	{
															#line 881 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<HandleTenantBondaryActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~HandleTenantBondaryActorState(); static_cast<HandleTenantBondaryActor*>(this)->destroy(); return 0; }
															#line 4685 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<HandleTenantBondaryActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~HandleTenantBondaryActorState();
		static_cast<HandleTenantBondaryActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<HandleTenantBondaryActor*>(this)->actor_wait_state > 0) static_cast<HandleTenantBondaryActor*>(this)->actor_wait_state = 0;
		static_cast<HandleTenantBondaryActor*>(this)->ActorCallback< HandleTenantBondaryActor, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< HandleTenantBondaryActor, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("handleTenantBondary", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("handleTenantBondary", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< HandleTenantBondaryActor, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("handleTenantBondary", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("handleTenantBondary", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< HandleTenantBondaryActor, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("handleTenantBondary", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("handleTenantBondary", reinterpret_cast<unsigned long>(this), 1);

	}
															#line 862 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	EncryptedRangeFileWriter* self;
															#line 862 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key k;
															#line 862 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Value v;
															#line 862 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	bool writeValue;
															#line 862 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	EncryptCipherDomainId curKeyDomainId;
															#line 862 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	SnapshotBackupUseTenantCache checkTenantCache;
															#line 868 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	KeyRef endKey;
															#line 874 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	ValueRef newValue;
															#line 4772 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via handleTenantBondary()
															#line 862 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class HandleTenantBondaryActor final : public Actor<Void>, public ActorCallback< HandleTenantBondaryActor, 0, Void >, public ActorCallback< HandleTenantBondaryActor, 1, Void >, public FastAllocated<HandleTenantBondaryActor>, public HandleTenantBondaryActorState<HandleTenantBondaryActor> {
															#line 4777 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<HandleTenantBondaryActor>::operator new;
	using FastAllocated<HandleTenantBondaryActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< HandleTenantBondaryActor, 0, Void >;
friend struct ActorCallback< HandleTenantBondaryActor, 1, Void >;
															#line 862 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	HandleTenantBondaryActor(EncryptedRangeFileWriter* const& self,Key const& k,Value const& v,bool const& writeValue,EncryptCipherDomainId const& curKeyDomainId,SnapshotBackupUseTenantCache const& checkTenantCache) 
															#line 4789 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   HandleTenantBondaryActorState<HandleTenantBondaryActor>(self, k, v, writeValue, curKeyDomainId, checkTenantCache)
	{
		fdb_probe_actor_enter("handleTenantBondary", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("handleTenantBondary");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("handleTenantBondary", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< HandleTenantBondaryActor, 0, Void >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< HandleTenantBondaryActor, 1, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 862 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> handleTenantBondary( EncryptedRangeFileWriter* const& self, Key const& k, Value const& v, bool const& writeValue, EncryptCipherDomainId const& curKeyDomainId, SnapshotBackupUseTenantCache const& checkTenantCache ) {
															#line 862 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new HandleTenantBondaryActor(self, k, v, writeValue, curKeyDomainId, checkTenantCache));
															#line 4817 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 883 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

																#line 4822 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via finishCurTenantBlockStartNewIfNeeded()
															#line 884 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class FinishCurTenantBlockStartNewIfNeededActor>
															#line 884 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class FinishCurTenantBlockStartNewIfNeededActorState {
															#line 4828 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 884 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	FinishCurTenantBlockStartNewIfNeededActorState(EncryptedRangeFileWriter* const& self,Key const& k,Value const& v,bool const& writeValue,SnapshotBackupUseTenantCache const& checkTenantCache) 
															#line 884 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 884 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : self(self),
															#line 884 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   k(k),
															#line 884 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   v(v),
															#line 884 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   writeValue(writeValue),
															#line 884 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   checkTenantCache(checkTenantCache)
															#line 4843 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("finishCurTenantBlockStartNewIfNeeded", reinterpret_cast<unsigned long>(this));

	}
	~FinishCurTenantBlockStartNewIfNeededActorState() 
	{
		fdb_probe_actor_destroy("finishCurTenantBlockStartNewIfNeeded", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 890 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (self->lastKey.size() == 0 || k.size() == 0)
															#line 4858 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 891 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (!static_cast<FinishCurTenantBlockStartNewIfNeededActor*>(this)->SAV<bool>::futures) { (void)(false); this->~FinishCurTenantBlockStartNewIfNeededActorState(); static_cast<FinishCurTenantBlockStartNewIfNeededActor*>(this)->destroy(); return 0; }
															#line 4862 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				new (&static_cast<FinishCurTenantBlockStartNewIfNeededActor*>(this)->SAV< bool >::value()) bool(false);
				this->~FinishCurTenantBlockStartNewIfNeededActorState();
				static_cast<FinishCurTenantBlockStartNewIfNeededActor*>(this)->finishSendAndDelPromiseRef();
				return 0;
			}
															#line 893 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<EncryptCipherDomainId> __when_expr_0 = getEncryptionDomainDetails(k, self->encryptMode, self->tenantCache, checkTenantCache);
															#line 893 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<FinishCurTenantBlockStartNewIfNeededActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 4872 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<FinishCurTenantBlockStartNewIfNeededActor*>(this)->actor_wait_state = 1;
															#line 893 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< FinishCurTenantBlockStartNewIfNeededActor, 0, EncryptCipherDomainId >*>(static_cast<FinishCurTenantBlockStartNewIfNeededActor*>(this)));
															#line 4877 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~FinishCurTenantBlockStartNewIfNeededActorState();
		static_cast<FinishCurTenantBlockStartNewIfNeededActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 895 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<EncryptCipherDomainId> __when_expr_1 = getEncryptionDomainDetails(self->lastKey, self->encryptMode, self->tenantCache, checkTenantCache);
															#line 895 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<FinishCurTenantBlockStartNewIfNeededActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 4902 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<FinishCurTenantBlockStartNewIfNeededActor*>(this)->actor_wait_state = 2;
															#line 895 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< FinishCurTenantBlockStartNewIfNeededActor, 1, EncryptCipherDomainId >*>(static_cast<FinishCurTenantBlockStartNewIfNeededActor*>(this)));
															#line 4907 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1when1(EncryptCipherDomainId const& __curKeyDomainId,int loopDepth) 
	{
															#line 893 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		curKeyDomainId = __curKeyDomainId;
															#line 4916 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1when1(EncryptCipherDomainId && __curKeyDomainId,int loopDepth) 
	{
		curKeyDomainId = std::move(__curKeyDomainId);
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<FinishCurTenantBlockStartNewIfNeededActor*>(this)->actor_wait_state > 0) static_cast<FinishCurTenantBlockStartNewIfNeededActor*>(this)->actor_wait_state = 0;
		static_cast<FinishCurTenantBlockStartNewIfNeededActor*>(this)->ActorCallback< FinishCurTenantBlockStartNewIfNeededActor, 0, EncryptCipherDomainId >::remove();

	}
	void a_callback_fire(ActorCallback< FinishCurTenantBlockStartNewIfNeededActor, 0, EncryptCipherDomainId >*,EncryptCipherDomainId const& value) 
	{
		fdb_probe_actor_enter("finishCurTenantBlockStartNewIfNeeded", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("finishCurTenantBlockStartNewIfNeeded", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< FinishCurTenantBlockStartNewIfNeededActor, 0, EncryptCipherDomainId >*,EncryptCipherDomainId && value) 
	{
		fdb_probe_actor_enter("finishCurTenantBlockStartNewIfNeeded", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("finishCurTenantBlockStartNewIfNeeded", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< FinishCurTenantBlockStartNewIfNeededActor, 0, EncryptCipherDomainId >*,Error err) 
	{
		fdb_probe_actor_enter("finishCurTenantBlockStartNewIfNeeded", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("finishCurTenantBlockStartNewIfNeeded", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont3(int loopDepth) 
	{
															#line 897 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (curKeyDomainId != prevKeyDomainId)
															#line 4983 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 898 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			CODE_PROBE(true, "crossed tenant boundaries");
															#line 899 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_2 = handleTenantBondary(self, k, v, writeValue, curKeyDomainId, checkTenantCache);
															#line 899 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<FinishCurTenantBlockStartNewIfNeededActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 4991 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont3when1(__when_expr_2.get(), loopDepth); };
			static_cast<FinishCurTenantBlockStartNewIfNeededActor*>(this)->actor_wait_state = 3;
															#line 899 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< FinishCurTenantBlockStartNewIfNeededActor, 2, Void >*>(static_cast<FinishCurTenantBlockStartNewIfNeededActor*>(this)));
															#line 4996 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont4(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont1when1(EncryptCipherDomainId const& __prevKeyDomainId,int loopDepth) 
	{
															#line 895 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		prevKeyDomainId = __prevKeyDomainId;
															#line 5010 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont3(loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(EncryptCipherDomainId && __prevKeyDomainId,int loopDepth) 
	{
		prevKeyDomainId = std::move(__prevKeyDomainId);
		loopDepth = a_body1cont3(loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<FinishCurTenantBlockStartNewIfNeededActor*>(this)->actor_wait_state > 0) static_cast<FinishCurTenantBlockStartNewIfNeededActor*>(this)->actor_wait_state = 0;
		static_cast<FinishCurTenantBlockStartNewIfNeededActor*>(this)->ActorCallback< FinishCurTenantBlockStartNewIfNeededActor, 1, EncryptCipherDomainId >::remove();

	}
	void a_callback_fire(ActorCallback< FinishCurTenantBlockStartNewIfNeededActor, 1, EncryptCipherDomainId >*,EncryptCipherDomainId const& value) 
	{
		fdb_probe_actor_enter("finishCurTenantBlockStartNewIfNeeded", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("finishCurTenantBlockStartNewIfNeeded", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< FinishCurTenantBlockStartNewIfNeededActor, 1, EncryptCipherDomainId >*,EncryptCipherDomainId && value) 
	{
		fdb_probe_actor_enter("finishCurTenantBlockStartNewIfNeeded", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("finishCurTenantBlockStartNewIfNeeded", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< FinishCurTenantBlockStartNewIfNeededActor, 1, EncryptCipherDomainId >*,Error err) 
	{
		fdb_probe_actor_enter("finishCurTenantBlockStartNewIfNeeded", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("finishCurTenantBlockStartNewIfNeeded", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont4(int loopDepth) 
	{
															#line 902 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<FinishCurTenantBlockStartNewIfNeededActor*>(this)->SAV<bool>::futures) { (void)(false); this->~FinishCurTenantBlockStartNewIfNeededActorState(); static_cast<FinishCurTenantBlockStartNewIfNeededActor*>(this)->destroy(); return 0; }
															#line 5077 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<FinishCurTenantBlockStartNewIfNeededActor*>(this)->SAV< bool >::value()) bool(false);
		this->~FinishCurTenantBlockStartNewIfNeededActorState();
		static_cast<FinishCurTenantBlockStartNewIfNeededActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont5(Void const& _,int loopDepth) 
	{
															#line 900 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<FinishCurTenantBlockStartNewIfNeededActor*>(this)->SAV<bool>::futures) { (void)(true); this->~FinishCurTenantBlockStartNewIfNeededActorState(); static_cast<FinishCurTenantBlockStartNewIfNeededActor*>(this)->destroy(); return 0; }
															#line 5089 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<FinishCurTenantBlockStartNewIfNeededActor*>(this)->SAV< bool >::value()) bool(true);
		this->~FinishCurTenantBlockStartNewIfNeededActorState();
		static_cast<FinishCurTenantBlockStartNewIfNeededActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont5(Void && _,int loopDepth) 
	{
															#line 900 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<FinishCurTenantBlockStartNewIfNeededActor*>(this)->SAV<bool>::futures) { (void)(true); this->~FinishCurTenantBlockStartNewIfNeededActorState(); static_cast<FinishCurTenantBlockStartNewIfNeededActor*>(this)->destroy(); return 0; }
															#line 5101 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<FinishCurTenantBlockStartNewIfNeededActor*>(this)->SAV< bool >::value()) bool(true);
		this->~FinishCurTenantBlockStartNewIfNeededActorState();
		static_cast<FinishCurTenantBlockStartNewIfNeededActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont3when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont5(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont3when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont5(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<FinishCurTenantBlockStartNewIfNeededActor*>(this)->actor_wait_state > 0) static_cast<FinishCurTenantBlockStartNewIfNeededActor*>(this)->actor_wait_state = 0;
		static_cast<FinishCurTenantBlockStartNewIfNeededActor*>(this)->ActorCallback< FinishCurTenantBlockStartNewIfNeededActor, 2, Void >::remove();

	}
	void a_callback_fire(ActorCallback< FinishCurTenantBlockStartNewIfNeededActor, 2, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("finishCurTenantBlockStartNewIfNeeded", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont3when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("finishCurTenantBlockStartNewIfNeeded", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< FinishCurTenantBlockStartNewIfNeededActor, 2, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("finishCurTenantBlockStartNewIfNeeded", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont3when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("finishCurTenantBlockStartNewIfNeeded", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< FinishCurTenantBlockStartNewIfNeededActor, 2, Void >*,Error err) 
	{
		fdb_probe_actor_enter("finishCurTenantBlockStartNewIfNeeded", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("finishCurTenantBlockStartNewIfNeeded", reinterpret_cast<unsigned long>(this), 2);

	}
															#line 884 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	EncryptedRangeFileWriter* self;
															#line 884 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key k;
															#line 884 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Value v;
															#line 884 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	bool writeValue;
															#line 884 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	SnapshotBackupUseTenantCache checkTenantCache;
															#line 893 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	EncryptCipherDomainId curKeyDomainId;
															#line 895 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	EncryptCipherDomainId prevKeyDomainId;
															#line 5186 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via finishCurTenantBlockStartNewIfNeeded()
															#line 884 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class FinishCurTenantBlockStartNewIfNeededActor final : public Actor<bool>, public ActorCallback< FinishCurTenantBlockStartNewIfNeededActor, 0, EncryptCipherDomainId >, public ActorCallback< FinishCurTenantBlockStartNewIfNeededActor, 1, EncryptCipherDomainId >, public ActorCallback< FinishCurTenantBlockStartNewIfNeededActor, 2, Void >, public FastAllocated<FinishCurTenantBlockStartNewIfNeededActor>, public FinishCurTenantBlockStartNewIfNeededActorState<FinishCurTenantBlockStartNewIfNeededActor> {
															#line 5191 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<FinishCurTenantBlockStartNewIfNeededActor>::operator new;
	using FastAllocated<FinishCurTenantBlockStartNewIfNeededActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<bool>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< FinishCurTenantBlockStartNewIfNeededActor, 0, EncryptCipherDomainId >;
friend struct ActorCallback< FinishCurTenantBlockStartNewIfNeededActor, 1, EncryptCipherDomainId >;
friend struct ActorCallback< FinishCurTenantBlockStartNewIfNeededActor, 2, Void >;
															#line 884 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	FinishCurTenantBlockStartNewIfNeededActor(EncryptedRangeFileWriter* const& self,Key const& k,Value const& v,bool const& writeValue,SnapshotBackupUseTenantCache const& checkTenantCache) 
															#line 5204 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<bool>(),
		   FinishCurTenantBlockStartNewIfNeededActorState<FinishCurTenantBlockStartNewIfNeededActor>(self, k, v, writeValue, checkTenantCache)
	{
		fdb_probe_actor_enter("finishCurTenantBlockStartNewIfNeeded", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("finishCurTenantBlockStartNewIfNeeded");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("finishCurTenantBlockStartNewIfNeeded", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< FinishCurTenantBlockStartNewIfNeededActor, 0, EncryptCipherDomainId >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< FinishCurTenantBlockStartNewIfNeededActor, 1, EncryptCipherDomainId >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< FinishCurTenantBlockStartNewIfNeededActor, 2, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 884 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<bool> finishCurTenantBlockStartNewIfNeeded( EncryptedRangeFileWriter* const& self, Key const& k, Value const& v, bool const& writeValue, SnapshotBackupUseTenantCache const& checkTenantCache ) {
															#line 884 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<bool>(new FinishCurTenantBlockStartNewIfNeededActor(self, k, v, writeValue, checkTenantCache));
															#line 5233 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 904 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

	// Start a new block if needed, then write the key and value
																#line 5239 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via writeKV_impl()
															#line 906 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class WriteKV_implActor>
															#line 906 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class WriteKV_implActorState {
															#line 5245 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 906 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	WriteKV_implActorState(EncryptedRangeFileWriter* const& self,Key const& k,Value const& v) 
															#line 906 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 906 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : self(self),
															#line 906 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   k(k),
															#line 906 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   v(v)
															#line 5256 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("writeKV_impl", reinterpret_cast<unsigned long>(this));

	}
	~WriteKV_implActorState() 
	{
		fdb_probe_actor_destroy("writeKV_impl", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 907 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!self->cipherKeys.headerCipherKey.present() || !self->cipherKeys.headerCipherKey.get().isValid() || !self->cipherKeys.textCipherKey.isValid())
															#line 5271 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 909 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				StrictFuture<Void> __when_expr_0 = updateEncryptionKeysCtx(self, k, SnapshotBackupUseTenantCache::False);
															#line 909 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (static_cast<WriteKV_implActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 5277 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
				static_cast<WriteKV_implActor*>(this)->actor_wait_state = 1;
															#line 909 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< WriteKV_implActor, 0, Void >*>(static_cast<WriteKV_implActor*>(this)));
															#line 5282 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				loopDepth = 0;
			}
			else
			{
				loopDepth = a_body1cont1(loopDepth);
			}
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~WriteKV_implActorState();
		static_cast<WriteKV_implActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 911 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		toWrite = sizeof(int32_t) + k.size() + sizeof(int32_t) + v.size();
															#line 912 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = newBlockIfNeeded(self, toWrite);
															#line 912 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<WriteKV_implActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 5314 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<WriteKV_implActor*>(this)->actor_wait_state = 2;
															#line 912 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< WriteKV_implActor, 1, Void >*>(static_cast<WriteKV_implActor*>(this)));
															#line 5319 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont2(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont2(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<WriteKV_implActor*>(this)->actor_wait_state > 0) static_cast<WriteKV_implActor*>(this)->actor_wait_state = 0;
		static_cast<WriteKV_implActor*>(this)->ActorCallback< WriteKV_implActor, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< WriteKV_implActor, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("writeKV_impl", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKV_impl", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< WriteKV_implActor, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("writeKV_impl", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKV_impl", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< WriteKV_implActor, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("writeKV_impl", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKV_impl", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont3(Void const& _,int loopDepth) 
	{
															#line 913 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<bool> __when_expr_2 = finishCurTenantBlockStartNewIfNeeded(self, k, v, true, SnapshotBackupUseTenantCache::False);
															#line 913 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<WriteKV_implActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 5405 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont3when1(__when_expr_2.get(), loopDepth); };
		static_cast<WriteKV_implActor*>(this)->actor_wait_state = 3;
															#line 913 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< WriteKV_implActor, 2, bool >*>(static_cast<WriteKV_implActor*>(this)));
															#line 5410 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont3(Void && _,int loopDepth) 
	{
															#line 913 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<bool> __when_expr_2 = finishCurTenantBlockStartNewIfNeeded(self, k, v, true, SnapshotBackupUseTenantCache::False);
															#line 913 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<WriteKV_implActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 5421 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont3when1(__when_expr_2.get(), loopDepth); };
		static_cast<WriteKV_implActor*>(this)->actor_wait_state = 3;
															#line 913 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< WriteKV_implActor, 2, bool >*>(static_cast<WriteKV_implActor*>(this)));
															#line 5426 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<WriteKV_implActor*>(this)->actor_wait_state > 0) static_cast<WriteKV_implActor*>(this)->actor_wait_state = 0;
		static_cast<WriteKV_implActor*>(this)->ActorCallback< WriteKV_implActor, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< WriteKV_implActor, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("writeKV_impl", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKV_impl", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< WriteKV_implActor, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("writeKV_impl", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKV_impl", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< WriteKV_implActor, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("writeKV_impl", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKV_impl", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont4(bool const& createdNewBlock,int loopDepth) 
	{
															#line 915 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (createdNewBlock)
															#line 5498 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 916 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<WriteKV_implActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~WriteKV_implActorState(); static_cast<WriteKV_implActor*>(this)->destroy(); return 0; }
															#line 5502 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<WriteKV_implActor*>(this)->SAV< Void >::value()) Void(Void());
			this->~WriteKV_implActorState();
			static_cast<WriteKV_implActor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 918 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		appendStringRefWithLenToBuffer(self, &k);
															#line 919 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		appendStringRefWithLenToBuffer(self, &v);
															#line 920 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		self->lastKey = k;
															#line 921 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		self->lastValue = v;
															#line 922 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<WriteKV_implActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~WriteKV_implActorState(); static_cast<WriteKV_implActor*>(this)->destroy(); return 0; }
															#line 5518 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<WriteKV_implActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~WriteKV_implActorState();
		static_cast<WriteKV_implActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont4(bool && createdNewBlock,int loopDepth) 
	{
															#line 915 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (createdNewBlock)
															#line 5530 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 916 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<WriteKV_implActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~WriteKV_implActorState(); static_cast<WriteKV_implActor*>(this)->destroy(); return 0; }
															#line 5534 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<WriteKV_implActor*>(this)->SAV< Void >::value()) Void(Void());
			this->~WriteKV_implActorState();
			static_cast<WriteKV_implActor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 918 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		appendStringRefWithLenToBuffer(self, &k);
															#line 919 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		appendStringRefWithLenToBuffer(self, &v);
															#line 920 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		self->lastKey = k;
															#line 921 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		self->lastValue = v;
															#line 922 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<WriteKV_implActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~WriteKV_implActorState(); static_cast<WriteKV_implActor*>(this)->destroy(); return 0; }
															#line 5550 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<WriteKV_implActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~WriteKV_implActorState();
		static_cast<WriteKV_implActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont3when1(bool const& createdNewBlock,int loopDepth) 
	{
		loopDepth = a_body1cont4(createdNewBlock, loopDepth);

		return loopDepth;
	}
	int a_body1cont3when1(bool && createdNewBlock,int loopDepth) 
	{
		loopDepth = a_body1cont4(std::move(createdNewBlock), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<WriteKV_implActor*>(this)->actor_wait_state > 0) static_cast<WriteKV_implActor*>(this)->actor_wait_state = 0;
		static_cast<WriteKV_implActor*>(this)->ActorCallback< WriteKV_implActor, 2, bool >::remove();

	}
	void a_callback_fire(ActorCallback< WriteKV_implActor, 2, bool >*,bool const& value) 
	{
		fdb_probe_actor_enter("writeKV_impl", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont3when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKV_impl", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< WriteKV_implActor, 2, bool >*,bool && value) 
	{
		fdb_probe_actor_enter("writeKV_impl", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont3when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKV_impl", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< WriteKV_implActor, 2, bool >*,Error err) 
	{
		fdb_probe_actor_enter("writeKV_impl", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKV_impl", reinterpret_cast<unsigned long>(this), 2);

	}
															#line 906 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	EncryptedRangeFileWriter* self;
															#line 906 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key k;
															#line 906 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Value v;
															#line 911 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int toWrite;
															#line 5629 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via writeKV_impl()
															#line 906 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class WriteKV_implActor final : public Actor<Void>, public ActorCallback< WriteKV_implActor, 0, Void >, public ActorCallback< WriteKV_implActor, 1, Void >, public ActorCallback< WriteKV_implActor, 2, bool >, public FastAllocated<WriteKV_implActor>, public WriteKV_implActorState<WriteKV_implActor> {
															#line 5634 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<WriteKV_implActor>::operator new;
	using FastAllocated<WriteKV_implActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< WriteKV_implActor, 0, Void >;
friend struct ActorCallback< WriteKV_implActor, 1, Void >;
friend struct ActorCallback< WriteKV_implActor, 2, bool >;
															#line 906 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	WriteKV_implActor(EncryptedRangeFileWriter* const& self,Key const& k,Value const& v) 
															#line 5647 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   WriteKV_implActorState<WriteKV_implActor>(self, k, v)
	{
		fdb_probe_actor_enter("writeKV_impl", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("writeKV_impl");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("writeKV_impl", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< WriteKV_implActor, 0, Void >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< WriteKV_implActor, 1, Void >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< WriteKV_implActor, 2, bool >*)0, actor_cancelled()); break;
		}

	}
};
															#line 906 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> writeKV_impl( EncryptedRangeFileWriter* const& self, Key const& k, Value const& v ) {
															#line 906 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new WriteKV_implActor(self, k, v));
															#line 5676 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 924 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

	Future<Void> writeKV(Key k, Value v) { return writeKV_impl(this, k, v); }

	// Write begin key or end key.
																#line 5684 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via writeKey_impl()
															#line 928 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class WriteKey_implActor>
															#line 928 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class WriteKey_implActorState {
															#line 5690 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 928 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	WriteKey_implActorState(EncryptedRangeFileWriter* const& self,Key const& k) 
															#line 928 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 928 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : self(self),
															#line 928 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   k(k)
															#line 5699 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("writeKey_impl", reinterpret_cast<unsigned long>(this));

	}
	~WriteKey_implActorState() 
	{
		fdb_probe_actor_destroy("writeKey_impl", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 930 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (k.size() > 0 && (!self->cipherKeys.headerCipherKey.present() || !self->cipherKeys.headerCipherKey.get().isValid() || !self->cipherKeys.textCipherKey.isValid()))
															#line 5714 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 933 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				StrictFuture<Void> __when_expr_0 = updateEncryptionKeysCtx(self, k, SnapshotBackupUseTenantCache::True);
															#line 933 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (static_cast<WriteKey_implActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 5720 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
				static_cast<WriteKey_implActor*>(this)->actor_wait_state = 1;
															#line 933 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< WriteKey_implActor, 0, Void >*>(static_cast<WriteKey_implActor*>(this)));
															#line 5725 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				loopDepth = 0;
			}
			else
			{
				loopDepth = a_body1cont1(loopDepth);
			}
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~WriteKey_implActorState();
		static_cast<WriteKey_implActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 936 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		int toWrite = sizeof(uint32_t) + k.size() + sizeof(uint32_t);
															#line 937 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = newBlockIfNeeded(self, toWrite);
															#line 937 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<WriteKey_implActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 5757 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<WriteKey_implActor*>(this)->actor_wait_state = 2;
															#line 937 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< WriteKey_implActor, 1, Void >*>(static_cast<WriteKey_implActor*>(this)));
															#line 5762 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont2(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont2(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<WriteKey_implActor*>(this)->actor_wait_state > 0) static_cast<WriteKey_implActor*>(this)->actor_wait_state = 0;
		static_cast<WriteKey_implActor*>(this)->ActorCallback< WriteKey_implActor, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< WriteKey_implActor, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("writeKey_impl", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKey_impl", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< WriteKey_implActor, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("writeKey_impl", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKey_impl", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< WriteKey_implActor, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("writeKey_impl", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKey_impl", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont3(Void const& _,int loopDepth) 
	{
															#line 940 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<bool> __when_expr_2 = finishCurTenantBlockStartNewIfNeeded(self, k, StringRef(), false, SnapshotBackupUseTenantCache::True);
															#line 940 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<WriteKey_implActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 5848 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont3when1(__when_expr_2.get(), loopDepth); };
		static_cast<WriteKey_implActor*>(this)->actor_wait_state = 3;
															#line 940 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< WriteKey_implActor, 2, bool >*>(static_cast<WriteKey_implActor*>(this)));
															#line 5853 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont3(Void && _,int loopDepth) 
	{
															#line 940 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<bool> __when_expr_2 = finishCurTenantBlockStartNewIfNeeded(self, k, StringRef(), false, SnapshotBackupUseTenantCache::True);
															#line 940 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<WriteKey_implActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 5864 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont3when1(__when_expr_2.get(), loopDepth); };
		static_cast<WriteKey_implActor*>(this)->actor_wait_state = 3;
															#line 940 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< WriteKey_implActor, 2, bool >*>(static_cast<WriteKey_implActor*>(this)));
															#line 5869 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<WriteKey_implActor*>(this)->actor_wait_state > 0) static_cast<WriteKey_implActor*>(this)->actor_wait_state = 0;
		static_cast<WriteKey_implActor*>(this)->ActorCallback< WriteKey_implActor, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< WriteKey_implActor, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("writeKey_impl", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKey_impl", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< WriteKey_implActor, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("writeKey_impl", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKey_impl", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< WriteKey_implActor, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("writeKey_impl", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKey_impl", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont4(bool const& createdNewBlock,int loopDepth) 
	{
															#line 942 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (createdNewBlock)
															#line 5941 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 943 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<WriteKey_implActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~WriteKey_implActorState(); static_cast<WriteKey_implActor*>(this)->destroy(); return 0; }
															#line 5945 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<WriteKey_implActor*>(this)->SAV< Void >::value()) Void(Void());
			this->~WriteKey_implActorState();
			static_cast<WriteKey_implActor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 945 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		appendStringRefWithLenToBuffer(self, &k);
															#line 946 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		self->lastKey = k;
															#line 947 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<WriteKey_implActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~WriteKey_implActorState(); static_cast<WriteKey_implActor*>(this)->destroy(); return 0; }
															#line 5957 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<WriteKey_implActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~WriteKey_implActorState();
		static_cast<WriteKey_implActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont4(bool && createdNewBlock,int loopDepth) 
	{
															#line 942 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (createdNewBlock)
															#line 5969 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 943 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<WriteKey_implActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~WriteKey_implActorState(); static_cast<WriteKey_implActor*>(this)->destroy(); return 0; }
															#line 5973 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<WriteKey_implActor*>(this)->SAV< Void >::value()) Void(Void());
			this->~WriteKey_implActorState();
			static_cast<WriteKey_implActor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 945 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		appendStringRefWithLenToBuffer(self, &k);
															#line 946 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		self->lastKey = k;
															#line 947 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<WriteKey_implActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~WriteKey_implActorState(); static_cast<WriteKey_implActor*>(this)->destroy(); return 0; }
															#line 5985 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<WriteKey_implActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~WriteKey_implActorState();
		static_cast<WriteKey_implActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont3when1(bool const& createdNewBlock,int loopDepth) 
	{
		loopDepth = a_body1cont4(createdNewBlock, loopDepth);

		return loopDepth;
	}
	int a_body1cont3when1(bool && createdNewBlock,int loopDepth) 
	{
		loopDepth = a_body1cont4(std::move(createdNewBlock), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<WriteKey_implActor*>(this)->actor_wait_state > 0) static_cast<WriteKey_implActor*>(this)->actor_wait_state = 0;
		static_cast<WriteKey_implActor*>(this)->ActorCallback< WriteKey_implActor, 2, bool >::remove();

	}
	void a_callback_fire(ActorCallback< WriteKey_implActor, 2, bool >*,bool const& value) 
	{
		fdb_probe_actor_enter("writeKey_impl", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont3when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKey_impl", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< WriteKey_implActor, 2, bool >*,bool && value) 
	{
		fdb_probe_actor_enter("writeKey_impl", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont3when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKey_impl", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< WriteKey_implActor, 2, bool >*,Error err) 
	{
		fdb_probe_actor_enter("writeKey_impl", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKey_impl", reinterpret_cast<unsigned long>(this), 2);

	}
															#line 928 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	EncryptedRangeFileWriter* self;
															#line 928 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key k;
															#line 6060 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via writeKey_impl()
															#line 928 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class WriteKey_implActor final : public Actor<Void>, public ActorCallback< WriteKey_implActor, 0, Void >, public ActorCallback< WriteKey_implActor, 1, Void >, public ActorCallback< WriteKey_implActor, 2, bool >, public FastAllocated<WriteKey_implActor>, public WriteKey_implActorState<WriteKey_implActor> {
															#line 6065 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<WriteKey_implActor>::operator new;
	using FastAllocated<WriteKey_implActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< WriteKey_implActor, 0, Void >;
friend struct ActorCallback< WriteKey_implActor, 1, Void >;
friend struct ActorCallback< WriteKey_implActor, 2, bool >;
															#line 928 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	WriteKey_implActor(EncryptedRangeFileWriter* const& self,Key const& k) 
															#line 6078 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   WriteKey_implActorState<WriteKey_implActor>(self, k)
	{
		fdb_probe_actor_enter("writeKey_impl", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("writeKey_impl");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("writeKey_impl", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< WriteKey_implActor, 0, Void >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< WriteKey_implActor, 1, Void >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< WriteKey_implActor, 2, bool >*)0, actor_cancelled()); break;
		}

	}
};
															#line 928 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> writeKey_impl( EncryptedRangeFileWriter* const& self, Key const& k ) {
															#line 928 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new WriteKey_implActor(self, k));
															#line 6107 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 949 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

	Future<Void> writeKey(Key k) { return writeKey_impl(this, k); }

																#line 6114 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via finish_impl()
															#line 952 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class Finish_implActor>
															#line 952 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class Finish_implActorState {
															#line 6120 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 952 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Finish_implActorState(EncryptedRangeFileWriter* const& self) 
															#line 952 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 952 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : self(self)
															#line 6127 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("finish_impl", reinterpret_cast<unsigned long>(this));

	}
	~Finish_implActorState() 
	{
		fdb_probe_actor_destroy("finish_impl", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 954 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (currentBufferSize(self) > 0)
															#line 6142 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 955 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				StrictFuture<Void> __when_expr_0 = encrypt(self);
															#line 955 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (static_cast<Finish_implActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 6148 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
				static_cast<Finish_implActor*>(this)->actor_wait_state = 1;
															#line 955 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< Finish_implActor, 0, Void >*>(static_cast<Finish_implActor*>(this)));
															#line 6153 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				loopDepth = 0;
			}
			else
			{
				loopDepth = a_body1cont1(loopDepth);
			}
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~Finish_implActorState();
		static_cast<Finish_implActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 958 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<Finish_implActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~Finish_implActorState(); static_cast<Finish_implActor*>(this)->destroy(); return 0; }
															#line 6181 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<Finish_implActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~Finish_implActorState();
		static_cast<Finish_implActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont2(Void const& _,int loopDepth) 
	{
															#line 956 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = self->file->append(self->buffer.begin(), currentBufferSize(self));
															#line 956 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<Finish_implActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 6195 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont2when1(__when_expr_1.get(), loopDepth); };
		static_cast<Finish_implActor*>(this)->actor_wait_state = 2;
															#line 956 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< Finish_implActor, 1, Void >*>(static_cast<Finish_implActor*>(this)));
															#line 6200 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont2(Void && _,int loopDepth) 
	{
															#line 956 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = self->file->append(self->buffer.begin(), currentBufferSize(self));
															#line 956 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<Finish_implActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 6211 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont2when1(__when_expr_1.get(), loopDepth); };
		static_cast<Finish_implActor*>(this)->actor_wait_state = 2;
															#line 956 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< Finish_implActor, 1, Void >*>(static_cast<Finish_implActor*>(this)));
															#line 6216 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<Finish_implActor*>(this)->actor_wait_state > 0) static_cast<Finish_implActor*>(this)->actor_wait_state = 0;
		static_cast<Finish_implActor*>(this)->ActorCallback< Finish_implActor, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< Finish_implActor, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("finish_impl", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("finish_impl", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< Finish_implActor, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("finish_impl", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("finish_impl", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< Finish_implActor, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("finish_impl", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("finish_impl", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont3(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont3(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<Finish_implActor*>(this)->actor_wait_state > 0) static_cast<Finish_implActor*>(this)->actor_wait_state = 0;
		static_cast<Finish_implActor*>(this)->ActorCallback< Finish_implActor, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< Finish_implActor, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("finish_impl", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("finish_impl", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< Finish_implActor, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("finish_impl", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("finish_impl", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< Finish_implActor, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("finish_impl", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("finish_impl", reinterpret_cast<unsigned long>(this), 1);

	}
															#line 952 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	EncryptedRangeFileWriter* self;
															#line 6361 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via finish_impl()
															#line 952 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class Finish_implActor final : public Actor<Void>, public ActorCallback< Finish_implActor, 0, Void >, public ActorCallback< Finish_implActor, 1, Void >, public FastAllocated<Finish_implActor>, public Finish_implActorState<Finish_implActor> {
															#line 6366 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<Finish_implActor>::operator new;
	using FastAllocated<Finish_implActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< Finish_implActor, 0, Void >;
friend struct ActorCallback< Finish_implActor, 1, Void >;
															#line 952 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Finish_implActor(EncryptedRangeFileWriter* const& self) 
															#line 6378 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   Finish_implActorState<Finish_implActor>(self)
	{
		fdb_probe_actor_enter("finish_impl", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("finish_impl");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("finish_impl", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< Finish_implActor, 0, Void >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< Finish_implActor, 1, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 952 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> finish_impl( EncryptedRangeFileWriter* const& self ) {
															#line 952 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new Finish_implActor(self));
															#line 6406 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 960 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

	Future<Void> finish() { return finish_impl(this); }

	Database cx;
	Arena* arena;
	EncryptionAtRestMode encryptMode;
	Reference<IBackupFile> file;
	Optional<Reference<TenantEntryCache<Void>>> tenantCache;
	int blockSize;

private:
	Standalone<StringRef> buffer;
	uint8_t* wPtr;
	StringRef encryptHeader;
	uint8_t* dataPayloadStart;
	int64_t blockEnd;
	uint32_t fileVersion;
	Options options;
	Key lastKey;
	Key lastValue;
	SnapshotFileBackupEncryptionKeys cipherKeys;
};

// File Format handlers.
// Both Range and Log formats are designed to be readable starting at any BACKUP_RANGEFILE_BLOCK_SIZE boundary
// so they can be read in parallel.
//
// Writer instances must be kept alive while any member actors are in progress.
//
// RangeFileWriter must be used as follows:
//   1 - writeKey(key) the queried key range begin
//   2 - writeKV(k, v) each kv pair to restore
//   3 - writeKey(key) the queried key range end
//	 4 - finish()
//
// RangeFileWriter will insert the required padding, header, and extra
// end/begin keys around the 1MB boundaries as needed.
//
// Example:
//   The range a-z is queries and returns c-j which covers 3 blocks.
//   The client code writes keys in this sequence:
//             a c d e f g h i j z
//
//   H = header   P = padding   a...z = keys  v = value | = block boundary
//
//   Encoded file:  H a cv dv ev P | H e ev fv gv hv P | H h hv iv jv z
//   Decoded in blocks yields:
//           Block 1: range [a, e) with kv pairs cv, dv
//           Block 2: range [e, h) with kv pairs ev, fv, gv
//           Block 3: range [h, z) with kv pairs hv, iv, jv
//
//   NOTE: All blocks except for the final block will have one last
//   value which will not be used.  This isn't actually a waste since
//   if the next KV pair wouldn't fit within the block after the value
//   then the space after the final key to the next 1MB boundary would
//   just be padding anyway.
struct RangeFileWriter : public IRangeFileWriter {
	RangeFileWriter(Reference<IBackupFile> file = Reference<IBackupFile>(), int blockSize = 0)
	  : file(file), blockSize(blockSize), blockEnd(0), fileVersion(BACKUP_AGENT_SNAPSHOT_FILE_VERSION) {}

	// Handles the first block and internal blocks.  Ends current block if needed.
	// The final flag is used in simulation to pad the file's final block to a whole block size
																#line 6472 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via newBlock()
															#line 1022 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class NewBlockActor1>
															#line 1022 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class NewBlockActor1State {
															#line 6478 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 1022 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	NewBlockActor1State(RangeFileWriter* const& self,int const& bytesNeeded,bool const& final = false) 
															#line 1022 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 1022 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : self(self),
															#line 1022 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   bytesNeeded(bytesNeeded),
															#line 1022 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   final(final)
															#line 6489 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("newBlock", reinterpret_cast<unsigned long>(this));

	}
	~NewBlockActor1State() 
	{
		fdb_probe_actor_destroy("newBlock", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 1024 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			int bytesLeft = self->blockEnd - self->file->size();
															#line 1025 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (bytesLeft > 0)
															#line 6506 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 1026 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				paddingFFs = makePadding(bytesLeft);
															#line 1027 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				StrictFuture<Void> __when_expr_0 = self->file->append(paddingFFs.begin(), bytesLeft);
															#line 1027 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (static_cast<NewBlockActor1*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 6514 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
				static_cast<NewBlockActor1*>(this)->actor_wait_state = 1;
															#line 1027 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< NewBlockActor1, 0, Void >*>(static_cast<NewBlockActor1*>(this)));
															#line 6519 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				loopDepth = 0;
			}
			else
			{
				loopDepth = a_body1cont1(loopDepth);
			}
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~NewBlockActor1State();
		static_cast<NewBlockActor1*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 1030 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (final)
															#line 6547 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1031 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			ASSERT(g_network->isSimulated());
															#line 1032 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<NewBlockActor1*>(this)->SAV<Void>::futures) { (void)(Void()); this->~NewBlockActor1State(); static_cast<NewBlockActor1*>(this)->destroy(); return 0; }
															#line 6553 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<NewBlockActor1*>(this)->SAV< Void >::value()) Void(Void());
			this->~NewBlockActor1State();
			static_cast<NewBlockActor1*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 1036 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		self->blockEnd += self->blockSize;
															#line 1039 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = self->file->append((uint8_t*)&self->fileVersion, sizeof(self->fileVersion));
															#line 1039 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<NewBlockActor1*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 6565 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<NewBlockActor1*>(this)->actor_wait_state = 2;
															#line 1039 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< NewBlockActor1, 1, Void >*>(static_cast<NewBlockActor1*>(this)));
															#line 6570 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont2(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont2(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<NewBlockActor1*>(this)->actor_wait_state > 0) static_cast<NewBlockActor1*>(this)->actor_wait_state = 0;
		static_cast<NewBlockActor1*>(this)->ActorCallback< NewBlockActor1, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< NewBlockActor1, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("newBlock", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("newBlock", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< NewBlockActor1, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("newBlock", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("newBlock", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< NewBlockActor1, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("newBlock", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("newBlock", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont3(Void const& _,int loopDepth) 
	{
															#line 1042 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (self->blockEnd > self->blockSize)
															#line 6654 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1043 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_2 = self->file->appendStringRefWithLen(self->lastKey);
															#line 1043 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<NewBlockActor1*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 6660 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont3when1(__when_expr_2.get(), loopDepth); };
			static_cast<NewBlockActor1*>(this)->actor_wait_state = 3;
															#line 1043 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< NewBlockActor1, 2, Void >*>(static_cast<NewBlockActor1*>(this)));
															#line 6665 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont5(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont3(Void && _,int loopDepth) 
	{
															#line 1042 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (self->blockEnd > self->blockSize)
															#line 6679 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1043 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_2 = self->file->appendStringRefWithLen(self->lastKey);
															#line 1043 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<NewBlockActor1*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 6685 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont3when1(__when_expr_2.get(), loopDepth); };
			static_cast<NewBlockActor1*>(this)->actor_wait_state = 3;
															#line 1043 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< NewBlockActor1, 2, Void >*>(static_cast<NewBlockActor1*>(this)));
															#line 6690 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont5(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<NewBlockActor1*>(this)->actor_wait_state > 0) static_cast<NewBlockActor1*>(this)->actor_wait_state = 0;
		static_cast<NewBlockActor1*>(this)->ActorCallback< NewBlockActor1, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< NewBlockActor1, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("newBlock", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("newBlock", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< NewBlockActor1, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("newBlock", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("newBlock", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< NewBlockActor1, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("newBlock", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("newBlock", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont5(int loopDepth) 
	{
															#line 1049 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (self->file->size() + bytesNeeded > self->blockEnd)
															#line 6767 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1050 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			return a_body1Catch1(backup_bad_block_size(), loopDepth);
															#line 6771 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 1052 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<NewBlockActor1*>(this)->SAV<Void>::futures) { (void)(Void()); this->~NewBlockActor1State(); static_cast<NewBlockActor1*>(this)->destroy(); return 0; }
															#line 6775 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<NewBlockActor1*>(this)->SAV< Void >::value()) Void(Void());
		this->~NewBlockActor1State();
		static_cast<NewBlockActor1*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont6(Void const& _,int loopDepth) 
	{
															#line 1044 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_3 = self->file->appendStringRefWithLen(self->lastKey);
															#line 1044 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<NewBlockActor1*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 6789 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1cont6when1(__when_expr_3.get(), loopDepth); };
		static_cast<NewBlockActor1*>(this)->actor_wait_state = 4;
															#line 1044 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< NewBlockActor1, 3, Void >*>(static_cast<NewBlockActor1*>(this)));
															#line 6794 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont6(Void && _,int loopDepth) 
	{
															#line 1044 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_3 = self->file->appendStringRefWithLen(self->lastKey);
															#line 1044 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<NewBlockActor1*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 6805 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1cont6when1(__when_expr_3.get(), loopDepth); };
		static_cast<NewBlockActor1*>(this)->actor_wait_state = 4;
															#line 1044 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< NewBlockActor1, 3, Void >*>(static_cast<NewBlockActor1*>(this)));
															#line 6810 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont3when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont6(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont3when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont6(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<NewBlockActor1*>(this)->actor_wait_state > 0) static_cast<NewBlockActor1*>(this)->actor_wait_state = 0;
		static_cast<NewBlockActor1*>(this)->ActorCallback< NewBlockActor1, 2, Void >::remove();

	}
	void a_callback_fire(ActorCallback< NewBlockActor1, 2, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("newBlock", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont3when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("newBlock", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< NewBlockActor1, 2, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("newBlock", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont3when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("newBlock", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< NewBlockActor1, 2, Void >*,Error err) 
	{
		fdb_probe_actor_enter("newBlock", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("newBlock", reinterpret_cast<unsigned long>(this), 2);

	}
	int a_body1cont7(Void const& _,int loopDepth) 
	{
															#line 1045 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_4 = self->file->appendStringRefWithLen(self->lastValue);
															#line 1045 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<NewBlockActor1*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 6884 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1cont7when1(__when_expr_4.get(), loopDepth); };
		static_cast<NewBlockActor1*>(this)->actor_wait_state = 5;
															#line 1045 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< NewBlockActor1, 4, Void >*>(static_cast<NewBlockActor1*>(this)));
															#line 6889 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont7(Void && _,int loopDepth) 
	{
															#line 1045 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_4 = self->file->appendStringRefWithLen(self->lastValue);
															#line 1045 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<NewBlockActor1*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 6900 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1cont7when1(__when_expr_4.get(), loopDepth); };
		static_cast<NewBlockActor1*>(this)->actor_wait_state = 5;
															#line 1045 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< NewBlockActor1, 4, Void >*>(static_cast<NewBlockActor1*>(this)));
															#line 6905 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont6when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont7(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont6when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont7(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose4() 
	{
		if (static_cast<NewBlockActor1*>(this)->actor_wait_state > 0) static_cast<NewBlockActor1*>(this)->actor_wait_state = 0;
		static_cast<NewBlockActor1*>(this)->ActorCallback< NewBlockActor1, 3, Void >::remove();

	}
	void a_callback_fire(ActorCallback< NewBlockActor1, 3, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("newBlock", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont6when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("newBlock", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_fire(ActorCallback< NewBlockActor1, 3, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("newBlock", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont6when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("newBlock", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_error(ActorCallback< NewBlockActor1, 3, Void >*,Error err) 
	{
		fdb_probe_actor_enter("newBlock", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("newBlock", reinterpret_cast<unsigned long>(this), 3);

	}
	int a_body1cont8(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont5(loopDepth);

		return loopDepth;
	}
	int a_body1cont8(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont5(loopDepth);

		return loopDepth;
	}
	int a_body1cont7when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont8(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont7when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont8(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose5() 
	{
		if (static_cast<NewBlockActor1*>(this)->actor_wait_state > 0) static_cast<NewBlockActor1*>(this)->actor_wait_state = 0;
		static_cast<NewBlockActor1*>(this)->ActorCallback< NewBlockActor1, 4, Void >::remove();

	}
	void a_callback_fire(ActorCallback< NewBlockActor1, 4, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("newBlock", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont7when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("newBlock", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_fire(ActorCallback< NewBlockActor1, 4, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("newBlock", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont7when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("newBlock", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_error(ActorCallback< NewBlockActor1, 4, Void >*,Error err) 
	{
		fdb_probe_actor_enter("newBlock", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("newBlock", reinterpret_cast<unsigned long>(this), 4);

	}
															#line 1022 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	RangeFileWriter* self;
															#line 1022 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int bytesNeeded;
															#line 1022 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	bool final;
															#line 1026 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Value paddingFFs;
															#line 7056 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via newBlock()
															#line 1022 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class NewBlockActor1 final : public Actor<Void>, public ActorCallback< NewBlockActor1, 0, Void >, public ActorCallback< NewBlockActor1, 1, Void >, public ActorCallback< NewBlockActor1, 2, Void >, public ActorCallback< NewBlockActor1, 3, Void >, public ActorCallback< NewBlockActor1, 4, Void >, public FastAllocated<NewBlockActor1>, public NewBlockActor1State<NewBlockActor1> {
															#line 7061 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<NewBlockActor1>::operator new;
	using FastAllocated<NewBlockActor1>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< NewBlockActor1, 0, Void >;
friend struct ActorCallback< NewBlockActor1, 1, Void >;
friend struct ActorCallback< NewBlockActor1, 2, Void >;
friend struct ActorCallback< NewBlockActor1, 3, Void >;
friend struct ActorCallback< NewBlockActor1, 4, Void >;
															#line 1022 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	NewBlockActor1(RangeFileWriter* const& self,int const& bytesNeeded,bool const& final = false) 
															#line 7076 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   NewBlockActor1State<NewBlockActor1>(self, bytesNeeded, final)
	{
		fdb_probe_actor_enter("newBlock", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("newBlock");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("newBlock", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< NewBlockActor1, 0, Void >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< NewBlockActor1, 1, Void >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< NewBlockActor1, 2, Void >*)0, actor_cancelled()); break;
		case 4: this->a_callback_error((ActorCallback< NewBlockActor1, 3, Void >*)0, actor_cancelled()); break;
		case 5: this->a_callback_error((ActorCallback< NewBlockActor1, 4, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 1022 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> newBlock( RangeFileWriter* const& self, int const& bytesNeeded, bool const& final = false ) {
															#line 1022 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new NewBlockActor1(self, bytesNeeded, final));
															#line 7107 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 1054 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

	// Used in simulation only to create backup file sizes which are an integer multiple of the block size
	Future<Void> padEnd(bool final) {
		ASSERT(g_network->isSimulated());
		if (file->size() > 0) {
			return newBlock(this, 0, final);
		}
		return Void();
	}

	// Ends the current block if necessary based on bytesNeeded.
	Future<Void> newBlockIfNeeded(int bytesNeeded) {
		if (file->size() + bytesNeeded > blockEnd)
			return newBlock(this, bytesNeeded);
		return Void();
	}

	// Start a new block if needed, then write the key and value
																#line 7129 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via writeKV_impl()
															#line 1072 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class WriteKV_implActor1>
															#line 1072 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class WriteKV_implActor1State {
															#line 7135 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 1072 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	WriteKV_implActor1State(RangeFileWriter* const& self,Key const& k,Value const& v) 
															#line 1072 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 1072 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : self(self),
															#line 1072 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   k(k),
															#line 1072 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   v(v)
															#line 7146 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("writeKV_impl", reinterpret_cast<unsigned long>(this));

	}
	~WriteKV_implActor1State() 
	{
		fdb_probe_actor_destroy("writeKV_impl", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 1073 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			int toWrite = sizeof(int32_t) + k.size() + sizeof(int32_t) + v.size();
															#line 1074 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_0 = self->newBlockIfNeeded(toWrite);
															#line 1074 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<WriteKV_implActor1*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 7165 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<WriteKV_implActor1*>(this)->actor_wait_state = 1;
															#line 1074 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< WriteKV_implActor1, 0, Void >*>(static_cast<WriteKV_implActor1*>(this)));
															#line 7170 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~WriteKV_implActor1State();
		static_cast<WriteKV_implActor1*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Void const& _,int loopDepth) 
	{
															#line 1075 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = self->file->appendStringRefWithLen(k);
															#line 1075 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<WriteKV_implActor1*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 7195 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<WriteKV_implActor1*>(this)->actor_wait_state = 2;
															#line 1075 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< WriteKV_implActor1, 1, Void >*>(static_cast<WriteKV_implActor1*>(this)));
															#line 7200 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Void && _,int loopDepth) 
	{
															#line 1075 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = self->file->appendStringRefWithLen(k);
															#line 1075 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<WriteKV_implActor1*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 7211 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<WriteKV_implActor1*>(this)->actor_wait_state = 2;
															#line 1075 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< WriteKV_implActor1, 1, Void >*>(static_cast<WriteKV_implActor1*>(this)));
															#line 7216 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<WriteKV_implActor1*>(this)->actor_wait_state > 0) static_cast<WriteKV_implActor1*>(this)->actor_wait_state = 0;
		static_cast<WriteKV_implActor1*>(this)->ActorCallback< WriteKV_implActor1, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< WriteKV_implActor1, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("writeKV_impl", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKV_impl", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< WriteKV_implActor1, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("writeKV_impl", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKV_impl", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< WriteKV_implActor1, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("writeKV_impl", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKV_impl", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont2(Void const& _,int loopDepth) 
	{
															#line 1076 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_2 = self->file->appendStringRefWithLen(v);
															#line 1076 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<WriteKV_implActor1*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 7290 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont2when1(__when_expr_2.get(), loopDepth); };
		static_cast<WriteKV_implActor1*>(this)->actor_wait_state = 3;
															#line 1076 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< WriteKV_implActor1, 2, Void >*>(static_cast<WriteKV_implActor1*>(this)));
															#line 7295 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont2(Void && _,int loopDepth) 
	{
															#line 1076 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_2 = self->file->appendStringRefWithLen(v);
															#line 1076 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<WriteKV_implActor1*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 7306 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont2when1(__when_expr_2.get(), loopDepth); };
		static_cast<WriteKV_implActor1*>(this)->actor_wait_state = 3;
															#line 1076 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< WriteKV_implActor1, 2, Void >*>(static_cast<WriteKV_implActor1*>(this)));
															#line 7311 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<WriteKV_implActor1*>(this)->actor_wait_state > 0) static_cast<WriteKV_implActor1*>(this)->actor_wait_state = 0;
		static_cast<WriteKV_implActor1*>(this)->ActorCallback< WriteKV_implActor1, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< WriteKV_implActor1, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("writeKV_impl", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKV_impl", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< WriteKV_implActor1, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("writeKV_impl", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKV_impl", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< WriteKV_implActor1, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("writeKV_impl", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKV_impl", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont3(Void const& _,int loopDepth) 
	{
															#line 1077 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		self->lastKey = k;
															#line 1078 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		self->lastValue = v;
															#line 1079 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<WriteKV_implActor1*>(this)->SAV<Void>::futures) { (void)(Void()); this->~WriteKV_implActor1State(); static_cast<WriteKV_implActor1*>(this)->destroy(); return 0; }
															#line 7387 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<WriteKV_implActor1*>(this)->SAV< Void >::value()) Void(Void());
		this->~WriteKV_implActor1State();
		static_cast<WriteKV_implActor1*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont3(Void && _,int loopDepth) 
	{
															#line 1077 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		self->lastKey = k;
															#line 1078 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		self->lastValue = v;
															#line 1079 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<WriteKV_implActor1*>(this)->SAV<Void>::futures) { (void)(Void()); this->~WriteKV_implActor1State(); static_cast<WriteKV_implActor1*>(this)->destroy(); return 0; }
															#line 7403 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<WriteKV_implActor1*>(this)->SAV< Void >::value()) Void(Void());
		this->~WriteKV_implActor1State();
		static_cast<WriteKV_implActor1*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<WriteKV_implActor1*>(this)->actor_wait_state > 0) static_cast<WriteKV_implActor1*>(this)->actor_wait_state = 0;
		static_cast<WriteKV_implActor1*>(this)->ActorCallback< WriteKV_implActor1, 2, Void >::remove();

	}
	void a_callback_fire(ActorCallback< WriteKV_implActor1, 2, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("writeKV_impl", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKV_impl", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< WriteKV_implActor1, 2, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("writeKV_impl", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKV_impl", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< WriteKV_implActor1, 2, Void >*,Error err) 
	{
		fdb_probe_actor_enter("writeKV_impl", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKV_impl", reinterpret_cast<unsigned long>(this), 2);

	}
															#line 1072 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	RangeFileWriter* self;
															#line 1072 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key k;
															#line 1072 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Value v;
															#line 7480 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via writeKV_impl()
															#line 1072 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class WriteKV_implActor1 final : public Actor<Void>, public ActorCallback< WriteKV_implActor1, 0, Void >, public ActorCallback< WriteKV_implActor1, 1, Void >, public ActorCallback< WriteKV_implActor1, 2, Void >, public FastAllocated<WriteKV_implActor1>, public WriteKV_implActor1State<WriteKV_implActor1> {
															#line 7485 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<WriteKV_implActor1>::operator new;
	using FastAllocated<WriteKV_implActor1>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< WriteKV_implActor1, 0, Void >;
friend struct ActorCallback< WriteKV_implActor1, 1, Void >;
friend struct ActorCallback< WriteKV_implActor1, 2, Void >;
															#line 1072 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	WriteKV_implActor1(RangeFileWriter* const& self,Key const& k,Value const& v) 
															#line 7498 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   WriteKV_implActor1State<WriteKV_implActor1>(self, k, v)
	{
		fdb_probe_actor_enter("writeKV_impl", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("writeKV_impl");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("writeKV_impl", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< WriteKV_implActor1, 0, Void >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< WriteKV_implActor1, 1, Void >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< WriteKV_implActor1, 2, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 1072 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> writeKV_impl( RangeFileWriter* const& self, Key const& k, Value const& v ) {
															#line 1072 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new WriteKV_implActor1(self, k, v));
															#line 7527 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 1081 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

	Future<Void> writeKV(Key k, Value v) { return writeKV_impl(this, k, v); }

	// Write begin key or end key.
																#line 7535 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via writeKey_impl()
															#line 1085 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class WriteKey_implActor1>
															#line 1085 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class WriteKey_implActor1State {
															#line 7541 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 1085 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	WriteKey_implActor1State(RangeFileWriter* const& self,Key const& k) 
															#line 1085 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 1085 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : self(self),
															#line 1085 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   k(k)
															#line 7550 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("writeKey_impl", reinterpret_cast<unsigned long>(this));

	}
	~WriteKey_implActor1State() 
	{
		fdb_probe_actor_destroy("writeKey_impl", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 1086 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			int toWrite = sizeof(uint32_t) + k.size();
															#line 1087 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_0 = self->newBlockIfNeeded(toWrite);
															#line 1087 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<WriteKey_implActor1*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 7569 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<WriteKey_implActor1*>(this)->actor_wait_state = 1;
															#line 1087 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< WriteKey_implActor1, 0, Void >*>(static_cast<WriteKey_implActor1*>(this)));
															#line 7574 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~WriteKey_implActor1State();
		static_cast<WriteKey_implActor1*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Void const& _,int loopDepth) 
	{
															#line 1088 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = self->file->appendStringRefWithLen(k);
															#line 1088 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<WriteKey_implActor1*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 7599 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<WriteKey_implActor1*>(this)->actor_wait_state = 2;
															#line 1088 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< WriteKey_implActor1, 1, Void >*>(static_cast<WriteKey_implActor1*>(this)));
															#line 7604 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Void && _,int loopDepth) 
	{
															#line 1088 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = self->file->appendStringRefWithLen(k);
															#line 1088 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<WriteKey_implActor1*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 7615 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<WriteKey_implActor1*>(this)->actor_wait_state = 2;
															#line 1088 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< WriteKey_implActor1, 1, Void >*>(static_cast<WriteKey_implActor1*>(this)));
															#line 7620 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<WriteKey_implActor1*>(this)->actor_wait_state > 0) static_cast<WriteKey_implActor1*>(this)->actor_wait_state = 0;
		static_cast<WriteKey_implActor1*>(this)->ActorCallback< WriteKey_implActor1, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< WriteKey_implActor1, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("writeKey_impl", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKey_impl", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< WriteKey_implActor1, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("writeKey_impl", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKey_impl", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< WriteKey_implActor1, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("writeKey_impl", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKey_impl", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont2(Void const& _,int loopDepth) 
	{
															#line 1089 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<WriteKey_implActor1*>(this)->SAV<Void>::futures) { (void)(Void()); this->~WriteKey_implActor1State(); static_cast<WriteKey_implActor1*>(this)->destroy(); return 0; }
															#line 7692 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<WriteKey_implActor1*>(this)->SAV< Void >::value()) Void(Void());
		this->~WriteKey_implActor1State();
		static_cast<WriteKey_implActor1*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont2(Void && _,int loopDepth) 
	{
															#line 1089 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<WriteKey_implActor1*>(this)->SAV<Void>::futures) { (void)(Void()); this->~WriteKey_implActor1State(); static_cast<WriteKey_implActor1*>(this)->destroy(); return 0; }
															#line 7704 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<WriteKey_implActor1*>(this)->SAV< Void >::value()) Void(Void());
		this->~WriteKey_implActor1State();
		static_cast<WriteKey_implActor1*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<WriteKey_implActor1*>(this)->actor_wait_state > 0) static_cast<WriteKey_implActor1*>(this)->actor_wait_state = 0;
		static_cast<WriteKey_implActor1*>(this)->ActorCallback< WriteKey_implActor1, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< WriteKey_implActor1, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("writeKey_impl", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKey_impl", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< WriteKey_implActor1, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("writeKey_impl", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKey_impl", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< WriteKey_implActor1, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("writeKey_impl", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKey_impl", reinterpret_cast<unsigned long>(this), 1);

	}
															#line 1085 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	RangeFileWriter* self;
															#line 1085 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key k;
															#line 7779 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via writeKey_impl()
															#line 1085 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class WriteKey_implActor1 final : public Actor<Void>, public ActorCallback< WriteKey_implActor1, 0, Void >, public ActorCallback< WriteKey_implActor1, 1, Void >, public FastAllocated<WriteKey_implActor1>, public WriteKey_implActor1State<WriteKey_implActor1> {
															#line 7784 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<WriteKey_implActor1>::operator new;
	using FastAllocated<WriteKey_implActor1>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< WriteKey_implActor1, 0, Void >;
friend struct ActorCallback< WriteKey_implActor1, 1, Void >;
															#line 1085 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	WriteKey_implActor1(RangeFileWriter* const& self,Key const& k) 
															#line 7796 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   WriteKey_implActor1State<WriteKey_implActor1>(self, k)
	{
		fdb_probe_actor_enter("writeKey_impl", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("writeKey_impl");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("writeKey_impl", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< WriteKey_implActor1, 0, Void >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< WriteKey_implActor1, 1, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 1085 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> writeKey_impl( RangeFileWriter* const& self, Key const& k ) {
															#line 1085 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new WriteKey_implActor1(self, k));
															#line 7824 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 1091 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

	Future<Void> writeKey(Key k) { return writeKey_impl(this, k); }

	Future<Void> finish() { return Void(); }

	Reference<IBackupFile> file;
	int blockSize;

private:
	int64_t blockEnd;
	uint32_t fileVersion;
	Key lastKey;
	Key lastValue;
};

															#line 7843 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via decodeKVPairs()
															#line 1106 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class DecodeKVPairsActor>
															#line 1106 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class DecodeKVPairsActorState {
															#line 7849 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 1106 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	DecodeKVPairsActorState(StringRefReader* const& reader,Standalone<VectorRef<KeyValueRef>>* const& results,bool const& encryptedBlock,EncryptionAtRestMode const& encryptMode,Optional<int64_t> const& blockDomainId,Optional<Reference<TenantEntryCache<Void>>> const& tenantCache) 
															#line 1106 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 1106 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : reader(reader),
															#line 1106 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   results(results),
															#line 1106 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   encryptedBlock(encryptedBlock),
															#line 1106 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   encryptMode(encryptMode),
															#line 1106 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   blockDomainId(blockDomainId),
															#line 1106 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tenantCache(tenantCache),
															#line 1113 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   kLen(reader->consumeNetworkUInt32()),
															#line 1114 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   k(reader->consume(kLen))
															#line 7870 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("decodeKVPairs", reinterpret_cast<unsigned long>(this));

	}
	~DecodeKVPairsActorState() 
	{
		fdb_probe_actor_destroy("decodeKVPairs", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 1115 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			results->push_back(results->arena(), KeyValueRef(KeyRef(k, kLen), ValueRef()));
															#line 1116 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			prevKey = KeyRef(k, kLen);
															#line 1117 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			done = false;
															#line 1118 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			prevDomainId = Optional<EncryptCipherDomainId>();
															#line 1120 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			;
															#line 7893 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = a_body1loopHead1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~DecodeKVPairsActorState();
		static_cast<DecodeKVPairsActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 1186 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		for( auto b : reader->remainder() ) {
															#line 1187 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (b != 0xFF)
															#line 7918 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 1188 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				return a_body1Catch1(restore_corrupted_data_padding(), loopDepth);
															#line 7922 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
		}
															#line 1190 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<DecodeKVPairsActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~DecodeKVPairsActorState(); static_cast<DecodeKVPairsActor*>(this)->destroy(); return 0; }
															#line 7927 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<DecodeKVPairsActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~DecodeKVPairsActorState();
		static_cast<DecodeKVPairsActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1(int loopDepth) 
	{
															#line 1122 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		kLen = reader->consumeNetworkUInt32();
															#line 1123 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		k = reader->consume(kLen);
															#line 1127 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (encryptedBlock && g_network && g_network->isSimulated())
															#line 7950 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1128 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			ASSERT(blockDomainId.present());
															#line 1129 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			curKey = KeyRef(k, kLen);
															#line 1130 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!prevDomainId.present())
															#line 7958 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 1131 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				StrictFuture<EncryptCipherDomainId> __when_expr_0 = EncryptedRangeFileWriter::getEncryptionDomainDetails( prevKey, encryptMode, tenantCache, SnapshotBackupUseTenantCache::False);
															#line 1131 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (static_cast<DecodeKVPairsActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 7964 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), std::max(0, loopDepth - 1)); else return a_body1loopBody1when1(__when_expr_0.get(), loopDepth); };
				static_cast<DecodeKVPairsActor*>(this)->actor_wait_state = 1;
															#line 1131 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< DecodeKVPairsActor, 0, EncryptCipherDomainId >*>(static_cast<DecodeKVPairsActor*>(this)));
															#line 7969 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				loopDepth = 0;
			}
			else
			{
				loopDepth = a_body1loopBody1cont2(loopDepth);
			}
		}
		else
		{
			loopDepth = a_body1loopBody1cont1(loopDepth);
		}

		return loopDepth;
	}
	int a_body1break1(int loopDepth) 
	{
		try {
			return a_body1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1cont1(int loopDepth) 
	{
															#line 1157 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (reader->eof() || *reader->rptr == 0xFF)
															#line 8001 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1158 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			results->push_back(results->arena(), KeyValueRef(KeyRef(k, kLen), ValueRef()));
															#line 8005 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			return a_body1break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 1163 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		vLen = reader->consumeNetworkUInt32();
															#line 1164 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		v = reader->consume(vLen);
															#line 1165 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (tenantCache.present() && !isSystemKey(KeyRef(k, kLen)))
															#line 8014 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1166 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tenantId = TenantAPI::extractTenantIdFromKeyRef(StringRef(k, kLen));
															#line 1167 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Optional<TenantEntryCachePayload<Void>>> __when_expr_3 = tenantCache.get()->getById(tenantId);
															#line 1167 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<DecodeKVPairsActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 8022 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1Catch1(__when_expr_3.getError(), std::max(0, loopDepth - 1)); else return a_body1loopBody1cont1when1(__when_expr_3.get(), loopDepth); };
			static_cast<DecodeKVPairsActor*>(this)->actor_wait_state = 4;
															#line 1167 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< DecodeKVPairsActor, 3, Optional<TenantEntryCachePayload<Void>> >*>(static_cast<DecodeKVPairsActor*>(this)));
															#line 8027 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
															#line 1177 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			results->push_back(results->arena(), KeyValueRef(KeyRef(k, kLen), ValueRef(v, vLen)));
															#line 8034 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = a_body1loopBody1cont13(loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1cont2(int loopDepth) 
	{
															#line 1135 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<EncryptCipherDomainId> __when_expr_1 = EncryptedRangeFileWriter::getEncryptionDomainDetails( curKey, encryptMode, tenantCache, SnapshotBackupUseTenantCache::False);
															#line 1135 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<DecodeKVPairsActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 8046 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), std::max(0, loopDepth - 1)); else return a_body1loopBody1cont2when1(__when_expr_1.get(), loopDepth); };
		static_cast<DecodeKVPairsActor*>(this)->actor_wait_state = 2;
															#line 1135 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< DecodeKVPairsActor, 1, EncryptCipherDomainId >*>(static_cast<DecodeKVPairsActor*>(this)));
															#line 8051 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont3(EncryptCipherDomainId const& domainId,int loopDepth) 
	{
															#line 1133 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		prevDomainId = domainId;
															#line 8060 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1loopBody1cont2(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont3(EncryptCipherDomainId && domainId,int loopDepth) 
	{
															#line 1133 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		prevDomainId = domainId;
															#line 8069 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1loopBody1cont2(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1when1(EncryptCipherDomainId const& domainId,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont3(domainId, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1when1(EncryptCipherDomainId && domainId,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont3(std::move(domainId), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<DecodeKVPairsActor*>(this)->actor_wait_state > 0) static_cast<DecodeKVPairsActor*>(this)->actor_wait_state = 0;
		static_cast<DecodeKVPairsActor*>(this)->ActorCallback< DecodeKVPairsActor, 0, EncryptCipherDomainId >::remove();

	}
	void a_callback_fire(ActorCallback< DecodeKVPairsActor, 0, EncryptCipherDomainId >*,EncryptCipherDomainId const& value) 
	{
		fdb_probe_actor_enter("decodeKVPairs", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decodeKVPairs", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< DecodeKVPairsActor, 0, EncryptCipherDomainId >*,EncryptCipherDomainId && value) 
	{
		fdb_probe_actor_enter("decodeKVPairs", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decodeKVPairs", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< DecodeKVPairsActor, 0, EncryptCipherDomainId >*,Error err) 
	{
		fdb_probe_actor_enter("decodeKVPairs", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decodeKVPairs", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1loopBody1cont5(int loopDepth) 
	{
															#line 1137 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!curKey.empty() && !prevKey.empty() && prevDomainId.get() != curDomainId)
															#line 8141 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1138 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			ASSERT(!done);
															#line 1140 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (curDomainId != SYSTEM_KEYSPACE_ENCRYPT_DOMAIN_ID && curDomainId != FDB_DEFAULT_ENCRYPT_DOMAIN_ID && curKey.size() != TenantAPI::PREFIX_SIZE)
															#line 8147 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 1142 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				ASSERT(tenantCache.present());
															#line 1143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				StrictFuture<Optional<TenantEntryCachePayload<Void>>> __when_expr_2 = tenantCache.get()->getById(curDomainId);
															#line 1143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (static_cast<DecodeKVPairsActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 8155 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), std::max(0, loopDepth - 1)); else return a_body1loopBody1cont5when1(__when_expr_2.get(), loopDepth); };
				static_cast<DecodeKVPairsActor*>(this)->actor_wait_state = 3;
															#line 1143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< DecodeKVPairsActor, 2, Optional<TenantEntryCachePayload<Void>> >*>(static_cast<DecodeKVPairsActor*>(this)));
															#line 8160 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				loopDepth = 0;
			}
			else
			{
				loopDepth = a_body1loopBody1cont7(loopDepth);
			}
		}
		else
		{
			loopDepth = a_body1loopBody1cont6(loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1cont2when1(EncryptCipherDomainId const& __curDomainId,int loopDepth) 
	{
															#line 1135 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		curDomainId = __curDomainId;
															#line 8179 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1loopBody1cont5(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont2when1(EncryptCipherDomainId && __curDomainId,int loopDepth) 
	{
		curDomainId = std::move(__curDomainId);
		loopDepth = a_body1loopBody1cont5(loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<DecodeKVPairsActor*>(this)->actor_wait_state > 0) static_cast<DecodeKVPairsActor*>(this)->actor_wait_state = 0;
		static_cast<DecodeKVPairsActor*>(this)->ActorCallback< DecodeKVPairsActor, 1, EncryptCipherDomainId >::remove();

	}
	void a_callback_fire(ActorCallback< DecodeKVPairsActor, 1, EncryptCipherDomainId >*,EncryptCipherDomainId const& value) 
	{
		fdb_probe_actor_enter("decodeKVPairs", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decodeKVPairs", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< DecodeKVPairsActor, 1, EncryptCipherDomainId >*,EncryptCipherDomainId && value) 
	{
		fdb_probe_actor_enter("decodeKVPairs", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decodeKVPairs", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< DecodeKVPairsActor, 1, EncryptCipherDomainId >*,Error err) 
	{
		fdb_probe_actor_enter("decodeKVPairs", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decodeKVPairs", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1loopBody1cont6(int loopDepth) 
	{
															#line 1149 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (blockDomainId.get() != FDB_DEFAULT_ENCRYPT_DOMAIN_ID && !prevKey.empty())
															#line 8246 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1150 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			ASSERT_EQ(prevDomainId.get(), blockDomainId.get());
															#line 8250 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 1152 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		prevKey = curKey;
															#line 1153 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		prevDomainId = curDomainId;
															#line 8256 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont7(int loopDepth) 
	{
															#line 1146 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		done = true;
															#line 8265 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1loopBody1cont6(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont8(Optional<TenantEntryCachePayload<Void>> const& payload,int loopDepth) 
	{
															#line 1144 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		ASSERT(!payload.present());
															#line 8274 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1loopBody1cont7(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont8(Optional<TenantEntryCachePayload<Void>> && payload,int loopDepth) 
	{
															#line 1144 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		ASSERT(!payload.present());
															#line 8283 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1loopBody1cont7(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont5when1(Optional<TenantEntryCachePayload<Void>> const& payload,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont8(payload, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont5when1(Optional<TenantEntryCachePayload<Void>> && payload,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont8(std::move(payload), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<DecodeKVPairsActor*>(this)->actor_wait_state > 0) static_cast<DecodeKVPairsActor*>(this)->actor_wait_state = 0;
		static_cast<DecodeKVPairsActor*>(this)->ActorCallback< DecodeKVPairsActor, 2, Optional<TenantEntryCachePayload<Void>> >::remove();

	}
	void a_callback_fire(ActorCallback< DecodeKVPairsActor, 2, Optional<TenantEntryCachePayload<Void>> >*,Optional<TenantEntryCachePayload<Void>> const& value) 
	{
		fdb_probe_actor_enter("decodeKVPairs", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1loopBody1cont5when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decodeKVPairs", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< DecodeKVPairsActor, 2, Optional<TenantEntryCachePayload<Void>> >*,Optional<TenantEntryCachePayload<Void>> && value) 
	{
		fdb_probe_actor_enter("decodeKVPairs", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1loopBody1cont5when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decodeKVPairs", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< DecodeKVPairsActor, 2, Optional<TenantEntryCachePayload<Void>> >*,Error err) 
	{
		fdb_probe_actor_enter("decodeKVPairs", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decodeKVPairs", reinterpret_cast<unsigned long>(this), 2);

	}
	int a_body1loopBody1cont13(int loopDepth) 
	{
															#line 1181 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (reader->eof() || *reader->rptr == 0xFF)
															#line 8355 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
			return a_body1break1(loopDepth==0?0:loopDepth-1); // break
		}
		if (loopDepth == 0) return a_body1loopHead1(0);

		return loopDepth;
	}
	int a_body1loopBody1cont15(Optional<TenantEntryCachePayload<Void>> const& payload,int loopDepth) 
	{
															#line 1170 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!payload.present() && !(reader->eof() || *reader->rptr == 0xFF))
															#line 8367 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1171 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent(SevWarnAlways, "SnapshotRestoreTenantNotFound").detail("TenantId", tenantId);
															#line 1172 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			CODE_PROBE(true, "Snapshot restore tenant not found");
															#line 8373 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		else
		{
															#line 1174 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			results->push_back(results->arena(), KeyValueRef(KeyRef(k, kLen), ValueRef(v, vLen)));
															#line 8379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		loopDepth = a_body1loopBody1cont13(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont15(Optional<TenantEntryCachePayload<Void>> && payload,int loopDepth) 
	{
															#line 1170 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!payload.present() && !(reader->eof() || *reader->rptr == 0xFF))
															#line 8389 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1171 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent(SevWarnAlways, "SnapshotRestoreTenantNotFound").detail("TenantId", tenantId);
															#line 1172 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			CODE_PROBE(true, "Snapshot restore tenant not found");
															#line 8395 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		else
		{
															#line 1174 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			results->push_back(results->arena(), KeyValueRef(KeyRef(k, kLen), ValueRef(v, vLen)));
															#line 8401 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		loopDepth = a_body1loopBody1cont13(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont1when1(Optional<TenantEntryCachePayload<Void>> const& payload,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont15(payload, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont1when1(Optional<TenantEntryCachePayload<Void>> && payload,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont15(std::move(payload), loopDepth);

		return loopDepth;
	}
	void a_exitChoose4() 
	{
		if (static_cast<DecodeKVPairsActor*>(this)->actor_wait_state > 0) static_cast<DecodeKVPairsActor*>(this)->actor_wait_state = 0;
		static_cast<DecodeKVPairsActor*>(this)->ActorCallback< DecodeKVPairsActor, 3, Optional<TenantEntryCachePayload<Void>> >::remove();

	}
	void a_callback_fire(ActorCallback< DecodeKVPairsActor, 3, Optional<TenantEntryCachePayload<Void>> >*,Optional<TenantEntryCachePayload<Void>> const& value) 
	{
		fdb_probe_actor_enter("decodeKVPairs", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1loopBody1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decodeKVPairs", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_fire(ActorCallback< DecodeKVPairsActor, 3, Optional<TenantEntryCachePayload<Void>> >*,Optional<TenantEntryCachePayload<Void>> && value) 
	{
		fdb_probe_actor_enter("decodeKVPairs", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1loopBody1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decodeKVPairs", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_error(ActorCallback< DecodeKVPairsActor, 3, Optional<TenantEntryCachePayload<Void>> >*,Error err) 
	{
		fdb_probe_actor_enter("decodeKVPairs", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decodeKVPairs", reinterpret_cast<unsigned long>(this), 3);

	}
															#line 1106 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	StringRefReader* reader;
															#line 1106 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Standalone<VectorRef<KeyValueRef>>* results;
															#line 1106 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	bool encryptedBlock;
															#line 1106 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	EncryptionAtRestMode encryptMode;
															#line 1106 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<int64_t> blockDomainId;
															#line 1106 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<Reference<TenantEntryCache<Void>>> tenantCache;
															#line 1113 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	uint32_t kLen;
															#line 1114 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	const uint8_t* k;
															#line 1116 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	KeyRef prevKey;
															#line 1117 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	bool done;
															#line 1118 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<EncryptCipherDomainId> prevDomainId;
															#line 1129 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	KeyRef curKey;
															#line 1135 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	EncryptCipherDomainId curDomainId;
															#line 1163 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	uint32_t vLen;
															#line 1164 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	const uint8_t* v;
															#line 1166 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int64_t tenantId;
															#line 8502 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via decodeKVPairs()
															#line 1106 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class DecodeKVPairsActor final : public Actor<Void>, public ActorCallback< DecodeKVPairsActor, 0, EncryptCipherDomainId >, public ActorCallback< DecodeKVPairsActor, 1, EncryptCipherDomainId >, public ActorCallback< DecodeKVPairsActor, 2, Optional<TenantEntryCachePayload<Void>> >, public ActorCallback< DecodeKVPairsActor, 3, Optional<TenantEntryCachePayload<Void>> >, public FastAllocated<DecodeKVPairsActor>, public DecodeKVPairsActorState<DecodeKVPairsActor> {
															#line 8507 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<DecodeKVPairsActor>::operator new;
	using FastAllocated<DecodeKVPairsActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< DecodeKVPairsActor, 0, EncryptCipherDomainId >;
friend struct ActorCallback< DecodeKVPairsActor, 1, EncryptCipherDomainId >;
friend struct ActorCallback< DecodeKVPairsActor, 2, Optional<TenantEntryCachePayload<Void>> >;
friend struct ActorCallback< DecodeKVPairsActor, 3, Optional<TenantEntryCachePayload<Void>> >;
															#line 1106 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	DecodeKVPairsActor(StringRefReader* const& reader,Standalone<VectorRef<KeyValueRef>>* const& results,bool const& encryptedBlock,EncryptionAtRestMode const& encryptMode,Optional<int64_t> const& blockDomainId,Optional<Reference<TenantEntryCache<Void>>> const& tenantCache) 
															#line 8521 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   DecodeKVPairsActorState<DecodeKVPairsActor>(reader, results, encryptedBlock, encryptMode, blockDomainId, tenantCache)
	{
		fdb_probe_actor_enter("decodeKVPairs", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("decodeKVPairs");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("decodeKVPairs", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< DecodeKVPairsActor, 0, EncryptCipherDomainId >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< DecodeKVPairsActor, 1, EncryptCipherDomainId >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< DecodeKVPairsActor, 2, Optional<TenantEntryCachePayload<Void>> >*)0, actor_cancelled()); break;
		case 4: this->a_callback_error((ActorCallback< DecodeKVPairsActor, 3, Optional<TenantEntryCachePayload<Void>> >*)0, actor_cancelled()); break;
		}

	}
};
															#line 1106 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> decodeKVPairs( StringRefReader* const& reader, Standalone<VectorRef<KeyValueRef>>* const& results, bool const& encryptedBlock, EncryptionAtRestMode const& encryptMode, Optional<int64_t> const& blockDomainId, Optional<Reference<TenantEntryCache<Void>>> const& tenantCache ) {
															#line 1106 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new DecodeKVPairsActor(reader, results, encryptedBlock, encryptMode, blockDomainId, tenantCache));
															#line 8551 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 1192 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

static Reference<IBackupContainer> getBackupContainerWithProxy(Reference<IBackupContainer> _bc) {
	Reference<IBackupContainer> bc = IBackupContainer::openContainer(_bc->getURL(), fileBackupAgentProxy, {});
	return bc;
}

Standalone<VectorRef<KeyValueRef>> decodeRangeFileBlock(const Standalone<StringRef>& buf) {
	Standalone<VectorRef<KeyValueRef>> results({}, buf.arena());
	StringRefReader reader(buf, restore_corrupted_data());

	// Read header, currently only decoding BACKUP_AGENT_SNAPSHOT_FILE_VERSION
	if (reader.consume<int32_t>() != BACKUP_AGENT_SNAPSHOT_FILE_VERSION)
		throw restore_unsupported_file_version();

	// Read begin key, if this fails then block was invalid.
	uint32_t kLen = reader.consumeNetworkUInt32();
	const uint8_t* k = reader.consume(kLen);
	results.push_back(results.arena(), KeyValueRef(KeyRef(k, kLen), ValueRef()));

	// Read kv pairs and end key
	while (1) {
		// If eof reached or first value len byte is 0xFF then a valid block end was reached.
		if (reader.eof() || *reader.rptr == 0xFF) {
			break;
		}

		// Read a value, which must exist or the block is invalid
		uint32_t vLen = reader.consumeNetworkUInt32();
		const uint8_t* v = reader.consume(vLen);
		results.push_back(results.arena(), KeyValueRef(KeyRef(k, kLen), ValueRef(v, vLen)));
	}

	// Make sure any remaining bytes in the block are 0xFF
	for (auto b : reader.remainder())
		if (b != 0xFF)
			throw restore_corrupted_data_padding();

	return results;
}

															#line 8595 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via decodeRangeFileBlock()
															#line 1232 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class DecodeRangeFileBlockActor>
															#line 1232 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class DecodeRangeFileBlockActorState {
															#line 8601 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 1232 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	DecodeRangeFileBlockActorState(Reference<IAsyncFile> const& file,int64_t const& offset,int const& len,Database const& cx) 
															#line 1232 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 1232 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : file(file),
															#line 1232 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   offset(offset),
															#line 1232 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   len(len),
															#line 1232 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   cx(cx),
															#line 1236 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   buf(makeString(len))
															#line 8616 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this));

	}
	~DecodeRangeFileBlockActorState() 
	{
		fdb_probe_actor_destroy("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 1237 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<int> __when_expr_0 = uncancellable(holdWhile(buf, file->read(mutateString(buf), len, offset)));
															#line 1237 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<DecodeRangeFileBlockActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 8633 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<DecodeRangeFileBlockActor*>(this)->actor_wait_state = 1;
															#line 1237 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< DecodeRangeFileBlockActor, 0, int >*>(static_cast<DecodeRangeFileBlockActor*>(this)));
															#line 8638 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~DecodeRangeFileBlockActorState();
		static_cast<DecodeRangeFileBlockActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int const& rLen,int loopDepth) 
	{
															#line 1238 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (rLen != len)
															#line 8661 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1239 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			return a_body1Catch1(restore_bad_read(), loopDepth);
															#line 8665 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 1241 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		simulateBlobFailure();
															#line 1243 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		results = Standalone<VectorRef<KeyValueRef>>({}, buf.arena());
															#line 1244 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		reader = StringRefReader(buf, restore_corrupted_data());
															#line 1245 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		arena = Arena();
															#line 1246 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<DatabaseConfiguration> __when_expr_1 = getDatabaseConfiguration(cx);
															#line 1246 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<DecodeRangeFileBlockActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 8679 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<DecodeRangeFileBlockActor*>(this)->actor_wait_state = 2;
															#line 1246 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< DecodeRangeFileBlockActor, 1, DatabaseConfiguration >*>(static_cast<DecodeRangeFileBlockActor*>(this)));
															#line 8684 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int && rLen,int loopDepth) 
	{
															#line 1238 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (rLen != len)
															#line 8693 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1239 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			return a_body1Catch1(restore_bad_read(), loopDepth);
															#line 8697 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 1241 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		simulateBlobFailure();
															#line 1243 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		results = Standalone<VectorRef<KeyValueRef>>({}, buf.arena());
															#line 1244 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		reader = StringRefReader(buf, restore_corrupted_data());
															#line 1245 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		arena = Arena();
															#line 1246 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<DatabaseConfiguration> __when_expr_1 = getDatabaseConfiguration(cx);
															#line 1246 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<DecodeRangeFileBlockActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 8711 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<DecodeRangeFileBlockActor*>(this)->actor_wait_state = 2;
															#line 1246 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< DecodeRangeFileBlockActor, 1, DatabaseConfiguration >*>(static_cast<DecodeRangeFileBlockActor*>(this)));
															#line 8716 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1when1(int const& rLen,int loopDepth) 
	{
		loopDepth = a_body1cont1(rLen, loopDepth);

		return loopDepth;
	}
	int a_body1when1(int && rLen,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(rLen), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<DecodeRangeFileBlockActor*>(this)->actor_wait_state > 0) static_cast<DecodeRangeFileBlockActor*>(this)->actor_wait_state = 0;
		static_cast<DecodeRangeFileBlockActor*>(this)->ActorCallback< DecodeRangeFileBlockActor, 0, int >::remove();

	}
	void a_callback_fire(ActorCallback< DecodeRangeFileBlockActor, 0, int >*,int const& value) 
	{
		fdb_probe_actor_enter("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< DecodeRangeFileBlockActor, 0, int >*,int && value) 
	{
		fdb_probe_actor_enter("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< DecodeRangeFileBlockActor, 0, int >*,Error err) 
	{
		fdb_probe_actor_enter("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont2(int loopDepth) 
	{
															#line 1247 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tenantCache = Optional<Reference<TenantEntryCache<Void>>>();
															#line 1248 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (config.tenantMode == TenantMode::REQUIRED)
															#line 8790 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1249 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tenantCache = makeReference<TenantEntryCache<Void>>(cx, TenantEntryCacheRefreshMode::WATCH);
															#line 1250 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_2 = tenantCache.get()->init();
															#line 1250 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<DecodeRangeFileBlockActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 8798 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont2when1(__when_expr_2.get(), loopDepth); };
			static_cast<DecodeRangeFileBlockActor*>(this)->actor_wait_state = 3;
															#line 1250 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< DecodeRangeFileBlockActor, 2, Void >*>(static_cast<DecodeRangeFileBlockActor*>(this)));
															#line 8803 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont4(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont1when1(DatabaseConfiguration const& __config,int loopDepth) 
	{
															#line 1246 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config = __config;
															#line 8817 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont2(loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(DatabaseConfiguration && __config,int loopDepth) 
	{
		config = std::move(__config);
		loopDepth = a_body1cont2(loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<DecodeRangeFileBlockActor*>(this)->actor_wait_state > 0) static_cast<DecodeRangeFileBlockActor*>(this)->actor_wait_state = 0;
		static_cast<DecodeRangeFileBlockActor*>(this)->ActorCallback< DecodeRangeFileBlockActor, 1, DatabaseConfiguration >::remove();

	}
	void a_callback_fire(ActorCallback< DecodeRangeFileBlockActor, 1, DatabaseConfiguration >*,DatabaseConfiguration const& value) 
	{
		fdb_probe_actor_enter("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< DecodeRangeFileBlockActor, 1, DatabaseConfiguration >*,DatabaseConfiguration && value) 
	{
		fdb_probe_actor_enter("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< DecodeRangeFileBlockActor, 1, DatabaseConfiguration >*,Error err) 
	{
		fdb_probe_actor_enter("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont4(int loopDepth) 
	{
															#line 1252 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		encryptMode = config.encryptionAtRestMode;
															#line 1253 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		blockDomainId = TenantInfo::INVALID_TENANT;
															#line 8886 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		try {
															#line 1258 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			int32_t file_version = reader.consume<int32_t>();
															#line 1259 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			ASSERT(!encryptMode.isEncryptionEnabled() || file_version == BACKUP_AGENT_ENCRYPTED_SNAPSHOT_FILE_VERSION);
															#line 1260 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (file_version == BACKUP_AGENT_SNAPSHOT_FILE_VERSION)
															#line 8894 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 1261 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				StrictFuture<Void> __when_expr_3 = decodeKVPairs(&reader, &results, false, encryptMode, Optional<int64_t>(), tenantCache);
															#line 1261 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (static_cast<DecodeRangeFileBlockActor*>(this)->actor_wait_state < 0) return a_body1cont4Catch1(actor_cancelled(), loopDepth);
															#line 8900 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1cont4Catch1(__when_expr_3.getError(), loopDepth); else return a_body1cont4when1(__when_expr_3.get(), loopDepth); };
				static_cast<DecodeRangeFileBlockActor*>(this)->actor_wait_state = 4;
															#line 1261 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< DecodeRangeFileBlockActor, 3, Void >*>(static_cast<DecodeRangeFileBlockActor*>(this)));
															#line 8905 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				loopDepth = 0;
			}
			else
			{
															#line 1262 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (file_version == BACKUP_AGENT_ENCRYPTED_SNAPSHOT_FILE_VERSION)
															#line 8912 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				{
															#line 1263 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					CODE_PROBE(true, "decoding encrypted block");
															#line 1265 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					optionsLen = reader.consumeNetworkUInt32();
															#line 1266 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					const uint8_t* o = reader.consume(optionsLen);
															#line 1267 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					StringRef optionsStringRef = StringRef(o, optionsLen);
															#line 1268 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					EncryptedRangeFileWriter::Options options = ObjectReader::fromStringRef<EncryptedRangeFileWriter::Options>(optionsStringRef, IncludeVersion());
															#line 1271 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					headerLen = reader.consume<uint32_t>();
															#line 1273 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					headerStart = reader.consume(headerLen);
															#line 1274 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					StringRef headerS = StringRef(headerStart, headerLen);
															#line 1275 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					encryptHeader = std::variant<BlobCipherEncryptHeaderRef, BlobCipherEncryptHeader>();
															#line 1276 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					if (options.configurableEncryptionEnabled)
															#line 8934 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
					{
															#line 1277 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
						encryptHeader = BlobCipherEncryptHeaderRef::fromStringRef(headerS);
															#line 1278 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
						blockDomainId = std::get<BlobCipherEncryptHeaderRef>(encryptHeader) .getCipherDetails() .textCipherDetails.encryptDomainId;
															#line 8940 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
					}
					else
					{
															#line 1282 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
						encryptHeader = BlobCipherEncryptHeader::fromStringRef(headerS);
															#line 1283 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
						blockDomainId = std::get<BlobCipherEncryptHeader>(encryptHeader).cipherTextDetails.encryptDomainId;
															#line 8948 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
					}
															#line 1286 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					if (config.tenantMode == TenantMode::REQUIRED && !isReservedEncryptDomain(blockDomainId))
															#line 8952 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
					{
															#line 1287 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
						ASSERT(tenantCache.present());
															#line 1288 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
						StrictFuture<Optional<TenantEntryCachePayload<Void>>> __when_expr_4 = tenantCache.get()->getById(blockDomainId);
															#line 1288 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
						if (static_cast<DecodeRangeFileBlockActor*>(this)->actor_wait_state < 0) return a_body1cont4Catch1(actor_cancelled(), loopDepth);
															#line 8960 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
						if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1cont4Catch1(__when_expr_4.getError(), loopDepth); else return a_body1cont4when2(__when_expr_4.get(), loopDepth); };
						static_cast<DecodeRangeFileBlockActor*>(this)->actor_wait_state = 5;
															#line 1288 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
						__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< DecodeRangeFileBlockActor, 4, Optional<TenantEntryCachePayload<Void>> >*>(static_cast<DecodeRangeFileBlockActor*>(this)));
															#line 8965 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
						loopDepth = 0;
					}
					else
					{
						loopDepth = a_body1cont10(loopDepth);
					}
				}
				else
				{
															#line 1303 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					return a_body1cont4Catch1(restore_unsupported_file_version(), loopDepth);
															#line 8977 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				}
			}
		}
		catch (Error& error) {
			loopDepth = a_body1cont4Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1cont4Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont5(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont4(loopDepth);

		return loopDepth;
	}
	int a_body1cont5(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont4(loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont5(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont5(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<DecodeRangeFileBlockActor*>(this)->actor_wait_state > 0) static_cast<DecodeRangeFileBlockActor*>(this)->actor_wait_state = 0;
		static_cast<DecodeRangeFileBlockActor*>(this)->ActorCallback< DecodeRangeFileBlockActor, 2, Void >::remove();

	}
	void a_callback_fire(ActorCallback< DecodeRangeFileBlockActor, 2, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< DecodeRangeFileBlockActor, 2, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< DecodeRangeFileBlockActor, 2, Void >*,Error err) 
	{
		fdb_probe_actor_enter("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 2);

	}
	int a_body1cont4Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 1307 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (e.code() == error_code_encrypt_keys_fetch_failed || e.code() == error_code_encrypt_key_not_found)
															#line 9069 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 1308 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				ASSERT(!isReservedEncryptDomain(blockDomainId));
															#line 1309 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				TraceEvent(SevWarnAlways, "SnapshotRestoreEncryptKeyFetchFailed").detail("TenantId", blockDomainId);
															#line 1310 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				CODE_PROBE(true, "Snapshot restore encrypt keys not found");
															#line 9077 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
			else
			{
															#line 1311 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (e.code() == error_code_tenant_not_found)
															#line 9083 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				{
															#line 1312 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					ASSERT(!isReservedEncryptDomain(blockDomainId));
															#line 1313 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					TraceEvent(SevWarnAlways, "EncryptedSnapshotRestoreTenantNotFound").detail("TenantId", blockDomainId);
															#line 1314 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					CODE_PROBE(true, "Encrypted Snapshot restore tenant not found");
															#line 9091 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				}
			}
															#line 1316 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent(SevWarn, "FileRestoreDecodeRangeFileBlockFailed") .error(e) .detail("Filename", file->getFilename()) .detail("BlockOffset", offset) .detail("BlockLen", len) .detail("ErrorRelativeOffset", reader.rptr - buf.begin()) .detail("ErrorAbsoluteOffset", reader.rptr - buf.begin() + offset);
															#line 1323 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			return a_body1Catch1(e, loopDepth);
															#line 9098 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont7(int loopDepth) 
	{
															#line 1305 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<DecodeRangeFileBlockActor*>(this)->SAV<Standalone<VectorRef<KeyValueRef>>>::futures) { (void)(results); this->~DecodeRangeFileBlockActorState(); static_cast<DecodeRangeFileBlockActor*>(this)->destroy(); return 0; }
															#line 9112 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<DecodeRangeFileBlockActor*>(this)->SAV< Standalone<VectorRef<KeyValueRef>> >::value()) Standalone<VectorRef<KeyValueRef>>(std::move(results)); // state_var_RVO
		this->~DecodeRangeFileBlockActorState();
		static_cast<DecodeRangeFileBlockActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont8(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont7(loopDepth);

		return loopDepth;
	}
	int a_body1cont8(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont7(loopDepth);

		return loopDepth;
	}
	int a_body1cont4when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont8(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont4when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont8(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose4() 
	{
		if (static_cast<DecodeRangeFileBlockActor*>(this)->actor_wait_state > 0) static_cast<DecodeRangeFileBlockActor*>(this)->actor_wait_state = 0;
		static_cast<DecodeRangeFileBlockActor*>(this)->ActorCallback< DecodeRangeFileBlockActor, 3, Void >::remove();

	}
	void a_callback_fire(ActorCallback< DecodeRangeFileBlockActor, 3, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont4when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont4Catch1(error, 0);
		} catch (...) {
			a_body1cont4Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_fire(ActorCallback< DecodeRangeFileBlockActor, 3, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont4when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont4Catch1(error, 0);
		} catch (...) {
			a_body1cont4Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_error(ActorCallback< DecodeRangeFileBlockActor, 3, Void >*,Error err) 
	{
		fdb_probe_actor_enter("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont4Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont4Catch1(error, 0);
		} catch (...) {
			a_body1cont4Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 3);

	}
	int a_body1cont9(int loopDepth) 
	{
		loopDepth = a_body1cont7(loopDepth);

		return loopDepth;
	}
	int a_body1cont10(int loopDepth) 
	{
															#line 1293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		const uint8_t* dataPayloadStart = headerStart + headerLen;
															#line 1295 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		int64_t bytesRead = sizeof(int32_t) + sizeof(uint32_t) + sizeof(uint32_t) + optionsLen + headerLen;
															#line 1297 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		int64_t dataLen = len - bytesRead;
															#line 1298 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<StringRef> __when_expr_5 = EncryptedRangeFileWriter::decrypt(cx, encryptHeader, dataPayloadStart, dataLen, &results.arena());
															#line 1298 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<DecodeRangeFileBlockActor*>(this)->actor_wait_state < 0) return a_body1cont4Catch1(actor_cancelled(), loopDepth);
															#line 9213 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_5.isReady()) { if (__when_expr_5.isError()) return a_body1cont4Catch1(__when_expr_5.getError(), loopDepth); else return a_body1cont10when1(__when_expr_5.get(), loopDepth); };
		static_cast<DecodeRangeFileBlockActor*>(this)->actor_wait_state = 6;
															#line 1298 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_5.addCallbackAndClear(static_cast<ActorCallback< DecodeRangeFileBlockActor, 5, StringRef >*>(static_cast<DecodeRangeFileBlockActor*>(this)));
															#line 9218 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont13(Optional<TenantEntryCachePayload<Void>> const& payload,int loopDepth) 
	{
															#line 1289 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!payload.present())
															#line 9227 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1290 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			return a_body1cont4Catch1(tenant_not_found(), loopDepth);
															#line 9231 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		loopDepth = a_body1cont10(loopDepth);

		return loopDepth;
	}
	int a_body1cont13(Optional<TenantEntryCachePayload<Void>> && payload,int loopDepth) 
	{
															#line 1289 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!payload.present())
															#line 9241 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1290 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			return a_body1cont4Catch1(tenant_not_found(), loopDepth);
															#line 9245 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		loopDepth = a_body1cont10(loopDepth);

		return loopDepth;
	}
	int a_body1cont4when2(Optional<TenantEntryCachePayload<Void>> const& payload,int loopDepth) 
	{
		loopDepth = a_body1cont13(payload, loopDepth);

		return loopDepth;
	}
	int a_body1cont4when2(Optional<TenantEntryCachePayload<Void>> && payload,int loopDepth) 
	{
		loopDepth = a_body1cont13(std::move(payload), loopDepth);

		return loopDepth;
	}
	void a_exitChoose5() 
	{
		if (static_cast<DecodeRangeFileBlockActor*>(this)->actor_wait_state > 0) static_cast<DecodeRangeFileBlockActor*>(this)->actor_wait_state = 0;
		static_cast<DecodeRangeFileBlockActor*>(this)->ActorCallback< DecodeRangeFileBlockActor, 4, Optional<TenantEntryCachePayload<Void>> >::remove();

	}
	void a_callback_fire(ActorCallback< DecodeRangeFileBlockActor, 4, Optional<TenantEntryCachePayload<Void>> >*,Optional<TenantEntryCachePayload<Void>> const& value) 
	{
		fdb_probe_actor_enter("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont4when2(value, 0);
		}
		catch (Error& error) {
			a_body1cont4Catch1(error, 0);
		} catch (...) {
			a_body1cont4Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_fire(ActorCallback< DecodeRangeFileBlockActor, 4, Optional<TenantEntryCachePayload<Void>> >*,Optional<TenantEntryCachePayload<Void>> && value) 
	{
		fdb_probe_actor_enter("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont4when2(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont4Catch1(error, 0);
		} catch (...) {
			a_body1cont4Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_error(ActorCallback< DecodeRangeFileBlockActor, 4, Optional<TenantEntryCachePayload<Void>> >*,Error err) 
	{
		fdb_probe_actor_enter("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont4Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont4Catch1(error, 0);
		} catch (...) {
			a_body1cont4Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 4);

	}
	int a_body1cont10cont1(StringRef const& decryptedData,int loopDepth) 
	{
															#line 1300 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		reader = StringRefReader(decryptedData, restore_corrupted_data());
															#line 1301 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_6 = decodeKVPairs(&reader, &results, true, encryptMode, blockDomainId, tenantCache);
															#line 1301 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<DecodeRangeFileBlockActor*>(this)->actor_wait_state < 0) return a_body1cont4Catch1(actor_cancelled(), loopDepth);
															#line 9322 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_6.isReady()) { if (__when_expr_6.isError()) return a_body1cont4Catch1(__when_expr_6.getError(), loopDepth); else return a_body1cont10cont1when1(__when_expr_6.get(), loopDepth); };
		static_cast<DecodeRangeFileBlockActor*>(this)->actor_wait_state = 7;
															#line 1301 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_6.addCallbackAndClear(static_cast<ActorCallback< DecodeRangeFileBlockActor, 6, Void >*>(static_cast<DecodeRangeFileBlockActor*>(this)));
															#line 9327 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont10cont1(StringRef && decryptedData,int loopDepth) 
	{
															#line 1300 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		reader = StringRefReader(decryptedData, restore_corrupted_data());
															#line 1301 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_6 = decodeKVPairs(&reader, &results, true, encryptMode, blockDomainId, tenantCache);
															#line 1301 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<DecodeRangeFileBlockActor*>(this)->actor_wait_state < 0) return a_body1cont4Catch1(actor_cancelled(), loopDepth);
															#line 9340 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_6.isReady()) { if (__when_expr_6.isError()) return a_body1cont4Catch1(__when_expr_6.getError(), loopDepth); else return a_body1cont10cont1when1(__when_expr_6.get(), loopDepth); };
		static_cast<DecodeRangeFileBlockActor*>(this)->actor_wait_state = 7;
															#line 1301 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_6.addCallbackAndClear(static_cast<ActorCallback< DecodeRangeFileBlockActor, 6, Void >*>(static_cast<DecodeRangeFileBlockActor*>(this)));
															#line 9345 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont10when1(StringRef const& decryptedData,int loopDepth) 
	{
		loopDepth = a_body1cont10cont1(decryptedData, loopDepth);

		return loopDepth;
	}
	int a_body1cont10when1(StringRef && decryptedData,int loopDepth) 
	{
		loopDepth = a_body1cont10cont1(std::move(decryptedData), loopDepth);

		return loopDepth;
	}
	void a_exitChoose6() 
	{
		if (static_cast<DecodeRangeFileBlockActor*>(this)->actor_wait_state > 0) static_cast<DecodeRangeFileBlockActor*>(this)->actor_wait_state = 0;
		static_cast<DecodeRangeFileBlockActor*>(this)->ActorCallback< DecodeRangeFileBlockActor, 5, StringRef >::remove();

	}
	void a_callback_fire(ActorCallback< DecodeRangeFileBlockActor, 5, StringRef >*,StringRef const& value) 
	{
		fdb_probe_actor_enter("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont10when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont4Catch1(error, 0);
		} catch (...) {
			a_body1cont4Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_fire(ActorCallback< DecodeRangeFileBlockActor, 5, StringRef >*,StringRef && value) 
	{
		fdb_probe_actor_enter("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont10when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont4Catch1(error, 0);
		} catch (...) {
			a_body1cont4Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_error(ActorCallback< DecodeRangeFileBlockActor, 5, StringRef >*,Error err) 
	{
		fdb_probe_actor_enter("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont4Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont4Catch1(error, 0);
		} catch (...) {
			a_body1cont4Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 5);

	}
	int a_body1cont10cont2(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont9(loopDepth);

		return loopDepth;
	}
	int a_body1cont10cont2(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont9(loopDepth);

		return loopDepth;
	}
	int a_body1cont10cont1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont10cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont10cont1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont10cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose7() 
	{
		if (static_cast<DecodeRangeFileBlockActor*>(this)->actor_wait_state > 0) static_cast<DecodeRangeFileBlockActor*>(this)->actor_wait_state = 0;
		static_cast<DecodeRangeFileBlockActor*>(this)->ActorCallback< DecodeRangeFileBlockActor, 6, Void >::remove();

	}
	void a_callback_fire(ActorCallback< DecodeRangeFileBlockActor, 6, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1cont10cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont4Catch1(error, 0);
		} catch (...) {
			a_body1cont4Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 6);

	}
	void a_callback_fire(ActorCallback< DecodeRangeFileBlockActor, 6, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1cont10cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont4Catch1(error, 0);
		} catch (...) {
			a_body1cont4Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 6);

	}
	void a_callback_error(ActorCallback< DecodeRangeFileBlockActor, 6, Void >*,Error err) 
	{
		fdb_probe_actor_enter("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1cont4Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont4Catch1(error, 0);
		} catch (...) {
			a_body1cont4Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), 6);

	}
															#line 1232 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<IAsyncFile> file;
															#line 1232 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int64_t offset;
															#line 1232 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int len;
															#line 1232 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Database cx;
															#line 1236 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Standalone<StringRef> buf;
															#line 1243 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Standalone<VectorRef<KeyValueRef>> results;
															#line 1244 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	StringRefReader reader;
															#line 1245 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Arena arena;
															#line 1246 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	DatabaseConfiguration config;
															#line 1247 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<Reference<TenantEntryCache<Void>>> tenantCache;
															#line 1252 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	EncryptionAtRestMode encryptMode;
															#line 1253 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int64_t blockDomainId;
															#line 1265 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	uint32_t optionsLen;
															#line 1271 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	uint32_t headerLen;
															#line 1273 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	const uint8_t* headerStart;
															#line 1275 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::variant<BlobCipherEncryptHeaderRef, BlobCipherEncryptHeader> encryptHeader;
															#line 9520 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via decodeRangeFileBlock()
															#line 1232 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class DecodeRangeFileBlockActor final : public Actor<Standalone<VectorRef<KeyValueRef>>>, public ActorCallback< DecodeRangeFileBlockActor, 0, int >, public ActorCallback< DecodeRangeFileBlockActor, 1, DatabaseConfiguration >, public ActorCallback< DecodeRangeFileBlockActor, 2, Void >, public ActorCallback< DecodeRangeFileBlockActor, 3, Void >, public ActorCallback< DecodeRangeFileBlockActor, 4, Optional<TenantEntryCachePayload<Void>> >, public ActorCallback< DecodeRangeFileBlockActor, 5, StringRef >, public ActorCallback< DecodeRangeFileBlockActor, 6, Void >, public FastAllocated<DecodeRangeFileBlockActor>, public DecodeRangeFileBlockActorState<DecodeRangeFileBlockActor> {
															#line 9525 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<DecodeRangeFileBlockActor>::operator new;
	using FastAllocated<DecodeRangeFileBlockActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Standalone<VectorRef<KeyValueRef>>>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< DecodeRangeFileBlockActor, 0, int >;
friend struct ActorCallback< DecodeRangeFileBlockActor, 1, DatabaseConfiguration >;
friend struct ActorCallback< DecodeRangeFileBlockActor, 2, Void >;
friend struct ActorCallback< DecodeRangeFileBlockActor, 3, Void >;
friend struct ActorCallback< DecodeRangeFileBlockActor, 4, Optional<TenantEntryCachePayload<Void>> >;
friend struct ActorCallback< DecodeRangeFileBlockActor, 5, StringRef >;
friend struct ActorCallback< DecodeRangeFileBlockActor, 6, Void >;
															#line 1232 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	DecodeRangeFileBlockActor(Reference<IAsyncFile> const& file,int64_t const& offset,int const& len,Database const& cx) 
															#line 9542 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Standalone<VectorRef<KeyValueRef>>>(),
		   DecodeRangeFileBlockActorState<DecodeRangeFileBlockActor>(file, offset, len, cx)
	{
		fdb_probe_actor_enter("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("decodeRangeFileBlock");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("decodeRangeFileBlock", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< DecodeRangeFileBlockActor, 0, int >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< DecodeRangeFileBlockActor, 1, DatabaseConfiguration >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< DecodeRangeFileBlockActor, 2, Void >*)0, actor_cancelled()); break;
		case 4: this->a_callback_error((ActorCallback< DecodeRangeFileBlockActor, 3, Void >*)0, actor_cancelled()); break;
		case 5: this->a_callback_error((ActorCallback< DecodeRangeFileBlockActor, 4, Optional<TenantEntryCachePayload<Void>> >*)0, actor_cancelled()); break;
		case 6: this->a_callback_error((ActorCallback< DecodeRangeFileBlockActor, 5, StringRef >*)0, actor_cancelled()); break;
		case 7: this->a_callback_error((ActorCallback< DecodeRangeFileBlockActor, 6, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 1232 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] Future<Standalone<VectorRef<KeyValueRef>>> decodeRangeFileBlock( Reference<IAsyncFile> const& file, int64_t const& offset, int const& len, Database const& cx ) {
															#line 1232 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Standalone<VectorRef<KeyValueRef>>>(new DecodeRangeFileBlockActor(file, offset, len, cx));
															#line 9575 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 1326 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

// Very simple format compared to KeyRange files.
// Header, [Key, Value]... Key len
struct LogFileWriter {
	LogFileWriter(Reference<IBackupFile> file = Reference<IBackupFile>(), int blockSize = 0)
	  : file(file), blockSize(blockSize), blockEnd(0) {}

	// Start a new block if needed, then write the key and value
																#line 9587 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via writeKV_impl()
															#line 1334 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class WriteKV_implActor2>
															#line 1334 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class WriteKV_implActor2State {
															#line 9593 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 1334 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	WriteKV_implActor2State(LogFileWriter* const& self,Key const& k,Value const& v) 
															#line 1334 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 1334 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : self(self),
															#line 1334 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   k(k),
															#line 1334 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   v(v)
															#line 9604 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("writeKV_impl", reinterpret_cast<unsigned long>(this));

	}
	~WriteKV_implActor2State() 
	{
		fdb_probe_actor_destroy("writeKV_impl", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 1336 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			int toWrite = sizeof(int32_t) + k.size() + sizeof(int32_t) + v.size();
															#line 1337 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (self->file->size() + toWrite > self->blockEnd)
															#line 9621 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 1339 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				int bytesLeft = self->blockEnd - self->file->size();
															#line 1340 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (bytesLeft > 0)
															#line 9627 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				{
															#line 1341 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					paddingFFs = makePadding(bytesLeft);
															#line 1342 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					StrictFuture<Void> __when_expr_0 = self->file->append(paddingFFs.begin(), bytesLeft);
															#line 1342 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					if (static_cast<WriteKV_implActor2*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 9635 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
					if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
					static_cast<WriteKV_implActor2*>(this)->actor_wait_state = 1;
															#line 1342 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< WriteKV_implActor2, 0, Void >*>(static_cast<WriteKV_implActor2*>(this)));
															#line 9640 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
					loopDepth = 0;
				}
				else
				{
					loopDepth = a_body1cont2(loopDepth);
				}
			}
			else
			{
				loopDepth = a_body1cont1(loopDepth);
			}
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~WriteKV_implActor2State();
		static_cast<WriteKV_implActor2*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 1352 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_2 = self->file->appendStringRefWithLen(k);
															#line 1352 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<WriteKV_implActor2*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 9675 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont1when1(__when_expr_2.get(), loopDepth); };
		static_cast<WriteKV_implActor2*>(this)->actor_wait_state = 3;
															#line 1352 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< WriteKV_implActor2, 2, Void >*>(static_cast<WriteKV_implActor2*>(this)));
															#line 9680 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont2(int loopDepth) 
	{
															#line 1346 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		self->blockEnd += self->blockSize;
															#line 1349 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = self->file->append((uint8_t*)&BACKUP_AGENT_MLOG_VERSION, sizeof(BACKUP_AGENT_MLOG_VERSION));
															#line 1349 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<WriteKV_implActor2*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 9693 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont2when1(__when_expr_1.get(), loopDepth); };
		static_cast<WriteKV_implActor2*>(this)->actor_wait_state = 2;
															#line 1349 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< WriteKV_implActor2, 1, Void >*>(static_cast<WriteKV_implActor2*>(this)));
															#line 9698 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont3(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2(loopDepth);

		return loopDepth;
	}
	int a_body1cont3(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2(loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<WriteKV_implActor2*>(this)->actor_wait_state > 0) static_cast<WriteKV_implActor2*>(this)->actor_wait_state = 0;
		static_cast<WriteKV_implActor2*>(this)->ActorCallback< WriteKV_implActor2, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< WriteKV_implActor2, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("writeKV_impl", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKV_impl", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< WriteKV_implActor2, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("writeKV_impl", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKV_impl", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< WriteKV_implActor2, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("writeKV_impl", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKV_impl", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont4(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont4(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont4(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont4(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<WriteKV_implActor2*>(this)->actor_wait_state > 0) static_cast<WriteKV_implActor2*>(this)->actor_wait_state = 0;
		static_cast<WriteKV_implActor2*>(this)->ActorCallback< WriteKV_implActor2, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< WriteKV_implActor2, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("writeKV_impl", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKV_impl", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< WriteKV_implActor2, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("writeKV_impl", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKV_impl", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< WriteKV_implActor2, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("writeKV_impl", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKV_impl", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont5(Void const& _,int loopDepth) 
	{
															#line 1353 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_3 = self->file->appendStringRefWithLen(v);
															#line 1353 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<WriteKV_implActor2*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 9859 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1cont5when1(__when_expr_3.get(), loopDepth); };
		static_cast<WriteKV_implActor2*>(this)->actor_wait_state = 4;
															#line 1353 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< WriteKV_implActor2, 3, Void >*>(static_cast<WriteKV_implActor2*>(this)));
															#line 9864 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont5(Void && _,int loopDepth) 
	{
															#line 1353 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_3 = self->file->appendStringRefWithLen(v);
															#line 1353 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<WriteKV_implActor2*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 9875 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1cont5when1(__when_expr_3.get(), loopDepth); };
		static_cast<WriteKV_implActor2*>(this)->actor_wait_state = 4;
															#line 1353 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< WriteKV_implActor2, 3, Void >*>(static_cast<WriteKV_implActor2*>(this)));
															#line 9880 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont5(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont5(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<WriteKV_implActor2*>(this)->actor_wait_state > 0) static_cast<WriteKV_implActor2*>(this)->actor_wait_state = 0;
		static_cast<WriteKV_implActor2*>(this)->ActorCallback< WriteKV_implActor2, 2, Void >::remove();

	}
	void a_callback_fire(ActorCallback< WriteKV_implActor2, 2, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("writeKV_impl", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKV_impl", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< WriteKV_implActor2, 2, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("writeKV_impl", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKV_impl", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< WriteKV_implActor2, 2, Void >*,Error err) 
	{
		fdb_probe_actor_enter("writeKV_impl", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKV_impl", reinterpret_cast<unsigned long>(this), 2);

	}
	int a_body1cont6(Void const& _,int loopDepth) 
	{
															#line 1356 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (self->file->size() > self->blockEnd)
															#line 9952 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1357 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			return a_body1Catch1(backup_bad_block_size(), loopDepth);
															#line 9956 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 1359 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<WriteKV_implActor2*>(this)->SAV<Void>::futures) { (void)(Void()); this->~WriteKV_implActor2State(); static_cast<WriteKV_implActor2*>(this)->destroy(); return 0; }
															#line 9960 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<WriteKV_implActor2*>(this)->SAV< Void >::value()) Void(Void());
		this->~WriteKV_implActor2State();
		static_cast<WriteKV_implActor2*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont6(Void && _,int loopDepth) 
	{
															#line 1356 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (self->file->size() > self->blockEnd)
															#line 9972 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1357 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			return a_body1Catch1(backup_bad_block_size(), loopDepth);
															#line 9976 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 1359 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<WriteKV_implActor2*>(this)->SAV<Void>::futures) { (void)(Void()); this->~WriteKV_implActor2State(); static_cast<WriteKV_implActor2*>(this)->destroy(); return 0; }
															#line 9980 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<WriteKV_implActor2*>(this)->SAV< Void >::value()) Void(Void());
		this->~WriteKV_implActor2State();
		static_cast<WriteKV_implActor2*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont5when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont6(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont5when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont6(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose4() 
	{
		if (static_cast<WriteKV_implActor2*>(this)->actor_wait_state > 0) static_cast<WriteKV_implActor2*>(this)->actor_wait_state = 0;
		static_cast<WriteKV_implActor2*>(this)->ActorCallback< WriteKV_implActor2, 3, Void >::remove();

	}
	void a_callback_fire(ActorCallback< WriteKV_implActor2, 3, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("writeKV_impl", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont5when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKV_impl", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_fire(ActorCallback< WriteKV_implActor2, 3, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("writeKV_impl", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont5when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKV_impl", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_error(ActorCallback< WriteKV_implActor2, 3, Void >*,Error err) 
	{
		fdb_probe_actor_enter("writeKV_impl", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKV_impl", reinterpret_cast<unsigned long>(this), 3);

	}
															#line 1334 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	LogFileWriter* self;
															#line 1334 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key k;
															#line 1334 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Value v;
															#line 1341 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Value paddingFFs;
															#line 10059 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via writeKV_impl()
															#line 1334 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class WriteKV_implActor2 final : public Actor<Void>, public ActorCallback< WriteKV_implActor2, 0, Void >, public ActorCallback< WriteKV_implActor2, 1, Void >, public ActorCallback< WriteKV_implActor2, 2, Void >, public ActorCallback< WriteKV_implActor2, 3, Void >, public FastAllocated<WriteKV_implActor2>, public WriteKV_implActor2State<WriteKV_implActor2> {
															#line 10064 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<WriteKV_implActor2>::operator new;
	using FastAllocated<WriteKV_implActor2>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< WriteKV_implActor2, 0, Void >;
friend struct ActorCallback< WriteKV_implActor2, 1, Void >;
friend struct ActorCallback< WriteKV_implActor2, 2, Void >;
friend struct ActorCallback< WriteKV_implActor2, 3, Void >;
															#line 1334 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	WriteKV_implActor2(LogFileWriter* const& self,Key const& k,Value const& v) 
															#line 10078 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   WriteKV_implActor2State<WriteKV_implActor2>(self, k, v)
	{
		fdb_probe_actor_enter("writeKV_impl", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("writeKV_impl");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("writeKV_impl", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< WriteKV_implActor2, 0, Void >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< WriteKV_implActor2, 1, Void >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< WriteKV_implActor2, 2, Void >*)0, actor_cancelled()); break;
		case 4: this->a_callback_error((ActorCallback< WriteKV_implActor2, 3, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 1334 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> writeKV_impl( LogFileWriter* const& self, Key const& k, Value const& v ) {
															#line 1334 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new WriteKV_implActor2(self, k, v));
															#line 10108 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 1361 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

	Future<Void> writeKV(Key k, Value v) { return writeKV_impl(this, k, v); }

	Reference<IBackupFile> file;
	int blockSize;

private:
	int64_t blockEnd;
};

Standalone<VectorRef<KeyValueRef>> decodeMutationLogFileBlock(const Standalone<StringRef>& buf) {
	Standalone<VectorRef<KeyValueRef>> results({}, buf.arena());
	StringRefReader reader(buf, restore_corrupted_data());

	// Read header, currently only decoding version BACKUP_AGENT_MLOG_VERSION
	if (reader.consume<int32_t>() != BACKUP_AGENT_MLOG_VERSION)
		throw restore_unsupported_file_version();

	// Read k/v pairs.  Block ends either at end of last value exactly or with 0xFF as first key len byte.
	while (1) {
		// If eof reached or first key len bytes is 0xFF then end of block was reached.
		if (reader.eof() || *reader.rptr == 0xFF)
			break;

		// Read key and value.  If anything throws then there is a problem.
		uint32_t kLen = reader.consumeNetworkUInt32();
		const uint8_t* k = reader.consume(kLen);
		uint32_t vLen = reader.consumeNetworkUInt32();
		const uint8_t* v = reader.consume(vLen);

		results.push_back(results.arena(), KeyValueRef(KeyRef(k, kLen), ValueRef(v, vLen)));
	}

	// Make sure any remaining bytes in the block are 0xFF
	for (auto b : reader.remainder())
		if (b != 0xFF)
			throw restore_corrupted_data_padding();

	return results;
}

															#line 10153 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via decodeMutationLogFileBlock()
															#line 1402 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class DecodeMutationLogFileBlockActor>
															#line 1402 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class DecodeMutationLogFileBlockActorState {
															#line 10159 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 1402 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	DecodeMutationLogFileBlockActorState(Reference<IAsyncFile> const& file,int64_t const& offset,int const& len) 
															#line 1402 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 1402 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : file(file),
															#line 1402 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   offset(offset),
															#line 1402 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   len(len),
															#line 1405 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   buf(makeString(len))
															#line 10172 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("decodeMutationLogFileBlock", reinterpret_cast<unsigned long>(this));

	}
	~DecodeMutationLogFileBlockActorState() 
	{
		fdb_probe_actor_destroy("decodeMutationLogFileBlock", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 1406 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<int> __when_expr_0 = file->read(mutateString(buf), len, offset);
															#line 1406 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<DecodeMutationLogFileBlockActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 10189 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<DecodeMutationLogFileBlockActor*>(this)->actor_wait_state = 1;
															#line 1406 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< DecodeMutationLogFileBlockActor, 0, int >*>(static_cast<DecodeMutationLogFileBlockActor*>(this)));
															#line 10194 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~DecodeMutationLogFileBlockActorState();
		static_cast<DecodeMutationLogFileBlockActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int const& rLen,int loopDepth) 
	{
															#line 1407 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (rLen != len)
															#line 10217 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1408 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			return a_body1Catch1(restore_bad_read(), loopDepth);
															#line 10221 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		try {
															#line 1411 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<DecodeMutationLogFileBlockActor*>(this)->SAV<Standalone<VectorRef<KeyValueRef>>>::futures) { (void)(decodeMutationLogFileBlock(buf)); this->~DecodeMutationLogFileBlockActorState(); static_cast<DecodeMutationLogFileBlockActor*>(this)->destroy(); return 0; }
															#line 10226 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<DecodeMutationLogFileBlockActor*>(this)->SAV< Standalone<VectorRef<KeyValueRef>> >::value()) Standalone<VectorRef<KeyValueRef>>(decodeMutationLogFileBlock(buf));
			this->~DecodeMutationLogFileBlockActorState();
			static_cast<DecodeMutationLogFileBlockActor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
		catch (Error& error) {
			loopDepth = a_body1cont1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1cont1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont1(int && rLen,int loopDepth) 
	{
															#line 1407 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (rLen != len)
															#line 10244 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1408 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			return a_body1Catch1(restore_bad_read(), loopDepth);
															#line 10248 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		try {
															#line 1411 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<DecodeMutationLogFileBlockActor*>(this)->SAV<Standalone<VectorRef<KeyValueRef>>>::futures) { (void)(decodeMutationLogFileBlock(buf)); this->~DecodeMutationLogFileBlockActorState(); static_cast<DecodeMutationLogFileBlockActor*>(this)->destroy(); return 0; }
															#line 10253 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<DecodeMutationLogFileBlockActor*>(this)->SAV< Standalone<VectorRef<KeyValueRef>> >::value()) Standalone<VectorRef<KeyValueRef>>(decodeMutationLogFileBlock(buf));
			this->~DecodeMutationLogFileBlockActorState();
			static_cast<DecodeMutationLogFileBlockActor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
		catch (Error& error) {
			loopDepth = a_body1cont1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1cont1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1when1(int const& rLen,int loopDepth) 
	{
		loopDepth = a_body1cont1(rLen, loopDepth);

		return loopDepth;
	}
	int a_body1when1(int && rLen,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(rLen), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<DecodeMutationLogFileBlockActor*>(this)->actor_wait_state > 0) static_cast<DecodeMutationLogFileBlockActor*>(this)->actor_wait_state = 0;
		static_cast<DecodeMutationLogFileBlockActor*>(this)->ActorCallback< DecodeMutationLogFileBlockActor, 0, int >::remove();

	}
	void a_callback_fire(ActorCallback< DecodeMutationLogFileBlockActor, 0, int >*,int const& value) 
	{
		fdb_probe_actor_enter("decodeMutationLogFileBlock", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decodeMutationLogFileBlock", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< DecodeMutationLogFileBlockActor, 0, int >*,int && value) 
	{
		fdb_probe_actor_enter("decodeMutationLogFileBlock", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decodeMutationLogFileBlock", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< DecodeMutationLogFileBlockActor, 0, int >*,Error err) 
	{
		fdb_probe_actor_enter("decodeMutationLogFileBlock", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("decodeMutationLogFileBlock", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 1413 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent(SevWarn, "FileRestoreCorruptLogFileBlock") .error(e) .detail("Filename", file->getFilename()) .detail("BlockOffset", offset) .detail("BlockLen", len);
															#line 1418 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			return a_body1Catch1(e, loopDepth);
															#line 10337 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
															#line 1402 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<IAsyncFile> file;
															#line 1402 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int64_t offset;
															#line 1402 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int len;
															#line 1405 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Standalone<StringRef> buf;
															#line 10355 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via decodeMutationLogFileBlock()
															#line 1402 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class DecodeMutationLogFileBlockActor final : public Actor<Standalone<VectorRef<KeyValueRef>>>, public ActorCallback< DecodeMutationLogFileBlockActor, 0, int >, public FastAllocated<DecodeMutationLogFileBlockActor>, public DecodeMutationLogFileBlockActorState<DecodeMutationLogFileBlockActor> {
															#line 10360 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<DecodeMutationLogFileBlockActor>::operator new;
	using FastAllocated<DecodeMutationLogFileBlockActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Standalone<VectorRef<KeyValueRef>>>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< DecodeMutationLogFileBlockActor, 0, int >;
															#line 1402 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	DecodeMutationLogFileBlockActor(Reference<IAsyncFile> const& file,int64_t const& offset,int const& len) 
															#line 10371 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Standalone<VectorRef<KeyValueRef>>>(),
		   DecodeMutationLogFileBlockActorState<DecodeMutationLogFileBlockActor>(file, offset, len)
	{
		fdb_probe_actor_enter("decodeMutationLogFileBlock", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("decodeMutationLogFileBlock");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("decodeMutationLogFileBlock", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< DecodeMutationLogFileBlockActor, 0, int >*)0, actor_cancelled()); break;
		}

	}
};
															#line 1402 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] Future<Standalone<VectorRef<KeyValueRef>>> decodeMutationLogFileBlock( Reference<IAsyncFile> const& file, int64_t const& offset, int const& len ) {
															#line 1402 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Standalone<VectorRef<KeyValueRef>>>(new DecodeMutationLogFileBlockActor(file, offset, len));
															#line 10398 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 1421 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

															#line 10403 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via checkTaskVersion()
															#line 1422 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class CheckTaskVersionActor>
															#line 1422 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class CheckTaskVersionActorState {
															#line 10409 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 1422 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	CheckTaskVersionActorState(Database const& cx,Reference<Task> const& task,StringRef const& name,uint32_t const& version) 
															#line 1422 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 1422 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : cx(cx),
															#line 1422 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   task(task),
															#line 1422 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   name(name),
															#line 1422 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   version(version)
															#line 10422 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("checkTaskVersion", reinterpret_cast<unsigned long>(this));

	}
	~CheckTaskVersionActorState() 
	{
		fdb_probe_actor_destroy("checkTaskVersion", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 1423 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			uint32_t taskVersion = task->getVersion();
															#line 1424 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (taskVersion > version)
															#line 10439 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 1425 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				err = task_invalid_version();
															#line 1427 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				TraceEvent(SevWarn, "BA_BackupRangeTaskFuncExecute") .detail("TaskVersion", taskVersion) .detail("Name", name) .detail("Version", version);
															#line 1431 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (KeyBackedTaskConfig::TaskParams.uid().exists(task))
															#line 10447 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				{
															#line 1432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					std::string msg = format("%s task version `%lu' is greater than supported version `%lu'", task->params[Task::reservedTaskParamKeyType].toString().c_str(), (unsigned long)taskVersion, (unsigned long)version);
															#line 1436 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					StrictFuture<Void> __when_expr_0 = BackupConfig(task).logError(cx, err, msg);
															#line 1436 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					if (static_cast<CheckTaskVersionActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 10455 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
					if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
					static_cast<CheckTaskVersionActor*>(this)->actor_wait_state = 1;
															#line 1436 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< CheckTaskVersionActor, 0, Void >*>(static_cast<CheckTaskVersionActor*>(this)));
															#line 10460 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
					loopDepth = 0;
				}
				else
				{
					loopDepth = a_body1cont2(loopDepth);
				}
			}
			else
			{
				loopDepth = a_body1cont1(loopDepth);
			}
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~CheckTaskVersionActorState();
		static_cast<CheckTaskVersionActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 1442 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<CheckTaskVersionActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~CheckTaskVersionActorState(); static_cast<CheckTaskVersionActor*>(this)->destroy(); return 0; }
															#line 10493 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<CheckTaskVersionActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~CheckTaskVersionActorState();
		static_cast<CheckTaskVersionActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont2(int loopDepth) 
	{
															#line 1439 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		return a_body1Catch1(err, loopDepth);
															#line 10505 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"

		return loopDepth;
	}
	int a_body1cont3(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2(loopDepth);

		return loopDepth;
	}
	int a_body1cont3(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2(loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<CheckTaskVersionActor*>(this)->actor_wait_state > 0) static_cast<CheckTaskVersionActor*>(this)->actor_wait_state = 0;
		static_cast<CheckTaskVersionActor*>(this)->ActorCallback< CheckTaskVersionActor, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< CheckTaskVersionActor, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("checkTaskVersion", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("checkTaskVersion", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< CheckTaskVersionActor, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("checkTaskVersion", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("checkTaskVersion", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< CheckTaskVersionActor, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("checkTaskVersion", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("checkTaskVersion", reinterpret_cast<unsigned long>(this), 0);

	}
															#line 1422 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Database cx;
															#line 1422 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> task;
															#line 1422 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	StringRef name;
															#line 1422 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	uint32_t version;
															#line 1425 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Error err;
															#line 10594 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via checkTaskVersion()
															#line 1422 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class CheckTaskVersionActor final : public Actor<Void>, public ActorCallback< CheckTaskVersionActor, 0, Void >, public FastAllocated<CheckTaskVersionActor>, public CheckTaskVersionActorState<CheckTaskVersionActor> {
															#line 10599 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<CheckTaskVersionActor>::operator new;
	using FastAllocated<CheckTaskVersionActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< CheckTaskVersionActor, 0, Void >;
															#line 1422 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	CheckTaskVersionActor(Database const& cx,Reference<Task> const& task,StringRef const& name,uint32_t const& version) 
															#line 10610 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   CheckTaskVersionActorState<CheckTaskVersionActor>(cx, task, name, version)
	{
		fdb_probe_actor_enter("checkTaskVersion", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("checkTaskVersion");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("checkTaskVersion", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< CheckTaskVersionActor, 0, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 1422 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] Future<Void> checkTaskVersion( Database const& cx, Reference<Task> const& task, StringRef const& name, uint32_t const& version ) {
															#line 1422 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new CheckTaskVersionActor(cx, task, name, version));
															#line 10637 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 1444 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

															#line 10642 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via abortFiveZeroBackup()
															#line 1445 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class AbortFiveZeroBackupActor>
															#line 1445 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class AbortFiveZeroBackupActorState {
															#line 10648 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 1445 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	AbortFiveZeroBackupActorState(FileBackupAgent* const& backupAgent,Reference<ReadYourWritesTransaction> const& tr,std::string const& tagName) 
															#line 1445 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 1445 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : backupAgent(backupAgent),
															#line 1445 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tr(tr),
															#line 1445 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tagName(tagName)
															#line 10659 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("abortFiveZeroBackup", reinterpret_cast<unsigned long>(this));

	}
	~AbortFiveZeroBackupActorState() 
	{
		fdb_probe_actor_destroy("abortFiveZeroBackup", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 1448 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 1449 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 1451 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tagNames = backupAgent->subspace.get(BackupAgentBase::keyTagName);
															#line 1452 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Optional<Value>> __when_expr_0 = tr->get(tagNames.pack(Key(tagName)));
															#line 1452 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<AbortFiveZeroBackupActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 10682 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<AbortFiveZeroBackupActor*>(this)->actor_wait_state = 1;
															#line 1452 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< AbortFiveZeroBackupActor, 0, Optional<Value> >*>(static_cast<AbortFiveZeroBackupActor*>(this)));
															#line 10687 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~AbortFiveZeroBackupActorState();
		static_cast<AbortFiveZeroBackupActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Optional<Value> const& uidStr,int loopDepth) 
	{
															#line 1453 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!uidStr.present())
															#line 10710 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1454 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent(SevWarn, "FileBackupAbortIncompatibleBackup_TagNotFound").detail("TagName", tagName.c_str());
															#line 1455 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<AbortFiveZeroBackupActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~AbortFiveZeroBackupActorState(); static_cast<AbortFiveZeroBackupActor*>(this)->destroy(); return 0; }
															#line 10716 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<AbortFiveZeroBackupActor*>(this)->SAV< Void >::value()) Void(Void());
			this->~AbortFiveZeroBackupActorState();
			static_cast<AbortFiveZeroBackupActor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 1457 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		uid = BinaryReader::fromStringRef<UID>(uidStr.get(), Unversioned());
															#line 1459 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		statusSpace = backupAgent->subspace.get(BackupAgentBase::keyStates).get(uid.toString());
															#line 1460 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		globalConfig = backupAgent->subspace.get(BackupAgentBase::keyConfig).get(uid.toString());
															#line 1461 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		newConfigSpace = uidPrefixKey("uid->config/"_sr.withPrefix(fileBackupPrefixRange.begin), uid);
															#line 1463 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Optional<Value>> __when_expr_1 = tr->get(statusSpace.pack(FileBackupAgent::keyStateStatus));
															#line 1463 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AbortFiveZeroBackupActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 10734 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<AbortFiveZeroBackupActor*>(this)->actor_wait_state = 2;
															#line 1463 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< AbortFiveZeroBackupActor, 1, Optional<Value> >*>(static_cast<AbortFiveZeroBackupActor*>(this)));
															#line 10739 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Optional<Value> && uidStr,int loopDepth) 
	{
															#line 1453 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!uidStr.present())
															#line 10748 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1454 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent(SevWarn, "FileBackupAbortIncompatibleBackup_TagNotFound").detail("TagName", tagName.c_str());
															#line 1455 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<AbortFiveZeroBackupActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~AbortFiveZeroBackupActorState(); static_cast<AbortFiveZeroBackupActor*>(this)->destroy(); return 0; }
															#line 10754 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<AbortFiveZeroBackupActor*>(this)->SAV< Void >::value()) Void(Void());
			this->~AbortFiveZeroBackupActorState();
			static_cast<AbortFiveZeroBackupActor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 1457 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		uid = BinaryReader::fromStringRef<UID>(uidStr.get(), Unversioned());
															#line 1459 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		statusSpace = backupAgent->subspace.get(BackupAgentBase::keyStates).get(uid.toString());
															#line 1460 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		globalConfig = backupAgent->subspace.get(BackupAgentBase::keyConfig).get(uid.toString());
															#line 1461 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		newConfigSpace = uidPrefixKey("uid->config/"_sr.withPrefix(fileBackupPrefixRange.begin), uid);
															#line 1463 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Optional<Value>> __when_expr_1 = tr->get(statusSpace.pack(FileBackupAgent::keyStateStatus));
															#line 1463 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AbortFiveZeroBackupActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 10772 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<AbortFiveZeroBackupActor*>(this)->actor_wait_state = 2;
															#line 1463 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< AbortFiveZeroBackupActor, 1, Optional<Value> >*>(static_cast<AbortFiveZeroBackupActor*>(this)));
															#line 10777 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1when1(Optional<Value> const& uidStr,int loopDepth) 
	{
		loopDepth = a_body1cont1(uidStr, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Optional<Value> && uidStr,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(uidStr), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<AbortFiveZeroBackupActor*>(this)->actor_wait_state > 0) static_cast<AbortFiveZeroBackupActor*>(this)->actor_wait_state = 0;
		static_cast<AbortFiveZeroBackupActor*>(this)->ActorCallback< AbortFiveZeroBackupActor, 0, Optional<Value> >::remove();

	}
	void a_callback_fire(ActorCallback< AbortFiveZeroBackupActor, 0, Optional<Value> >*,Optional<Value> const& value) 
	{
		fdb_probe_actor_enter("abortFiveZeroBackup", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortFiveZeroBackup", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< AbortFiveZeroBackupActor, 0, Optional<Value> >*,Optional<Value> && value) 
	{
		fdb_probe_actor_enter("abortFiveZeroBackup", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortFiveZeroBackup", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< AbortFiveZeroBackupActor, 0, Optional<Value> >*,Error err) 
	{
		fdb_probe_actor_enter("abortFiveZeroBackup", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortFiveZeroBackup", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont2(Optional<Value> const& statusStr,int loopDepth) 
	{
															#line 1464 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		status = !statusStr.present() ? EBackupState::STATE_NEVERRAN : BackupAgentBase::getState(statusStr.get().toString());
															#line 1467 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent(SevInfo, "FileBackupAbortIncompatibleBackup") .detail("TagName", tagName.c_str()) .detail("Status", BackupAgentBase::getStateText(status));
															#line 1472 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->clear(singleKeyRange(StringRef(globalConfig.pack(FileBackupAgent::keyFolderId))));
															#line 1475 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Key configPath = uidPrefixKey(logRangesRange.begin, uid);
															#line 1476 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Key logsPath = uidPrefixKey(backupLogKeys.begin, uid);
															#line 1477 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->clear(KeyRangeRef(configPath, strinc(configPath)));
															#line 1478 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->clear(KeyRangeRef(logsPath, strinc(logsPath)));
															#line 1481 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->clear(newConfigSpace.range());
															#line 1483 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Key statusKey = StringRef(statusSpace.pack(FileBackupAgent::keyStateStatus));
															#line 1486 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (backupAgent->isRunnable(status))
															#line 10867 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1487 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->set(statusKey, StringRef(FileBackupAgent::getStateText(EBackupState::STATE_ABORTED)));
															#line 10871 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 1489 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<AbortFiveZeroBackupActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~AbortFiveZeroBackupActorState(); static_cast<AbortFiveZeroBackupActor*>(this)->destroy(); return 0; }
															#line 10875 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<AbortFiveZeroBackupActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~AbortFiveZeroBackupActorState();
		static_cast<AbortFiveZeroBackupActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont2(Optional<Value> && statusStr,int loopDepth) 
	{
															#line 1464 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		status = !statusStr.present() ? EBackupState::STATE_NEVERRAN : BackupAgentBase::getState(statusStr.get().toString());
															#line 1467 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent(SevInfo, "FileBackupAbortIncompatibleBackup") .detail("TagName", tagName.c_str()) .detail("Status", BackupAgentBase::getStateText(status));
															#line 1472 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->clear(singleKeyRange(StringRef(globalConfig.pack(FileBackupAgent::keyFolderId))));
															#line 1475 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Key configPath = uidPrefixKey(logRangesRange.begin, uid);
															#line 1476 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Key logsPath = uidPrefixKey(backupLogKeys.begin, uid);
															#line 1477 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->clear(KeyRangeRef(configPath, strinc(configPath)));
															#line 1478 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->clear(KeyRangeRef(logsPath, strinc(logsPath)));
															#line 1481 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->clear(newConfigSpace.range());
															#line 1483 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Key statusKey = StringRef(statusSpace.pack(FileBackupAgent::keyStateStatus));
															#line 1486 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (backupAgent->isRunnable(status))
															#line 10905 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1487 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->set(statusKey, StringRef(FileBackupAgent::getStateText(EBackupState::STATE_ABORTED)));
															#line 10909 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 1489 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<AbortFiveZeroBackupActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~AbortFiveZeroBackupActorState(); static_cast<AbortFiveZeroBackupActor*>(this)->destroy(); return 0; }
															#line 10913 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<AbortFiveZeroBackupActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~AbortFiveZeroBackupActorState();
		static_cast<AbortFiveZeroBackupActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont1when1(Optional<Value> const& statusStr,int loopDepth) 
	{
		loopDepth = a_body1cont2(statusStr, loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Optional<Value> && statusStr,int loopDepth) 
	{
		loopDepth = a_body1cont2(std::move(statusStr), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<AbortFiveZeroBackupActor*>(this)->actor_wait_state > 0) static_cast<AbortFiveZeroBackupActor*>(this)->actor_wait_state = 0;
		static_cast<AbortFiveZeroBackupActor*>(this)->ActorCallback< AbortFiveZeroBackupActor, 1, Optional<Value> >::remove();

	}
	void a_callback_fire(ActorCallback< AbortFiveZeroBackupActor, 1, Optional<Value> >*,Optional<Value> const& value) 
	{
		fdb_probe_actor_enter("abortFiveZeroBackup", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortFiveZeroBackup", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< AbortFiveZeroBackupActor, 1, Optional<Value> >*,Optional<Value> && value) 
	{
		fdb_probe_actor_enter("abortFiveZeroBackup", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortFiveZeroBackup", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< AbortFiveZeroBackupActor, 1, Optional<Value> >*,Error err) 
	{
		fdb_probe_actor_enter("abortFiveZeroBackup", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortFiveZeroBackup", reinterpret_cast<unsigned long>(this), 1);

	}
															#line 1445 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	FileBackupAgent* backupAgent;
															#line 1445 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 1445 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::string tagName;
															#line 1451 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Subspace tagNames;
															#line 1457 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	UID uid;
															#line 1459 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Subspace statusSpace;
															#line 1460 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Subspace globalConfig;
															#line 1461 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Subspace newConfigSpace;
															#line 1464 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	EBackupState status;
															#line 11002 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via abortFiveZeroBackup()
															#line 1445 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class AbortFiveZeroBackupActor final : public Actor<Void>, public ActorCallback< AbortFiveZeroBackupActor, 0, Optional<Value> >, public ActorCallback< AbortFiveZeroBackupActor, 1, Optional<Value> >, public FastAllocated<AbortFiveZeroBackupActor>, public AbortFiveZeroBackupActorState<AbortFiveZeroBackupActor> {
															#line 11007 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<AbortFiveZeroBackupActor>::operator new;
	using FastAllocated<AbortFiveZeroBackupActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< AbortFiveZeroBackupActor, 0, Optional<Value> >;
friend struct ActorCallback< AbortFiveZeroBackupActor, 1, Optional<Value> >;
															#line 1445 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	AbortFiveZeroBackupActor(FileBackupAgent* const& backupAgent,Reference<ReadYourWritesTransaction> const& tr,std::string const& tagName) 
															#line 11019 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   AbortFiveZeroBackupActorState<AbortFiveZeroBackupActor>(backupAgent, tr, tagName)
	{
		fdb_probe_actor_enter("abortFiveZeroBackup", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("abortFiveZeroBackup");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("abortFiveZeroBackup", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< AbortFiveZeroBackupActor, 0, Optional<Value> >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< AbortFiveZeroBackupActor, 1, Optional<Value> >*)0, actor_cancelled()); break;
		}

	}
};
															#line 1445 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> abortFiveZeroBackup( FileBackupAgent* const& backupAgent, Reference<ReadYourWritesTransaction> const& tr, std::string const& tagName ) {
															#line 1445 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new AbortFiveZeroBackupActor(backupAgent, tr, tagName));
															#line 11047 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 1491 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

struct AbortFiveZeroBackupTask : TaskFuncBase {
	static StringRef name;
																#line 11054 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via _finish()
															#line 1494 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class _finishActor>
															#line 1494 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _finishActorState {
															#line 11060 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 1494 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_finishActorState(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 1494 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 1494 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : tr(tr),
															#line 1494 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskBucket(taskBucket),
															#line 1494 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   futureBucket(futureBucket),
															#line 1494 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   task(task),
															#line 1498 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   backupAgent(),
															#line 1499 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tagName(task->params[BackupAgentBase::keyConfigBackupTag].toString())
															#line 11077 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("_finish", reinterpret_cast<unsigned long>(this));

	}
	~_finishActorState() 
	{
		fdb_probe_actor_destroy("_finish", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 1501 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent(SevInfo, "FileBackupCancelOldTask") .detail("Task", task->params[Task::reservedTaskParamKeyType]) .detail("TagName", tagName);
															#line 1504 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_0 = abortFiveZeroBackup(&backupAgent, tr, tagName);
															#line 1504 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_finishActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 11096 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<_finishActor*>(this)->actor_wait_state = 1;
															#line 1504 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< _finishActor, 0, Void >*>(static_cast<_finishActor*>(this)));
															#line 11101 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~_finishActorState();
		static_cast<_finishActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Void const& _,int loopDepth) 
	{
															#line 1506 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = taskBucket->finish(tr, task);
															#line 1506 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 11126 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<_finishActor*>(this)->actor_wait_state = 2;
															#line 1506 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< _finishActor, 1, Void >*>(static_cast<_finishActor*>(this)));
															#line 11131 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Void && _,int loopDepth) 
	{
															#line 1506 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = taskBucket->finish(tr, task);
															#line 1506 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 11142 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<_finishActor*>(this)->actor_wait_state = 2;
															#line 1506 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< _finishActor, 1, Void >*>(static_cast<_finishActor*>(this)));
															#line 11147 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<_finishActor*>(this)->actor_wait_state > 0) static_cast<_finishActor*>(this)->actor_wait_state = 0;
		static_cast<_finishActor*>(this)->ActorCallback< _finishActor, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< _finishActor, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< _finishActor, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont2(Void const& _,int loopDepth) 
	{
															#line 1507 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_finishActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_finishActorState(); static_cast<_finishActor*>(this)->destroy(); return 0; }
															#line 11219 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_finishActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~_finishActorState();
		static_cast<_finishActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont2(Void && _,int loopDepth) 
	{
															#line 1507 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_finishActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_finishActorState(); static_cast<_finishActor*>(this)->destroy(); return 0; }
															#line 11231 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_finishActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~_finishActorState();
		static_cast<_finishActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<_finishActor*>(this)->actor_wait_state > 0) static_cast<_finishActor*>(this)->actor_wait_state = 0;
		static_cast<_finishActor*>(this)->ActorCallback< _finishActor, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< _finishActor, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< _finishActor, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 1);

	}
															#line 1494 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 1494 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskBucket> taskBucket;
															#line 1494 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<FutureBucket> futureBucket;
															#line 1494 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> task;
															#line 1498 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	FileBackupAgent backupAgent;
															#line 1499 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::string tagName;
															#line 11314 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via _finish()
															#line 1494 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _finishActor final : public Actor<Void>, public ActorCallback< _finishActor, 0, Void >, public ActorCallback< _finishActor, 1, Void >, public FastAllocated<_finishActor>, public _finishActorState<_finishActor> {
															#line 11319 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<_finishActor>::operator new;
	using FastAllocated<_finishActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< _finishActor, 0, Void >;
friend struct ActorCallback< _finishActor, 1, Void >;
															#line 1494 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_finishActor(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 11331 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   _finishActorState<_finishActor>(tr, taskBucket, futureBucket, task)
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("_finish");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< _finishActor, 0, Void >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< _finishActor, 1, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 1494 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> _finish( Reference<ReadYourWritesTransaction> const& tr, Reference<TaskBucket> const& taskBucket, Reference<FutureBucket> const& futureBucket, Reference<Task> const& task ) {
															#line 1494 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new _finishActor(tr, taskBucket, futureBucket, task));
															#line 11359 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 1509 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

	StringRef getName() const override {
		TraceEvent(SevError, "FileBackupError")
		    .detail("Cause", "AbortFiveZeroBackupTaskFunc::name() should never be called");
		ASSERT(false);
		return StringRef();
	}

	Future<Void> execute(Database cx,
	                     Reference<TaskBucket> tb,
	                     Reference<FutureBucket> fb,
	                     Reference<Task> task) override {
		return Future<Void>(Void());
	};
	Future<Void> finish(Reference<ReadYourWritesTransaction> tr,
	                    Reference<TaskBucket> tb,
	                    Reference<FutureBucket> fb,
	                    Reference<Task> task) override {
		return _finish(tr, tb, fb, task);
	};
};
StringRef AbortFiveZeroBackupTask::name = "abort_legacy_backup"_sr;
REGISTER_TASKFUNC(AbortFiveZeroBackupTask);
REGISTER_TASKFUNC_ALIAS(AbortFiveZeroBackupTask, file_backup_diff_logs);
REGISTER_TASKFUNC_ALIAS(AbortFiveZeroBackupTask, file_backup_log_range);
REGISTER_TASKFUNC_ALIAS(AbortFiveZeroBackupTask, file_backup_logs);
REGISTER_TASKFUNC_ALIAS(AbortFiveZeroBackupTask, file_backup_range);
REGISTER_TASKFUNC_ALIAS(AbortFiveZeroBackupTask, file_backup_restorable);
REGISTER_TASKFUNC_ALIAS(AbortFiveZeroBackupTask, file_finish_full_backup);
REGISTER_TASKFUNC_ALIAS(AbortFiveZeroBackupTask, file_finished_full_backup);
REGISTER_TASKFUNC_ALIAS(AbortFiveZeroBackupTask, file_start_full_backup);

															#line 11395 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via abortFiveOneBackup()
															#line 1541 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class AbortFiveOneBackupActor>
															#line 1541 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class AbortFiveOneBackupActorState {
															#line 11401 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 1541 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	AbortFiveOneBackupActorState(FileBackupAgent* const& backupAgent,Reference<ReadYourWritesTransaction> const& tr,std::string const& tagName) 
															#line 1541 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 1541 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : backupAgent(backupAgent),
															#line 1541 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tr(tr),
															#line 1541 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tagName(tagName)
															#line 11412 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("abortFiveOneBackup", reinterpret_cast<unsigned long>(this));

	}
	~AbortFiveOneBackupActorState() 
	{
		fdb_probe_actor_destroy("abortFiveOneBackup", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 1544 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 1545 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 1547 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tag = makeBackupTag(tagName);
															#line 1548 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<UidAndAbortedFlagT> __when_expr_0 = tag.getOrThrow(tr, Snapshot::False, backup_unneeded());
															#line 1548 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<AbortFiveOneBackupActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 11435 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<AbortFiveOneBackupActor*>(this)->actor_wait_state = 1;
															#line 1548 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< AbortFiveOneBackupActor, 0, UidAndAbortedFlagT >*>(static_cast<AbortFiveOneBackupActor*>(this)));
															#line 11440 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~AbortFiveOneBackupActorState();
		static_cast<AbortFiveOneBackupActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 1550 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config = BackupConfig(current.first);
															#line 1551 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<EBackupState> __when_expr_1 = config.stateEnum().getD(tr, Snapshot::False, EBackupState::STATE_NEVERRAN);
															#line 1551 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AbortFiveOneBackupActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 11467 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<AbortFiveOneBackupActor*>(this)->actor_wait_state = 2;
															#line 1551 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< AbortFiveOneBackupActor, 1, EBackupState >*>(static_cast<AbortFiveOneBackupActor*>(this)));
															#line 11472 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1when1(UidAndAbortedFlagT const& __current,int loopDepth) 
	{
															#line 1548 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		current = __current;
															#line 11481 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1when1(UidAndAbortedFlagT && __current,int loopDepth) 
	{
		current = std::move(__current);
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<AbortFiveOneBackupActor*>(this)->actor_wait_state > 0) static_cast<AbortFiveOneBackupActor*>(this)->actor_wait_state = 0;
		static_cast<AbortFiveOneBackupActor*>(this)->ActorCallback< AbortFiveOneBackupActor, 0, UidAndAbortedFlagT >::remove();

	}
	void a_callback_fire(ActorCallback< AbortFiveOneBackupActor, 0, UidAndAbortedFlagT >*,UidAndAbortedFlagT const& value) 
	{
		fdb_probe_actor_enter("abortFiveOneBackup", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortFiveOneBackup", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< AbortFiveOneBackupActor, 0, UidAndAbortedFlagT >*,UidAndAbortedFlagT && value) 
	{
		fdb_probe_actor_enter("abortFiveOneBackup", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortFiveOneBackup", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< AbortFiveOneBackupActor, 0, UidAndAbortedFlagT >*,Error err) 
	{
		fdb_probe_actor_enter("abortFiveOneBackup", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortFiveOneBackup", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont2(EBackupState const& status,int loopDepth) 
	{
															#line 1553 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!backupAgent->isRunnable(status))
															#line 11548 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1554 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			return a_body1Catch1(backup_unneeded(), loopDepth);
															#line 11552 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 1557 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent(SevInfo, "FBA_AbortFileOneBackup") .detail("TagName", tagName.c_str()) .detail("Status", BackupAgentBase::getStateText(status));
															#line 1562 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_2 = tag.cancel(tr);
															#line 1562 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AbortFiveOneBackupActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 11560 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont2when1(__when_expr_2.get(), loopDepth); };
		static_cast<AbortFiveOneBackupActor*>(this)->actor_wait_state = 3;
															#line 1562 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< AbortFiveOneBackupActor, 2, Void >*>(static_cast<AbortFiveOneBackupActor*>(this)));
															#line 11565 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont2(EBackupState && status,int loopDepth) 
	{
															#line 1553 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!backupAgent->isRunnable(status))
															#line 11574 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1554 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			return a_body1Catch1(backup_unneeded(), loopDepth);
															#line 11578 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 1557 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent(SevInfo, "FBA_AbortFileOneBackup") .detail("TagName", tagName.c_str()) .detail("Status", BackupAgentBase::getStateText(status));
															#line 1562 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_2 = tag.cancel(tr);
															#line 1562 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AbortFiveOneBackupActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 11586 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont2when1(__when_expr_2.get(), loopDepth); };
		static_cast<AbortFiveOneBackupActor*>(this)->actor_wait_state = 3;
															#line 1562 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< AbortFiveOneBackupActor, 2, Void >*>(static_cast<AbortFiveOneBackupActor*>(this)));
															#line 11591 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1when1(EBackupState const& status,int loopDepth) 
	{
		loopDepth = a_body1cont2(status, loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(EBackupState && status,int loopDepth) 
	{
		loopDepth = a_body1cont2(std::move(status), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<AbortFiveOneBackupActor*>(this)->actor_wait_state > 0) static_cast<AbortFiveOneBackupActor*>(this)->actor_wait_state = 0;
		static_cast<AbortFiveOneBackupActor*>(this)->ActorCallback< AbortFiveOneBackupActor, 1, EBackupState >::remove();

	}
	void a_callback_fire(ActorCallback< AbortFiveOneBackupActor, 1, EBackupState >*,EBackupState const& value) 
	{
		fdb_probe_actor_enter("abortFiveOneBackup", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortFiveOneBackup", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< AbortFiveOneBackupActor, 1, EBackupState >*,EBackupState && value) 
	{
		fdb_probe_actor_enter("abortFiveOneBackup", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortFiveOneBackup", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< AbortFiveOneBackupActor, 1, EBackupState >*,Error err) 
	{
		fdb_probe_actor_enter("abortFiveOneBackup", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortFiveOneBackup", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont3(Void const& _,int loopDepth) 
	{
															#line 1564 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Key configPath = uidPrefixKey(logRangesRange.begin, config.getUid());
															#line 1565 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Key logsPath = uidPrefixKey(backupLogKeys.begin, config.getUid());
															#line 1567 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->clear(KeyRangeRef(configPath, strinc(configPath)));
															#line 1568 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->clear(KeyRangeRef(logsPath, strinc(logsPath)));
															#line 1570 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config.stateEnum().set(tr, EBackupState::STATE_ABORTED);
															#line 1572 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<AbortFiveOneBackupActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~AbortFiveOneBackupActorState(); static_cast<AbortFiveOneBackupActor*>(this)->destroy(); return 0; }
															#line 11673 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<AbortFiveOneBackupActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~AbortFiveOneBackupActorState();
		static_cast<AbortFiveOneBackupActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont3(Void && _,int loopDepth) 
	{
															#line 1564 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Key configPath = uidPrefixKey(logRangesRange.begin, config.getUid());
															#line 1565 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Key logsPath = uidPrefixKey(backupLogKeys.begin, config.getUid());
															#line 1567 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->clear(KeyRangeRef(configPath, strinc(configPath)));
															#line 1568 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->clear(KeyRangeRef(logsPath, strinc(logsPath)));
															#line 1570 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config.stateEnum().set(tr, EBackupState::STATE_ABORTED);
															#line 1572 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<AbortFiveOneBackupActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~AbortFiveOneBackupActorState(); static_cast<AbortFiveOneBackupActor*>(this)->destroy(); return 0; }
															#line 11695 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<AbortFiveOneBackupActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~AbortFiveOneBackupActorState();
		static_cast<AbortFiveOneBackupActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<AbortFiveOneBackupActor*>(this)->actor_wait_state > 0) static_cast<AbortFiveOneBackupActor*>(this)->actor_wait_state = 0;
		static_cast<AbortFiveOneBackupActor*>(this)->ActorCallback< AbortFiveOneBackupActor, 2, Void >::remove();

	}
	void a_callback_fire(ActorCallback< AbortFiveOneBackupActor, 2, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("abortFiveOneBackup", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortFiveOneBackup", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< AbortFiveOneBackupActor, 2, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("abortFiveOneBackup", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortFiveOneBackup", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< AbortFiveOneBackupActor, 2, Void >*,Error err) 
	{
		fdb_probe_actor_enter("abortFiveOneBackup", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortFiveOneBackup", reinterpret_cast<unsigned long>(this), 2);

	}
															#line 1541 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	FileBackupAgent* backupAgent;
															#line 1541 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 1541 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::string tagName;
															#line 1547 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	KeyBackedTag tag;
															#line 1548 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	UidAndAbortedFlagT current;
															#line 1550 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	BackupConfig config;
															#line 11778 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via abortFiveOneBackup()
															#line 1541 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class AbortFiveOneBackupActor final : public Actor<Void>, public ActorCallback< AbortFiveOneBackupActor, 0, UidAndAbortedFlagT >, public ActorCallback< AbortFiveOneBackupActor, 1, EBackupState >, public ActorCallback< AbortFiveOneBackupActor, 2, Void >, public FastAllocated<AbortFiveOneBackupActor>, public AbortFiveOneBackupActorState<AbortFiveOneBackupActor> {
															#line 11783 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<AbortFiveOneBackupActor>::operator new;
	using FastAllocated<AbortFiveOneBackupActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< AbortFiveOneBackupActor, 0, UidAndAbortedFlagT >;
friend struct ActorCallback< AbortFiveOneBackupActor, 1, EBackupState >;
friend struct ActorCallback< AbortFiveOneBackupActor, 2, Void >;
															#line 1541 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	AbortFiveOneBackupActor(FileBackupAgent* const& backupAgent,Reference<ReadYourWritesTransaction> const& tr,std::string const& tagName) 
															#line 11796 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   AbortFiveOneBackupActorState<AbortFiveOneBackupActor>(backupAgent, tr, tagName)
	{
		fdb_probe_actor_enter("abortFiveOneBackup", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("abortFiveOneBackup");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("abortFiveOneBackup", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< AbortFiveOneBackupActor, 0, UidAndAbortedFlagT >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< AbortFiveOneBackupActor, 1, EBackupState >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< AbortFiveOneBackupActor, 2, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 1541 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> abortFiveOneBackup( FileBackupAgent* const& backupAgent, Reference<ReadYourWritesTransaction> const& tr, std::string const& tagName ) {
															#line 1541 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new AbortFiveOneBackupActor(backupAgent, tr, tagName));
															#line 11825 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 1574 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

struct AbortFiveOneBackupTask : TaskFuncBase {
	static StringRef name;
																#line 11832 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via _finish()
															#line 1577 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class _finishActor1>
															#line 1577 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _finishActor1State {
															#line 11838 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 1577 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_finishActor1State(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 1577 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 1577 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : tr(tr),
															#line 1577 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskBucket(taskBucket),
															#line 1577 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   futureBucket(futureBucket),
															#line 1577 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   task(task),
															#line 1581 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   backupAgent(),
															#line 1582 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   config(task)
															#line 11855 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("_finish", reinterpret_cast<unsigned long>(this));

	}
	~_finishActor1State() 
	{
		fdb_probe_actor_destroy("_finish", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 1583 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<std::string> __when_expr_0 = config.tag().getOrThrow(tr);
															#line 1583 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_finishActor1*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 11872 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<_finishActor1*>(this)->actor_wait_state = 1;
															#line 1583 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< _finishActor1, 0, std::string >*>(static_cast<_finishActor1*>(this)));
															#line 11877 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~_finishActor1State();
		static_cast<_finishActor1*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 1585 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent(SevInfo, "FileBackupCancelFiveOneTask") .detail("Task", task->params[Task::reservedTaskParamKeyType]) .detail("TagName", tagName);
															#line 1588 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = abortFiveOneBackup(&backupAgent, tr, tagName);
															#line 1588 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor1*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 11904 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<_finishActor1*>(this)->actor_wait_state = 2;
															#line 1588 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< _finishActor1, 1, Void >*>(static_cast<_finishActor1*>(this)));
															#line 11909 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1when1(std::string const& __tagName,int loopDepth) 
	{
															#line 1583 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tagName = __tagName;
															#line 11918 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1when1(std::string && __tagName,int loopDepth) 
	{
		tagName = std::move(__tagName);
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<_finishActor1*>(this)->actor_wait_state > 0) static_cast<_finishActor1*>(this)->actor_wait_state = 0;
		static_cast<_finishActor1*>(this)->ActorCallback< _finishActor1, 0, std::string >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor1, 0, std::string >*,std::string const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< _finishActor1, 0, std::string >*,std::string && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< _finishActor1, 0, std::string >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont2(Void const& _,int loopDepth) 
	{
															#line 1590 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_2 = taskBucket->finish(tr, task);
															#line 1590 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor1*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 11987 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont2when1(__when_expr_2.get(), loopDepth); };
		static_cast<_finishActor1*>(this)->actor_wait_state = 3;
															#line 1590 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< _finishActor1, 2, Void >*>(static_cast<_finishActor1*>(this)));
															#line 11992 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont2(Void && _,int loopDepth) 
	{
															#line 1590 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_2 = taskBucket->finish(tr, task);
															#line 1590 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor1*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 12003 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont2when1(__when_expr_2.get(), loopDepth); };
		static_cast<_finishActor1*>(this)->actor_wait_state = 3;
															#line 1590 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< _finishActor1, 2, Void >*>(static_cast<_finishActor1*>(this)));
															#line 12008 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<_finishActor1*>(this)->actor_wait_state > 0) static_cast<_finishActor1*>(this)->actor_wait_state = 0;
		static_cast<_finishActor1*>(this)->ActorCallback< _finishActor1, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor1, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< _finishActor1, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< _finishActor1, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont3(Void const& _,int loopDepth) 
	{
															#line 1591 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_finishActor1*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_finishActor1State(); static_cast<_finishActor1*>(this)->destroy(); return 0; }
															#line 12080 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_finishActor1*>(this)->SAV< Void >::value()) Void(Void());
		this->~_finishActor1State();
		static_cast<_finishActor1*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont3(Void && _,int loopDepth) 
	{
															#line 1591 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_finishActor1*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_finishActor1State(); static_cast<_finishActor1*>(this)->destroy(); return 0; }
															#line 12092 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_finishActor1*>(this)->SAV< Void >::value()) Void(Void());
		this->~_finishActor1State();
		static_cast<_finishActor1*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<_finishActor1*>(this)->actor_wait_state > 0) static_cast<_finishActor1*>(this)->actor_wait_state = 0;
		static_cast<_finishActor1*>(this)->ActorCallback< _finishActor1, 2, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor1, 2, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< _finishActor1, 2, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< _finishActor1, 2, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 2);

	}
															#line 1577 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 1577 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskBucket> taskBucket;
															#line 1577 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<FutureBucket> futureBucket;
															#line 1577 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> task;
															#line 1581 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	FileBackupAgent backupAgent;
															#line 1582 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	BackupConfig config;
															#line 1583 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::string tagName;
															#line 12177 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via _finish()
															#line 1577 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _finishActor1 final : public Actor<Void>, public ActorCallback< _finishActor1, 0, std::string >, public ActorCallback< _finishActor1, 1, Void >, public ActorCallback< _finishActor1, 2, Void >, public FastAllocated<_finishActor1>, public _finishActor1State<_finishActor1> {
															#line 12182 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<_finishActor1>::operator new;
	using FastAllocated<_finishActor1>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< _finishActor1, 0, std::string >;
friend struct ActorCallback< _finishActor1, 1, Void >;
friend struct ActorCallback< _finishActor1, 2, Void >;
															#line 1577 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_finishActor1(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 12195 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   _finishActor1State<_finishActor1>(tr, taskBucket, futureBucket, task)
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("_finish");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< _finishActor1, 0, std::string >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< _finishActor1, 1, Void >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< _finishActor1, 2, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 1577 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> _finish( Reference<ReadYourWritesTransaction> const& tr, Reference<TaskBucket> const& taskBucket, Reference<FutureBucket> const& futureBucket, Reference<Task> const& task ) {
															#line 1577 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new _finishActor1(tr, taskBucket, futureBucket, task));
															#line 12224 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 1593 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

	StringRef getName() const override {
		TraceEvent(SevError, "FileBackupError")
		    .detail("Cause", "AbortFiveOneBackupTaskFunc::name() should never be called");
		ASSERT(false);
		return StringRef();
	}

	Future<Void> execute(Database cx,
	                     Reference<TaskBucket> tb,
	                     Reference<FutureBucket> fb,
	                     Reference<Task> task) override {
		return Future<Void>(Void());
	};
	Future<Void> finish(Reference<ReadYourWritesTransaction> tr,
	                    Reference<TaskBucket> tb,
	                    Reference<FutureBucket> fb,
	                    Reference<Task> task) override {
		return _finish(tr, tb, fb, task);
	};
};
StringRef AbortFiveOneBackupTask::name = "abort_legacy_backup_5.2"_sr;
REGISTER_TASKFUNC(AbortFiveOneBackupTask);
REGISTER_TASKFUNC_ALIAS(AbortFiveOneBackupTask, file_backup_write_range);
REGISTER_TASKFUNC_ALIAS(AbortFiveOneBackupTask, file_backup_dispatch_ranges);
REGISTER_TASKFUNC_ALIAS(AbortFiveOneBackupTask, file_backup_write_logs);
REGISTER_TASKFUNC_ALIAS(AbortFiveOneBackupTask, file_backup_erase_logs);
REGISTER_TASKFUNC_ALIAS(AbortFiveOneBackupTask, file_backup_dispatch_logs);
REGISTER_TASKFUNC_ALIAS(AbortFiveOneBackupTask, file_backup_finished);
REGISTER_TASKFUNC_ALIAS(AbortFiveOneBackupTask, file_backup_write_snapshot_manifest);
REGISTER_TASKFUNC_ALIAS(AbortFiveOneBackupTask, file_backup_start);

std::function<void(Reference<Task>)> NOP_SETUP_TASK_FN = [](Reference<Task> task) { /* NOP */ };
															#line 12261 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via addBackupTask()
															#line 1626 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class AddBackupTaskActor>
															#line 1626 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class AddBackupTaskActorState {
															#line 12267 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 1626 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	AddBackupTaskActorState(StringRef const& name,uint32_t const& version,Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,TaskCompletionKey const& completionKey,BackupConfig const& config,Reference<TaskFuture> const& waitFor = Reference<TaskFuture>(),std::function<void(Reference<Task>)> const& setupTaskFn = NOP_SETUP_TASK_FN,int const& priority = 0,SetValidation const& setValidation = SetValidation::True) 
															#line 1626 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 1626 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : name(name),
															#line 1626 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   version(version),
															#line 1626 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tr(tr),
															#line 1626 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskBucket(taskBucket),
															#line 1626 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   completionKey(completionKey),
															#line 1626 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   config(config),
															#line 1626 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   waitFor(waitFor),
															#line 1626 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   setupTaskFn(setupTaskFn),
															#line 1626 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   priority(priority),
															#line 1626 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   setValidation(setValidation)
															#line 12292 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("addBackupTask", reinterpret_cast<unsigned long>(this));

	}
	~AddBackupTaskActorState() 
	{
		fdb_probe_actor_destroy("addBackupTask", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 1636 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 1637 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 1639 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Key> __when_expr_0 = completionKey.get(tr, taskBucket);
															#line 1639 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<AddBackupTaskActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 12313 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<AddBackupTaskActor*>(this)->actor_wait_state = 1;
															#line 1639 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< AddBackupTaskActor, 0, Key >*>(static_cast<AddBackupTaskActor*>(this)));
															#line 12318 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~AddBackupTaskActorState();
		static_cast<AddBackupTaskActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Key const& doneKey,int loopDepth) 
	{
															#line 1640 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		task = Reference<Task>(new Task(name, version, doneKey, priority));
															#line 1643 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = config.toTask(tr, task, setValidation);
															#line 1643 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AddBackupTaskActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 12345 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<AddBackupTaskActor*>(this)->actor_wait_state = 2;
															#line 1643 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< AddBackupTaskActor, 1, Void >*>(static_cast<AddBackupTaskActor*>(this)));
															#line 12350 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Key && doneKey,int loopDepth) 
	{
															#line 1640 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		task = Reference<Task>(new Task(name, version, doneKey, priority));
															#line 1643 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = config.toTask(tr, task, setValidation);
															#line 1643 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AddBackupTaskActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 12363 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<AddBackupTaskActor*>(this)->actor_wait_state = 2;
															#line 1643 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< AddBackupTaskActor, 1, Void >*>(static_cast<AddBackupTaskActor*>(this)));
															#line 12368 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1when1(Key const& doneKey,int loopDepth) 
	{
		loopDepth = a_body1cont1(doneKey, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Key && doneKey,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(doneKey), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<AddBackupTaskActor*>(this)->actor_wait_state > 0) static_cast<AddBackupTaskActor*>(this)->actor_wait_state = 0;
		static_cast<AddBackupTaskActor*>(this)->ActorCallback< AddBackupTaskActor, 0, Key >::remove();

	}
	void a_callback_fire(ActorCallback< AddBackupTaskActor, 0, Key >*,Key const& value) 
	{
		fdb_probe_actor_enter("addBackupTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addBackupTask", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< AddBackupTaskActor, 0, Key >*,Key && value) 
	{
		fdb_probe_actor_enter("addBackupTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addBackupTask", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< AddBackupTaskActor, 0, Key >*,Error err) 
	{
		fdb_probe_actor_enter("addBackupTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addBackupTask", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont2(Void const& _,int loopDepth) 
	{
															#line 1646 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		setupTaskFn(task);
															#line 1648 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!waitFor)
															#line 12442 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1649 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<AddBackupTaskActor*>(this)->SAV<Key>::futures) { (void)(taskBucket->addTask(tr, task)); this->~AddBackupTaskActorState(); static_cast<AddBackupTaskActor*>(this)->destroy(); return 0; }
															#line 12446 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<AddBackupTaskActor*>(this)->SAV< Key >::value()) Key(taskBucket->addTask(tr, task));
			this->~AddBackupTaskActorState();
			static_cast<AddBackupTaskActor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 1651 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_2 = waitFor->onSetAddTask(tr, taskBucket, task);
															#line 1651 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AddBackupTaskActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 12456 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont2when1(__when_expr_2.get(), loopDepth); };
		static_cast<AddBackupTaskActor*>(this)->actor_wait_state = 3;
															#line 1651 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< AddBackupTaskActor, 2, Void >*>(static_cast<AddBackupTaskActor*>(this)));
															#line 12461 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont2(Void && _,int loopDepth) 
	{
															#line 1646 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		setupTaskFn(task);
															#line 1648 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!waitFor)
															#line 12472 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1649 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<AddBackupTaskActor*>(this)->SAV<Key>::futures) { (void)(taskBucket->addTask(tr, task)); this->~AddBackupTaskActorState(); static_cast<AddBackupTaskActor*>(this)->destroy(); return 0; }
															#line 12476 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<AddBackupTaskActor*>(this)->SAV< Key >::value()) Key(taskBucket->addTask(tr, task));
			this->~AddBackupTaskActorState();
			static_cast<AddBackupTaskActor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 1651 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_2 = waitFor->onSetAddTask(tr, taskBucket, task);
															#line 1651 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AddBackupTaskActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 12486 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont2when1(__when_expr_2.get(), loopDepth); };
		static_cast<AddBackupTaskActor*>(this)->actor_wait_state = 3;
															#line 1651 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< AddBackupTaskActor, 2, Void >*>(static_cast<AddBackupTaskActor*>(this)));
															#line 12491 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<AddBackupTaskActor*>(this)->actor_wait_state > 0) static_cast<AddBackupTaskActor*>(this)->actor_wait_state = 0;
		static_cast<AddBackupTaskActor*>(this)->ActorCallback< AddBackupTaskActor, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< AddBackupTaskActor, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("addBackupTask", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addBackupTask", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< AddBackupTaskActor, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("addBackupTask", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addBackupTask", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< AddBackupTaskActor, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("addBackupTask", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addBackupTask", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont3(Void const& _,int loopDepth) 
	{
															#line 1653 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<AddBackupTaskActor*>(this)->SAV<Key>::futures) { (void)("OnSetAddTask"_sr); this->~AddBackupTaskActorState(); static_cast<AddBackupTaskActor*>(this)->destroy(); return 0; }
															#line 12563 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<AddBackupTaskActor*>(this)->SAV< Key >::value()) Key("OnSetAddTask"_sr);
		this->~AddBackupTaskActorState();
		static_cast<AddBackupTaskActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont3(Void && _,int loopDepth) 
	{
															#line 1653 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<AddBackupTaskActor*>(this)->SAV<Key>::futures) { (void)("OnSetAddTask"_sr); this->~AddBackupTaskActorState(); static_cast<AddBackupTaskActor*>(this)->destroy(); return 0; }
															#line 12575 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<AddBackupTaskActor*>(this)->SAV< Key >::value()) Key("OnSetAddTask"_sr);
		this->~AddBackupTaskActorState();
		static_cast<AddBackupTaskActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<AddBackupTaskActor*>(this)->actor_wait_state > 0) static_cast<AddBackupTaskActor*>(this)->actor_wait_state = 0;
		static_cast<AddBackupTaskActor*>(this)->ActorCallback< AddBackupTaskActor, 2, Void >::remove();

	}
	void a_callback_fire(ActorCallback< AddBackupTaskActor, 2, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("addBackupTask", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addBackupTask", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< AddBackupTaskActor, 2, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("addBackupTask", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addBackupTask", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< AddBackupTaskActor, 2, Void >*,Error err) 
	{
		fdb_probe_actor_enter("addBackupTask", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addBackupTask", reinterpret_cast<unsigned long>(this), 2);

	}
															#line 1626 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	StringRef name;
															#line 1626 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	uint32_t version;
															#line 1626 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 1626 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskBucket> taskBucket;
															#line 1626 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	TaskCompletionKey completionKey;
															#line 1626 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	BackupConfig config;
															#line 1626 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskFuture> waitFor;
															#line 1626 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::function<void(Reference<Task>)> setupTaskFn;
															#line 1626 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int priority;
															#line 1626 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	SetValidation setValidation;
															#line 1640 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> task;
															#line 12668 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via addBackupTask()
															#line 1626 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class AddBackupTaskActor final : public Actor<Key>, public ActorCallback< AddBackupTaskActor, 0, Key >, public ActorCallback< AddBackupTaskActor, 1, Void >, public ActorCallback< AddBackupTaskActor, 2, Void >, public FastAllocated<AddBackupTaskActor>, public AddBackupTaskActorState<AddBackupTaskActor> {
															#line 12673 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<AddBackupTaskActor>::operator new;
	using FastAllocated<AddBackupTaskActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Key>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< AddBackupTaskActor, 0, Key >;
friend struct ActorCallback< AddBackupTaskActor, 1, Void >;
friend struct ActorCallback< AddBackupTaskActor, 2, Void >;
															#line 1626 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	AddBackupTaskActor(StringRef const& name,uint32_t const& version,Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,TaskCompletionKey const& completionKey,BackupConfig const& config,Reference<TaskFuture> const& waitFor = Reference<TaskFuture>(),std::function<void(Reference<Task>)> const& setupTaskFn = NOP_SETUP_TASK_FN,int const& priority = 0,SetValidation const& setValidation = SetValidation::True) 
															#line 12686 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Key>(),
		   AddBackupTaskActorState<AddBackupTaskActor>(name, version, tr, taskBucket, completionKey, config, waitFor, setupTaskFn, priority, setValidation)
	{
		fdb_probe_actor_enter("addBackupTask", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("addBackupTask");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("addBackupTask", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< AddBackupTaskActor, 0, Key >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< AddBackupTaskActor, 1, Void >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< AddBackupTaskActor, 2, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 1626 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Key> addBackupTask( StringRef const& name, uint32_t const& version, Reference<ReadYourWritesTransaction> const& tr, Reference<TaskBucket> const& taskBucket, TaskCompletionKey const& completionKey, BackupConfig const& config, Reference<TaskFuture> const& waitFor = Reference<TaskFuture>(), std::function<void(Reference<Task>)> const& setupTaskFn = NOP_SETUP_TASK_FN, int const& priority = 0, SetValidation const& setValidation = SetValidation::True ) {
															#line 1626 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Key>(new AddBackupTaskActor(name, version, tr, taskBucket, completionKey, config, waitFor, setupTaskFn, priority, setValidation));
															#line 12715 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 1655 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

// Clears the backup ID from "backupStartedKey" to pause backup workers.
															#line 12721 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via clearBackupStartID()
															#line 1657 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class ClearBackupStartIDActor>
															#line 1657 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class ClearBackupStartIDActorState {
															#line 12727 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 1657 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	ClearBackupStartIDActorState(Reference<ReadYourWritesTransaction> const& tr,UID const& backupUid) 
															#line 1657 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 1657 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : tr(tr),
															#line 1657 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   backupUid(backupUid)
															#line 12736 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("clearBackupStartID", reinterpret_cast<unsigned long>(this));

	}
	~ClearBackupStartIDActorState() 
	{
		fdb_probe_actor_destroy("clearBackupStartID", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 1659 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Optional<Value>> __when_expr_0 = tr->get(backupStartedKey);
															#line 1659 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<ClearBackupStartIDActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 12753 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<ClearBackupStartIDActor*>(this)->actor_wait_state = 1;
															#line 1659 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< ClearBackupStartIDActor, 0, Optional<Value> >*>(static_cast<ClearBackupStartIDActor*>(this)));
															#line 12758 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~ClearBackupStartIDActorState();
		static_cast<ClearBackupStartIDActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Optional<Value> const& started,int loopDepth) 
	{
															#line 1660 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		std::vector<std::pair<UID, Version>> ids;
															#line 1661 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (started.present())
															#line 12783 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1662 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			ids = decodeBackupStartedValue(started.get());
															#line 12787 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 1664 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		auto it = std::find_if(ids.begin(), ids.end(), [=](const std::pair<UID, Version>& p) { return p.first == backupUid; });
															#line 1666 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (it != ids.end())
															#line 12793 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1667 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			ids.erase(it);
															#line 12797 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 1670 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (ids.empty())
															#line 12801 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1671 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent("ClearBackup").detail("BackupID", backupUid);
															#line 1672 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->clear(backupStartedKey);
															#line 12807 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		else
		{
															#line 1674 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->set(backupStartedKey, encodeBackupStartedValue(ids));
															#line 12813 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 1676 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<ClearBackupStartIDActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~ClearBackupStartIDActorState(); static_cast<ClearBackupStartIDActor*>(this)->destroy(); return 0; }
															#line 12817 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<ClearBackupStartIDActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~ClearBackupStartIDActorState();
		static_cast<ClearBackupStartIDActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont1(Optional<Value> && started,int loopDepth) 
	{
															#line 1660 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		std::vector<std::pair<UID, Version>> ids;
															#line 1661 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (started.present())
															#line 12831 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1662 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			ids = decodeBackupStartedValue(started.get());
															#line 12835 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 1664 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		auto it = std::find_if(ids.begin(), ids.end(), [=](const std::pair<UID, Version>& p) { return p.first == backupUid; });
															#line 1666 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (it != ids.end())
															#line 12841 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1667 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			ids.erase(it);
															#line 12845 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 1670 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (ids.empty())
															#line 12849 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1671 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent("ClearBackup").detail("BackupID", backupUid);
															#line 1672 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->clear(backupStartedKey);
															#line 12855 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		else
		{
															#line 1674 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->set(backupStartedKey, encodeBackupStartedValue(ids));
															#line 12861 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 1676 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<ClearBackupStartIDActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~ClearBackupStartIDActorState(); static_cast<ClearBackupStartIDActor*>(this)->destroy(); return 0; }
															#line 12865 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<ClearBackupStartIDActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~ClearBackupStartIDActorState();
		static_cast<ClearBackupStartIDActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1when1(Optional<Value> const& started,int loopDepth) 
	{
		loopDepth = a_body1cont1(started, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Optional<Value> && started,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(started), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<ClearBackupStartIDActor*>(this)->actor_wait_state > 0) static_cast<ClearBackupStartIDActor*>(this)->actor_wait_state = 0;
		static_cast<ClearBackupStartIDActor*>(this)->ActorCallback< ClearBackupStartIDActor, 0, Optional<Value> >::remove();

	}
	void a_callback_fire(ActorCallback< ClearBackupStartIDActor, 0, Optional<Value> >*,Optional<Value> const& value) 
	{
		fdb_probe_actor_enter("clearBackupStartID", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("clearBackupStartID", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< ClearBackupStartIDActor, 0, Optional<Value> >*,Optional<Value> && value) 
	{
		fdb_probe_actor_enter("clearBackupStartID", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("clearBackupStartID", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< ClearBackupStartIDActor, 0, Optional<Value> >*,Error err) 
	{
		fdb_probe_actor_enter("clearBackupStartID", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("clearBackupStartID", reinterpret_cast<unsigned long>(this), 0);

	}
															#line 1657 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 1657 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	UID backupUid;
															#line 12940 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via clearBackupStartID()
															#line 1657 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class ClearBackupStartIDActor final : public Actor<Void>, public ActorCallback< ClearBackupStartIDActor, 0, Optional<Value> >, public FastAllocated<ClearBackupStartIDActor>, public ClearBackupStartIDActorState<ClearBackupStartIDActor> {
															#line 12945 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<ClearBackupStartIDActor>::operator new;
	using FastAllocated<ClearBackupStartIDActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< ClearBackupStartIDActor, 0, Optional<Value> >;
															#line 1657 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	ClearBackupStartIDActor(Reference<ReadYourWritesTransaction> const& tr,UID const& backupUid) 
															#line 12956 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   ClearBackupStartIDActorState<ClearBackupStartIDActor>(tr, backupUid)
	{
		fdb_probe_actor_enter("clearBackupStartID", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("clearBackupStartID");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("clearBackupStartID", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< ClearBackupStartIDActor, 0, Optional<Value> >*)0, actor_cancelled()); break;
		}

	}
};
															#line 1657 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> clearBackupStartID( Reference<ReadYourWritesTransaction> const& tr, UID const& backupUid ) {
															#line 1657 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new ClearBackupStartIDActor(tr, backupUid));
															#line 12983 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 1678 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

// Backup and Restore taskFunc definitions will inherit from one of the following classes which
// servers to catch and log to the appropriate config any error that execute/finish didn't catch and log.
struct RestoreTaskFuncBase : TaskFuncBase {
	Future<Void> handleError(Database cx, Reference<Task> task, Error const& error) final {
		return RestoreConfig(task).logError(
		    cx,
		    error,
		    format("'%s' on '%s'", error.what(), task->params[Task::reservedTaskParamKeyType].printable().c_str()));
	}
	virtual std::string toString(Reference<Task> task) const { return ""; }
};

struct BackupTaskFuncBase : TaskFuncBase {
	Future<Void> handleError(Database cx, Reference<Task> task, Error const& error) final {
		return BackupConfig(task).logError(
		    cx,
		    error,
		    format("'%s' on '%s'", error.what(), task->params[Task::reservedTaskParamKeyType].printable().c_str()));
	}
	virtual std::string toString(Reference<Task> task) const { return ""; }
};

															#line 13010 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via getBlockOfShards()
															#line 1701 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class GetBlockOfShardsActor>
															#line 1701 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class GetBlockOfShardsActorState {
															#line 13016 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 1701 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	GetBlockOfShardsActorState(Reference<ReadYourWritesTransaction> const& tr,Key const& beginKey,Key const& endKey,int const& limit) 
															#line 1701 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 1701 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : tr(tr),
															#line 1701 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   beginKey(beginKey),
															#line 1701 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   endKey(endKey),
															#line 1701 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   limit(limit)
															#line 13029 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("getBlockOfShards", reinterpret_cast<unsigned long>(this));

	}
	~GetBlockOfShardsActorState() 
	{
		fdb_probe_actor_destroy("getBlockOfShards", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 1706 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 1707 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 1708 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			results = Standalone<VectorRef<KeyRef>>();
															#line 1709 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<RangeResult> __when_expr_0 = tr->getRange( KeyRangeRef(keyAfter(beginKey.withPrefix(keyServersPrefix)), endKey.withPrefix(keyServersPrefix)), limit);
															#line 1709 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<GetBlockOfShardsActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 13052 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<GetBlockOfShardsActor*>(this)->actor_wait_state = 1;
															#line 1709 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< GetBlockOfShardsActor, 0, RangeResult >*>(static_cast<GetBlockOfShardsActor*>(this)));
															#line 13057 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~GetBlockOfShardsActorState();
		static_cast<GetBlockOfShardsActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(RangeResult const& values,int loopDepth) 
	{
															#line 1712 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		for( auto& s : values ) {
															#line 1713 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			KeyRef k = s.key.removePrefix(keyServersPrefix);
															#line 1714 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			results.push_back_deep(results.arena(), k);
															#line 13084 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 1717 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<GetBlockOfShardsActor*>(this)->SAV<Standalone<VectorRef<KeyRef>>>::futures) { (void)(results); this->~GetBlockOfShardsActorState(); static_cast<GetBlockOfShardsActor*>(this)->destroy(); return 0; }
															#line 13088 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<GetBlockOfShardsActor*>(this)->SAV< Standalone<VectorRef<KeyRef>> >::value()) Standalone<VectorRef<KeyRef>>(std::move(results)); // state_var_RVO
		this->~GetBlockOfShardsActorState();
		static_cast<GetBlockOfShardsActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont1(RangeResult && values,int loopDepth) 
	{
															#line 1712 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		for( auto& s : values ) {
															#line 1713 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			KeyRef k = s.key.removePrefix(keyServersPrefix);
															#line 1714 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			results.push_back_deep(results.arena(), k);
															#line 13104 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 1717 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<GetBlockOfShardsActor*>(this)->SAV<Standalone<VectorRef<KeyRef>>>::futures) { (void)(results); this->~GetBlockOfShardsActorState(); static_cast<GetBlockOfShardsActor*>(this)->destroy(); return 0; }
															#line 13108 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<GetBlockOfShardsActor*>(this)->SAV< Standalone<VectorRef<KeyRef>> >::value()) Standalone<VectorRef<KeyRef>>(std::move(results)); // state_var_RVO
		this->~GetBlockOfShardsActorState();
		static_cast<GetBlockOfShardsActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1when1(RangeResult const& values,int loopDepth) 
	{
		loopDepth = a_body1cont1(values, loopDepth);

		return loopDepth;
	}
	int a_body1when1(RangeResult && values,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(values), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<GetBlockOfShardsActor*>(this)->actor_wait_state > 0) static_cast<GetBlockOfShardsActor*>(this)->actor_wait_state = 0;
		static_cast<GetBlockOfShardsActor*>(this)->ActorCallback< GetBlockOfShardsActor, 0, RangeResult >::remove();

	}
	void a_callback_fire(ActorCallback< GetBlockOfShardsActor, 0, RangeResult >*,RangeResult const& value) 
	{
		fdb_probe_actor_enter("getBlockOfShards", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getBlockOfShards", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< GetBlockOfShardsActor, 0, RangeResult >*,RangeResult && value) 
	{
		fdb_probe_actor_enter("getBlockOfShards", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getBlockOfShards", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< GetBlockOfShardsActor, 0, RangeResult >*,Error err) 
	{
		fdb_probe_actor_enter("getBlockOfShards", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getBlockOfShards", reinterpret_cast<unsigned long>(this), 0);

	}
															#line 1701 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 1701 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key beginKey;
															#line 1701 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key endKey;
															#line 1701 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int limit;
															#line 1708 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Standalone<VectorRef<KeyRef>> results;
															#line 13189 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via getBlockOfShards()
															#line 1701 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class GetBlockOfShardsActor final : public Actor<Standalone<VectorRef<KeyRef>>>, public ActorCallback< GetBlockOfShardsActor, 0, RangeResult >, public FastAllocated<GetBlockOfShardsActor>, public GetBlockOfShardsActorState<GetBlockOfShardsActor> {
															#line 13194 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<GetBlockOfShardsActor>::operator new;
	using FastAllocated<GetBlockOfShardsActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Standalone<VectorRef<KeyRef>>>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< GetBlockOfShardsActor, 0, RangeResult >;
															#line 1701 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	GetBlockOfShardsActor(Reference<ReadYourWritesTransaction> const& tr,Key const& beginKey,Key const& endKey,int const& limit) 
															#line 13205 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Standalone<VectorRef<KeyRef>>>(),
		   GetBlockOfShardsActorState<GetBlockOfShardsActor>(tr, beginKey, endKey, limit)
	{
		fdb_probe_actor_enter("getBlockOfShards", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("getBlockOfShards");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("getBlockOfShards", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< GetBlockOfShardsActor, 0, RangeResult >*)0, actor_cancelled()); break;
		}

	}
};
															#line 1701 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Standalone<VectorRef<KeyRef>>> getBlockOfShards( Reference<ReadYourWritesTransaction> const& tr, Key const& beginKey, Key const& endKey, int const& limit ) {
															#line 1701 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Standalone<VectorRef<KeyRef>>>(new GetBlockOfShardsActor(tr, beginKey, endKey, limit));
															#line 13232 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 1719 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

struct BackupRangeTaskFunc : BackupTaskFuncBase {
	static StringRef name;
	static constexpr uint32_t version = 1;

	static struct {
		static TaskParam<Key> beginKey() { return __FUNCTION__sr; }
		static TaskParam<Key> endKey() { return __FUNCTION__sr; }
		static TaskParam<bool> addBackupRangeTasks() { return __FUNCTION__sr; }
	} Params;

	std::string toString(Reference<Task> task) const override {
		return format("beginKey '%s' endKey '%s' addTasks %d",
		              Params.beginKey().get(task).printable().c_str(),
		              Params.endKey().get(task).printable().c_str(),
		              Params.addBackupRangeTasks().get(task));
	}

	StringRef getName() const override { return name; };

	Future<Void> execute(Database cx,
	                     Reference<TaskBucket> tb,
	                     Reference<FutureBucket> fb,
	                     Reference<Task> task) override {
		return _execute(cx, tb, fb, task);
	};
	Future<Void> finish(Reference<ReadYourWritesTransaction> tr,
	                    Reference<TaskBucket> tb,
	                    Reference<FutureBucket> fb,
	                    Reference<Task> task) override {
		return _finish(tr, tb, fb, task);
	};

	// Finish (which flushes/syncs) the file, and then in a single transaction, make some range backup progress
	// durable. This means:
	//  - increment the backup config's range bytes written
	//  - update the range file map
	//  - update the task begin key
	//  - save/extend the task with the new params
	// Returns whether or not the caller should continue executing the task.
																#line 13276 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via finishRangeFile()
															#line 1759 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class FinishRangeFileActor>
															#line 1759 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class FinishRangeFileActorState {
															#line 13282 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 1759 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	FinishRangeFileActorState(Reference<IBackupFile> const& file,Database const& cx,Reference<Task> const& task,Reference<TaskBucket> const& taskBucket,KeyRange const& range,Version const& version) 
															#line 1759 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 1759 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : file(file),
															#line 1759 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   cx(cx),
															#line 1759 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   task(task),
															#line 1759 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskBucket(taskBucket),
															#line 1759 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   range(range),
															#line 1759 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   version(version)
															#line 13299 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("finishRangeFile", reinterpret_cast<unsigned long>(this));

	}
	~FinishRangeFileActorState() 
	{
		fdb_probe_actor_destroy("finishRangeFile", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 1765 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_0 = file->finish();
															#line 1765 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<FinishRangeFileActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 13316 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<FinishRangeFileActor*>(this)->actor_wait_state = 1;
															#line 1765 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< FinishRangeFileActor, 0, Void >*>(static_cast<FinishRangeFileActor*>(this)));
															#line 13321 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~FinishRangeFileActorState();
		static_cast<FinishRangeFileActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Void const& _,int loopDepth) 
	{
															#line 1768 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (range.empty())
															#line 13344 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1769 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<FinishRangeFileActor*>(this)->SAV<bool>::futures) { (void)(false); this->~FinishRangeFileActorState(); static_cast<FinishRangeFileActor*>(this)->destroy(); return 0; }
															#line 13348 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<FinishRangeFileActor*>(this)->SAV< bool >::value()) bool(false);
			this->~FinishRangeFileActorState();
			static_cast<FinishRangeFileActor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 1771 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr = Reference<ReadYourWritesTransaction>(new ReadYourWritesTransaction(cx));
															#line 1772 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		backup = BackupConfig(task);
															#line 1773 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		usedFile = false;
															#line 1777 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = task->extendMutex.take();
															#line 1777 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<FinishRangeFileActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 13364 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<FinishRangeFileActor*>(this)->actor_wait_state = 2;
															#line 1777 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< FinishRangeFileActor, 1, Void >*>(static_cast<FinishRangeFileActor*>(this)));
															#line 13369 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Void && _,int loopDepth) 
	{
															#line 1768 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (range.empty())
															#line 13378 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1769 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<FinishRangeFileActor*>(this)->SAV<bool>::futures) { (void)(false); this->~FinishRangeFileActorState(); static_cast<FinishRangeFileActor*>(this)->destroy(); return 0; }
															#line 13382 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<FinishRangeFileActor*>(this)->SAV< bool >::value()) bool(false);
			this->~FinishRangeFileActorState();
			static_cast<FinishRangeFileActor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 1771 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr = Reference<ReadYourWritesTransaction>(new ReadYourWritesTransaction(cx));
															#line 1772 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		backup = BackupConfig(task);
															#line 1773 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		usedFile = false;
															#line 1777 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = task->extendMutex.take();
															#line 1777 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<FinishRangeFileActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 13398 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<FinishRangeFileActor*>(this)->actor_wait_state = 2;
															#line 1777 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< FinishRangeFileActor, 1, Void >*>(static_cast<FinishRangeFileActor*>(this)));
															#line 13403 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<FinishRangeFileActor*>(this)->actor_wait_state > 0) static_cast<FinishRangeFileActor*>(this)->actor_wait_state = 0;
		static_cast<FinishRangeFileActor*>(this)->ActorCallback< FinishRangeFileActor, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< FinishRangeFileActor, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("finishRangeFile", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("finishRangeFile", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< FinishRangeFileActor, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("finishRangeFile", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("finishRangeFile", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< FinishRangeFileActor, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("finishRangeFile", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("finishRangeFile", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont2(Void const& _,int loopDepth) 
	{
															#line 1778 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		releaser = FlowLock::Releaser(task->extendMutex, 1);
															#line 1780 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 13477 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont2loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1cont2(Void && _,int loopDepth) 
	{
															#line 1778 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		releaser = FlowLock::Releaser(task->extendMutex, 1);
															#line 1780 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 13488 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont2loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<FinishRangeFileActor*>(this)->actor_wait_state > 0) static_cast<FinishRangeFileActor*>(this)->actor_wait_state = 0;
		static_cast<FinishRangeFileActor*>(this)->ActorCallback< FinishRangeFileActor, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< FinishRangeFileActor, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("finishRangeFile", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("finishRangeFile", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< FinishRangeFileActor, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("finishRangeFile", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("finishRangeFile", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< FinishRangeFileActor, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("finishRangeFile", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("finishRangeFile", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont4(int loopDepth) 
	{
															#line 1812 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<FinishRangeFileActor*>(this)->SAV<bool>::futures) { (void)(usedFile); this->~FinishRangeFileActorState(); static_cast<FinishRangeFileActor*>(this)->destroy(); return 0; }
															#line 13560 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<FinishRangeFileActor*>(this)->SAV< bool >::value()) bool(std::move(usedFile)); // state_var_RVO
		this->~FinishRangeFileActorState();
		static_cast<FinishRangeFileActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont2loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont2loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont2loopBody1(int loopDepth) 
	{
		try {
															#line 1782 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 1783 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 1787 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			Params.beginKey().set(task, range.end);
															#line 1790 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Version> __when_expr_2 = taskBucket->extendTimeout(tr, task, UpdateParams::True);
															#line 1790 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<FinishRangeFileActor*>(this)->actor_wait_state < 0) return a_body1cont2loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 13588 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1cont2loopBody1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont2loopBody1when1(__when_expr_2.get(), loopDepth); };
			static_cast<FinishRangeFileActor*>(this)->actor_wait_state = 3;
															#line 1790 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< FinishRangeFileActor, 2, Version >*>(static_cast<FinishRangeFileActor*>(this)));
															#line 13593 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1cont2loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1cont2loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont2break1(int loopDepth) 
	{
		try {
			return a_body1cont4(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont2loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1cont2loopHead1(0);

		return loopDepth;
	}
	int a_body1cont2loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 1808 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_5 = tr->onError(e);
															#line 1808 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<FinishRangeFileActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 13630 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_5.isReady()) { if (__when_expr_5.isError()) return a_body1Catch1(__when_expr_5.getError(), std::max(0, loopDepth - 1)); else return a_body1cont2loopBody1Catch1when1(__when_expr_5.get(), loopDepth); };
			static_cast<FinishRangeFileActor*>(this)->actor_wait_state = 6;
															#line 1808 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_5.addCallbackAndClear(static_cast<ActorCallback< FinishRangeFileActor, 5, Void >*>(static_cast<FinishRangeFileActor*>(this)));
															#line 13635 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont2loopBody1cont2(int loopDepth) 
	{
															#line 1793 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		backup.rangeBytesWritten().atomicOp(tr, file->size(), MutationRef::AddValue);
															#line 1794 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		backup.snapshotRangeFileCount().atomicOp(tr, 1, MutationRef::AddValue);
															#line 1797 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Optional<BackupConfig::RangeSlice>> __when_expr_3 = backup.snapshotRangeFileMap().get(tr, range.end);
															#line 1797 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<FinishRangeFileActor*>(this)->actor_wait_state < 0) return a_body1cont2loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 13656 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1cont2loopBody1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1cont2loopBody1cont2when1(__when_expr_3.get(), loopDepth); };
		static_cast<FinishRangeFileActor*>(this)->actor_wait_state = 4;
															#line 1797 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< FinishRangeFileActor, 3, Optional<BackupConfig::RangeSlice> >*>(static_cast<FinishRangeFileActor*>(this)));
															#line 13661 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont2loopBody1when1(Version const& __newTimeout,int loopDepth) 
	{
															#line 1790 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		newTimeout = __newTimeout;
															#line 13670 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont2loopBody1cont2(loopDepth);

		return loopDepth;
	}
	int a_body1cont2loopBody1when1(Version && __newTimeout,int loopDepth) 
	{
		newTimeout = std::move(__newTimeout);
		loopDepth = a_body1cont2loopBody1cont2(loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<FinishRangeFileActor*>(this)->actor_wait_state > 0) static_cast<FinishRangeFileActor*>(this)->actor_wait_state = 0;
		static_cast<FinishRangeFileActor*>(this)->ActorCallback< FinishRangeFileActor, 2, Version >::remove();

	}
	void a_callback_fire(ActorCallback< FinishRangeFileActor, 2, Version >*,Version const& value) 
	{
		fdb_probe_actor_enter("finishRangeFile", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont2loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont2loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("finishRangeFile", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< FinishRangeFileActor, 2, Version >*,Version && value) 
	{
		fdb_probe_actor_enter("finishRangeFile", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont2loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont2loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("finishRangeFile", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< FinishRangeFileActor, 2, Version >*,Error err) 
	{
		fdb_probe_actor_enter("finishRangeFile", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont2loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont2loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("finishRangeFile", reinterpret_cast<unsigned long>(this), 2);

	}
	int a_body1cont2loopBody1cont3(Optional<BackupConfig::RangeSlice> const& s,int loopDepth) 
	{
															#line 1798 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!s.present() || s.get().begin >= range.begin)
															#line 13737 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1799 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			backup.snapshotRangeFileMap().set( tr, range.end, { range.begin, version, file->getFileName(), file->size() });
															#line 1801 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			usedFile = true;
															#line 13743 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 1804 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_4 = tr->commit();
															#line 1804 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<FinishRangeFileActor*>(this)->actor_wait_state < 0) return a_body1cont2loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 13749 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1cont2loopBody1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1cont2loopBody1cont3when1(__when_expr_4.get(), loopDepth); };
		static_cast<FinishRangeFileActor*>(this)->actor_wait_state = 5;
															#line 1804 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< FinishRangeFileActor, 4, Void >*>(static_cast<FinishRangeFileActor*>(this)));
															#line 13754 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont2loopBody1cont3(Optional<BackupConfig::RangeSlice> && s,int loopDepth) 
	{
															#line 1798 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!s.present() || s.get().begin >= range.begin)
															#line 13763 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1799 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			backup.snapshotRangeFileMap().set( tr, range.end, { range.begin, version, file->getFileName(), file->size() });
															#line 1801 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			usedFile = true;
															#line 13769 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 1804 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_4 = tr->commit();
															#line 1804 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<FinishRangeFileActor*>(this)->actor_wait_state < 0) return a_body1cont2loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 13775 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1cont2loopBody1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1cont2loopBody1cont3when1(__when_expr_4.get(), loopDepth); };
		static_cast<FinishRangeFileActor*>(this)->actor_wait_state = 5;
															#line 1804 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< FinishRangeFileActor, 4, Void >*>(static_cast<FinishRangeFileActor*>(this)));
															#line 13780 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont2loopBody1cont2when1(Optional<BackupConfig::RangeSlice> const& s,int loopDepth) 
	{
		loopDepth = a_body1cont2loopBody1cont3(s, loopDepth);

		return loopDepth;
	}
	int a_body1cont2loopBody1cont2when1(Optional<BackupConfig::RangeSlice> && s,int loopDepth) 
	{
		loopDepth = a_body1cont2loopBody1cont3(std::move(s), loopDepth);

		return loopDepth;
	}
	void a_exitChoose4() 
	{
		if (static_cast<FinishRangeFileActor*>(this)->actor_wait_state > 0) static_cast<FinishRangeFileActor*>(this)->actor_wait_state = 0;
		static_cast<FinishRangeFileActor*>(this)->ActorCallback< FinishRangeFileActor, 3, Optional<BackupConfig::RangeSlice> >::remove();

	}
	void a_callback_fire(ActorCallback< FinishRangeFileActor, 3, Optional<BackupConfig::RangeSlice> >*,Optional<BackupConfig::RangeSlice> const& value) 
	{
		fdb_probe_actor_enter("finishRangeFile", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont2loopBody1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont2loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont2loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("finishRangeFile", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_fire(ActorCallback< FinishRangeFileActor, 3, Optional<BackupConfig::RangeSlice> >*,Optional<BackupConfig::RangeSlice> && value) 
	{
		fdb_probe_actor_enter("finishRangeFile", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont2loopBody1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont2loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont2loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("finishRangeFile", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_error(ActorCallback< FinishRangeFileActor, 3, Optional<BackupConfig::RangeSlice> >*,Error err) 
	{
		fdb_probe_actor_enter("finishRangeFile", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont2loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont2loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont2loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("finishRangeFile", reinterpret_cast<unsigned long>(this), 3);

	}
	int a_body1cont2loopBody1cont4(Void const& _,int loopDepth) 
	{
															#line 1805 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		task->timeoutVersion = newTimeout;
															#line 13852 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		return a_body1cont2break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1cont2loopBody1cont4(Void && _,int loopDepth) 
	{
															#line 1805 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		task->timeoutVersion = newTimeout;
															#line 13861 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		return a_body1cont2break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1cont2loopBody1cont3when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2loopBody1cont4(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont2loopBody1cont3when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2loopBody1cont4(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose5() 
	{
		if (static_cast<FinishRangeFileActor*>(this)->actor_wait_state > 0) static_cast<FinishRangeFileActor*>(this)->actor_wait_state = 0;
		static_cast<FinishRangeFileActor*>(this)->ActorCallback< FinishRangeFileActor, 4, Void >::remove();

	}
	void a_callback_fire(ActorCallback< FinishRangeFileActor, 4, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("finishRangeFile", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont2loopBody1cont3when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont2loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont2loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("finishRangeFile", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_fire(ActorCallback< FinishRangeFileActor, 4, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("finishRangeFile", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont2loopBody1cont3when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont2loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont2loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("finishRangeFile", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_error(ActorCallback< FinishRangeFileActor, 4, Void >*,Error err) 
	{
		fdb_probe_actor_enter("finishRangeFile", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont2loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont2loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont2loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("finishRangeFile", reinterpret_cast<unsigned long>(this), 4);

	}
	int a_body1cont2loopBody1Catch1cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont2loopBody1Catch1cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont2loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2loopBody1Catch1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont2loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2loopBody1Catch1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose6() 
	{
		if (static_cast<FinishRangeFileActor*>(this)->actor_wait_state > 0) static_cast<FinishRangeFileActor*>(this)->actor_wait_state = 0;
		static_cast<FinishRangeFileActor*>(this)->ActorCallback< FinishRangeFileActor, 5, Void >::remove();

	}
	void a_callback_fire(ActorCallback< FinishRangeFileActor, 5, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("finishRangeFile", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont2loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("finishRangeFile", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_fire(ActorCallback< FinishRangeFileActor, 5, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("finishRangeFile", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont2loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("finishRangeFile", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_error(ActorCallback< FinishRangeFileActor, 5, Void >*,Error err) 
	{
		fdb_probe_actor_enter("finishRangeFile", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("finishRangeFile", reinterpret_cast<unsigned long>(this), 5);

	}
															#line 1759 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<IBackupFile> file;
															#line 1759 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Database cx;
															#line 1759 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> task;
															#line 1759 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskBucket> taskBucket;
															#line 1759 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	KeyRange range;
															#line 1759 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version version;
															#line 1771 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 1772 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	BackupConfig backup;
															#line 1773 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	bool usedFile;
															#line 1778 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	FlowLock::Releaser releaser;
															#line 1790 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version newTimeout;
															#line 14026 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via finishRangeFile()
															#line 1759 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class FinishRangeFileActor final : public Actor<bool>, public ActorCallback< FinishRangeFileActor, 0, Void >, public ActorCallback< FinishRangeFileActor, 1, Void >, public ActorCallback< FinishRangeFileActor, 2, Version >, public ActorCallback< FinishRangeFileActor, 3, Optional<BackupConfig::RangeSlice> >, public ActorCallback< FinishRangeFileActor, 4, Void >, public ActorCallback< FinishRangeFileActor, 5, Void >, public FastAllocated<FinishRangeFileActor>, public FinishRangeFileActorState<FinishRangeFileActor> {
															#line 14031 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<FinishRangeFileActor>::operator new;
	using FastAllocated<FinishRangeFileActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<bool>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< FinishRangeFileActor, 0, Void >;
friend struct ActorCallback< FinishRangeFileActor, 1, Void >;
friend struct ActorCallback< FinishRangeFileActor, 2, Version >;
friend struct ActorCallback< FinishRangeFileActor, 3, Optional<BackupConfig::RangeSlice> >;
friend struct ActorCallback< FinishRangeFileActor, 4, Void >;
friend struct ActorCallback< FinishRangeFileActor, 5, Void >;
															#line 1759 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	FinishRangeFileActor(Reference<IBackupFile> const& file,Database const& cx,Reference<Task> const& task,Reference<TaskBucket> const& taskBucket,KeyRange const& range,Version const& version) 
															#line 14047 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<bool>(),
		   FinishRangeFileActorState<FinishRangeFileActor>(file, cx, task, taskBucket, range, version)
	{
		fdb_probe_actor_enter("finishRangeFile", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("finishRangeFile");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("finishRangeFile", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< FinishRangeFileActor, 0, Void >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< FinishRangeFileActor, 1, Void >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< FinishRangeFileActor, 2, Version >*)0, actor_cancelled()); break;
		case 4: this->a_callback_error((ActorCallback< FinishRangeFileActor, 3, Optional<BackupConfig::RangeSlice> >*)0, actor_cancelled()); break;
		case 5: this->a_callback_error((ActorCallback< FinishRangeFileActor, 4, Void >*)0, actor_cancelled()); break;
		case 6: this->a_callback_error((ActorCallback< FinishRangeFileActor, 5, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 1759 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<bool> finishRangeFile( Reference<IBackupFile> const& file, Database const& cx, Reference<Task> const& task, Reference<TaskBucket> const& taskBucket, KeyRange const& range, Version const& version ) {
															#line 1759 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<bool>(new FinishRangeFileActor(file, cx, task, taskBucket, range, version));
															#line 14079 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 1814 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

																#line 14084 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via addTask()
															#line 1815 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class AddTaskActor>
															#line 1815 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class AddTaskActorState {
															#line 14090 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 1815 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	AddTaskActorState(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<Task> const& parentTask,int const& priority,Key const& begin,Key const& end,TaskCompletionKey const& completionKey,Reference<TaskFuture> const& waitFor = Reference<TaskFuture>(),Version const& scheduledVersion = invalidVersion) 
															#line 1815 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 1815 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : tr(tr),
															#line 1815 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskBucket(taskBucket),
															#line 1815 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   parentTask(parentTask),
															#line 1815 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   priority(priority),
															#line 1815 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   begin(begin),
															#line 1815 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   end(end),
															#line 1815 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   completionKey(completionKey),
															#line 1815 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   waitFor(waitFor),
															#line 1815 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   scheduledVersion(scheduledVersion)
															#line 14113 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("addTask", reinterpret_cast<unsigned long>(this));

	}
	~AddTaskActorState() 
	{
		fdb_probe_actor_destroy("addTask", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 1824 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Key> __when_expr_0 = addBackupTask( BackupRangeTaskFunc::name, BackupRangeTaskFunc::version, tr, taskBucket, completionKey, BackupConfig(parentTask), waitFor, [=](Reference<Task> task) { Params.beginKey().set(task, begin); Params.endKey().set(task, end); Params.addBackupRangeTasks().set(task, false); if (scheduledVersion != invalidVersion) ReservedTaskParams::scheduledVersion().set(task, scheduledVersion); }, priority);
															#line 1824 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<AddTaskActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 14130 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<AddTaskActor*>(this)->actor_wait_state = 1;
															#line 1824 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< AddTaskActor, 0, Key >*>(static_cast<AddTaskActor*>(this)));
															#line 14135 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~AddTaskActorState();
		static_cast<AddTaskActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Key const& key,int loopDepth) 
	{
															#line 1840 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<AddTaskActor*>(this)->SAV<Key>::futures) { (void)(key); this->~AddTaskActorState(); static_cast<AddTaskActor*>(this)->destroy(); return 0; }
															#line 14158 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<AddTaskActor*>(this)->SAV< Key >::value()) Key(key);
		this->~AddTaskActorState();
		static_cast<AddTaskActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont1(Key && key,int loopDepth) 
	{
															#line 1840 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<AddTaskActor*>(this)->SAV<Key>::futures) { (void)(key); this->~AddTaskActorState(); static_cast<AddTaskActor*>(this)->destroy(); return 0; }
															#line 14170 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<AddTaskActor*>(this)->SAV< Key >::value()) Key(key);
		this->~AddTaskActorState();
		static_cast<AddTaskActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1when1(Key const& key,int loopDepth) 
	{
		loopDepth = a_body1cont1(key, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Key && key,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(key), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<AddTaskActor*>(this)->actor_wait_state > 0) static_cast<AddTaskActor*>(this)->actor_wait_state = 0;
		static_cast<AddTaskActor*>(this)->ActorCallback< AddTaskActor, 0, Key >::remove();

	}
	void a_callback_fire(ActorCallback< AddTaskActor, 0, Key >*,Key const& value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< AddTaskActor, 0, Key >*,Key && value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< AddTaskActor, 0, Key >*,Error err) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 0);

	}
															#line 1815 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 1815 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskBucket> taskBucket;
															#line 1815 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> parentTask;
															#line 1815 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int priority;
															#line 1815 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key begin;
															#line 1815 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key end;
															#line 1815 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	TaskCompletionKey completionKey;
															#line 1815 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskFuture> waitFor;
															#line 1815 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version scheduledVersion;
															#line 14259 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via addTask()
															#line 1815 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class AddTaskActor final : public Actor<Key>, public ActorCallback< AddTaskActor, 0, Key >, public FastAllocated<AddTaskActor>, public AddTaskActorState<AddTaskActor> {
															#line 14264 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<AddTaskActor>::operator new;
	using FastAllocated<AddTaskActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Key>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< AddTaskActor, 0, Key >;
															#line 1815 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	AddTaskActor(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<Task> const& parentTask,int const& priority,Key const& begin,Key const& end,TaskCompletionKey const& completionKey,Reference<TaskFuture> const& waitFor = Reference<TaskFuture>(),Version const& scheduledVersion = invalidVersion) 
															#line 14275 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Key>(),
		   AddTaskActorState<AddTaskActor>(tr, taskBucket, parentTask, priority, begin, end, completionKey, waitFor, scheduledVersion)
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("addTask");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< AddTaskActor, 0, Key >*)0, actor_cancelled()); break;
		}

	}
};
															#line 1815 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Key> addTask( Reference<ReadYourWritesTransaction> const& tr, Reference<TaskBucket> const& taskBucket, Reference<Task> const& parentTask, int const& priority, Key const& begin, Key const& end, TaskCompletionKey const& completionKey, Reference<TaskFuture> const& waitFor = Reference<TaskFuture>(), Version const& scheduledVersion = invalidVersion ) {
															#line 1815 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Key>(new AddTaskActor(tr, taskBucket, parentTask, priority, begin, end, completionKey, waitFor, scheduledVersion));
															#line 14302 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 1842 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

																#line 14307 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via _execute()
															#line 1843 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class _executeActor>
															#line 1843 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _executeActorState {
															#line 14313 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 1843 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_executeActorState(Database const& cx,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 1843 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 1843 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : cx(cx),
															#line 1843 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskBucket(taskBucket),
															#line 1843 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   futureBucket(futureBucket),
															#line 1843 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   task(task),
															#line 1847 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   lock(new FlowLock(CLIENT_KNOBS->BACKUP_LOCK_BYTES))
															#line 14328 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("_execute", reinterpret_cast<unsigned long>(this));

	}
	~_executeActorState() 
	{
		fdb_probe_actor_destroy("_execute", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 1849 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_0 = checkTaskVersion(cx, task, BackupRangeTaskFunc::name, BackupRangeTaskFunc::version);
															#line 1849 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 14345 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<_executeActor*>(this)->actor_wait_state = 1;
															#line 1849 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< _executeActor, 0, Void >*>(static_cast<_executeActor*>(this)));
															#line 14350 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~_executeActorState();
		static_cast<_executeActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Void const& _,int loopDepth) 
	{
															#line 1851 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		beginKey = Params.beginKey().get(task);
															#line 1852 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		endKey = Params.endKey().get(task);
															#line 1854 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FileBackupRangeStart") .suppressFor(60) .detail("BackupUID", BackupConfig(task).getUid()) .detail("BeginKey", Params.beginKey().get(task).printable()) .detail("EndKey", Params.endKey().get(task).printable()) .detail("TaskKey", task->key.printable());
															#line 1863 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (beginKey == endKey)
															#line 14379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1864 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<_executeActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_executeActorState(); static_cast<_executeActor*>(this)->destroy(); return 0; }
															#line 14383 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<_executeActor*>(this)->SAV< Void >::value()) Void(Void());
			this->~_executeActorState();
			static_cast<_executeActor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 1867 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Standalone<VectorRef<KeyRef>>> __when_expr_1 = runRYWTransaction( cx, [=](Reference<ReadYourWritesTransaction> tr) { return getBlockOfShards(tr, beginKey, endKey, 1); });
															#line 1867 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 14393 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<_executeActor*>(this)->actor_wait_state = 2;
															#line 1867 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< _executeActor, 1, Standalone<VectorRef<KeyRef>> >*>(static_cast<_executeActor*>(this)));
															#line 14398 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Void && _,int loopDepth) 
	{
															#line 1851 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		beginKey = Params.beginKey().get(task);
															#line 1852 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		endKey = Params.endKey().get(task);
															#line 1854 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FileBackupRangeStart") .suppressFor(60) .detail("BackupUID", BackupConfig(task).getUid()) .detail("BeginKey", Params.beginKey().get(task).printable()) .detail("EndKey", Params.endKey().get(task).printable()) .detail("TaskKey", task->key.printable());
															#line 1863 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (beginKey == endKey)
															#line 14413 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1864 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<_executeActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_executeActorState(); static_cast<_executeActor*>(this)->destroy(); return 0; }
															#line 14417 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<_executeActor*>(this)->SAV< Void >::value()) Void(Void());
			this->~_executeActorState();
			static_cast<_executeActor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 1867 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Standalone<VectorRef<KeyRef>>> __when_expr_1 = runRYWTransaction( cx, [=](Reference<ReadYourWritesTransaction> tr) { return getBlockOfShards(tr, beginKey, endKey, 1); });
															#line 1867 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 14427 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<_executeActor*>(this)->actor_wait_state = 2;
															#line 1867 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< _executeActor, 1, Standalone<VectorRef<KeyRef>> >*>(static_cast<_executeActor*>(this)));
															#line 14432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<_executeActor*>(this)->actor_wait_state > 0) static_cast<_executeActor*>(this)->actor_wait_state = 0;
		static_cast<_executeActor*>(this)->ActorCallback< _executeActor, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< _executeActor, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< _executeActor, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont2(Standalone<VectorRef<KeyRef>> const& keys,int loopDepth) 
	{
															#line 1869 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (keys.size() > 0)
															#line 14504 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1870 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			Params.addBackupRangeTasks().set(task, true);
															#line 1871 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<_executeActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_executeActorState(); static_cast<_executeActor*>(this)->destroy(); return 0; }
															#line 14510 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<_executeActor*>(this)->SAV< Void >::value()) Void(Void());
			this->~_executeActorState();
			static_cast<_executeActor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 1877 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		outFile = Reference<IBackupFile>();
															#line 1878 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		outVersion = invalidVersion;
															#line 1879 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		lastKey = Key();
															#line 1882 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		results = PromiseStream<RangeResultWithVersion>();
															#line 1884 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		rc = readCommitted(cx, results, lock, KeyRangeRef(beginKey, endKey), Terminator::True, AccessSystemKeys::True, LockAware::True);
															#line 1891 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		rangeFile = std::unique_ptr<IRangeFileWriter>();
															#line 1892 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		backup = BackupConfig(task);
															#line 1893 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		arena = Arena();
															#line 1895 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<DatabaseConfiguration> __when_expr_2 = getDatabaseConfiguration(cx);
															#line 1895 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 14536 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont2when1(__when_expr_2.get(), loopDepth); };
		static_cast<_executeActor*>(this)->actor_wait_state = 3;
															#line 1895 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< _executeActor, 2, DatabaseConfiguration >*>(static_cast<_executeActor*>(this)));
															#line 14541 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont2(Standalone<VectorRef<KeyRef>> && keys,int loopDepth) 
	{
															#line 1869 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (keys.size() > 0)
															#line 14550 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1870 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			Params.addBackupRangeTasks().set(task, true);
															#line 1871 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<_executeActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_executeActorState(); static_cast<_executeActor*>(this)->destroy(); return 0; }
															#line 14556 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<_executeActor*>(this)->SAV< Void >::value()) Void(Void());
			this->~_executeActorState();
			static_cast<_executeActor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 1877 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		outFile = Reference<IBackupFile>();
															#line 1878 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		outVersion = invalidVersion;
															#line 1879 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		lastKey = Key();
															#line 1882 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		results = PromiseStream<RangeResultWithVersion>();
															#line 1884 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		rc = readCommitted(cx, results, lock, KeyRangeRef(beginKey, endKey), Terminator::True, AccessSystemKeys::True, LockAware::True);
															#line 1891 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		rangeFile = std::unique_ptr<IRangeFileWriter>();
															#line 1892 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		backup = BackupConfig(task);
															#line 1893 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		arena = Arena();
															#line 1895 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<DatabaseConfiguration> __when_expr_2 = getDatabaseConfiguration(cx);
															#line 1895 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 14582 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont2when1(__when_expr_2.get(), loopDepth); };
		static_cast<_executeActor*>(this)->actor_wait_state = 3;
															#line 1895 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< _executeActor, 2, DatabaseConfiguration >*>(static_cast<_executeActor*>(this)));
															#line 14587 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1when1(Standalone<VectorRef<KeyRef>> const& keys,int loopDepth) 
	{
		loopDepth = a_body1cont2(keys, loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Standalone<VectorRef<KeyRef>> && keys,int loopDepth) 
	{
		loopDepth = a_body1cont2(std::move(keys), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<_executeActor*>(this)->actor_wait_state > 0) static_cast<_executeActor*>(this)->actor_wait_state = 0;
		static_cast<_executeActor*>(this)->ActorCallback< _executeActor, 1, Standalone<VectorRef<KeyRef>> >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor, 1, Standalone<VectorRef<KeyRef>> >*,Standalone<VectorRef<KeyRef>> const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< _executeActor, 1, Standalone<VectorRef<KeyRef>> >*,Standalone<VectorRef<KeyRef>> && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< _executeActor, 1, Standalone<VectorRef<KeyRef>> >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont4(DatabaseConfiguration const& config,int loopDepth) 
	{
															#line 1896 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		encryptMode = config.encryptionAtRestMode;
															#line 1897 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tenantCache = Optional<Reference<TenantEntryCache<Void>>>();
															#line 1898 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (encryptMode.mode == EncryptionAtRestMode::DOMAIN_AWARE)
															#line 14663 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1899 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tenantCache = makeReference<TenantEntryCache<Void>>(cx, TenantEntryCacheRefreshMode::WATCH);
															#line 1900 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_3 = tenantCache.get()->init();
															#line 1900 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 14671 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1cont4when1(__when_expr_3.get(), loopDepth); };
			static_cast<_executeActor*>(this)->actor_wait_state = 4;
															#line 1900 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< _executeActor, 3, Void >*>(static_cast<_executeActor*>(this)));
															#line 14676 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont6(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont4(DatabaseConfiguration && config,int loopDepth) 
	{
															#line 1896 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		encryptMode = config.encryptionAtRestMode;
															#line 1897 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tenantCache = Optional<Reference<TenantEntryCache<Void>>>();
															#line 1898 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (encryptMode.mode == EncryptionAtRestMode::DOMAIN_AWARE)
															#line 14694 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1899 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tenantCache = makeReference<TenantEntryCache<Void>>(cx, TenantEntryCacheRefreshMode::WATCH);
															#line 1900 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_3 = tenantCache.get()->init();
															#line 1900 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 14702 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1cont4when1(__when_expr_3.get(), loopDepth); };
			static_cast<_executeActor*>(this)->actor_wait_state = 4;
															#line 1900 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< _executeActor, 3, Void >*>(static_cast<_executeActor*>(this)));
															#line 14707 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont6(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont2when1(DatabaseConfiguration const& config,int loopDepth) 
	{
		loopDepth = a_body1cont4(config, loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(DatabaseConfiguration && config,int loopDepth) 
	{
		loopDepth = a_body1cont4(std::move(config), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<_executeActor*>(this)->actor_wait_state > 0) static_cast<_executeActor*>(this)->actor_wait_state = 0;
		static_cast<_executeActor*>(this)->ActorCallback< _executeActor, 2, DatabaseConfiguration >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor, 2, DatabaseConfiguration >*,DatabaseConfiguration const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< _executeActor, 2, DatabaseConfiguration >*,DatabaseConfiguration && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< _executeActor, 2, DatabaseConfiguration >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 2);

	}
	int a_body1cont6(int loopDepth) 
	{
															#line 1905 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Reference<IBackupContainer>> __when_expr_4 = backup.backupContainer().getD(cx.getReference());
															#line 1905 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 14786 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1cont6when1(__when_expr_4.get(), loopDepth); };
		static_cast<_executeActor*>(this)->actor_wait_state = 5;
															#line 1905 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< _executeActor, 4, Reference<IBackupContainer> >*>(static_cast<_executeActor*>(this)));
															#line 14791 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont7(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont6(loopDepth);

		return loopDepth;
	}
	int a_body1cont7(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont6(loopDepth);

		return loopDepth;
	}
	int a_body1cont4when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont7(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont4when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont7(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose4() 
	{
		if (static_cast<_executeActor*>(this)->actor_wait_state > 0) static_cast<_executeActor*>(this)->actor_wait_state = 0;
		static_cast<_executeActor*>(this)->ActorCallback< _executeActor, 3, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor, 3, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont4when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_fire(ActorCallback< _executeActor, 3, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont4when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_error(ActorCallback< _executeActor, 3, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 3);

	}
	int a_body1cont8(Reference<IBackupContainer> const& _bc,int loopDepth) 
	{
															#line 1906 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!_bc)
															#line 14875 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1907 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<_executeActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_executeActorState(); static_cast<_executeActor*>(this)->destroy(); return 0; }
															#line 14879 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<_executeActor*>(this)->SAV< Void >::value()) Void(Void());
			this->~_executeActorState();
			static_cast<_executeActor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 1909 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		bc = getBackupContainerWithProxy(_bc);
															#line 1910 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		done = false;
															#line 1911 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		nrKeys = 0;
															#line 1912 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		encryptionEnabled = Optional<bool>();
															#line 1914 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 14895 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont8loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1cont8(Reference<IBackupContainer> && _bc,int loopDepth) 
	{
															#line 1906 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!_bc)
															#line 14904 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1907 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<_executeActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_executeActorState(); static_cast<_executeActor*>(this)->destroy(); return 0; }
															#line 14908 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<_executeActor*>(this)->SAV< Void >::value()) Void(Void());
			this->~_executeActorState();
			static_cast<_executeActor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 1909 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		bc = getBackupContainerWithProxy(_bc);
															#line 1910 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		done = false;
															#line 1911 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		nrKeys = 0;
															#line 1912 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		encryptionEnabled = Optional<bool>();
															#line 1914 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 14924 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont8loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1cont6when1(Reference<IBackupContainer> const& _bc,int loopDepth) 
	{
		loopDepth = a_body1cont8(_bc, loopDepth);

		return loopDepth;
	}
	int a_body1cont6when1(Reference<IBackupContainer> && _bc,int loopDepth) 
	{
		loopDepth = a_body1cont8(std::move(_bc), loopDepth);

		return loopDepth;
	}
	void a_exitChoose5() 
	{
		if (static_cast<_executeActor*>(this)->actor_wait_state > 0) static_cast<_executeActor*>(this)->actor_wait_state = 0;
		static_cast<_executeActor*>(this)->ActorCallback< _executeActor, 4, Reference<IBackupContainer> >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor, 4, Reference<IBackupContainer> >*,Reference<IBackupContainer> const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont6when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_fire(ActorCallback< _executeActor, 4, Reference<IBackupContainer> >*,Reference<IBackupContainer> && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont6when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_error(ActorCallback< _executeActor, 4, Reference<IBackupContainer> >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 4);

	}
	int a_body1cont8loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont8loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont8loopBody1(int loopDepth) 
	{
															#line 1915 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		values = RangeResultWithVersion();
															#line 15003 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		try {
															#line 1917 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			FutureStream<RangeResultWithVersion> __when_expr_5 = results.getFuture();
															#line 1917 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor*>(this)->actor_wait_state < 0) return a_body1cont8loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 15009 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_5.isReady()) { if (__when_expr_5.isError()) return a_body1cont8loopBody1Catch1(__when_expr_5.getError(), loopDepth); else return a_body1cont8loopBody1when1(__when_expr_5.pop(), loopDepth); };
			static_cast<_executeActor*>(this)->actor_wait_state = 6;
															#line 1917 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_5.addCallbackAndClear(static_cast<ActorSingleCallback< _executeActor, 5, RangeResultWithVersion >*>(static_cast<_executeActor*>(this)));
															#line 15014 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1cont8loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1cont8loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont8loopBody1cont1(int loopDepth) 
	{
															#line 1929 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (values.second != outVersion || done)
															#line 15029 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1930 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (outFile)
															#line 15033 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 1931 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				CODE_PROBE(outVersion != invalidVersion, "Backup range task wrote multiple versions");
															#line 1932 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				nextKey = done ? endKey : keyAfter(lastKey);
															#line 1933 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				StrictFuture<Void> __when_expr_6 = rangeFile->writeKey(nextKey);
															#line 1933 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (static_cast<_executeActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 15043 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				if (__when_expr_6.isReady()) { if (__when_expr_6.isError()) return a_body1Catch1(__when_expr_6.getError(), std::max(0, loopDepth - 1)); else return a_body1cont8loopBody1cont1when1(__when_expr_6.get(), loopDepth); };
				static_cast<_executeActor*>(this)->actor_wait_state = 7;
															#line 1933 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				__when_expr_6.addCallbackAndClear(static_cast<ActorCallback< _executeActor, 6, Void >*>(static_cast<_executeActor*>(this)));
															#line 15048 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				loopDepth = 0;
			}
			else
			{
				loopDepth = a_body1cont8loopBody1cont6(loopDepth);
			}
		}
		else
		{
			loopDepth = a_body1cont8loopBody1cont5(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont8loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 1921 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (e.code() == error_code_end_of_stream)
															#line 15068 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 1922 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				done = true;
															#line 15072 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
			else
			{
															#line 1924 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				return a_body1Catch1(e, std::max(0, loopDepth - 1));
															#line 15078 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
			loopDepth = a_body1cont8loopBody1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont8loopBody1cont2(RangeResultWithVersion const& _values,int loopDepth) 
	{
															#line 1918 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		values = _values;
															#line 1919 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		lock->release(values.first.expectedSize());
															#line 15096 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont8loopBody1cont4(loopDepth);

		return loopDepth;
	}
	int a_body1cont8loopBody1cont2(RangeResultWithVersion && _values,int loopDepth) 
	{
															#line 1918 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		values = _values;
															#line 1919 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		lock->release(values.first.expectedSize());
															#line 15107 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont8loopBody1cont4(loopDepth);

		return loopDepth;
	}
	int a_body1cont8loopBody1when1(RangeResultWithVersion const& _values,int loopDepth) 
	{
		loopDepth = a_body1cont8loopBody1cont2(_values, loopDepth);

		return loopDepth;
	}
	int a_body1cont8loopBody1when1(RangeResultWithVersion && _values,int loopDepth) 
	{
		loopDepth = a_body1cont8loopBody1cont2(std::move(_values), loopDepth);

		return loopDepth;
	}
	void a_exitChoose6() 
	{
		if (static_cast<_executeActor*>(this)->actor_wait_state > 0) static_cast<_executeActor*>(this)->actor_wait_state = 0;
		static_cast<_executeActor*>(this)->ActorSingleCallback< _executeActor, 5, RangeResultWithVersion >::remove();

	}
	void a_callback_fire(ActorSingleCallback< _executeActor, 5, RangeResultWithVersion >*,RangeResultWithVersion const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont8loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont8loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont8loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_fire(ActorSingleCallback< _executeActor, 5, RangeResultWithVersion >*,RangeResultWithVersion && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont8loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont8loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont8loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_error(ActorSingleCallback< _executeActor, 5, RangeResultWithVersion >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont8loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont8loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont8loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 5);

	}
	int a_body1cont8loopBody1cont4(int loopDepth) 
	{
		try {
			loopDepth = a_body1cont8loopBody1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont8loopBody1cont5(int loopDepth) 
	{
															#line 2007 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (values.first.size() != 0)
															#line 15192 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 2008 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			i = 0;
															#line 2009 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			;
															#line 15198 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = a_body1cont8loopBody1cont5loopHead1(loopDepth);
		}
		else
		{
			loopDepth = a_body1cont8loopBody1cont13(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont8loopBody1cont6(int loopDepth) 
	{
															#line 1957 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (done)
															#line 15212 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1958 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<_executeActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_executeActorState(); static_cast<_executeActor*>(this)->destroy(); return 0; }
															#line 15216 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<_executeActor*>(this)->SAV< Void >::value()) Void(Void());
			this->~_executeActorState();
			static_cast<_executeActor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 1962 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		outVersion = values.second;
															#line 1965 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		blockSize = BUGGIFY ? deterministicRandom()->randomInt(250e3, 4e6) : CLIENT_KNOBS->BACKUP_RANGEFILE_BLOCK_SIZE;
															#line 1967 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		snapshotBeginVersion = Version();
															#line 1968 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		snapshotRangeFileCount = int64_t();
															#line 1970 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr = Reference<ReadYourWritesTransaction>(new ReadYourWritesTransaction(cx));
															#line 1971 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 15234 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont8loopBody1cont6loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1cont8loopBody1cont7(Void const& _,int loopDepth) 
	{
															#line 1935 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (BUGGIFY)
															#line 15243 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1936 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_7 = rangeFile->padEnd(true);
															#line 1936 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 15249 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_7.isReady()) { if (__when_expr_7.isError()) return a_body1Catch1(__when_expr_7.getError(), std::max(0, loopDepth - 1)); else return a_body1cont8loopBody1cont7when1(__when_expr_7.get(), loopDepth); };
			static_cast<_executeActor*>(this)->actor_wait_state = 8;
															#line 1936 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_7.addCallbackAndClear(static_cast<ActorCallback< _executeActor, 7, Void >*>(static_cast<_executeActor*>(this)));
															#line 15254 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont8loopBody1cont8(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont8loopBody1cont7(Void && _,int loopDepth) 
	{
															#line 1935 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (BUGGIFY)
															#line 15268 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1936 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_7 = rangeFile->padEnd(true);
															#line 1936 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 15274 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_7.isReady()) { if (__when_expr_7.isError()) return a_body1Catch1(__when_expr_7.getError(), std::max(0, loopDepth - 1)); else return a_body1cont8loopBody1cont7when1(__when_expr_7.get(), loopDepth); };
			static_cast<_executeActor*>(this)->actor_wait_state = 8;
															#line 1936 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_7.addCallbackAndClear(static_cast<ActorCallback< _executeActor, 7, Void >*>(static_cast<_executeActor*>(this)));
															#line 15279 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont8loopBody1cont8(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont8loopBody1cont1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont8loopBody1cont7(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont8loopBody1cont1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont8loopBody1cont7(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose7() 
	{
		if (static_cast<_executeActor*>(this)->actor_wait_state > 0) static_cast<_executeActor*>(this)->actor_wait_state = 0;
		static_cast<_executeActor*>(this)->ActorCallback< _executeActor, 6, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor, 6, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1cont8loopBody1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 6);

	}
	void a_callback_fire(ActorCallback< _executeActor, 6, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1cont8loopBody1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 6);

	}
	void a_callback_error(ActorCallback< _executeActor, 6, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 6);

	}
	int a_body1cont8loopBody1cont8(int loopDepth) 
	{
															#line 1939 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_8 = rangeFile->finish();
															#line 1939 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 15358 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_8.isReady()) { if (__when_expr_8.isError()) return a_body1Catch1(__when_expr_8.getError(), std::max(0, loopDepth - 1)); else return a_body1cont8loopBody1cont8when1(__when_expr_8.get(), loopDepth); };
		static_cast<_executeActor*>(this)->actor_wait_state = 9;
															#line 1939 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_8.addCallbackAndClear(static_cast<ActorCallback< _executeActor, 8, Void >*>(static_cast<_executeActor*>(this)));
															#line 15363 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont8loopBody1cont9(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont8loopBody1cont8(loopDepth);

		return loopDepth;
	}
	int a_body1cont8loopBody1cont9(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont8loopBody1cont8(loopDepth);

		return loopDepth;
	}
	int a_body1cont8loopBody1cont7when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont8loopBody1cont9(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont8loopBody1cont7when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont8loopBody1cont9(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose8() 
	{
		if (static_cast<_executeActor*>(this)->actor_wait_state > 0) static_cast<_executeActor*>(this)->actor_wait_state = 0;
		static_cast<_executeActor*>(this)->ActorCallback< _executeActor, 7, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor, 7, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1cont8loopBody1cont7when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 7);

	}
	void a_callback_fire(ActorCallback< _executeActor, 7, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1cont8loopBody1cont7when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 7);

	}
	void a_callback_error(ActorCallback< _executeActor, 7, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 7);

	}
	int a_body1cont8loopBody1cont10(Void const& _,int loopDepth) 
	{
															#line 1941 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<bool> __when_expr_9 = finishRangeFile(outFile, cx, task, taskBucket, KeyRangeRef(beginKey, nextKey), outVersion);
															#line 1941 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 15449 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_9.isReady()) { if (__when_expr_9.isError()) return a_body1Catch1(__when_expr_9.getError(), std::max(0, loopDepth - 1)); else return a_body1cont8loopBody1cont10when1(__when_expr_9.get(), loopDepth); };
		static_cast<_executeActor*>(this)->actor_wait_state = 10;
															#line 1941 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_9.addCallbackAndClear(static_cast<ActorCallback< _executeActor, 9, bool >*>(static_cast<_executeActor*>(this)));
															#line 15454 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont8loopBody1cont10(Void && _,int loopDepth) 
	{
															#line 1941 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<bool> __when_expr_9 = finishRangeFile(outFile, cx, task, taskBucket, KeyRangeRef(beginKey, nextKey), outVersion);
															#line 1941 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 15465 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_9.isReady()) { if (__when_expr_9.isError()) return a_body1Catch1(__when_expr_9.getError(), std::max(0, loopDepth - 1)); else return a_body1cont8loopBody1cont10when1(__when_expr_9.get(), loopDepth); };
		static_cast<_executeActor*>(this)->actor_wait_state = 10;
															#line 1941 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_9.addCallbackAndClear(static_cast<ActorCallback< _executeActor, 9, bool >*>(static_cast<_executeActor*>(this)));
															#line 15470 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont8loopBody1cont8when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont8loopBody1cont10(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont8loopBody1cont8when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont8loopBody1cont10(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose9() 
	{
		if (static_cast<_executeActor*>(this)->actor_wait_state > 0) static_cast<_executeActor*>(this)->actor_wait_state = 0;
		static_cast<_executeActor*>(this)->ActorCallback< _executeActor, 8, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor, 8, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 8);
		a_exitChoose9();
		try {
			a_body1cont8loopBody1cont8when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 8);

	}
	void a_callback_fire(ActorCallback< _executeActor, 8, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 8);
		a_exitChoose9();
		try {
			a_body1cont8loopBody1cont8when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 8);

	}
	void a_callback_error(ActorCallback< _executeActor, 8, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 8);
		a_exitChoose9();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 8);

	}
	int a_body1cont8loopBody1cont10cont1(bool const& usedFile,int loopDepth) 
	{
															#line 1943 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FileBackupWroteRangeFile") .suppressFor(60) .detail("BackupUID", backup.getUid()) .detail("Size", outFile->size()) .detail("Keys", nrKeys) .detail("ReadVersion", outVersion) .detail("BeginKey", beginKey.printable()) .detail("EndKey", nextKey.printable()) .detail("AddedFileToMap", usedFile);
															#line 1953 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		nrKeys = 0;
															#line 1954 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		beginKey = nextKey;
															#line 15546 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont8loopBody1cont6(loopDepth);

		return loopDepth;
	}
	int a_body1cont8loopBody1cont10cont1(bool && usedFile,int loopDepth) 
	{
															#line 1943 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FileBackupWroteRangeFile") .suppressFor(60) .detail("BackupUID", backup.getUid()) .detail("Size", outFile->size()) .detail("Keys", nrKeys) .detail("ReadVersion", outVersion) .detail("BeginKey", beginKey.printable()) .detail("EndKey", nextKey.printable()) .detail("AddedFileToMap", usedFile);
															#line 1953 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		nrKeys = 0;
															#line 1954 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		beginKey = nextKey;
															#line 15559 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont8loopBody1cont6(loopDepth);

		return loopDepth;
	}
	int a_body1cont8loopBody1cont10when1(bool const& usedFile,int loopDepth) 
	{
		loopDepth = a_body1cont8loopBody1cont10cont1(usedFile, loopDepth);

		return loopDepth;
	}
	int a_body1cont8loopBody1cont10when1(bool && usedFile,int loopDepth) 
	{
		loopDepth = a_body1cont8loopBody1cont10cont1(std::move(usedFile), loopDepth);

		return loopDepth;
	}
	void a_exitChoose10() 
	{
		if (static_cast<_executeActor*>(this)->actor_wait_state > 0) static_cast<_executeActor*>(this)->actor_wait_state = 0;
		static_cast<_executeActor*>(this)->ActorCallback< _executeActor, 9, bool >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor, 9, bool >*,bool const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 9);
		a_exitChoose10();
		try {
			a_body1cont8loopBody1cont10when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 9);

	}
	void a_callback_fire(ActorCallback< _executeActor, 9, bool >*,bool && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 9);
		a_exitChoose10();
		try {
			a_body1cont8loopBody1cont10when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 9);

	}
	void a_callback_error(ActorCallback< _executeActor, 9, bool >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 9);
		a_exitChoose10();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 9);

	}
	int a_body1cont8loopBody1cont11(int loopDepth) 
	{
															#line 1987 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Reference<IBackupFile>> __when_expr_12 = bc->writeRangeFile(snapshotBeginVersion, snapshotRangeFileCount, outVersion, blockSize);
															#line 1987 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 15633 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_12.isReady()) { if (__when_expr_12.isError()) return a_body1Catch1(__when_expr_12.getError(), std::max(0, loopDepth - 1)); else return a_body1cont8loopBody1cont11when1(__when_expr_12.get(), loopDepth); };
		static_cast<_executeActor*>(this)->actor_wait_state = 13;
															#line 1987 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_12.addCallbackAndClear(static_cast<ActorCallback< _executeActor, 12, Reference<IBackupFile> >*>(static_cast<_executeActor*>(this)));
															#line 15638 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont8loopBody1cont6loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont8loopBody1cont6loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont8loopBody1cont6loopBody1(int loopDepth) 
	{
		try {
															#line 1973 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 1974 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 1976 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_10 = taskBucket->keepRunning(tr, task) && storeOrThrow(snapshotBeginVersion, backup.snapshotBeginVersion().get(tr)) && store(encryptionEnabled, backup.enableSnapshotBackupEncryption().get(tr)) && store(snapshotRangeFileCount, backup.snapshotRangeFileCount().getD(tr));
															#line 1976 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor*>(this)->actor_wait_state < 0) return a_body1cont8loopBody1cont6loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 15661 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_10.isReady()) { if (__when_expr_10.isError()) return a_body1cont8loopBody1cont6loopBody1Catch1(__when_expr_10.getError(), loopDepth); else return a_body1cont8loopBody1cont6loopBody1when1(__when_expr_10.get(), loopDepth); };
			static_cast<_executeActor*>(this)->actor_wait_state = 11;
															#line 1976 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_10.addCallbackAndClear(static_cast<ActorCallback< _executeActor, 10, Void >*>(static_cast<_executeActor*>(this)));
															#line 15666 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1cont8loopBody1cont6loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1cont8loopBody1cont6loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont8loopBody1cont6break1(int loopDepth) 
	{
		try {
			return a_body1cont8loopBody1cont11(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont8loopBody1cont6loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1cont8loopBody1cont6loopHead1(0);

		return loopDepth;
	}
	int a_body1cont8loopBody1cont6loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 1983 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_11 = tr->onError(e);
															#line 1983 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 2));
															#line 15703 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_11.isReady()) { if (__when_expr_11.isError()) return a_body1Catch1(__when_expr_11.getError(), std::max(0, loopDepth - 2)); else return a_body1cont8loopBody1cont6loopBody1Catch1when1(__when_expr_11.get(), loopDepth); };
			static_cast<_executeActor*>(this)->actor_wait_state = 12;
															#line 1983 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_11.addCallbackAndClear(static_cast<ActorCallback< _executeActor, 11, Void >*>(static_cast<_executeActor*>(this)));
															#line 15708 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 2));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 2));
		}

		return loopDepth;
	}
	int a_body1cont8loopBody1cont6loopBody1cont2(Void const& _,int loopDepth) 
	{
		return a_body1cont8loopBody1cont6break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1cont8loopBody1cont6loopBody1cont2(Void && _,int loopDepth) 
	{
		return a_body1cont8loopBody1cont6break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1cont8loopBody1cont6loopBody1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont8loopBody1cont6loopBody1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont8loopBody1cont6loopBody1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont8loopBody1cont6loopBody1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose11() 
	{
		if (static_cast<_executeActor*>(this)->actor_wait_state > 0) static_cast<_executeActor*>(this)->actor_wait_state = 0;
		static_cast<_executeActor*>(this)->ActorCallback< _executeActor, 10, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor, 10, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 10);
		a_exitChoose11();
		try {
			a_body1cont8loopBody1cont6loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont8loopBody1cont6loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont8loopBody1cont6loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 10);

	}
	void a_callback_fire(ActorCallback< _executeActor, 10, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 10);
		a_exitChoose11();
		try {
			a_body1cont8loopBody1cont6loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont8loopBody1cont6loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont8loopBody1cont6loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 10);

	}
	void a_callback_error(ActorCallback< _executeActor, 10, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 10);
		a_exitChoose11();
		try {
			a_body1cont8loopBody1cont6loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont8loopBody1cont6loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont8loopBody1cont6loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 10);

	}
	int a_body1cont8loopBody1cont6loopBody1Catch1cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont8loopBody1cont6loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont8loopBody1cont6loopBody1Catch1cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont8loopBody1cont6loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont8loopBody1cont6loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont8loopBody1cont6loopBody1Catch1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont8loopBody1cont6loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont8loopBody1cont6loopBody1Catch1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose12() 
	{
		if (static_cast<_executeActor*>(this)->actor_wait_state > 0) static_cast<_executeActor*>(this)->actor_wait_state = 0;
		static_cast<_executeActor*>(this)->ActorCallback< _executeActor, 11, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor, 11, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 11);
		a_exitChoose12();
		try {
			a_body1cont8loopBody1cont6loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 11);

	}
	void a_callback_fire(ActorCallback< _executeActor, 11, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 11);
		a_exitChoose12();
		try {
			a_body1cont8loopBody1cont6loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 11);

	}
	void a_callback_error(ActorCallback< _executeActor, 11, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 11);
		a_exitChoose12();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 11);

	}
	int a_body1cont8loopBody1cont11cont1(Reference<IBackupFile> const& f,int loopDepth) 
	{
															#line 1989 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		outFile = f;
															#line 1991 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!encryptionEnabled.present() || !encryptionEnabled.get())
															#line 15875 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1992 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			encryptMode = EncryptionAtRestMode::DISABLED;
															#line 15879 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 1994 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent(SevDebug, "EncryptionMode").detail("EncryptMode", encryptMode.toString());
															#line 1996 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (encryptMode.mode != EncryptionAtRestMode::DISABLED)
															#line 15885 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1997 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			CODE_PROBE(true, "using encrypted snapshot file writer");
															#line 1998 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			rangeFile = std::make_unique<EncryptedRangeFileWriter>( cx, &arena, encryptMode, tenantCache, outFile, blockSize);
															#line 15891 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		else
		{
															#line 2001 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			rangeFile = std::make_unique<RangeFileWriter>(outFile, blockSize);
															#line 15897 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 2003 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_13 = rangeFile->writeKey(beginKey);
															#line 2003 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 15903 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_13.isReady()) { if (__when_expr_13.isError()) return a_body1Catch1(__when_expr_13.getError(), std::max(0, loopDepth - 1)); else return a_body1cont8loopBody1cont11cont1when1(__when_expr_13.get(), loopDepth); };
		static_cast<_executeActor*>(this)->actor_wait_state = 14;
															#line 2003 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_13.addCallbackAndClear(static_cast<ActorCallback< _executeActor, 13, Void >*>(static_cast<_executeActor*>(this)));
															#line 15908 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont8loopBody1cont11cont1(Reference<IBackupFile> && f,int loopDepth) 
	{
															#line 1989 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		outFile = f;
															#line 1991 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!encryptionEnabled.present() || !encryptionEnabled.get())
															#line 15919 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1992 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			encryptMode = EncryptionAtRestMode::DISABLED;
															#line 15923 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 1994 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent(SevDebug, "EncryptionMode").detail("EncryptMode", encryptMode.toString());
															#line 1996 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (encryptMode.mode != EncryptionAtRestMode::DISABLED)
															#line 15929 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 1997 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			CODE_PROBE(true, "using encrypted snapshot file writer");
															#line 1998 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			rangeFile = std::make_unique<EncryptedRangeFileWriter>( cx, &arena, encryptMode, tenantCache, outFile, blockSize);
															#line 15935 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		else
		{
															#line 2001 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			rangeFile = std::make_unique<RangeFileWriter>(outFile, blockSize);
															#line 15941 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 2003 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_13 = rangeFile->writeKey(beginKey);
															#line 2003 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 15947 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_13.isReady()) { if (__when_expr_13.isError()) return a_body1Catch1(__when_expr_13.getError(), std::max(0, loopDepth - 1)); else return a_body1cont8loopBody1cont11cont1when1(__when_expr_13.get(), loopDepth); };
		static_cast<_executeActor*>(this)->actor_wait_state = 14;
															#line 2003 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_13.addCallbackAndClear(static_cast<ActorCallback< _executeActor, 13, Void >*>(static_cast<_executeActor*>(this)));
															#line 15952 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont8loopBody1cont11when1(Reference<IBackupFile> const& f,int loopDepth) 
	{
		loopDepth = a_body1cont8loopBody1cont11cont1(f, loopDepth);

		return loopDepth;
	}
	int a_body1cont8loopBody1cont11when1(Reference<IBackupFile> && f,int loopDepth) 
	{
		loopDepth = a_body1cont8loopBody1cont11cont1(std::move(f), loopDepth);

		return loopDepth;
	}
	void a_exitChoose13() 
	{
		if (static_cast<_executeActor*>(this)->actor_wait_state > 0) static_cast<_executeActor*>(this)->actor_wait_state = 0;
		static_cast<_executeActor*>(this)->ActorCallback< _executeActor, 12, Reference<IBackupFile> >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor, 12, Reference<IBackupFile> >*,Reference<IBackupFile> const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 12);
		a_exitChoose13();
		try {
			a_body1cont8loopBody1cont11when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 12);

	}
	void a_callback_fire(ActorCallback< _executeActor, 12, Reference<IBackupFile> >*,Reference<IBackupFile> && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 12);
		a_exitChoose13();
		try {
			a_body1cont8loopBody1cont11when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 12);

	}
	void a_callback_error(ActorCallback< _executeActor, 12, Reference<IBackupFile> >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 12);
		a_exitChoose13();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 12);

	}
	int a_body1cont8loopBody1cont11cont2(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont8loopBody1cont5(loopDepth);

		return loopDepth;
	}
	int a_body1cont8loopBody1cont11cont2(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont8loopBody1cont5(loopDepth);

		return loopDepth;
	}
	int a_body1cont8loopBody1cont11cont1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont8loopBody1cont11cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont8loopBody1cont11cont1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont8loopBody1cont11cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose14() 
	{
		if (static_cast<_executeActor*>(this)->actor_wait_state > 0) static_cast<_executeActor*>(this)->actor_wait_state = 0;
		static_cast<_executeActor*>(this)->ActorCallback< _executeActor, 13, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor, 13, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 13);
		a_exitChoose14();
		try {
			a_body1cont8loopBody1cont11cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 13);

	}
	void a_callback_fire(ActorCallback< _executeActor, 13, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 13);
		a_exitChoose14();
		try {
			a_body1cont8loopBody1cont11cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 13);

	}
	void a_callback_error(ActorCallback< _executeActor, 13, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 13);
		a_exitChoose14();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 13);

	}
	int a_body1cont8loopBody1cont13(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1cont8loopHead1(0);

		return loopDepth;
	}
	int a_body1cont8loopBody1cont14(int loopDepth) 
	{
															#line 2012 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		lastKey = values.first.back().key;
															#line 2013 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		nrKeys += values.first.size();
															#line 16107 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont8loopBody1cont13(loopDepth);

		return loopDepth;
	}
	int a_body1cont8loopBody1cont5loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont8loopBody1cont5loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont8loopBody1cont5loopBody1(int loopDepth) 
	{
															#line 2009 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!(i < values.first.size()))
															#line 16123 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
			return a_body1cont8loopBody1cont5break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 2010 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_14 = rangeFile->writeKV(values.first[i].key, values.first[i].value);
															#line 2010 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 2));
															#line 16131 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_14.isReady()) { if (__when_expr_14.isError()) return a_body1Catch1(__when_expr_14.getError(), std::max(0, loopDepth - 2)); else return a_body1cont8loopBody1cont5loopBody1when1(__when_expr_14.get(), loopDepth); };
		static_cast<_executeActor*>(this)->actor_wait_state = 15;
															#line 2010 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_14.addCallbackAndClear(static_cast<ActorCallback< _executeActor, 14, Void >*>(static_cast<_executeActor*>(this)));
															#line 16136 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont8loopBody1cont5break1(int loopDepth) 
	{
		try {
			return a_body1cont8loopBody1cont14(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont8loopBody1cont5loopBody1cont1(Void const& _,int loopDepth) 
	{
															#line 2009 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		++i;
															#line 16158 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (loopDepth == 0) return a_body1cont8loopBody1cont5loopHead1(0);

		return loopDepth;
	}
	int a_body1cont8loopBody1cont5loopBody1cont1(Void && _,int loopDepth) 
	{
															#line 2009 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		++i;
															#line 16167 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (loopDepth == 0) return a_body1cont8loopBody1cont5loopHead1(0);

		return loopDepth;
	}
	int a_body1cont8loopBody1cont5loopBody1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont8loopBody1cont5loopBody1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont8loopBody1cont5loopBody1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont8loopBody1cont5loopBody1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose15() 
	{
		if (static_cast<_executeActor*>(this)->actor_wait_state > 0) static_cast<_executeActor*>(this)->actor_wait_state = 0;
		static_cast<_executeActor*>(this)->ActorCallback< _executeActor, 14, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor, 14, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 14);
		a_exitChoose15();
		try {
			a_body1cont8loopBody1cont5loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 14);

	}
	void a_callback_fire(ActorCallback< _executeActor, 14, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 14);
		a_exitChoose15();
		try {
			a_body1cont8loopBody1cont5loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 14);

	}
	void a_callback_error(ActorCallback< _executeActor, 14, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 14);
		a_exitChoose15();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 14);

	}
															#line 1843 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Database cx;
															#line 1843 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskBucket> taskBucket;
															#line 1843 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<FutureBucket> futureBucket;
															#line 1843 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> task;
															#line 1847 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<FlowLock> lock;
															#line 1851 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key beginKey;
															#line 1852 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key endKey;
															#line 1877 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<IBackupFile> outFile;
															#line 1878 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version outVersion;
															#line 1879 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key lastKey;
															#line 1882 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	PromiseStream<RangeResultWithVersion> results;
															#line 1884 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<Void> rc;
															#line 1891 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::unique_ptr<IRangeFileWriter> rangeFile;
															#line 1892 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	BackupConfig backup;
															#line 1893 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Arena arena;
															#line 1896 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	EncryptionAtRestMode encryptMode;
															#line 1897 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<Reference<TenantEntryCache<Void>>> tenantCache;
															#line 1909 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<IBackupContainer> bc;
															#line 1910 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	bool done;
															#line 1911 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int64_t nrKeys;
															#line 1912 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<bool> encryptionEnabled;
															#line 1915 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	RangeResultWithVersion values;
															#line 1932 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key nextKey;
															#line 1965 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int blockSize;
															#line 1967 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version snapshotBeginVersion;
															#line 1968 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int64_t snapshotRangeFileCount;
															#line 1970 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 2008 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	size_t i;
															#line 16291 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via _execute()
															#line 1843 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _executeActor final : public Actor<Void>, public ActorCallback< _executeActor, 0, Void >, public ActorCallback< _executeActor, 1, Standalone<VectorRef<KeyRef>> >, public ActorCallback< _executeActor, 2, DatabaseConfiguration >, public ActorCallback< _executeActor, 3, Void >, public ActorCallback< _executeActor, 4, Reference<IBackupContainer> >, public ActorSingleCallback< _executeActor, 5, RangeResultWithVersion >, public ActorCallback< _executeActor, 6, Void >, public ActorCallback< _executeActor, 7, Void >, public ActorCallback< _executeActor, 8, Void >, public ActorCallback< _executeActor, 9, bool >, public ActorCallback< _executeActor, 10, Void >, public ActorCallback< _executeActor, 11, Void >, public ActorCallback< _executeActor, 12, Reference<IBackupFile> >, public ActorCallback< _executeActor, 13, Void >, public ActorCallback< _executeActor, 14, Void >, public FastAllocated<_executeActor>, public _executeActorState<_executeActor> {
															#line 16296 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<_executeActor>::operator new;
	using FastAllocated<_executeActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< _executeActor, 0, Void >;
friend struct ActorCallback< _executeActor, 1, Standalone<VectorRef<KeyRef>> >;
friend struct ActorCallback< _executeActor, 2, DatabaseConfiguration >;
friend struct ActorCallback< _executeActor, 3, Void >;
friend struct ActorCallback< _executeActor, 4, Reference<IBackupContainer> >;
friend struct ActorSingleCallback< _executeActor, 5, RangeResultWithVersion >;
friend struct ActorCallback< _executeActor, 6, Void >;
friend struct ActorCallback< _executeActor, 7, Void >;
friend struct ActorCallback< _executeActor, 8, Void >;
friend struct ActorCallback< _executeActor, 9, bool >;
friend struct ActorCallback< _executeActor, 10, Void >;
friend struct ActorCallback< _executeActor, 11, Void >;
friend struct ActorCallback< _executeActor, 12, Reference<IBackupFile> >;
friend struct ActorCallback< _executeActor, 13, Void >;
friend struct ActorCallback< _executeActor, 14, Void >;
															#line 1843 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_executeActor(Database const& cx,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 16321 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   _executeActorState<_executeActor>(cx, taskBucket, futureBucket, task)
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("_execute");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< _executeActor, 0, Void >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< _executeActor, 1, Standalone<VectorRef<KeyRef>> >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< _executeActor, 2, DatabaseConfiguration >*)0, actor_cancelled()); break;
		case 4: this->a_callback_error((ActorCallback< _executeActor, 3, Void >*)0, actor_cancelled()); break;
		case 5: this->a_callback_error((ActorCallback< _executeActor, 4, Reference<IBackupContainer> >*)0, actor_cancelled()); break;
		case 6: this->a_callback_error((ActorSingleCallback< _executeActor, 5, RangeResultWithVersion >*)0, actor_cancelled()); break;
		case 7: this->a_callback_error((ActorCallback< _executeActor, 6, Void >*)0, actor_cancelled()); break;
		case 8: this->a_callback_error((ActorCallback< _executeActor, 7, Void >*)0, actor_cancelled()); break;
		case 9: this->a_callback_error((ActorCallback< _executeActor, 8, Void >*)0, actor_cancelled()); break;
		case 10: this->a_callback_error((ActorCallback< _executeActor, 9, bool >*)0, actor_cancelled()); break;
		case 11: this->a_callback_error((ActorCallback< _executeActor, 10, Void >*)0, actor_cancelled()); break;
		case 12: this->a_callback_error((ActorCallback< _executeActor, 11, Void >*)0, actor_cancelled()); break;
		case 13: this->a_callback_error((ActorCallback< _executeActor, 12, Reference<IBackupFile> >*)0, actor_cancelled()); break;
		case 14: this->a_callback_error((ActorCallback< _executeActor, 13, Void >*)0, actor_cancelled()); break;
		case 15: this->a_callback_error((ActorCallback< _executeActor, 14, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 1843 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> _execute( Database const& cx, Reference<TaskBucket> const& taskBucket, Reference<FutureBucket> const& futureBucket, Reference<Task> const& task ) {
															#line 1843 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new _executeActor(cx, taskBucket, futureBucket, task));
															#line 16362 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 2017 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

																#line 16367 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via startBackupRangeInternal()
															#line 2018 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class StartBackupRangeInternalActor>
															#line 2018 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class StartBackupRangeInternalActorState {
															#line 16373 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 2018 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	StartBackupRangeInternalActorState(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task,Reference<TaskFuture> const& onDone) 
															#line 2018 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 2018 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : tr(tr),
															#line 2018 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskBucket(taskBucket),
															#line 2018 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   futureBucket(futureBucket),
															#line 2018 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   task(task),
															#line 2018 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   onDone(onDone)
															#line 16388 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("startBackupRangeInternal", reinterpret_cast<unsigned long>(this));

	}
	~StartBackupRangeInternalActorState() 
	{
		fdb_probe_actor_destroy("startBackupRangeInternal", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 2023 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 2024 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 2025 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			nextKey = Params.beginKey().get(task);
															#line 2026 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			endKey = Params.endKey().get(task);
															#line 2028 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Standalone<VectorRef<KeyRef>>> __when_expr_0 = getBlockOfShards(tr, nextKey, endKey, CLIENT_KNOBS->BACKUP_SHARD_TASK_LIMIT);
															#line 2028 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<StartBackupRangeInternalActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 16413 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<StartBackupRangeInternalActor*>(this)->actor_wait_state = 1;
															#line 2028 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< StartBackupRangeInternalActor, 0, Standalone<VectorRef<KeyRef>> >*>(static_cast<StartBackupRangeInternalActor*>(this)));
															#line 16418 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~StartBackupRangeInternalActorState();
		static_cast<StartBackupRangeInternalActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 2031 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		std::vector<Future<Key>> addTaskVector;
															#line 2032 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		for(int idx = 0;idx < keys.size();++idx) {
															#line 2033 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (nextKey != keys[idx])
															#line 16445 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 2034 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				addTaskVector.push_back(addTask(tr, taskBucket, task, task->getPriority(), nextKey, keys[idx], TaskCompletionKey::joinWith(onDone)));
															#line 2041 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				TraceEvent("FileBackupRangeSplit") .suppressFor(60) .detail("BackupUID", BackupConfig(task).getUid()) .detail("BeginKey", Params.beginKey().get(task).printable()) .detail("EndKey", Params.endKey().get(task).printable()) .detail("SliceBeginKey", nextKey.printable()) .detail("SliceEndKey", keys[idx].printable());
															#line 16451 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
															#line 2049 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			nextKey = keys[idx];
															#line 16455 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 2052 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = waitForAll(addTaskVector);
															#line 2052 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<StartBackupRangeInternalActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 16461 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<StartBackupRangeInternalActor*>(this)->actor_wait_state = 2;
															#line 2052 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< StartBackupRangeInternalActor, 1, Void >*>(static_cast<StartBackupRangeInternalActor*>(this)));
															#line 16466 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1when1(Standalone<VectorRef<KeyRef>> const& __keys,int loopDepth) 
	{
															#line 2028 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		keys = __keys;
															#line 16475 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1when1(Standalone<VectorRef<KeyRef>> && __keys,int loopDepth) 
	{
		keys = std::move(__keys);
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<StartBackupRangeInternalActor*>(this)->actor_wait_state > 0) static_cast<StartBackupRangeInternalActor*>(this)->actor_wait_state = 0;
		static_cast<StartBackupRangeInternalActor*>(this)->ActorCallback< StartBackupRangeInternalActor, 0, Standalone<VectorRef<KeyRef>> >::remove();

	}
	void a_callback_fire(ActorCallback< StartBackupRangeInternalActor, 0, Standalone<VectorRef<KeyRef>> >*,Standalone<VectorRef<KeyRef>> const& value) 
	{
		fdb_probe_actor_enter("startBackupRangeInternal", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("startBackupRangeInternal", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< StartBackupRangeInternalActor, 0, Standalone<VectorRef<KeyRef>> >*,Standalone<VectorRef<KeyRef>> && value) 
	{
		fdb_probe_actor_enter("startBackupRangeInternal", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("startBackupRangeInternal", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< StartBackupRangeInternalActor, 0, Standalone<VectorRef<KeyRef>> >*,Error err) 
	{
		fdb_probe_actor_enter("startBackupRangeInternal", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("startBackupRangeInternal", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont2(Void const& _,int loopDepth) 
	{
															#line 2054 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (nextKey != endKey)
															#line 16542 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 2056 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_2 = success(addTask(tr, taskBucket, task, task->getPriority(), nextKey, endKey, TaskCompletionKey::joinWith(onDone), Reference<TaskFuture>(), task->getPriority()));
															#line 2056 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<StartBackupRangeInternalActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 16548 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont2when1(__when_expr_2.get(), loopDepth); };
			static_cast<StartBackupRangeInternalActor*>(this)->actor_wait_state = 3;
															#line 2056 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< StartBackupRangeInternalActor, 2, Void >*>(static_cast<StartBackupRangeInternalActor*>(this)));
															#line 16553 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont5(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont2(Void && _,int loopDepth) 
	{
															#line 2054 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (nextKey != endKey)
															#line 16567 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 2056 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_2 = success(addTask(tr, taskBucket, task, task->getPriority(), nextKey, endKey, TaskCompletionKey::joinWith(onDone), Reference<TaskFuture>(), task->getPriority()));
															#line 2056 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<StartBackupRangeInternalActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 16573 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont2when1(__when_expr_2.get(), loopDepth); };
			static_cast<StartBackupRangeInternalActor*>(this)->actor_wait_state = 3;
															#line 2056 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< StartBackupRangeInternalActor, 2, Void >*>(static_cast<StartBackupRangeInternalActor*>(this)));
															#line 16578 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont5(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<StartBackupRangeInternalActor*>(this)->actor_wait_state > 0) static_cast<StartBackupRangeInternalActor*>(this)->actor_wait_state = 0;
		static_cast<StartBackupRangeInternalActor*>(this)->ActorCallback< StartBackupRangeInternalActor, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< StartBackupRangeInternalActor, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("startBackupRangeInternal", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("startBackupRangeInternal", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< StartBackupRangeInternalActor, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("startBackupRangeInternal", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("startBackupRangeInternal", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< StartBackupRangeInternalActor, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("startBackupRangeInternal", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("startBackupRangeInternal", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont5(int loopDepth) 
	{
															#line 2067 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<StartBackupRangeInternalActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~StartBackupRangeInternalActorState(); static_cast<StartBackupRangeInternalActor*>(this)->destroy(); return 0; }
															#line 16655 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<StartBackupRangeInternalActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~StartBackupRangeInternalActorState();
		static_cast<StartBackupRangeInternalActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont6(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont5(loopDepth);

		return loopDepth;
	}
	int a_body1cont6(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont5(loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont6(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont6(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<StartBackupRangeInternalActor*>(this)->actor_wait_state > 0) static_cast<StartBackupRangeInternalActor*>(this)->actor_wait_state = 0;
		static_cast<StartBackupRangeInternalActor*>(this)->ActorCallback< StartBackupRangeInternalActor, 2, Void >::remove();

	}
	void a_callback_fire(ActorCallback< StartBackupRangeInternalActor, 2, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("startBackupRangeInternal", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("startBackupRangeInternal", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< StartBackupRangeInternalActor, 2, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("startBackupRangeInternal", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("startBackupRangeInternal", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< StartBackupRangeInternalActor, 2, Void >*,Error err) 
	{
		fdb_probe_actor_enter("startBackupRangeInternal", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("startBackupRangeInternal", reinterpret_cast<unsigned long>(this), 2);

	}
															#line 2018 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 2018 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskBucket> taskBucket;
															#line 2018 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<FutureBucket> futureBucket;
															#line 2018 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> task;
															#line 2018 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskFuture> onDone;
															#line 2025 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key nextKey;
															#line 2026 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key endKey;
															#line 2028 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Standalone<VectorRef<KeyRef>> keys;
															#line 16754 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via startBackupRangeInternal()
															#line 2018 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class StartBackupRangeInternalActor final : public Actor<Void>, public ActorCallback< StartBackupRangeInternalActor, 0, Standalone<VectorRef<KeyRef>> >, public ActorCallback< StartBackupRangeInternalActor, 1, Void >, public ActorCallback< StartBackupRangeInternalActor, 2, Void >, public FastAllocated<StartBackupRangeInternalActor>, public StartBackupRangeInternalActorState<StartBackupRangeInternalActor> {
															#line 16759 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<StartBackupRangeInternalActor>::operator new;
	using FastAllocated<StartBackupRangeInternalActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< StartBackupRangeInternalActor, 0, Standalone<VectorRef<KeyRef>> >;
friend struct ActorCallback< StartBackupRangeInternalActor, 1, Void >;
friend struct ActorCallback< StartBackupRangeInternalActor, 2, Void >;
															#line 2018 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	StartBackupRangeInternalActor(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task,Reference<TaskFuture> const& onDone) 
															#line 16772 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   StartBackupRangeInternalActorState<StartBackupRangeInternalActor>(tr, taskBucket, futureBucket, task, onDone)
	{
		fdb_probe_actor_enter("startBackupRangeInternal", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("startBackupRangeInternal");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("startBackupRangeInternal", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< StartBackupRangeInternalActor, 0, Standalone<VectorRef<KeyRef>> >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< StartBackupRangeInternalActor, 1, Void >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< StartBackupRangeInternalActor, 2, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 2018 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> startBackupRangeInternal( Reference<ReadYourWritesTransaction> const& tr, Reference<TaskBucket> const& taskBucket, Reference<FutureBucket> const& futureBucket, Reference<Task> const& task, Reference<TaskFuture> const& onDone ) {
															#line 2018 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new StartBackupRangeInternalActor(tr, taskBucket, futureBucket, task, onDone));
															#line 16801 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 2069 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

																#line 16806 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via _finish()
															#line 2070 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class _finishActor2>
															#line 2070 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _finishActor2State {
															#line 16812 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 2070 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_finishActor2State(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 2070 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 2070 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : tr(tr),
															#line 2070 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskBucket(taskBucket),
															#line 2070 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   futureBucket(futureBucket),
															#line 2070 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   task(task),
															#line 2074 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskFuture(futureBucket->unpack(task->params[Task::reservedTaskParamKeyDone]))
															#line 16827 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("_finish", reinterpret_cast<unsigned long>(this));

	}
	~_finishActor2State() 
	{
		fdb_probe_actor_destroy("_finish", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 2075 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (Params.addBackupRangeTasks().get(task))
															#line 16842 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 2076 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				StrictFuture<Void> __when_expr_0 = startBackupRangeInternal(tr, taskBucket, futureBucket, task, taskFuture);
															#line 2076 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (static_cast<_finishActor2*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 16848 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
				static_cast<_finishActor2*>(this)->actor_wait_state = 1;
															#line 2076 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< _finishActor2, 0, Void >*>(static_cast<_finishActor2*>(this)));
															#line 16853 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				loopDepth = 0;
			}
			else
			{
															#line 2078 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				StrictFuture<Void> __when_expr_1 = taskFuture->set(tr, taskBucket);
															#line 2078 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (static_cast<_finishActor2*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 16862 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1when2(__when_expr_1.get(), loopDepth); };
				static_cast<_finishActor2*>(this)->actor_wait_state = 2;
															#line 2078 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< _finishActor2, 1, Void >*>(static_cast<_finishActor2*>(this)));
															#line 16867 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				loopDepth = 0;
			}
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~_finishActor2State();
		static_cast<_finishActor2*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 2081 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_2 = taskBucket->finish(tr, task);
															#line 2081 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor2*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 16893 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont1when1(__when_expr_2.get(), loopDepth); };
		static_cast<_finishActor2*>(this)->actor_wait_state = 3;
															#line 2081 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< _finishActor2, 2, Void >*>(static_cast<_finishActor2*>(this)));
															#line 16898 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont2(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont2(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<_finishActor2*>(this)->actor_wait_state > 0) static_cast<_finishActor2*>(this)->actor_wait_state = 0;
		static_cast<_finishActor2*>(this)->ActorCallback< _finishActor2, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor2, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< _finishActor2, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< _finishActor2, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont3(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont3(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1when2(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1when2(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<_finishActor2*>(this)->actor_wait_state > 0) static_cast<_finishActor2*>(this)->actor_wait_state = 0;
		static_cast<_finishActor2*>(this)->ActorCallback< _finishActor2, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor2, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1when2(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< _finishActor2, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1when2(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< _finishActor2, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont4(Void const& _,int loopDepth) 
	{
															#line 2083 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FileBackupRangeFinish") .suppressFor(60) .detail("BackupUID", BackupConfig(task).getUid()) .detail("BeginKey", Params.beginKey().get(task).printable()) .detail("EndKey", Params.endKey().get(task).printable()) .detail("TaskKey", task->key.printable());
															#line 2090 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_finishActor2*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_finishActor2State(); static_cast<_finishActor2*>(this)->destroy(); return 0; }
															#line 17059 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_finishActor2*>(this)->SAV< Void >::value()) Void(Void());
		this->~_finishActor2State();
		static_cast<_finishActor2*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont4(Void && _,int loopDepth) 
	{
															#line 2083 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FileBackupRangeFinish") .suppressFor(60) .detail("BackupUID", BackupConfig(task).getUid()) .detail("BeginKey", Params.beginKey().get(task).printable()) .detail("EndKey", Params.endKey().get(task).printable()) .detail("TaskKey", task->key.printable());
															#line 2090 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_finishActor2*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_finishActor2State(); static_cast<_finishActor2*>(this)->destroy(); return 0; }
															#line 17073 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_finishActor2*>(this)->SAV< Void >::value()) Void(Void());
		this->~_finishActor2State();
		static_cast<_finishActor2*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont4(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont4(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<_finishActor2*>(this)->actor_wait_state > 0) static_cast<_finishActor2*>(this)->actor_wait_state = 0;
		static_cast<_finishActor2*>(this)->ActorCallback< _finishActor2, 2, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor2, 2, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< _finishActor2, 2, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< _finishActor2, 2, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 2);

	}
															#line 2070 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 2070 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskBucket> taskBucket;
															#line 2070 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<FutureBucket> futureBucket;
															#line 2070 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> task;
															#line 2074 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskFuture> taskFuture;
															#line 17154 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via _finish()
															#line 2070 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _finishActor2 final : public Actor<Void>, public ActorCallback< _finishActor2, 0, Void >, public ActorCallback< _finishActor2, 1, Void >, public ActorCallback< _finishActor2, 2, Void >, public FastAllocated<_finishActor2>, public _finishActor2State<_finishActor2> {
															#line 17159 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<_finishActor2>::operator new;
	using FastAllocated<_finishActor2>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< _finishActor2, 0, Void >;
friend struct ActorCallback< _finishActor2, 1, Void >;
friend struct ActorCallback< _finishActor2, 2, Void >;
															#line 2070 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_finishActor2(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 17172 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   _finishActor2State<_finishActor2>(tr, taskBucket, futureBucket, task)
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("_finish");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< _finishActor2, 0, Void >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< _finishActor2, 1, Void >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< _finishActor2, 2, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 2070 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> _finish( Reference<ReadYourWritesTransaction> const& tr, Reference<TaskBucket> const& taskBucket, Reference<FutureBucket> const& futureBucket, Reference<Task> const& task ) {
															#line 2070 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new _finishActor2(tr, taskBucket, futureBucket, task));
															#line 17201 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 2092 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
};
StringRef BackupRangeTaskFunc::name = "file_backup_write_range_5.2"_sr;
REGISTER_TASKFUNC(BackupRangeTaskFunc);

struct BackupSnapshotDispatchTask : BackupTaskFuncBase {
	static StringRef name;
	static constexpr uint32_t version = 1;

	static struct {
		// Set by Execute, used by Finish
		static TaskParam<int64_t> shardsBehind() { return __FUNCTION__sr; }
		// Set by Execute, used by Finish
		static TaskParam<bool> snapshotFinished() { return __FUNCTION__sr; }
		// Set by Execute, used by Finish
		static TaskParam<Version> nextDispatchVersion() { return __FUNCTION__sr; }
	} Params;

	StringRef getName() const override { return name; };

	Future<Void> execute(Database cx,
	                     Reference<TaskBucket> tb,
	                     Reference<FutureBucket> fb,
	                     Reference<Task> task) override {
		return _execute(cx, tb, fb, task);
	};
	Future<Void> finish(Reference<ReadYourWritesTransaction> tr,
	                    Reference<TaskBucket> tb,
	                    Reference<FutureBucket> fb,
	                    Reference<Task> task) override {
		return _finish(tr, tb, fb, task);
	};

																#line 17237 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via addTask()
															#line 2124 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class AddTaskActor1>
															#line 2124 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class AddTaskActor1State {
															#line 17243 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 2124 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	AddTaskActor1State(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<Task> const& parentTask,int const& priority,TaskCompletionKey const& completionKey,Reference<TaskFuture> const& waitFor = Reference<TaskFuture>(),Version const& scheduledVersion = invalidVersion) 
															#line 2124 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 2124 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : tr(tr),
															#line 2124 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskBucket(taskBucket),
															#line 2124 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   parentTask(parentTask),
															#line 2124 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   priority(priority),
															#line 2124 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   completionKey(completionKey),
															#line 2124 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   waitFor(waitFor),
															#line 2124 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   scheduledVersion(scheduledVersion)
															#line 17262 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("addTask", reinterpret_cast<unsigned long>(this));

	}
	~AddTaskActor1State() 
	{
		fdb_probe_actor_destroy("addTask", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 2131 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Key> __when_expr_0 = addBackupTask( name, version, tr, taskBucket, completionKey, BackupConfig(parentTask), waitFor, [=](Reference<Task> task) { if (scheduledVersion != invalidVersion) ReservedTaskParams::scheduledVersion().set(task, scheduledVersion); }, priority);
															#line 2131 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<AddTaskActor1*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 17279 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<AddTaskActor1*>(this)->actor_wait_state = 1;
															#line 2131 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< AddTaskActor1, 0, Key >*>(static_cast<AddTaskActor1*>(this)));
															#line 17284 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~AddTaskActor1State();
		static_cast<AddTaskActor1*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Key const& key,int loopDepth) 
	{
															#line 2144 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<AddTaskActor1*>(this)->SAV<Key>::futures) { (void)(key); this->~AddTaskActor1State(); static_cast<AddTaskActor1*>(this)->destroy(); return 0; }
															#line 17307 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<AddTaskActor1*>(this)->SAV< Key >::value()) Key(key);
		this->~AddTaskActor1State();
		static_cast<AddTaskActor1*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont1(Key && key,int loopDepth) 
	{
															#line 2144 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<AddTaskActor1*>(this)->SAV<Key>::futures) { (void)(key); this->~AddTaskActor1State(); static_cast<AddTaskActor1*>(this)->destroy(); return 0; }
															#line 17319 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<AddTaskActor1*>(this)->SAV< Key >::value()) Key(key);
		this->~AddTaskActor1State();
		static_cast<AddTaskActor1*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1when1(Key const& key,int loopDepth) 
	{
		loopDepth = a_body1cont1(key, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Key && key,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(key), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<AddTaskActor1*>(this)->actor_wait_state > 0) static_cast<AddTaskActor1*>(this)->actor_wait_state = 0;
		static_cast<AddTaskActor1*>(this)->ActorCallback< AddTaskActor1, 0, Key >::remove();

	}
	void a_callback_fire(ActorCallback< AddTaskActor1, 0, Key >*,Key const& value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< AddTaskActor1, 0, Key >*,Key && value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< AddTaskActor1, 0, Key >*,Error err) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 0);

	}
															#line 2124 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 2124 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskBucket> taskBucket;
															#line 2124 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> parentTask;
															#line 2124 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int priority;
															#line 2124 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	TaskCompletionKey completionKey;
															#line 2124 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskFuture> waitFor;
															#line 2124 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version scheduledVersion;
															#line 17404 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via addTask()
															#line 2124 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class AddTaskActor1 final : public Actor<Key>, public ActorCallback< AddTaskActor1, 0, Key >, public FastAllocated<AddTaskActor1>, public AddTaskActor1State<AddTaskActor1> {
															#line 17409 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<AddTaskActor1>::operator new;
	using FastAllocated<AddTaskActor1>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Key>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< AddTaskActor1, 0, Key >;
															#line 2124 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	AddTaskActor1(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<Task> const& parentTask,int const& priority,TaskCompletionKey const& completionKey,Reference<TaskFuture> const& waitFor = Reference<TaskFuture>(),Version const& scheduledVersion = invalidVersion) 
															#line 17420 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Key>(),
		   AddTaskActor1State<AddTaskActor1>(tr, taskBucket, parentTask, priority, completionKey, waitFor, scheduledVersion)
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("addTask");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< AddTaskActor1, 0, Key >*)0, actor_cancelled()); break;
		}

	}
};
															#line 2124 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Key> addTask( Reference<ReadYourWritesTransaction> const& tr, Reference<TaskBucket> const& taskBucket, Reference<Task> const& parentTask, int const& priority, TaskCompletionKey const& completionKey, Reference<TaskFuture> const& waitFor = Reference<TaskFuture>(), Version const& scheduledVersion = invalidVersion ) {
															#line 2124 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Key>(new AddTaskActor1(tr, taskBucket, parentTask, priority, completionKey, waitFor, scheduledVersion));
															#line 17447 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 2146 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

	enum DispatchState { SKIP = 0, DONE = 1, NOT_DONE_MIN = 2 };

																#line 17454 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via _execute()
															#line 2149 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class _executeActor1>
															#line 2149 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _executeActor1State {
															#line 17460 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 2149 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_executeActor1State(Database const& cx,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 2149 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 2149 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : cx(cx),
															#line 2149 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskBucket(taskBucket),
															#line 2149 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   futureBucket(futureBucket),
															#line 2149 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   task(task),
															#line 2153 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   lock(new FlowLock(CLIENT_KNOBS->BACKUP_LOCK_BYTES))
															#line 17475 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("_execute", reinterpret_cast<unsigned long>(this));

	}
	~_executeActor1State() 
	{
		fdb_probe_actor_destroy("_execute", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 2154 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_0 = checkTaskVersion(cx, task, name, version);
															#line 2154 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor1*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 17492 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<_executeActor1*>(this)->actor_wait_state = 1;
															#line 2154 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< _executeActor1, 0, Void >*>(static_cast<_executeActor1*>(this)));
															#line 17497 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~_executeActor1State();
		static_cast<_executeActor1*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Void const& _,int loopDepth) 
	{
															#line 2156 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		startTime = timer();
															#line 2157 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr = Reference<ReadYourWritesTransaction>(new ReadYourWritesTransaction(cx));
															#line 2162 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		notDoneSequence = NOT_DONE_MIN;
															#line 2163 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		shardMap = KeyRangeMap<int>(notDoneSequence++);
															#line 2164 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		beginKey = allKeys.begin;
															#line 2167 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 17530 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont1loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1cont1(Void && _,int loopDepth) 
	{
															#line 2156 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		startTime = timer();
															#line 2157 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr = Reference<ReadYourWritesTransaction>(new ReadYourWritesTransaction(cx));
															#line 2162 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		notDoneSequence = NOT_DONE_MIN;
															#line 2163 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		shardMap = KeyRangeMap<int>(notDoneSequence++);
															#line 2164 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		beginKey = allKeys.begin;
															#line 2167 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 17549 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont1loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<_executeActor1*>(this)->actor_wait_state > 0) static_cast<_executeActor1*>(this)->actor_wait_state = 0;
		static_cast<_executeActor1*>(this)->ActorCallback< _executeActor1, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor1, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< _executeActor1, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< _executeActor1, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont2(int loopDepth) 
	{
															#line 2191 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config = BackupConfig(task);
															#line 2192 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		recentReadVersion = Version();
															#line 2193 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		snapshotBeginVersion = Version();
															#line 2194 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		snapshotTargetEndVersion = Version();
															#line 2195 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		snapshotIntervalSeconds = int64_t();
															#line 2196 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		latestSnapshotEndVersion = Optional<Version>();
															#line 2197 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		backupRanges = std::vector<KeyRange>();
															#line 2198 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		snapshotBatchFutureKey = Optional<Key>();
															#line 2199 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		snapshotBatchFuture = Reference<TaskFuture>();
															#line 2200 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		snapshotBatchSize = Optional<int64_t>();
															#line 2202 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->reset();
															#line 2203 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 17643 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont2loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1(int loopDepth) 
	{
		try {
															#line 2169 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 2170 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 2172 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			shardBoundaries = getBlockOfShards(tr, beginKey, allKeys.end, CLIENT_KNOBS->TOO_MANY);
															#line 2174 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_1 = success(shardBoundaries) && taskBucket->keepRunning(tr, task);
															#line 2174 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor1*>(this)->actor_wait_state < 0) return a_body1cont1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 17668 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1cont1loopBody1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1loopBody1when1(__when_expr_1.get(), loopDepth); };
			static_cast<_executeActor1*>(this)->actor_wait_state = 2;
															#line 2174 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< _executeActor1, 1, Void >*>(static_cast<_executeActor1*>(this)));
															#line 17673 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1cont1loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1cont1loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont1break1(int loopDepth) 
	{
		try {
			return a_body1cont2(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont1loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1cont1loopHead1(0);

		return loopDepth;
	}
	int a_body1cont1loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 2186 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_2 = tr->onError(e);
															#line 2186 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor1*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 17710 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), std::max(0, loopDepth - 1)); else return a_body1cont1loopBody1Catch1when1(__when_expr_2.get(), loopDepth); };
			static_cast<_executeActor1*>(this)->actor_wait_state = 3;
															#line 2186 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< _executeActor1, 2, Void >*>(static_cast<_executeActor1*>(this)));
															#line 17715 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont1loopBody1cont2(Void const& _,int loopDepth) 
	{
															#line 2176 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (shardBoundaries.get().size() == 0)
															#line 17730 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
			return a_body1cont1break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 2179 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		for( auto& boundary : shardBoundaries.get() ) {
															#line 2180 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			shardMap.rawInsert(boundary, notDoneSequence++);
															#line 17738 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 2183 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		beginKey = keyAfter(shardBoundaries.get().back());
															#line 2184 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->reset();
															#line 17744 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont1loopBody1cont6(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1cont2(Void && _,int loopDepth) 
	{
															#line 2176 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (shardBoundaries.get().size() == 0)
															#line 17753 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
			return a_body1cont1break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 2179 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		for( auto& boundary : shardBoundaries.get() ) {
															#line 2180 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			shardMap.rawInsert(boundary, notDoneSequence++);
															#line 17761 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 2183 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		beginKey = keyAfter(shardBoundaries.get().back());
															#line 2184 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->reset();
															#line 17767 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont1loopBody1cont6(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<_executeActor1*>(this)->actor_wait_state > 0) static_cast<_executeActor1*>(this)->actor_wait_state = 0;
		static_cast<_executeActor1*>(this)->ActorCallback< _executeActor1, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor1, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< _executeActor1, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< _executeActor1, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont1loopBody1cont6(int loopDepth) 
	{
		try {
			loopDepth = a_body1cont1loopBody1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont1loopBody1Catch1cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1Catch1cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1Catch1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1Catch1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<_executeActor1*>(this)->actor_wait_state > 0) static_cast<_executeActor1*>(this)->actor_wait_state = 0;
		static_cast<_executeActor1*>(this)->ActorCallback< _executeActor1, 2, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor1, 2, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont1loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< _executeActor1, 2, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont1loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< _executeActor1, 2, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 2);

	}
	int a_body1cont3(int loopDepth) 
	{
															#line 2256 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		dispatchBoundaries = std::vector<std::pair<Key, bool>>();
															#line 2257 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->reset();
															#line 2258 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		beginKey = allKeys.begin;
															#line 2259 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 17933 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont3loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1cont2loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont2loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont2loopBody1(int loopDepth) 
	{
		try {
															#line 2205 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 2206 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 2208 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_3 = store(snapshotBeginVersion, config.snapshotBeginVersion().getOrThrow(tr)) && store(snapshotTargetEndVersion, config.snapshotTargetEndVersion().getOrThrow(tr)) && store(backupRanges, config.backupRanges().getOrThrow(tr)) && store(snapshotIntervalSeconds, config.snapshotIntervalSeconds().getOrThrow(tr)) && store(snapshotBatchFutureKey, config.snapshotBatchFuture().get(tr)) && store(snapshotBatchSize, config.snapshotBatchSize().get(tr)) && store(latestSnapshotEndVersion, config.latestSnapshotEndVersion().get(tr)) && store(recentReadVersion, tr->getReadVersion()) && taskBucket->keepRunning(tr, task);
															#line 2208 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor1*>(this)->actor_wait_state < 0) return a_body1cont2loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 17956 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1cont2loopBody1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1cont2loopBody1when1(__when_expr_3.get(), loopDepth); };
			static_cast<_executeActor1*>(this)->actor_wait_state = 4;
															#line 2208 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< _executeActor1, 3, Void >*>(static_cast<_executeActor1*>(this)));
															#line 17961 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1cont2loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1cont2loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont2break1(int loopDepth) 
	{
		try {
			return a_body1cont3(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont2loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1cont2loopHead1(0);

		return loopDepth;
	}
	int a_body1cont2loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 2251 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_6 = tr->onError(e);
															#line 2251 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor1*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 17998 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_6.isReady()) { if (__when_expr_6.isError()) return a_body1Catch1(__when_expr_6.getError(), std::max(0, loopDepth - 1)); else return a_body1cont2loopBody1Catch1when1(__when_expr_6.get(), loopDepth); };
			static_cast<_executeActor1*>(this)->actor_wait_state = 7;
															#line 2251 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_6.addCallbackAndClear(static_cast<ActorCallback< _executeActor1, 6, Void >*>(static_cast<_executeActor1*>(this)));
															#line 18003 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont2loopBody1cont2(Void const& _,int loopDepth) 
	{
															#line 2224 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!snapshotBatchFutureKey.present())
															#line 18018 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 2225 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			snapshotBatchFuture = futureBucket->future(tr);
															#line 2226 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			config.snapshotBatchFuture().set(tr, snapshotBatchFuture->pack());
															#line 2227 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			snapshotBatchSize = 0;
															#line 2228 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			config.snapshotBatchSize().set(tr, snapshotBatchSize.get());
															#line 2233 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			dispatchCompletionKey = TaskCompletionKey::joinWith(snapshotBatchFuture);
															#line 2236 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			auto cfg = &config;
															#line 2237 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			auto tx = &tr;
															#line 2238 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_4 = map(dispatchCompletionKey.get(tr, taskBucket), [cfg, tx](Key const& k) { cfg->snapshotBatchDispatchDoneKey().set(*tx, k); return Void(); });
															#line 2238 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor1*>(this)->actor_wait_state < 0) return a_body1cont2loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 18038 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1cont2loopBody1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1cont2loopBody1cont2when1(__when_expr_4.get(), loopDepth); };
			static_cast<_executeActor1*>(this)->actor_wait_state = 5;
															#line 2238 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< _executeActor1, 4, Void >*>(static_cast<_executeActor1*>(this)));
															#line 18043 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
															#line 2244 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			ASSERT(snapshotBatchSize.present());
															#line 2246 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			snapshotBatchFuture = makeReference<TaskFuture>(futureBucket, snapshotBatchFutureKey.get());
															#line 18052 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = a_body1cont2loopBody1cont3(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont2loopBody1cont2(Void && _,int loopDepth) 
	{
															#line 2224 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!snapshotBatchFutureKey.present())
															#line 18062 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 2225 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			snapshotBatchFuture = futureBucket->future(tr);
															#line 2226 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			config.snapshotBatchFuture().set(tr, snapshotBatchFuture->pack());
															#line 2227 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			snapshotBatchSize = 0;
															#line 2228 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			config.snapshotBatchSize().set(tr, snapshotBatchSize.get());
															#line 2233 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			dispatchCompletionKey = TaskCompletionKey::joinWith(snapshotBatchFuture);
															#line 2236 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			auto cfg = &config;
															#line 2237 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			auto tx = &tr;
															#line 2238 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_4 = map(dispatchCompletionKey.get(tr, taskBucket), [cfg, tx](Key const& k) { cfg->snapshotBatchDispatchDoneKey().set(*tx, k); return Void(); });
															#line 2238 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor1*>(this)->actor_wait_state < 0) return a_body1cont2loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 18082 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1cont2loopBody1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1cont2loopBody1cont2when1(__when_expr_4.get(), loopDepth); };
			static_cast<_executeActor1*>(this)->actor_wait_state = 5;
															#line 2238 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< _executeActor1, 4, Void >*>(static_cast<_executeActor1*>(this)));
															#line 18087 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
															#line 2244 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			ASSERT(snapshotBatchSize.present());
															#line 2246 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			snapshotBatchFuture = makeReference<TaskFuture>(futureBucket, snapshotBatchFutureKey.get());
															#line 18096 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = a_body1cont2loopBody1cont3(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont2loopBody1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2loopBody1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont2loopBody1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2loopBody1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose4() 
	{
		if (static_cast<_executeActor1*>(this)->actor_wait_state > 0) static_cast<_executeActor1*>(this)->actor_wait_state = 0;
		static_cast<_executeActor1*>(this)->ActorCallback< _executeActor1, 3, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor1, 3, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont2loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont2loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont2loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_fire(ActorCallback< _executeActor1, 3, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont2loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont2loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont2loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_error(ActorCallback< _executeActor1, 3, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont2loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont2loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont2loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 3);

	}
	int a_body1cont2loopBody1cont3(int loopDepth) 
	{
		return a_body1cont2break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1cont2loopBody1cont4(Void const& _,int loopDepth) 
	{
															#line 2242 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_5 = tr->commit();
															#line 2242 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor1*>(this)->actor_wait_state < 0) return a_body1cont2loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 18177 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_5.isReady()) { if (__when_expr_5.isError()) return a_body1cont2loopBody1Catch1(__when_expr_5.getError(), loopDepth); else return a_body1cont2loopBody1cont4when1(__when_expr_5.get(), loopDepth); };
		static_cast<_executeActor1*>(this)->actor_wait_state = 6;
															#line 2242 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_5.addCallbackAndClear(static_cast<ActorCallback< _executeActor1, 5, Void >*>(static_cast<_executeActor1*>(this)));
															#line 18182 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont2loopBody1cont4(Void && _,int loopDepth) 
	{
															#line 2242 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_5 = tr->commit();
															#line 2242 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor1*>(this)->actor_wait_state < 0) return a_body1cont2loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 18193 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_5.isReady()) { if (__when_expr_5.isError()) return a_body1cont2loopBody1Catch1(__when_expr_5.getError(), loopDepth); else return a_body1cont2loopBody1cont4when1(__when_expr_5.get(), loopDepth); };
		static_cast<_executeActor1*>(this)->actor_wait_state = 6;
															#line 2242 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_5.addCallbackAndClear(static_cast<ActorCallback< _executeActor1, 5, Void >*>(static_cast<_executeActor1*>(this)));
															#line 18198 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont2loopBody1cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2loopBody1cont4(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont2loopBody1cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2loopBody1cont4(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose5() 
	{
		if (static_cast<_executeActor1*>(this)->actor_wait_state > 0) static_cast<_executeActor1*>(this)->actor_wait_state = 0;
		static_cast<_executeActor1*>(this)->ActorCallback< _executeActor1, 4, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor1, 4, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont2loopBody1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont2loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont2loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_fire(ActorCallback< _executeActor1, 4, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont2loopBody1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont2loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont2loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_error(ActorCallback< _executeActor1, 4, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont2loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont2loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont2loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 4);

	}
	int a_body1cont2loopBody1cont5(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2loopBody1cont3(loopDepth);

		return loopDepth;
	}
	int a_body1cont2loopBody1cont5(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2loopBody1cont3(loopDepth);

		return loopDepth;
	}
	int a_body1cont2loopBody1cont4when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2loopBody1cont5(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont2loopBody1cont4when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2loopBody1cont5(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose6() 
	{
		if (static_cast<_executeActor1*>(this)->actor_wait_state > 0) static_cast<_executeActor1*>(this)->actor_wait_state = 0;
		static_cast<_executeActor1*>(this)->ActorCallback< _executeActor1, 5, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor1, 5, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont2loopBody1cont4when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont2loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont2loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_fire(ActorCallback< _executeActor1, 5, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont2loopBody1cont4when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont2loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont2loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_error(ActorCallback< _executeActor1, 5, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont2loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont2loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont2loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 5);

	}
	int a_body1cont2loopBody1Catch1cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont2loopBody1Catch1cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont2loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2loopBody1Catch1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont2loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2loopBody1Catch1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose7() 
	{
		if (static_cast<_executeActor1*>(this)->actor_wait_state > 0) static_cast<_executeActor1*>(this)->actor_wait_state = 0;
		static_cast<_executeActor1*>(this)->ActorCallback< _executeActor1, 6, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor1, 6, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1cont2loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 6);

	}
	void a_callback_fire(ActorCallback< _executeActor1, 6, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1cont2loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 6);

	}
	void a_callback_error(ActorCallback< _executeActor1, 6, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 6);

	}
	int a_body1cont4(int loopDepth) 
	{
															#line 2290 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		i = int();
															#line 2291 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		iShard = RangeMap<Key, int, KeyRangeRef>::iterator();
															#line 2292 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		iShardEnd = RangeMap<Key, int, KeyRangeRef>::iterator();
															#line 2296 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (dispatchBoundaries.size() > 0)
															#line 18426 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 2297 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			lastValue = false;
															#line 2298 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			lastKey = Key();
															#line 2299 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			i = 0;
															#line 18434 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = a_body1cont4loopHead1(loopDepth);
		}
		else
		{
			loopDepth = a_body1cont5(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont3loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont3loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1(int loopDepth) 
	{
		try {
															#line 2261 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 2262 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 2264 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			bounds = config.snapshotRangeDispatchMap().getRange( tr, beginKey, keyAfter(allKeys.end), CLIENT_KNOBS->TOO_MANY);
															#line 2267 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_7 = success(bounds) && taskBucket->keepRunning(tr, task) && store(recentReadVersion, tr->getReadVersion());
															#line 2267 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor1*>(this)->actor_wait_state < 0) return a_body1cont3loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 18464 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_7.isReady()) { if (__when_expr_7.isError()) return a_body1cont3loopBody1Catch1(__when_expr_7.getError(), loopDepth); else return a_body1cont3loopBody1when1(__when_expr_7.get(), loopDepth); };
			static_cast<_executeActor1*>(this)->actor_wait_state = 8;
															#line 2267 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_7.addCallbackAndClear(static_cast<ActorCallback< _executeActor1, 7, Void >*>(static_cast<_executeActor1*>(this)));
															#line 18469 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1cont3loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1cont3loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont3break1(int loopDepth) 
	{
		try {
			return a_body1cont4(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont3loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1cont3loopHead1(0);

		return loopDepth;
	}
	int a_body1cont3loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 2282 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_8 = tr->onError(e);
															#line 2282 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor1*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 18506 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_8.isReady()) { if (__when_expr_8.isError()) return a_body1Catch1(__when_expr_8.getError(), std::max(0, loopDepth - 1)); else return a_body1cont3loopBody1Catch1when1(__when_expr_8.get(), loopDepth); };
			static_cast<_executeActor1*>(this)->actor_wait_state = 9;
															#line 2282 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_8.addCallbackAndClear(static_cast<ActorCallback< _executeActor1, 8, Void >*>(static_cast<_executeActor1*>(this)));
															#line 18511 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont3loopBody1cont2(Void const& _,int loopDepth) 
	{
															#line 2270 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!bounds.get().results.empty())
															#line 18526 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 2271 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			dispatchBoundaries.reserve(dispatchBoundaries.size() + bounds.get().results.size());
															#line 2272 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			dispatchBoundaries.insert( dispatchBoundaries.end(), bounds.get().results.begin(), bounds.get().results.end());
															#line 18532 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 2276 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!bounds.get().more)
															#line 18536 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
			return a_body1cont3break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 2279 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		beginKey = keyAfter(bounds.get().results.back().first);
															#line 2280 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->reset();
															#line 18544 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont3loopBody1cont6(loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1cont2(Void && _,int loopDepth) 
	{
															#line 2270 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!bounds.get().results.empty())
															#line 18553 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 2271 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			dispatchBoundaries.reserve(dispatchBoundaries.size() + bounds.get().results.size());
															#line 2272 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			dispatchBoundaries.insert( dispatchBoundaries.end(), bounds.get().results.begin(), bounds.get().results.end());
															#line 18559 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 2276 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!bounds.get().more)
															#line 18563 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
			return a_body1cont3break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 2279 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		beginKey = keyAfter(bounds.get().results.back().first);
															#line 2280 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->reset();
															#line 18571 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont3loopBody1cont6(loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose8() 
	{
		if (static_cast<_executeActor1*>(this)->actor_wait_state > 0) static_cast<_executeActor1*>(this)->actor_wait_state = 0;
		static_cast<_executeActor1*>(this)->ActorCallback< _executeActor1, 7, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor1, 7, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1cont3loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont3loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont3loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 7);

	}
	void a_callback_fire(ActorCallback< _executeActor1, 7, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1cont3loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont3loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont3loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 7);

	}
	void a_callback_error(ActorCallback< _executeActor1, 7, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1cont3loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont3loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont3loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 7);

	}
	int a_body1cont3loopBody1cont6(int loopDepth) 
	{
		try {
			loopDepth = a_body1cont3loopBody1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont3loopBody1Catch1cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1Catch1cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1Catch1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1Catch1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose9() 
	{
		if (static_cast<_executeActor1*>(this)->actor_wait_state > 0) static_cast<_executeActor1*>(this)->actor_wait_state = 0;
		static_cast<_executeActor1*>(this)->ActorCallback< _executeActor1, 8, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor1, 8, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 8);
		a_exitChoose9();
		try {
			a_body1cont3loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 8);

	}
	void a_callback_fire(ActorCallback< _executeActor1, 8, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 8);
		a_exitChoose9();
		try {
			a_body1cont3loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 8);

	}
	void a_callback_error(ActorCallback< _executeActor1, 8, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 8);
		a_exitChoose9();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 8);

	}
	int a_body1cont5(int loopDepth) 
	{
															#line 2328 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (backupRanges.size() > 0)
															#line 18731 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 2329 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			shardMap.insert(KeyRangeRef(allKeys.begin, backupRanges.front().begin), SKIP);
															#line 2330 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_11 = yield();
															#line 2330 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor1*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 18739 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_11.isReady()) { if (__when_expr_11.isError()) return a_body1Catch1(__when_expr_11.getError(), loopDepth); else return a_body1cont5when1(__when_expr_11.get(), loopDepth); };
			static_cast<_executeActor1*>(this)->actor_wait_state = 12;
															#line 2330 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_11.addCallbackAndClear(static_cast<ActorCallback< _executeActor1, 11, Void >*>(static_cast<_executeActor1*>(this)));
															#line 18744 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont8(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont6(int loopDepth) 
	{
															#line 2323 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		ASSERT(lastValue == false);
															#line 18758 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont5(loopDepth);

		return loopDepth;
	}
	int a_body1cont4loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont4loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont4loopBody1(int loopDepth) 
	{
															#line 2299 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!(i < dispatchBoundaries.size()))
															#line 18774 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
			return a_body1cont4break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 2300 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		const std::pair<Key, bool>& boundary = dispatchBoundaries[i];
															#line 2303 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		ASSERT(boundary.second == !lastValue);
															#line 2306 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!boundary.second)
															#line 18784 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 2309 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			RangeMap<Key, int, KeyRangeRef>::Ranges shardRanges = shardMap.modify(KeyRangeRef(lastKey, boundary.first));
															#line 2311 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			iShard = shardRanges.begin();
															#line 2312 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			iShardEnd = shardRanges.end();
															#line 2313 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			;
															#line 18794 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = a_body1cont4loopBody1loopHead1(loopDepth);
		}
		else
		{
			loopDepth = a_body1cont4loopBody1cont1(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont4break1(int loopDepth) 
	{
		try {
			return a_body1cont6(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont4loopBody1cont1(int loopDepth) 
	{
															#line 2318 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		lastValue = dispatchBoundaries[i].second;
															#line 2319 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		lastKey = dispatchBoundaries[i].first;
															#line 2321 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_10 = yield();
															#line 2321 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor1*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 18827 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_10.isReady()) { if (__when_expr_10.isError()) return a_body1Catch1(__when_expr_10.getError(), std::max(0, loopDepth - 1)); else return a_body1cont4loopBody1cont1when1(__when_expr_10.get(), loopDepth); };
		static_cast<_executeActor1*>(this)->actor_wait_state = 11;
															#line 2321 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_10.addCallbackAndClear(static_cast<ActorCallback< _executeActor1, 10, Void >*>(static_cast<_executeActor1*>(this)));
															#line 18832 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont4loopBody1cont3(int loopDepth) 
	{
		loopDepth = a_body1cont4loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont4loopBody1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont4loopBody1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont4loopBody1loopBody1(int loopDepth) 
	{
															#line 2313 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!(iShard != iShardEnd))
															#line 18854 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
			return a_body1cont4loopBody1break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 2314 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		iShard->value() = DONE;
															#line 2315 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_9 = yield();
															#line 2315 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor1*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 2));
															#line 18864 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_9.isReady()) { if (__when_expr_9.isError()) return a_body1Catch1(__when_expr_9.getError(), std::max(0, loopDepth - 2)); else return a_body1cont4loopBody1loopBody1when1(__when_expr_9.get(), loopDepth); };
		static_cast<_executeActor1*>(this)->actor_wait_state = 10;
															#line 2315 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_9.addCallbackAndClear(static_cast<ActorCallback< _executeActor1, 9, Void >*>(static_cast<_executeActor1*>(this)));
															#line 18869 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont4loopBody1break1(int loopDepth) 
	{
		try {
			return a_body1cont4loopBody1cont3(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont4loopBody1loopBody1cont1(Void const& _,int loopDepth) 
	{
															#line 2313 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		++iShard;
															#line 18891 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (loopDepth == 0) return a_body1cont4loopBody1loopHead1(0);

		return loopDepth;
	}
	int a_body1cont4loopBody1loopBody1cont1(Void && _,int loopDepth) 
	{
															#line 2313 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		++iShard;
															#line 18900 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (loopDepth == 0) return a_body1cont4loopBody1loopHead1(0);

		return loopDepth;
	}
	int a_body1cont4loopBody1loopBody1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont4loopBody1loopBody1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont4loopBody1loopBody1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont4loopBody1loopBody1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose10() 
	{
		if (static_cast<_executeActor1*>(this)->actor_wait_state > 0) static_cast<_executeActor1*>(this)->actor_wait_state = 0;
		static_cast<_executeActor1*>(this)->ActorCallback< _executeActor1, 9, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor1, 9, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 9);
		a_exitChoose10();
		try {
			a_body1cont4loopBody1loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 9);

	}
	void a_callback_fire(ActorCallback< _executeActor1, 9, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 9);
		a_exitChoose10();
		try {
			a_body1cont4loopBody1loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 9);

	}
	void a_callback_error(ActorCallback< _executeActor1, 9, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 9);
		a_exitChoose10();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 9);

	}
	int a_body1cont4loopBody1cont4(Void const& _,int loopDepth) 
	{
															#line 2299 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		++i;
															#line 18972 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (loopDepth == 0) return a_body1cont4loopHead1(0);

		return loopDepth;
	}
	int a_body1cont4loopBody1cont4(Void && _,int loopDepth) 
	{
															#line 2299 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		++i;
															#line 18981 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (loopDepth == 0) return a_body1cont4loopHead1(0);

		return loopDepth;
	}
	int a_body1cont4loopBody1cont1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont4loopBody1cont4(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont4loopBody1cont1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont4loopBody1cont4(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose11() 
	{
		if (static_cast<_executeActor1*>(this)->actor_wait_state > 0) static_cast<_executeActor1*>(this)->actor_wait_state = 0;
		static_cast<_executeActor1*>(this)->ActorCallback< _executeActor1, 10, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor1, 10, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 10);
		a_exitChoose11();
		try {
			a_body1cont4loopBody1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 10);

	}
	void a_callback_fire(ActorCallback< _executeActor1, 10, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 10);
		a_exitChoose11();
		try {
			a_body1cont4loopBody1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 10);

	}
	void a_callback_error(ActorCallback< _executeActor1, 10, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 10);
		a_exitChoose11();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 10);

	}
	int a_body1cont8(int loopDepth) 
	{
															#line 2341 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		countShardsDone = 0;
															#line 2342 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		countShardsNotDone = 0;
															#line 2345 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		RangeMap<Key, int, KeyRangeRef>::Ranges shardRanges = shardMap.ranges();
															#line 2346 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		iShard = shardRanges.begin();
															#line 2347 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		iShardEnd = shardRanges.end();
															#line 2348 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 19063 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont8loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1cont9(Void const& _,int loopDepth) 
	{
															#line 2332 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		i = 0;
															#line 19072 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont9loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1cont9(Void && _,int loopDepth) 
	{
															#line 2332 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		i = 0;
															#line 19081 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont9loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1cont5when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont9(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont5when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont9(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose12() 
	{
		if (static_cast<_executeActor1*>(this)->actor_wait_state > 0) static_cast<_executeActor1*>(this)->actor_wait_state = 0;
		static_cast<_executeActor1*>(this)->ActorCallback< _executeActor1, 11, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor1, 11, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 11);
		a_exitChoose12();
		try {
			a_body1cont5when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 11);

	}
	void a_callback_fire(ActorCallback< _executeActor1, 11, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 11);
		a_exitChoose12();
		try {
			a_body1cont5when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 11);

	}
	void a_callback_error(ActorCallback< _executeActor1, 11, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 11);
		a_exitChoose12();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 11);

	}
	int a_body1cont10(int loopDepth) 
	{
															#line 2337 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		shardMap.insert(KeyRangeRef(backupRanges.back().end, allKeys.end), SKIP);
															#line 2338 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_13 = yield();
															#line 2338 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor1*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 19157 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_13.isReady()) { if (__when_expr_13.isError()) return a_body1Catch1(__when_expr_13.getError(), loopDepth); else return a_body1cont10when1(__when_expr_13.get(), loopDepth); };
		static_cast<_executeActor1*>(this)->actor_wait_state = 14;
															#line 2338 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_13.addCallbackAndClear(static_cast<ActorCallback< _executeActor1, 13, Void >*>(static_cast<_executeActor1*>(this)));
															#line 19162 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont9loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont9loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont9loopBody1(int loopDepth) 
	{
															#line 2332 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!(i < backupRanges.size() - 1))
															#line 19178 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
			return a_body1cont9break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 2333 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		shardMap.insert(KeyRangeRef(backupRanges[i].end, backupRanges[i + 1].begin), SKIP);
															#line 2334 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_12 = yield();
															#line 2334 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor1*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 19188 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_12.isReady()) { if (__when_expr_12.isError()) return a_body1Catch1(__when_expr_12.getError(), std::max(0, loopDepth - 1)); else return a_body1cont9loopBody1when1(__when_expr_12.get(), loopDepth); };
		static_cast<_executeActor1*>(this)->actor_wait_state = 13;
															#line 2334 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_12.addCallbackAndClear(static_cast<ActorCallback< _executeActor1, 12, Void >*>(static_cast<_executeActor1*>(this)));
															#line 19193 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont9break1(int loopDepth) 
	{
		try {
			return a_body1cont10(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont9loopBody1cont1(Void const& _,int loopDepth) 
	{
															#line 2332 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		++i;
															#line 19215 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (loopDepth == 0) return a_body1cont9loopHead1(0);

		return loopDepth;
	}
	int a_body1cont9loopBody1cont1(Void && _,int loopDepth) 
	{
															#line 2332 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		++i;
															#line 19224 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (loopDepth == 0) return a_body1cont9loopHead1(0);

		return loopDepth;
	}
	int a_body1cont9loopBody1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont9loopBody1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont9loopBody1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont9loopBody1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose13() 
	{
		if (static_cast<_executeActor1*>(this)->actor_wait_state > 0) static_cast<_executeActor1*>(this)->actor_wait_state = 0;
		static_cast<_executeActor1*>(this)->ActorCallback< _executeActor1, 12, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor1, 12, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 12);
		a_exitChoose13();
		try {
			a_body1cont9loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 12);

	}
	void a_callback_fire(ActorCallback< _executeActor1, 12, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 12);
		a_exitChoose13();
		try {
			a_body1cont9loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 12);

	}
	void a_callback_error(ActorCallback< _executeActor1, 12, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 12);
		a_exitChoose13();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 12);

	}
	int a_body1cont10cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont8(loopDepth);

		return loopDepth;
	}
	int a_body1cont10cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont8(loopDepth);

		return loopDepth;
	}
	int a_body1cont10when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont10cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont10when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont10cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose14() 
	{
		if (static_cast<_executeActor1*>(this)->actor_wait_state > 0) static_cast<_executeActor1*>(this)->actor_wait_state = 0;
		static_cast<_executeActor1*>(this)->ActorCallback< _executeActor1, 13, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor1, 13, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 13);
		a_exitChoose14();
		try {
			a_body1cont10when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 13);

	}
	void a_callback_fire(ActorCallback< _executeActor1, 13, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 13);
		a_exitChoose14();
		try {
			a_body1cont10when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 13);

	}
	void a_callback_error(ActorCallback< _executeActor1, 13, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 13);
		a_exitChoose14();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 13);

	}
	int a_body1cont11(int loopDepth) 
	{
															#line 2358 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		shardMap.coalesce(allKeys);
															#line 2359 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_15 = yield();
															#line 2359 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor1*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 19375 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_15.isReady()) { if (__when_expr_15.isError()) return a_body1Catch1(__when_expr_15.getError(), loopDepth); else return a_body1cont11when1(__when_expr_15.get(), loopDepth); };
		static_cast<_executeActor1*>(this)->actor_wait_state = 16;
															#line 2359 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_15.addCallbackAndClear(static_cast<ActorCallback< _executeActor1, 15, Void >*>(static_cast<_executeActor1*>(this)));
															#line 19380 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont8loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont8loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont8loopBody1(int loopDepth) 
	{
															#line 2348 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!(iShard != iShardEnd))
															#line 19396 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
			return a_body1cont8break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 2349 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (iShard->value() == DONE)
															#line 19402 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 2350 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			++countShardsDone;
															#line 19406 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		else
		{
															#line 2351 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (iShard->value() >= NOT_DONE_MIN)
															#line 19412 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 2352 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				++countShardsNotDone;
															#line 19416 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
		}
															#line 2354 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_14 = yield();
															#line 2354 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor1*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 19423 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_14.isReady()) { if (__when_expr_14.isError()) return a_body1Catch1(__when_expr_14.getError(), std::max(0, loopDepth - 1)); else return a_body1cont8loopBody1when1(__when_expr_14.get(), loopDepth); };
		static_cast<_executeActor1*>(this)->actor_wait_state = 15;
															#line 2354 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_14.addCallbackAndClear(static_cast<ActorCallback< _executeActor1, 14, Void >*>(static_cast<_executeActor1*>(this)));
															#line 19428 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont8break1(int loopDepth) 
	{
		try {
			return a_body1cont11(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont8loopBody1cont1(Void const& _,int loopDepth) 
	{
															#line 2348 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		++iShard;
															#line 19450 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (loopDepth == 0) return a_body1cont8loopHead1(0);

		return loopDepth;
	}
	int a_body1cont8loopBody1cont1(Void && _,int loopDepth) 
	{
															#line 2348 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		++iShard;
															#line 19459 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (loopDepth == 0) return a_body1cont8loopHead1(0);

		return loopDepth;
	}
	int a_body1cont8loopBody1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont8loopBody1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont8loopBody1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont8loopBody1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose15() 
	{
		if (static_cast<_executeActor1*>(this)->actor_wait_state > 0) static_cast<_executeActor1*>(this)->actor_wait_state = 0;
		static_cast<_executeActor1*>(this)->ActorCallback< _executeActor1, 14, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor1, 14, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 14);
		a_exitChoose15();
		try {
			a_body1cont8loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 14);

	}
	void a_callback_fire(ActorCallback< _executeActor1, 14, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 14);
		a_exitChoose15();
		try {
			a_body1cont8loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 14);

	}
	void a_callback_error(ActorCallback< _executeActor1, 14, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 14);
		a_exitChoose15();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 14);

	}
	int a_body1cont11cont1(Void const& _,int loopDepth) 
	{
															#line 2362 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		countAllShards = countShardsDone + countShardsNotDone;
															#line 2364 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (countShardsNotDone == 0)
															#line 19533 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 2365 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent("FileBackupSnapshotDispatchFinished") .detail("BackupUID", config.getUid()) .detail("AllShards", countAllShards) .detail("ShardsDone", countShardsDone) .detail("ShardsNotDone", countShardsNotDone) .detail("SnapshotBeginVersion", snapshotBeginVersion) .detail("SnapshotTargetEndVersion", snapshotTargetEndVersion) .detail("CurrentVersion", recentReadVersion) .detail("SnapshotIntervalSeconds", snapshotIntervalSeconds);
															#line 2374 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			Params.snapshotFinished().set(task, true);
															#line 2375 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<_executeActor1*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_executeActor1State(); static_cast<_executeActor1*>(this)->destroy(); return 0; }
															#line 19541 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<_executeActor1*>(this)->SAV< Void >::value()) Void(Void());
			this->~_executeActor1State();
			static_cast<_executeActor1*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 2379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		nextDispatchVersion = Version();
															#line 2383 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (g_network->isSimulated())
															#line 19551 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 2384 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			nextDispatchVersion = recentReadVersion + CLIENT_KNOBS->CORE_VERSIONSPERSECOND * (snapshotIntervalSeconds / 5.0);
															#line 19555 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		else
		{
															#line 2387 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			nextDispatchVersion = recentReadVersion + CLIENT_KNOBS->CORE_VERSIONSPERSECOND * CLIENT_KNOBS->BACKUP_SNAPSHOT_DISPATCH_INTERVAL_SEC;
															#line 19561 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 2394 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (nextDispatchVersion > snapshotTargetEndVersion)
															#line 19565 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 2395 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			nextDispatchVersion = std::max(recentReadVersion, snapshotTargetEndVersion);
															#line 19569 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 2397 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Params.nextDispatchVersion().set(task, nextDispatchVersion);
															#line 2401 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		double timeElapsed;
															#line 2402 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Version snapshotScheduledVersionInterval = snapshotTargetEndVersion - snapshotBeginVersion;
															#line 2403 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (snapshotTargetEndVersion > snapshotBeginVersion)
															#line 19579 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 2404 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			timeElapsed = std::min( 1.0, (double)(nextDispatchVersion - snapshotBeginVersion) / (snapshotScheduledVersionInterval));
															#line 19583 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		else
		{
															#line 2407 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			timeElapsed = 1.0;
															#line 19589 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 2409 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		countExpectedShardsDone = countAllShards * timeElapsed;
															#line 2410 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		countShardsToDispatch = std::max<int>(0, countExpectedShardsDone - countShardsDone);
															#line 2415 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		int64_t dispatchWindow = nextDispatchVersion - recentReadVersion;
															#line 2419 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		int countShardsExpectedPerNormalWindow;
															#line 2420 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (snapshotScheduledVersionInterval == 0)
															#line 19601 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 2421 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			countShardsExpectedPerNormalWindow = 0;
															#line 19605 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		else
		{
															#line 2425 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			countShardsExpectedPerNormalWindow = (double(dispatchWindow) / snapshotScheduledVersionInterval) * countAllShards;
															#line 19611 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 2431 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		int countShardsBehind = std::max<int64_t>(0, countShardsToDispatch + snapshotBatchSize.get() - countShardsExpectedPerNormalWindow);
															#line 2433 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Params.shardsBehind().set(task, countShardsBehind);
															#line 2435 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FileBackupSnapshotDispatchStats") .detail("BackupUID", config.getUid()) .detail("AllShards", countAllShards) .detail("ShardsDone", countShardsDone) .detail("ShardsNotDone", countShardsNotDone) .detail("ExpectedShardsDone", countExpectedShardsDone) .detail("ShardsToDispatch", countShardsToDispatch) .detail("ShardsBehind", countShardsBehind) .detail("SnapshotBeginVersion", snapshotBeginVersion) .detail("SnapshotTargetEndVersion", snapshotTargetEndVersion) .detail("NextDispatchVersion", nextDispatchVersion) .detail("CurrentVersion", recentReadVersion) .detail("TimeElapsed", timeElapsed) .detail("SnapshotIntervalSeconds", snapshotIntervalSeconds);
															#line 2451 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 19621 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont11cont1loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1cont11cont1(Void && _,int loopDepth) 
	{
															#line 2362 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		countAllShards = countShardsDone + countShardsNotDone;
															#line 2364 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (countShardsNotDone == 0)
															#line 19632 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 2365 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent("FileBackupSnapshotDispatchFinished") .detail("BackupUID", config.getUid()) .detail("AllShards", countAllShards) .detail("ShardsDone", countShardsDone) .detail("ShardsNotDone", countShardsNotDone) .detail("SnapshotBeginVersion", snapshotBeginVersion) .detail("SnapshotTargetEndVersion", snapshotTargetEndVersion) .detail("CurrentVersion", recentReadVersion) .detail("SnapshotIntervalSeconds", snapshotIntervalSeconds);
															#line 2374 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			Params.snapshotFinished().set(task, true);
															#line 2375 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<_executeActor1*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_executeActor1State(); static_cast<_executeActor1*>(this)->destroy(); return 0; }
															#line 19640 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<_executeActor1*>(this)->SAV< Void >::value()) Void(Void());
			this->~_executeActor1State();
			static_cast<_executeActor1*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 2379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		nextDispatchVersion = Version();
															#line 2383 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (g_network->isSimulated())
															#line 19650 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 2384 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			nextDispatchVersion = recentReadVersion + CLIENT_KNOBS->CORE_VERSIONSPERSECOND * (snapshotIntervalSeconds / 5.0);
															#line 19654 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		else
		{
															#line 2387 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			nextDispatchVersion = recentReadVersion + CLIENT_KNOBS->CORE_VERSIONSPERSECOND * CLIENT_KNOBS->BACKUP_SNAPSHOT_DISPATCH_INTERVAL_SEC;
															#line 19660 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 2394 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (nextDispatchVersion > snapshotTargetEndVersion)
															#line 19664 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 2395 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			nextDispatchVersion = std::max(recentReadVersion, snapshotTargetEndVersion);
															#line 19668 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 2397 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Params.nextDispatchVersion().set(task, nextDispatchVersion);
															#line 2401 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		double timeElapsed;
															#line 2402 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Version snapshotScheduledVersionInterval = snapshotTargetEndVersion - snapshotBeginVersion;
															#line 2403 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (snapshotTargetEndVersion > snapshotBeginVersion)
															#line 19678 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 2404 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			timeElapsed = std::min( 1.0, (double)(nextDispatchVersion - snapshotBeginVersion) / (snapshotScheduledVersionInterval));
															#line 19682 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		else
		{
															#line 2407 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			timeElapsed = 1.0;
															#line 19688 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 2409 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		countExpectedShardsDone = countAllShards * timeElapsed;
															#line 2410 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		countShardsToDispatch = std::max<int>(0, countExpectedShardsDone - countShardsDone);
															#line 2415 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		int64_t dispatchWindow = nextDispatchVersion - recentReadVersion;
															#line 2419 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		int countShardsExpectedPerNormalWindow;
															#line 2420 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (snapshotScheduledVersionInterval == 0)
															#line 19700 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 2421 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			countShardsExpectedPerNormalWindow = 0;
															#line 19704 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		else
		{
															#line 2425 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			countShardsExpectedPerNormalWindow = (double(dispatchWindow) / snapshotScheduledVersionInterval) * countAllShards;
															#line 19710 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 2431 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		int countShardsBehind = std::max<int64_t>(0, countShardsToDispatch + snapshotBatchSize.get() - countShardsExpectedPerNormalWindow);
															#line 2433 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Params.shardsBehind().set(task, countShardsBehind);
															#line 2435 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FileBackupSnapshotDispatchStats") .detail("BackupUID", config.getUid()) .detail("AllShards", countAllShards) .detail("ShardsDone", countShardsDone) .detail("ShardsNotDone", countShardsNotDone) .detail("ExpectedShardsDone", countExpectedShardsDone) .detail("ShardsToDispatch", countShardsToDispatch) .detail("ShardsBehind", countShardsBehind) .detail("SnapshotBeginVersion", snapshotBeginVersion) .detail("SnapshotTargetEndVersion", snapshotTargetEndVersion) .detail("NextDispatchVersion", nextDispatchVersion) .detail("CurrentVersion", recentReadVersion) .detail("TimeElapsed", timeElapsed) .detail("SnapshotIntervalSeconds", snapshotIntervalSeconds);
															#line 2451 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 19720 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont11cont1loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1cont11when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont11cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont11when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont11cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose16() 
	{
		if (static_cast<_executeActor1*>(this)->actor_wait_state > 0) static_cast<_executeActor1*>(this)->actor_wait_state = 0;
		static_cast<_executeActor1*>(this)->ActorCallback< _executeActor1, 15, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor1, 15, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 15);
		a_exitChoose16();
		try {
			a_body1cont11when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 15);

	}
	void a_callback_fire(ActorCallback< _executeActor1, 15, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 15);
		a_exitChoose16();
		try {
			a_body1cont11when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 15);

	}
	void a_callback_error(ActorCallback< _executeActor1, 15, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 15);
		a_exitChoose16();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 15);

	}
	int a_body1cont11cont2(int loopDepth) 
	{
															#line 2589 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (countShardsNotDone == 0)
															#line 19792 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 2590 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent("FileBackupSnapshotDispatchFinished") .detail("BackupUID", config.getUid()) .detail("AllShards", countAllShards) .detail("ShardsDone", countShardsDone) .detail("ShardsNotDone", countShardsNotDone) .detail("SnapshotBeginVersion", snapshotBeginVersion) .detail("SnapshotTargetEndVersion", snapshotTargetEndVersion) .detail("CurrentVersion", recentReadVersion) .detail("SnapshotIntervalSeconds", snapshotIntervalSeconds) .detail("DispatchTimeSeconds", timer() - startTime);
															#line 2600 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			Params.snapshotFinished().set(task, true);
															#line 19798 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 2603 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_executeActor1*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_executeActor1State(); static_cast<_executeActor1*>(this)->destroy(); return 0; }
															#line 19802 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_executeActor1*>(this)->SAV< Void >::value()) Void(Void());
		this->~_executeActor1State();
		static_cast<_executeActor1*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont11cont1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont11cont1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont11cont1loopBody1(int loopDepth) 
	{
															#line 2451 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!(countShardsToDispatch > 0))
															#line 19821 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
			return a_body1cont11cont1break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 2453 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		rangesToAdd = std::vector<KeyRange>();
															#line 2456 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		int taskBatchSize = BUGGIFY ? deterministicRandom()->randomInt(1, countShardsToDispatch + 1) : CLIENT_KNOBS->BACKUP_DISPATCH_ADDTASK_SIZE;
															#line 2458 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		int added = 0;
															#line 2460 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		for(;countShardsToDispatch > 0 && added < taskBatchSize && shardMap.size() > 0;) {
															#line 2462 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			auto it = shardMap.randomRange();
															#line 2464 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			for(;1;) {
															#line 2465 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (it->value() >= NOT_DONE_MIN)
															#line 19839 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				{
															#line 2466 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					rangesToAdd.push_back(it->range());
															#line 2467 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					it->value() = DONE;
															#line 2468 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					shardMap.coalesce(Key(it->begin()));
															#line 2469 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					++added;
															#line 2470 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					++countShardsDone;
															#line 2471 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					--countShardsToDispatch;
															#line 2472 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					--countShardsNotDone;
															#line 19855 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
					break;
				}
															#line 2475 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (it->end() == shardMap.mapEnd)
															#line 19860 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				{
					break;
				}
															#line 2477 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				++it;
															#line 19866 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
		}
															#line 2481 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		oldBatchSize = snapshotBatchSize.get();
															#line 2482 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		newBatchSize = oldBatchSize + rangesToAdd.size();
															#line 2485 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->reset();
															#line 2486 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 19877 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont11cont1loopBody1loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1cont11cont1break1(int loopDepth) 
	{
		try {
			return a_body1cont11cont2(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont11cont1loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1cont11cont1loopHead1(0);

		return loopDepth;
	}
	int a_body1cont11cont1loopBody1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont11cont1loopBody1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont11cont1loopBody1loopBody1(int loopDepth) 
	{
		try {
															#line 2488 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent("FileBackupSnapshotDispatchAddingTasks") .suppressFor(2) .detail("TasksToAdd", rangesToAdd.size()) .detail("NewBatchSize", newBatchSize);
															#line 2493 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 2494 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 2497 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			beginReads = std::vector<Future<Optional<bool>>>();
															#line 2498 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			endReads = std::vector<Future<Optional<bool>>>();
															#line 2500 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			for( auto& range : rangesToAdd ) {
															#line 2501 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				beginReads.push_back(config.snapshotRangeDispatchMap().get(tr, range.begin));
															#line 2502 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				endReads.push_back(config.snapshotRangeDispatchMap().get(tr, range.end));
															#line 19927 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
															#line 2505 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_16 = store(snapshotBatchSize.get(), config.snapshotBatchSize().getOrThrow(tr)) && waitForAll(beginReads) && waitForAll(endReads) && taskBucket->keepRunning(tr, task);
															#line 2505 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor1*>(this)->actor_wait_state < 0) return a_body1cont11cont1loopBody1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 19933 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_16.isReady()) { if (__when_expr_16.isError()) return a_body1cont11cont1loopBody1loopBody1Catch1(__when_expr_16.getError(), loopDepth); else return a_body1cont11cont1loopBody1loopBody1when1(__when_expr_16.get(), loopDepth); };
			static_cast<_executeActor1*>(this)->actor_wait_state = 17;
															#line 2505 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_16.addCallbackAndClear(static_cast<ActorCallback< _executeActor1, 16, Void >*>(static_cast<_executeActor1*>(this)));
															#line 19938 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1cont11cont1loopBody1loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1cont11cont1loopBody1loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont11cont1loopBody1break1(int loopDepth) 
	{
		try {
			return a_body1cont11cont1loopBody1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont11cont1loopBody1loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1cont11cont1loopBody1loopHead1(0);

		return loopDepth;
	}
	int a_body1cont11cont1loopBody1loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 2584 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_19 = tr->onError(e);
															#line 2584 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor1*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 2));
															#line 19975 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_19.isReady()) { if (__when_expr_19.isError()) return a_body1Catch1(__when_expr_19.getError(), std::max(0, loopDepth - 2)); else return a_body1cont11cont1loopBody1loopBody1Catch1when1(__when_expr_19.get(), loopDepth); };
			static_cast<_executeActor1*>(this)->actor_wait_state = 20;
															#line 2584 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_19.addCallbackAndClear(static_cast<ActorCallback< _executeActor1, 19, Void >*>(static_cast<_executeActor1*>(this)));
															#line 19980 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 2));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 2));
		}

		return loopDepth;
	}
	int a_body1cont11cont1loopBody1loopBody1cont2(Void const& _,int loopDepth) 
	{
															#line 2510 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (snapshotBatchSize.get() == newBatchSize)
															#line 19995 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
			return a_body1cont11cont1loopBody1break1(loopDepth==0?0:loopDepth-1); // break
		}
		else
		{
															#line 2513 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			ASSERT(snapshotBatchSize.get() == oldBatchSize);
															#line 2514 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			config.snapshotBatchSize().set(tr, newBatchSize);
															#line 2515 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			snapshotBatchSize = newBatchSize;
															#line 2516 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			config.snapshotDispatchLastShardsBehind().set(tr, Params.shardsBehind().get(task));
															#line 2517 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			config.snapshotDispatchLastVersion().set(tr, tr->getReadVersion().get());
															#line 20011 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 2520 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		addTaskFutures = std::vector<Future<Void>>();
															#line 2522 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		for(i = 0;i < beginReads.size();++i) {
															#line 2523 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			KeyRange& range = rangesToAdd[i];
															#line 2527 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			Optional<bool> beginValue = config.snapshotRangeDispatchMap().get(tr, range.begin).get();
															#line 2528 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			Optional<bool> endValue = config.snapshotRangeDispatchMap().get(tr, range.end).get();
															#line 2530 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			ASSERT(!beginValue.present() || !endValue.present() || beginValue != endValue);
															#line 2534 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if ((!beginValue.present() || !beginValue.get()) && (!endValue.present() || endValue.get()))
															#line 20027 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 2535 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (beginValue.present())
															#line 20031 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				{
															#line 2536 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					config.snapshotRangeDispatchMap().erase(tr, range.begin);
															#line 20035 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				}
				else
				{
															#line 2538 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					config.snapshotRangeDispatchMap().set(tr, range.begin, true);
															#line 20041 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				}
															#line 2540 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (endValue.present())
															#line 20045 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				{
															#line 2541 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					config.snapshotRangeDispatchMap().erase(tr, range.end);
															#line 20049 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				}
				else
				{
															#line 2543 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					config.snapshotRangeDispatchMap().set(tr, range.end, false);
															#line 20055 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				}
															#line 2546 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				Version scheduledVersion = invalidVersion;
															#line 2549 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (nextDispatchVersion > recentReadVersion)
															#line 20061 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				{
															#line 2550 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					scheduledVersion = recentReadVersion + deterministicRandom()->random01() * (nextDispatchVersion - recentReadVersion);
															#line 20065 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				}
															#line 2554 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				int priority = latestSnapshotEndVersion.present() ? 0 : 1;
															#line 2555 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				addTaskFutures.push_back( success(BackupRangeTaskFunc::addTask(tr, taskBucket, task, priority, range.begin, range.end, TaskCompletionKey::joinWith(snapshotBatchFuture), Reference<TaskFuture>(), scheduledVersion)));
															#line 2566 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				TraceEvent("FileBackupSnapshotRangeDispatched") .suppressFor(2) .detail("BackupUID", config.getUid()) .detail("CurrentVersion", recentReadVersion) .detail("ScheduledVersion", scheduledVersion) .detail("BeginKey", range.begin.printable()) .detail("EndKey", range.end.printable());
															#line 20073 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
			else
			{
															#line 2576 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				ASSERT(false);
															#line 20079 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
		}
															#line 2580 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_17 = waitForAll(addTaskFutures);
															#line 2580 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor1*>(this)->actor_wait_state < 0) return a_body1cont11cont1loopBody1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 20086 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_17.isReady()) { if (__when_expr_17.isError()) return a_body1cont11cont1loopBody1loopBody1Catch1(__when_expr_17.getError(), loopDepth); else return a_body1cont11cont1loopBody1loopBody1cont2when1(__when_expr_17.get(), loopDepth); };
		static_cast<_executeActor1*>(this)->actor_wait_state = 18;
															#line 2580 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_17.addCallbackAndClear(static_cast<ActorCallback< _executeActor1, 17, Void >*>(static_cast<_executeActor1*>(this)));
															#line 20091 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont11cont1loopBody1loopBody1cont2(Void && _,int loopDepth) 
	{
															#line 2510 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (snapshotBatchSize.get() == newBatchSize)
															#line 20100 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
			return a_body1cont11cont1loopBody1break1(loopDepth==0?0:loopDepth-1); // break
		}
		else
		{
															#line 2513 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			ASSERT(snapshotBatchSize.get() == oldBatchSize);
															#line 2514 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			config.snapshotBatchSize().set(tr, newBatchSize);
															#line 2515 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			snapshotBatchSize = newBatchSize;
															#line 2516 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			config.snapshotDispatchLastShardsBehind().set(tr, Params.shardsBehind().get(task));
															#line 2517 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			config.snapshotDispatchLastVersion().set(tr, tr->getReadVersion().get());
															#line 20116 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 2520 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		addTaskFutures = std::vector<Future<Void>>();
															#line 2522 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		for(i = 0;i < beginReads.size();++i) {
															#line 2523 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			KeyRange& range = rangesToAdd[i];
															#line 2527 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			Optional<bool> beginValue = config.snapshotRangeDispatchMap().get(tr, range.begin).get();
															#line 2528 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			Optional<bool> endValue = config.snapshotRangeDispatchMap().get(tr, range.end).get();
															#line 2530 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			ASSERT(!beginValue.present() || !endValue.present() || beginValue != endValue);
															#line 2534 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if ((!beginValue.present() || !beginValue.get()) && (!endValue.present() || endValue.get()))
															#line 20132 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 2535 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (beginValue.present())
															#line 20136 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				{
															#line 2536 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					config.snapshotRangeDispatchMap().erase(tr, range.begin);
															#line 20140 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				}
				else
				{
															#line 2538 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					config.snapshotRangeDispatchMap().set(tr, range.begin, true);
															#line 20146 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				}
															#line 2540 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (endValue.present())
															#line 20150 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				{
															#line 2541 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					config.snapshotRangeDispatchMap().erase(tr, range.end);
															#line 20154 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				}
				else
				{
															#line 2543 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					config.snapshotRangeDispatchMap().set(tr, range.end, false);
															#line 20160 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				}
															#line 2546 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				Version scheduledVersion = invalidVersion;
															#line 2549 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (nextDispatchVersion > recentReadVersion)
															#line 20166 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				{
															#line 2550 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					scheduledVersion = recentReadVersion + deterministicRandom()->random01() * (nextDispatchVersion - recentReadVersion);
															#line 20170 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				}
															#line 2554 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				int priority = latestSnapshotEndVersion.present() ? 0 : 1;
															#line 2555 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				addTaskFutures.push_back( success(BackupRangeTaskFunc::addTask(tr, taskBucket, task, priority, range.begin, range.end, TaskCompletionKey::joinWith(snapshotBatchFuture), Reference<TaskFuture>(), scheduledVersion)));
															#line 2566 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				TraceEvent("FileBackupSnapshotRangeDispatched") .suppressFor(2) .detail("BackupUID", config.getUid()) .detail("CurrentVersion", recentReadVersion) .detail("ScheduledVersion", scheduledVersion) .detail("BeginKey", range.begin.printable()) .detail("EndKey", range.end.printable());
															#line 20178 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
			else
			{
															#line 2576 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				ASSERT(false);
															#line 20184 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
		}
															#line 2580 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_17 = waitForAll(addTaskFutures);
															#line 2580 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor1*>(this)->actor_wait_state < 0) return a_body1cont11cont1loopBody1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 20191 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_17.isReady()) { if (__when_expr_17.isError()) return a_body1cont11cont1loopBody1loopBody1Catch1(__when_expr_17.getError(), loopDepth); else return a_body1cont11cont1loopBody1loopBody1cont2when1(__when_expr_17.get(), loopDepth); };
		static_cast<_executeActor1*>(this)->actor_wait_state = 18;
															#line 2580 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_17.addCallbackAndClear(static_cast<ActorCallback< _executeActor1, 17, Void >*>(static_cast<_executeActor1*>(this)));
															#line 20196 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont11cont1loopBody1loopBody1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont11cont1loopBody1loopBody1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont11cont1loopBody1loopBody1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont11cont1loopBody1loopBody1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose17() 
	{
		if (static_cast<_executeActor1*>(this)->actor_wait_state > 0) static_cast<_executeActor1*>(this)->actor_wait_state = 0;
		static_cast<_executeActor1*>(this)->ActorCallback< _executeActor1, 16, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor1, 16, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 16);
		a_exitChoose17();
		try {
			a_body1cont11cont1loopBody1loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont11cont1loopBody1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont11cont1loopBody1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 16);

	}
	void a_callback_fire(ActorCallback< _executeActor1, 16, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 16);
		a_exitChoose17();
		try {
			a_body1cont11cont1loopBody1loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont11cont1loopBody1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont11cont1loopBody1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 16);

	}
	void a_callback_error(ActorCallback< _executeActor1, 16, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 16);
		a_exitChoose17();
		try {
			a_body1cont11cont1loopBody1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont11cont1loopBody1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont11cont1loopBody1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 16);

	}
	int a_body1cont11cont1loopBody1loopBody1cont4(Void const& _,int loopDepth) 
	{
															#line 2581 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_18 = tr->commit();
															#line 2581 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor1*>(this)->actor_wait_state < 0) return a_body1cont11cont1loopBody1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 20270 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_18.isReady()) { if (__when_expr_18.isError()) return a_body1cont11cont1loopBody1loopBody1Catch1(__when_expr_18.getError(), loopDepth); else return a_body1cont11cont1loopBody1loopBody1cont4when1(__when_expr_18.get(), loopDepth); };
		static_cast<_executeActor1*>(this)->actor_wait_state = 19;
															#line 2581 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_18.addCallbackAndClear(static_cast<ActorCallback< _executeActor1, 18, Void >*>(static_cast<_executeActor1*>(this)));
															#line 20275 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont11cont1loopBody1loopBody1cont4(Void && _,int loopDepth) 
	{
															#line 2581 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_18 = tr->commit();
															#line 2581 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor1*>(this)->actor_wait_state < 0) return a_body1cont11cont1loopBody1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 20286 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_18.isReady()) { if (__when_expr_18.isError()) return a_body1cont11cont1loopBody1loopBody1Catch1(__when_expr_18.getError(), loopDepth); else return a_body1cont11cont1loopBody1loopBody1cont4when1(__when_expr_18.get(), loopDepth); };
		static_cast<_executeActor1*>(this)->actor_wait_state = 19;
															#line 2581 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_18.addCallbackAndClear(static_cast<ActorCallback< _executeActor1, 18, Void >*>(static_cast<_executeActor1*>(this)));
															#line 20291 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont11cont1loopBody1loopBody1cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont11cont1loopBody1loopBody1cont4(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont11cont1loopBody1loopBody1cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont11cont1loopBody1loopBody1cont4(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose18() 
	{
		if (static_cast<_executeActor1*>(this)->actor_wait_state > 0) static_cast<_executeActor1*>(this)->actor_wait_state = 0;
		static_cast<_executeActor1*>(this)->ActorCallback< _executeActor1, 17, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor1, 17, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 17);
		a_exitChoose18();
		try {
			a_body1cont11cont1loopBody1loopBody1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont11cont1loopBody1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont11cont1loopBody1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 17);

	}
	void a_callback_fire(ActorCallback< _executeActor1, 17, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 17);
		a_exitChoose18();
		try {
			a_body1cont11cont1loopBody1loopBody1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont11cont1loopBody1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont11cont1loopBody1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 17);

	}
	void a_callback_error(ActorCallback< _executeActor1, 17, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 17);
		a_exitChoose18();
		try {
			a_body1cont11cont1loopBody1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont11cont1loopBody1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont11cont1loopBody1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 17);

	}
	int a_body1cont11cont1loopBody1loopBody1cont15(Void const& _,int loopDepth) 
	{
		return a_body1cont11cont1loopBody1break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1cont11cont1loopBody1loopBody1cont15(Void && _,int loopDepth) 
	{
		return a_body1cont11cont1loopBody1break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1cont11cont1loopBody1loopBody1cont4when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont11cont1loopBody1loopBody1cont15(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont11cont1loopBody1loopBody1cont4when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont11cont1loopBody1loopBody1cont15(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose19() 
	{
		if (static_cast<_executeActor1*>(this)->actor_wait_state > 0) static_cast<_executeActor1*>(this)->actor_wait_state = 0;
		static_cast<_executeActor1*>(this)->ActorCallback< _executeActor1, 18, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor1, 18, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 18);
		a_exitChoose19();
		try {
			a_body1cont11cont1loopBody1loopBody1cont4when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont11cont1loopBody1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont11cont1loopBody1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 18);

	}
	void a_callback_fire(ActorCallback< _executeActor1, 18, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 18);
		a_exitChoose19();
		try {
			a_body1cont11cont1loopBody1loopBody1cont4when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont11cont1loopBody1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont11cont1loopBody1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 18);

	}
	void a_callback_error(ActorCallback< _executeActor1, 18, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 18);
		a_exitChoose19();
		try {
			a_body1cont11cont1loopBody1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont11cont1loopBody1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont11cont1loopBody1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 18);

	}
	int a_body1cont11cont1loopBody1loopBody1Catch1cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont11cont1loopBody1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont11cont1loopBody1loopBody1Catch1cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont11cont1loopBody1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont11cont1loopBody1loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont11cont1loopBody1loopBody1Catch1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont11cont1loopBody1loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont11cont1loopBody1loopBody1Catch1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose20() 
	{
		if (static_cast<_executeActor1*>(this)->actor_wait_state > 0) static_cast<_executeActor1*>(this)->actor_wait_state = 0;
		static_cast<_executeActor1*>(this)->ActorCallback< _executeActor1, 19, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor1, 19, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 19);
		a_exitChoose20();
		try {
			a_body1cont11cont1loopBody1loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 19);

	}
	void a_callback_fire(ActorCallback< _executeActor1, 19, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 19);
		a_exitChoose20();
		try {
			a_body1cont11cont1loopBody1loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 19);

	}
	void a_callback_error(ActorCallback< _executeActor1, 19, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 19);
		a_exitChoose20();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 19);

	}
															#line 2149 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Database cx;
															#line 2149 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskBucket> taskBucket;
															#line 2149 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<FutureBucket> futureBucket;
															#line 2149 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> task;
															#line 2153 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<FlowLock> lock;
															#line 2156 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	double startTime;
															#line 2157 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 2162 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int notDoneSequence;
															#line 2163 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	KeyRangeMap<int> shardMap;
															#line 2164 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key beginKey;
															#line 2172 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<Standalone<VectorRef<KeyRef>>> shardBoundaries;
															#line 2191 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	BackupConfig config;
															#line 2192 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version recentReadVersion;
															#line 2193 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version snapshotBeginVersion;
															#line 2194 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version snapshotTargetEndVersion;
															#line 2195 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int64_t snapshotIntervalSeconds;
															#line 2196 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<Version> latestSnapshotEndVersion;
															#line 2197 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::vector<KeyRange> backupRanges;
															#line 2198 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<Key> snapshotBatchFutureKey;
															#line 2199 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskFuture> snapshotBatchFuture;
															#line 2200 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<int64_t> snapshotBatchSize;
															#line 2233 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	TaskCompletionKey dispatchCompletionKey;
															#line 2256 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::vector<std::pair<Key, bool>> dispatchBoundaries;
															#line 2264 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<BackupConfig::RangeDispatchMapT::RangeResultType> bounds;
															#line 2290 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int i;
															#line 2291 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	RangeMap<Key, int, KeyRangeRef>::iterator iShard;
															#line 2292 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	RangeMap<Key, int, KeyRangeRef>::iterator iShardEnd;
															#line 2297 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	bool lastValue;
															#line 2298 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key lastKey;
															#line 2341 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int countShardsDone;
															#line 2342 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int countShardsNotDone;
															#line 2362 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int countAllShards;
															#line 2379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version nextDispatchVersion;
															#line 2409 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int countExpectedShardsDone;
															#line 2410 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int countShardsToDispatch;
															#line 2453 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::vector<KeyRange> rangesToAdd;
															#line 2481 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int64_t oldBatchSize;
															#line 2482 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int64_t newBatchSize;
															#line 2497 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::vector<Future<Optional<bool>>> beginReads;
															#line 2498 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::vector<Future<Optional<bool>>> endReads;
															#line 2520 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::vector<Future<Void>> addTaskFutures;
															#line 20591 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via _execute()
															#line 2149 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _executeActor1 final : public Actor<Void>, public ActorCallback< _executeActor1, 0, Void >, public ActorCallback< _executeActor1, 1, Void >, public ActorCallback< _executeActor1, 2, Void >, public ActorCallback< _executeActor1, 3, Void >, public ActorCallback< _executeActor1, 4, Void >, public ActorCallback< _executeActor1, 5, Void >, public ActorCallback< _executeActor1, 6, Void >, public ActorCallback< _executeActor1, 7, Void >, public ActorCallback< _executeActor1, 8, Void >, public ActorCallback< _executeActor1, 9, Void >, public ActorCallback< _executeActor1, 10, Void >, public ActorCallback< _executeActor1, 11, Void >, public ActorCallback< _executeActor1, 12, Void >, public ActorCallback< _executeActor1, 13, Void >, public ActorCallback< _executeActor1, 14, Void >, public ActorCallback< _executeActor1, 15, Void >, public ActorCallback< _executeActor1, 16, Void >, public ActorCallback< _executeActor1, 17, Void >, public ActorCallback< _executeActor1, 18, Void >, public ActorCallback< _executeActor1, 19, Void >, public FastAllocated<_executeActor1>, public _executeActor1State<_executeActor1> {
															#line 20596 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<_executeActor1>::operator new;
	using FastAllocated<_executeActor1>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< _executeActor1, 0, Void >;
friend struct ActorCallback< _executeActor1, 1, Void >;
friend struct ActorCallback< _executeActor1, 2, Void >;
friend struct ActorCallback< _executeActor1, 3, Void >;
friend struct ActorCallback< _executeActor1, 4, Void >;
friend struct ActorCallback< _executeActor1, 5, Void >;
friend struct ActorCallback< _executeActor1, 6, Void >;
friend struct ActorCallback< _executeActor1, 7, Void >;
friend struct ActorCallback< _executeActor1, 8, Void >;
friend struct ActorCallback< _executeActor1, 9, Void >;
friend struct ActorCallback< _executeActor1, 10, Void >;
friend struct ActorCallback< _executeActor1, 11, Void >;
friend struct ActorCallback< _executeActor1, 12, Void >;
friend struct ActorCallback< _executeActor1, 13, Void >;
friend struct ActorCallback< _executeActor1, 14, Void >;
friend struct ActorCallback< _executeActor1, 15, Void >;
friend struct ActorCallback< _executeActor1, 16, Void >;
friend struct ActorCallback< _executeActor1, 17, Void >;
friend struct ActorCallback< _executeActor1, 18, Void >;
friend struct ActorCallback< _executeActor1, 19, Void >;
															#line 2149 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_executeActor1(Database const& cx,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 20626 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   _executeActor1State<_executeActor1>(cx, taskBucket, futureBucket, task)
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("_execute");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< _executeActor1, 0, Void >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< _executeActor1, 1, Void >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< _executeActor1, 2, Void >*)0, actor_cancelled()); break;
		case 4: this->a_callback_error((ActorCallback< _executeActor1, 3, Void >*)0, actor_cancelled()); break;
		case 5: this->a_callback_error((ActorCallback< _executeActor1, 4, Void >*)0, actor_cancelled()); break;
		case 6: this->a_callback_error((ActorCallback< _executeActor1, 5, Void >*)0, actor_cancelled()); break;
		case 7: this->a_callback_error((ActorCallback< _executeActor1, 6, Void >*)0, actor_cancelled()); break;
		case 8: this->a_callback_error((ActorCallback< _executeActor1, 7, Void >*)0, actor_cancelled()); break;
		case 9: this->a_callback_error((ActorCallback< _executeActor1, 8, Void >*)0, actor_cancelled()); break;
		case 10: this->a_callback_error((ActorCallback< _executeActor1, 9, Void >*)0, actor_cancelled()); break;
		case 11: this->a_callback_error((ActorCallback< _executeActor1, 10, Void >*)0, actor_cancelled()); break;
		case 12: this->a_callback_error((ActorCallback< _executeActor1, 11, Void >*)0, actor_cancelled()); break;
		case 13: this->a_callback_error((ActorCallback< _executeActor1, 12, Void >*)0, actor_cancelled()); break;
		case 14: this->a_callback_error((ActorCallback< _executeActor1, 13, Void >*)0, actor_cancelled()); break;
		case 15: this->a_callback_error((ActorCallback< _executeActor1, 14, Void >*)0, actor_cancelled()); break;
		case 16: this->a_callback_error((ActorCallback< _executeActor1, 15, Void >*)0, actor_cancelled()); break;
		case 17: this->a_callback_error((ActorCallback< _executeActor1, 16, Void >*)0, actor_cancelled()); break;
		case 18: this->a_callback_error((ActorCallback< _executeActor1, 17, Void >*)0, actor_cancelled()); break;
		case 19: this->a_callback_error((ActorCallback< _executeActor1, 18, Void >*)0, actor_cancelled()); break;
		case 20: this->a_callback_error((ActorCallback< _executeActor1, 19, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 2149 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> _execute( Database const& cx, Reference<TaskBucket> const& taskBucket, Reference<FutureBucket> const& futureBucket, Reference<Task> const& task ) {
															#line 2149 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new _executeActor1(cx, taskBucket, futureBucket, task));
															#line 20672 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 2605 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

	// This function is just a wrapper for BackupSnapshotManifest::addTask() which is defined below.
	// The BackupSnapshotDispatchTask and BackupSnapshotManifest tasks reference each other so in order to keep
	// their execute and finish phases defined together inside their class definitions this wrapper is declared here
	// but defined after BackupSnapshotManifest is defined.
	static Future<Key> addSnapshotManifestTask(Reference<ReadYourWritesTransaction> tr,
	                                           Reference<TaskBucket> taskBucket,
	                                           Reference<Task> parentTask,
	                                           TaskCompletionKey completionKey,
	                                           Reference<TaskFuture> waitFor = Reference<TaskFuture>());

																#line 20687 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via _finish()
															#line 2616 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class _finishActor3>
															#line 2616 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _finishActor3State {
															#line 20693 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 2616 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_finishActor3State(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 2616 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 2616 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : tr(tr),
															#line 2616 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskBucket(taskBucket),
															#line 2616 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   futureBucket(futureBucket),
															#line 2616 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   task(task),
															#line 2620 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   config(task),
															#line 2623 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   snapshotBatchFutureKey(),
															#line 2624 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   snapshotBatchDispatchDoneKey()
															#line 20712 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("_finish", reinterpret_cast<unsigned long>(this));

	}
	~_finishActor3State() 
	{
		fdb_probe_actor_destroy("_finish", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 2626 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_0 = store(snapshotBatchFutureKey, config.snapshotBatchFuture().getOrThrow(tr)) && store(snapshotBatchDispatchDoneKey, config.snapshotBatchDispatchDoneKey().getOrThrow(tr));
															#line 2626 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_finishActor3*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 20729 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<_finishActor3*>(this)->actor_wait_state = 1;
															#line 2626 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< _finishActor3, 0, Void >*>(static_cast<_finishActor3*>(this)));
															#line 20734 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~_finishActor3State();
		static_cast<_finishActor3*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Void const& _,int loopDepth) 
	{
															#line 2629 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		snapshotBatchFuture = futureBucket->unpack(snapshotBatchFutureKey);
															#line 2630 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		snapshotBatchDispatchDoneFuture = futureBucket->unpack(snapshotBatchDispatchDoneKey);
															#line 2632 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config.snapshotBatchFuture().clear(tr);
															#line 2633 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config.snapshotBatchDispatchDoneKey().clear(tr);
															#line 2634 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config.snapshotBatchSize().clear(tr);
															#line 2637 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config.snapshotDispatchLastShardsBehind().set(tr, Params.shardsBehind().getOrDefault(task, 0));
															#line 2638 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config.snapshotDispatchLastVersion().set(tr, tr->getReadVersion().get());
															#line 2640 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		snapshotFinishedFuture = task->getDoneFuture(futureBucket);
															#line 2645 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (Params.snapshotFinished().getOrDefault(task, false))
															#line 20773 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 2646 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_1 = success(addSnapshotManifestTask( tr, taskBucket, task, TaskCompletionKey::signal(snapshotFinishedFuture), snapshotBatchFuture));
															#line 2646 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_finishActor3*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 20779 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
			static_cast<_finishActor3*>(this)->actor_wait_state = 2;
															#line 2646 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< _finishActor3, 1, Void >*>(static_cast<_finishActor3*>(this)));
															#line 20784 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
															#line 2649 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_2 = success(addTask(tr, taskBucket, task, 1, TaskCompletionKey::signal(snapshotFinishedFuture), snapshotBatchFuture, Params.nextDispatchVersion().get(task)));
															#line 2649 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_finishActor3*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 20793 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont1when2(__when_expr_2.get(), loopDepth); };
			static_cast<_finishActor3*>(this)->actor_wait_state = 3;
															#line 2649 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< _finishActor3, 2, Void >*>(static_cast<_finishActor3*>(this)));
															#line 20798 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}

		return loopDepth;
	}
	int a_body1cont1(Void && _,int loopDepth) 
	{
															#line 2629 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		snapshotBatchFuture = futureBucket->unpack(snapshotBatchFutureKey);
															#line 2630 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		snapshotBatchDispatchDoneFuture = futureBucket->unpack(snapshotBatchDispatchDoneKey);
															#line 2632 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config.snapshotBatchFuture().clear(tr);
															#line 2633 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config.snapshotBatchDispatchDoneKey().clear(tr);
															#line 2634 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config.snapshotBatchSize().clear(tr);
															#line 2637 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config.snapshotDispatchLastShardsBehind().set(tr, Params.shardsBehind().getOrDefault(task, 0));
															#line 2638 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config.snapshotDispatchLastVersion().set(tr, tr->getReadVersion().get());
															#line 2640 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		snapshotFinishedFuture = task->getDoneFuture(futureBucket);
															#line 2645 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (Params.snapshotFinished().getOrDefault(task, false))
															#line 20824 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 2646 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_1 = success(addSnapshotManifestTask( tr, taskBucket, task, TaskCompletionKey::signal(snapshotFinishedFuture), snapshotBatchFuture));
															#line 2646 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_finishActor3*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 20830 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
			static_cast<_finishActor3*>(this)->actor_wait_state = 2;
															#line 2646 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< _finishActor3, 1, Void >*>(static_cast<_finishActor3*>(this)));
															#line 20835 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
															#line 2649 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_2 = success(addTask(tr, taskBucket, task, 1, TaskCompletionKey::signal(snapshotFinishedFuture), snapshotBatchFuture, Params.nextDispatchVersion().get(task)));
															#line 2649 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_finishActor3*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 20844 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont1when2(__when_expr_2.get(), loopDepth); };
			static_cast<_finishActor3*>(this)->actor_wait_state = 3;
															#line 2649 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< _finishActor3, 2, Void >*>(static_cast<_finishActor3*>(this)));
															#line 20849 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}

		return loopDepth;
	}
	int a_body1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<_finishActor3*>(this)->actor_wait_state > 0) static_cast<_finishActor3*>(this)->actor_wait_state = 0;
		static_cast<_finishActor3*>(this)->ActorCallback< _finishActor3, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor3, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< _finishActor3, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< _finishActor3, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont2(int loopDepth) 
	{
															#line 2659 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_3 = snapshotBatchDispatchDoneFuture->set(tr, taskBucket);
															#line 2659 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor3*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 20924 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1cont2when1(__when_expr_3.get(), loopDepth); };
		static_cast<_finishActor3*>(this)->actor_wait_state = 4;
															#line 2659 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< _finishActor3, 3, Void >*>(static_cast<_finishActor3*>(this)));
															#line 20929 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont3(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2(loopDepth);

		return loopDepth;
	}
	int a_body1cont3(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2(loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<_finishActor3*>(this)->actor_wait_state > 0) static_cast<_finishActor3*>(this)->actor_wait_state = 0;
		static_cast<_finishActor3*>(this)->ActorCallback< _finishActor3, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor3, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< _finishActor3, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< _finishActor3, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont4(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2(loopDepth);

		return loopDepth;
	}
	int a_body1cont4(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2(loopDepth);

		return loopDepth;
	}
	int a_body1cont1when2(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont4(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1when2(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont4(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<_finishActor3*>(this)->actor_wait_state > 0) static_cast<_finishActor3*>(this)->actor_wait_state = 0;
		static_cast<_finishActor3*>(this)->ActorCallback< _finishActor3, 2, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor3, 2, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont1when2(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< _finishActor3, 2, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont1when2(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< _finishActor3, 2, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 2);

	}
	int a_body1cont5(Void const& _,int loopDepth) 
	{
															#line 2661 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_4 = taskBucket->finish(tr, task);
															#line 2661 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor3*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 21090 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1cont5when1(__when_expr_4.get(), loopDepth); };
		static_cast<_finishActor3*>(this)->actor_wait_state = 5;
															#line 2661 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< _finishActor3, 4, Void >*>(static_cast<_finishActor3*>(this)));
															#line 21095 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont5(Void && _,int loopDepth) 
	{
															#line 2661 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_4 = taskBucket->finish(tr, task);
															#line 2661 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor3*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 21106 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1cont5when1(__when_expr_4.get(), loopDepth); };
		static_cast<_finishActor3*>(this)->actor_wait_state = 5;
															#line 2661 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< _finishActor3, 4, Void >*>(static_cast<_finishActor3*>(this)));
															#line 21111 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont5(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont5(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose4() 
	{
		if (static_cast<_finishActor3*>(this)->actor_wait_state > 0) static_cast<_finishActor3*>(this)->actor_wait_state = 0;
		static_cast<_finishActor3*>(this)->ActorCallback< _finishActor3, 3, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor3, 3, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_fire(ActorCallback< _finishActor3, 3, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_error(ActorCallback< _finishActor3, 3, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 3);

	}
	int a_body1cont6(Void const& _,int loopDepth) 
	{
															#line 2663 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_finishActor3*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_finishActor3State(); static_cast<_finishActor3*>(this)->destroy(); return 0; }
															#line 21183 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_finishActor3*>(this)->SAV< Void >::value()) Void(Void());
		this->~_finishActor3State();
		static_cast<_finishActor3*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont6(Void && _,int loopDepth) 
	{
															#line 2663 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_finishActor3*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_finishActor3State(); static_cast<_finishActor3*>(this)->destroy(); return 0; }
															#line 21195 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_finishActor3*>(this)->SAV< Void >::value()) Void(Void());
		this->~_finishActor3State();
		static_cast<_finishActor3*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont5when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont6(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont5when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont6(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose5() 
	{
		if (static_cast<_finishActor3*>(this)->actor_wait_state > 0) static_cast<_finishActor3*>(this)->actor_wait_state = 0;
		static_cast<_finishActor3*>(this)->ActorCallback< _finishActor3, 4, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor3, 4, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont5when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_fire(ActorCallback< _finishActor3, 4, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont5when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_error(ActorCallback< _finishActor3, 4, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 4);

	}
															#line 2616 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 2616 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskBucket> taskBucket;
															#line 2616 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<FutureBucket> futureBucket;
															#line 2616 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> task;
															#line 2620 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	BackupConfig config;
															#line 2623 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key snapshotBatchFutureKey;
															#line 2624 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key snapshotBatchDispatchDoneKey;
															#line 2629 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskFuture> snapshotBatchFuture;
															#line 2630 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskFuture> snapshotBatchDispatchDoneFuture;
															#line 2640 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskFuture> snapshotFinishedFuture;
															#line 21286 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via _finish()
															#line 2616 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _finishActor3 final : public Actor<Void>, public ActorCallback< _finishActor3, 0, Void >, public ActorCallback< _finishActor3, 1, Void >, public ActorCallback< _finishActor3, 2, Void >, public ActorCallback< _finishActor3, 3, Void >, public ActorCallback< _finishActor3, 4, Void >, public FastAllocated<_finishActor3>, public _finishActor3State<_finishActor3> {
															#line 21291 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<_finishActor3>::operator new;
	using FastAllocated<_finishActor3>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< _finishActor3, 0, Void >;
friend struct ActorCallback< _finishActor3, 1, Void >;
friend struct ActorCallback< _finishActor3, 2, Void >;
friend struct ActorCallback< _finishActor3, 3, Void >;
friend struct ActorCallback< _finishActor3, 4, Void >;
															#line 2616 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_finishActor3(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 21306 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   _finishActor3State<_finishActor3>(tr, taskBucket, futureBucket, task)
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("_finish");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< _finishActor3, 0, Void >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< _finishActor3, 1, Void >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< _finishActor3, 2, Void >*)0, actor_cancelled()); break;
		case 4: this->a_callback_error((ActorCallback< _finishActor3, 3, Void >*)0, actor_cancelled()); break;
		case 5: this->a_callback_error((ActorCallback< _finishActor3, 4, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 2616 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> _finish( Reference<ReadYourWritesTransaction> const& tr, Reference<TaskBucket> const& taskBucket, Reference<FutureBucket> const& futureBucket, Reference<Task> const& task ) {
															#line 2616 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new _finishActor3(tr, taskBucket, futureBucket, task));
															#line 21337 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 2665 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
};
StringRef BackupSnapshotDispatchTask::name = "file_backup_dispatch_ranges_5.2"_sr;
REGISTER_TASKFUNC(BackupSnapshotDispatchTask);

struct BackupLogRangeTaskFunc : BackupTaskFuncBase {
	static StringRef name;
	static constexpr uint32_t version = 1;

	static struct {
		static TaskParam<bool> addBackupLogRangeTasks() { return __FUNCTION__sr; }
		static TaskParam<int64_t> fileSize() { return __FUNCTION__sr; }
		static TaskParam<Version> beginVersion() { return __FUNCTION__sr; }
		static TaskParam<Version> endVersion() { return __FUNCTION__sr; }
	} Params;

	StringRef getName() const override { return name; };

	Future<Void> execute(Database cx,
	                     Reference<TaskBucket> tb,
	                     Reference<FutureBucket> fb,
	                     Reference<Task> task) override {
		return _execute(cx, tb, fb, task);
	};
	Future<Void> finish(Reference<ReadYourWritesTransaction> tr,
	                    Reference<TaskBucket> tb,
	                    Reference<FutureBucket> fb,
	                    Reference<Task> task) override {
		return _finish(tr, tb, fb, task);
	};

																#line 21371 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via _execute()
															#line 2695 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class _executeActor2>
															#line 2695 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _executeActor2State {
															#line 21377 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 2695 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_executeActor2State(Database const& cx,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 2695 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 2695 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : cx(cx),
															#line 2695 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskBucket(taskBucket),
															#line 2695 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   futureBucket(futureBucket),
															#line 2695 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   task(task),
															#line 2699 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   lock(new FlowLock(CLIENT_KNOBS->BACKUP_LOCK_BYTES))
															#line 21392 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("_execute", reinterpret_cast<unsigned long>(this));

	}
	~_executeActor2State() 
	{
		fdb_probe_actor_destroy("_execute", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 2701 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_0 = checkTaskVersion(cx, task, BackupLogRangeTaskFunc::name, BackupLogRangeTaskFunc::version);
															#line 2701 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor2*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 21409 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<_executeActor2*>(this)->actor_wait_state = 1;
															#line 2701 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< _executeActor2, 0, Void >*>(static_cast<_executeActor2*>(this)));
															#line 21414 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~_executeActor2State();
		static_cast<_executeActor2*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Void const& _,int loopDepth) 
	{
															#line 2703 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		beginVersion = Params.beginVersion().get(task);
															#line 2704 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		endVersion = Params.endVersion().get(task);
															#line 2706 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config = BackupConfig(task);
															#line 2707 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		bc = Reference<IBackupContainer>();
															#line 2709 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr = Reference<ReadYourWritesTransaction>(new ReadYourWritesTransaction(cx));
															#line 2710 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 21447 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont1loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1cont1(Void && _,int loopDepth) 
	{
															#line 2703 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		beginVersion = Params.beginVersion().get(task);
															#line 2704 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		endVersion = Params.endVersion().get(task);
															#line 2706 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config = BackupConfig(task);
															#line 2707 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		bc = Reference<IBackupContainer>();
															#line 2709 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr = Reference<ReadYourWritesTransaction>(new ReadYourWritesTransaction(cx));
															#line 2710 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 21466 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont1loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<_executeActor2*>(this)->actor_wait_state > 0) static_cast<_executeActor2*>(this)->actor_wait_state = 0;
		static_cast<_executeActor2*>(this)->ActorCallback< _executeActor2, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor2, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< _executeActor2, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< _executeActor2, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont2(int loopDepth) 
	{
															#line 2735 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Key> __when_expr_5 = config.destUidValue().getOrThrow(tr);
															#line 2735 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor2*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 21540 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_5.isReady()) { if (__when_expr_5.isError()) return a_body1Catch1(__when_expr_5.getError(), loopDepth); else return a_body1cont2when1(__when_expr_5.get(), loopDepth); };
		static_cast<_executeActor2*>(this)->actor_wait_state = 6;
															#line 2735 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_5.addCallbackAndClear(static_cast<ActorCallback< _executeActor2, 5, Key >*>(static_cast<_executeActor2*>(this)));
															#line 21545 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1(int loopDepth) 
	{
															#line 2711 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 2712 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 21563 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		try {
															#line 2715 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_1 = taskBucket->keepRunning(tr, task);
															#line 2715 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor2*>(this)->actor_wait_state < 0) return a_body1cont1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 21569 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1cont1loopBody1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1loopBody1when1(__when_expr_1.get(), loopDepth); };
			static_cast<_executeActor2*>(this)->actor_wait_state = 2;
															#line 2715 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< _executeActor2, 1, Void >*>(static_cast<_executeActor2*>(this)));
															#line 21574 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1cont1loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1cont1loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont1break1(int loopDepth) 
	{
		try {
			return a_body1cont2(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont1loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1cont1loopHead1(0);

		return loopDepth;
	}
	int a_body1cont1loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 2731 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_4 = tr->onError(e);
															#line 2731 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor2*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 21611 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1Catch1(__when_expr_4.getError(), std::max(0, loopDepth - 1)); else return a_body1cont1loopBody1Catch1when1(__when_expr_4.get(), loopDepth); };
			static_cast<_executeActor2*>(this)->actor_wait_state = 5;
															#line 2731 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< _executeActor2, 4, Void >*>(static_cast<_executeActor2*>(this)));
															#line 21616 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont1loopBody1cont2(Void const& _,int loopDepth) 
	{
															#line 2717 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!bc)
															#line 21631 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 2719 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Reference<IBackupContainer>> __when_expr_2 = config.backupContainer().getOrThrow(tr);
															#line 2719 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor2*>(this)->actor_wait_state < 0) return a_body1cont1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 21637 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1cont1loopBody1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont1loopBody1cont2when1(__when_expr_2.get(), loopDepth); };
			static_cast<_executeActor2*>(this)->actor_wait_state = 3;
															#line 2719 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< _executeActor2, 2, Reference<IBackupContainer> >*>(static_cast<_executeActor2*>(this)));
															#line 21642 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont1loopBody1cont3(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont1loopBody1cont2(Void && _,int loopDepth) 
	{
															#line 2717 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!bc)
															#line 21656 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 2719 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Reference<IBackupContainer>> __when_expr_2 = config.backupContainer().getOrThrow(tr);
															#line 2719 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor2*>(this)->actor_wait_state < 0) return a_body1cont1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 21662 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1cont1loopBody1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont1loopBody1cont2when1(__when_expr_2.get(), loopDepth); };
			static_cast<_executeActor2*>(this)->actor_wait_state = 3;
															#line 2719 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< _executeActor2, 2, Reference<IBackupContainer> >*>(static_cast<_executeActor2*>(this)));
															#line 21667 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont1loopBody1cont3(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont1loopBody1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<_executeActor2*>(this)->actor_wait_state > 0) static_cast<_executeActor2*>(this)->actor_wait_state = 0;
		static_cast<_executeActor2*>(this)->ActorCallback< _executeActor2, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor2, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< _executeActor2, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< _executeActor2, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont1loopBody1cont3(int loopDepth) 
	{
															#line 2723 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Version currentVersion = tr->getReadVersion().get();
															#line 2724 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (endVersion < currentVersion)
															#line 21746 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
			return a_body1cont1break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 2727 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_3 = delay(std::max(CLIENT_KNOBS->BACKUP_RANGE_MINWAIT, (double)(endVersion - currentVersion) / CLIENT_KNOBS->CORE_VERSIONSPERSECOND));
															#line 2727 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor2*>(this)->actor_wait_state < 0) return a_body1cont1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 21754 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1cont1loopBody1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1cont1loopBody1cont3when1(__when_expr_3.get(), loopDepth); };
		static_cast<_executeActor2*>(this)->actor_wait_state = 4;
															#line 2727 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< _executeActor2, 3, Void >*>(static_cast<_executeActor2*>(this)));
															#line 21759 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1loopBody1cont4(Reference<IBackupContainer> const& _bc,int loopDepth) 
	{
															#line 2720 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		bc = getBackupContainerWithProxy(_bc);
															#line 21768 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont1loopBody1cont3(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1cont4(Reference<IBackupContainer> && _bc,int loopDepth) 
	{
															#line 2720 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		bc = getBackupContainerWithProxy(_bc);
															#line 21777 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont1loopBody1cont3(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1cont2when1(Reference<IBackupContainer> const& _bc,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont4(_bc, loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1cont2when1(Reference<IBackupContainer> && _bc,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont4(std::move(_bc), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<_executeActor2*>(this)->actor_wait_state > 0) static_cast<_executeActor2*>(this)->actor_wait_state = 0;
		static_cast<_executeActor2*>(this)->ActorCallback< _executeActor2, 2, Reference<IBackupContainer> >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor2, 2, Reference<IBackupContainer> >*,Reference<IBackupContainer> const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont1loopBody1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< _executeActor2, 2, Reference<IBackupContainer> >*,Reference<IBackupContainer> && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont1loopBody1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< _executeActor2, 2, Reference<IBackupContainer> >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 2);

	}
	int a_body1cont1loopBody1cont6(Void const& _,int loopDepth) 
	{
															#line 2729 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->reset();
															#line 21849 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont1loopBody1cont9(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1cont6(Void && _,int loopDepth) 
	{
															#line 2729 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->reset();
															#line 21858 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont1loopBody1cont9(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1cont3when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont6(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1cont3when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont6(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose4() 
	{
		if (static_cast<_executeActor2*>(this)->actor_wait_state > 0) static_cast<_executeActor2*>(this)->actor_wait_state = 0;
		static_cast<_executeActor2*>(this)->ActorCallback< _executeActor2, 3, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor2, 3, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont1loopBody1cont3when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_fire(ActorCallback< _executeActor2, 3, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont1loopBody1cont3when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_error(ActorCallback< _executeActor2, 3, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 3);

	}
	int a_body1cont1loopBody1cont9(int loopDepth) 
	{
		try {
			loopDepth = a_body1cont1loopBody1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont1loopBody1Catch1cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1Catch1cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1Catch1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1Catch1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose5() 
	{
		if (static_cast<_executeActor2*>(this)->actor_wait_state > 0) static_cast<_executeActor2*>(this)->actor_wait_state = 0;
		static_cast<_executeActor2*>(this)->ActorCallback< _executeActor2, 4, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor2, 4, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont1loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_fire(ActorCallback< _executeActor2, 4, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont1loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_error(ActorCallback< _executeActor2, 4, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 4);

	}
	int a_body1cont3(Key const& destUidValue,int loopDepth) 
	{
															#line 2742 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		ranges = getLogRanges(beginVersion, endVersion, destUidValue);
															#line 2743 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (ranges.size() > CLIENT_KNOBS->BACKUP_MAX_LOG_RANGES)
															#line 22020 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 2744 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			Params.addBackupLogRangeTasks().set(task, true);
															#line 2745 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<_executeActor2*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_executeActor2State(); static_cast<_executeActor2*>(this)->destroy(); return 0; }
															#line 22026 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<_executeActor2*>(this)->SAV< Void >::value()) Void(Void());
			this->~_executeActor2State();
			static_cast<_executeActor2*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 2750 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		blockSize = BUGGIFY ? deterministicRandom()->randomInt(125e3, 4e6) : CLIENT_KNOBS->BACKUP_LOGFILE_BLOCK_SIZE;
															#line 2752 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Reference<IBackupFile>> __when_expr_6 = bc->writeLogFile(beginVersion, endVersion, blockSize);
															#line 2752 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor2*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 22038 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_6.isReady()) { if (__when_expr_6.isError()) return a_body1Catch1(__when_expr_6.getError(), loopDepth); else return a_body1cont3when1(__when_expr_6.get(), loopDepth); };
		static_cast<_executeActor2*>(this)->actor_wait_state = 7;
															#line 2752 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_6.addCallbackAndClear(static_cast<ActorCallback< _executeActor2, 6, Reference<IBackupFile> >*>(static_cast<_executeActor2*>(this)));
															#line 22043 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont3(Key && destUidValue,int loopDepth) 
	{
															#line 2742 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		ranges = getLogRanges(beginVersion, endVersion, destUidValue);
															#line 2743 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (ranges.size() > CLIENT_KNOBS->BACKUP_MAX_LOG_RANGES)
															#line 22054 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 2744 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			Params.addBackupLogRangeTasks().set(task, true);
															#line 2745 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<_executeActor2*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_executeActor2State(); static_cast<_executeActor2*>(this)->destroy(); return 0; }
															#line 22060 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<_executeActor2*>(this)->SAV< Void >::value()) Void(Void());
			this->~_executeActor2State();
			static_cast<_executeActor2*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 2750 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		blockSize = BUGGIFY ? deterministicRandom()->randomInt(125e3, 4e6) : CLIENT_KNOBS->BACKUP_LOGFILE_BLOCK_SIZE;
															#line 2752 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Reference<IBackupFile>> __when_expr_6 = bc->writeLogFile(beginVersion, endVersion, blockSize);
															#line 2752 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor2*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 22072 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_6.isReady()) { if (__when_expr_6.isError()) return a_body1Catch1(__when_expr_6.getError(), loopDepth); else return a_body1cont3when1(__when_expr_6.get(), loopDepth); };
		static_cast<_executeActor2*>(this)->actor_wait_state = 7;
															#line 2752 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_6.addCallbackAndClear(static_cast<ActorCallback< _executeActor2, 6, Reference<IBackupFile> >*>(static_cast<_executeActor2*>(this)));
															#line 22077 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont2when1(Key const& destUidValue,int loopDepth) 
	{
		loopDepth = a_body1cont3(destUidValue, loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(Key && destUidValue,int loopDepth) 
	{
		loopDepth = a_body1cont3(std::move(destUidValue), loopDepth);

		return loopDepth;
	}
	void a_exitChoose6() 
	{
		if (static_cast<_executeActor2*>(this)->actor_wait_state > 0) static_cast<_executeActor2*>(this)->actor_wait_state = 0;
		static_cast<_executeActor2*>(this)->ActorCallback< _executeActor2, 5, Key >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor2, 5, Key >*,Key const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_fire(ActorCallback< _executeActor2, 5, Key >*,Key && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_error(ActorCallback< _executeActor2, 5, Key >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 5);

	}
	int a_body1cont4(int loopDepth) 
	{
															#line 2753 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		logFile = LogFileWriter(outFile, blockSize);
															#line 2758 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		results = PromiseStream<RangeResultWithVersion>();
															#line 2759 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		rc = std::vector<Future<Void>>();
															#line 2761 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		for( auto& range : ranges ) {
															#line 2762 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			rc.push_back( readCommitted(cx, results, lock, range, Terminator::False, AccessSystemKeys::True, LockAware::True));
															#line 22157 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 2766 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		sendEOS = map(errorOr(waitForAll(rc)), [=](ErrorOr<Void> const& result) mutable { if (result.isError()) results.sendError(result.getError()); else results.sendError(end_of_stream()); return Void(); });
															#line 2774 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		lastVersion = Version();
															#line 22163 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		try {
															#line 2776 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			;
															#line 22167 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = a_body1cont4loopHead1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1cont4Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1cont4Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont3when1(Reference<IBackupFile> const& __outFile,int loopDepth) 
	{
															#line 2752 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		outFile = __outFile;
															#line 22182 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont4(loopDepth);

		return loopDepth;
	}
	int a_body1cont3when1(Reference<IBackupFile> && __outFile,int loopDepth) 
	{
		outFile = std::move(__outFile);
		loopDepth = a_body1cont4(loopDepth);

		return loopDepth;
	}
	void a_exitChoose7() 
	{
		if (static_cast<_executeActor2*>(this)->actor_wait_state > 0) static_cast<_executeActor2*>(this)->actor_wait_state = 0;
		static_cast<_executeActor2*>(this)->ActorCallback< _executeActor2, 6, Reference<IBackupFile> >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor2, 6, Reference<IBackupFile> >*,Reference<IBackupFile> const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1cont3when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 6);

	}
	void a_callback_fire(ActorCallback< _executeActor2, 6, Reference<IBackupFile> >*,Reference<IBackupFile> && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1cont3when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 6);

	}
	void a_callback_error(ActorCallback< _executeActor2, 6, Reference<IBackupFile> >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 6);

	}
	int a_body1cont6(int loopDepth) 
	{
															#line 2799 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_10 = taskBucket->keepRunning(cx, task);
															#line 2799 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor2*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 22251 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_10.isReady()) { if (__when_expr_10.isError()) return a_body1Catch1(__when_expr_10.getError(), loopDepth); else return a_body1cont6when1(__when_expr_10.get(), loopDepth); };
		static_cast<_executeActor2*>(this)->actor_wait_state = 11;
															#line 2799 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_10.addCallbackAndClear(static_cast<ActorCallback< _executeActor2, 10, Void >*>(static_cast<_executeActor2*>(this)));
															#line 22256 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont4Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 2788 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (e.code() == error_code_actor_cancelled)
															#line 22266 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 2789 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				return a_body1Catch1(e, loopDepth);
															#line 22270 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
															#line 2791 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (e.code() != error_code_end_of_stream)
															#line 22274 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 2792 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				err = e;
															#line 2793 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				StrictFuture<Void> __when_expr_9 = config.logError(cx, err, format("Failed to write to file `%s'", outFile->getFileName().c_str()));
															#line 2793 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (static_cast<_executeActor2*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 22282 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				if (__when_expr_9.isReady()) { if (__when_expr_9.isError()) return a_body1Catch1(__when_expr_9.getError(), loopDepth); else return a_body1cont4Catch1when1(__when_expr_9.get(), loopDepth); };
				static_cast<_executeActor2*>(this)->actor_wait_state = 10;
															#line 2793 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				__when_expr_9.addCallbackAndClear(static_cast<ActorCallback< _executeActor2, 9, Void >*>(static_cast<_executeActor2*>(this)));
															#line 22287 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				loopDepth = 0;
			}
			else
			{
				loopDepth = a_body1cont4Catch1cont1(loopDepth);
			}
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont4loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont4loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont4loopBody1(int loopDepth) 
	{
															#line 2777 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		FutureStream<RangeResultWithVersion> __when_expr_7 = results.getFuture();
															#line 2777 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor2*>(this)->actor_wait_state < 0) return a_body1cont4Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 22316 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_7.isReady()) { if (__when_expr_7.isError()) return a_body1cont4Catch1(__when_expr_7.getError(), std::max(0, loopDepth - 1)); else return a_body1cont4loopBody1when1(__when_expr_7.pop(), loopDepth); };
		static_cast<_executeActor2*>(this)->actor_wait_state = 8;
															#line 2777 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_7.addCallbackAndClear(static_cast<ActorSingleCallback< _executeActor2, 7, RangeResultWithVersion >*>(static_cast<_executeActor2*>(this)));
															#line 22321 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont4loopBody1cont1(int loopDepth) 
	{
															#line 2778 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		lock->release(r.first.expectedSize());
															#line 2780 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		i = 0;
															#line 2781 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 22334 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont4loopBody1cont1loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1cont4loopBody1when1(RangeResultWithVersion const& __r,int loopDepth) 
	{
															#line 2777 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		r = __r;
															#line 22343 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont4loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont4loopBody1when1(RangeResultWithVersion && __r,int loopDepth) 
	{
		r = std::move(__r);
		loopDepth = a_body1cont4loopBody1cont1(loopDepth);

		return loopDepth;
	}
	void a_exitChoose8() 
	{
		if (static_cast<_executeActor2*>(this)->actor_wait_state > 0) static_cast<_executeActor2*>(this)->actor_wait_state = 0;
		static_cast<_executeActor2*>(this)->ActorSingleCallback< _executeActor2, 7, RangeResultWithVersion >::remove();

	}
	void a_callback_fire(ActorSingleCallback< _executeActor2, 7, RangeResultWithVersion >*,RangeResultWithVersion const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1cont4loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont4Catch1(error, 0);
		} catch (...) {
			a_body1cont4Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 7);

	}
	void a_callback_fire(ActorSingleCallback< _executeActor2, 7, RangeResultWithVersion >*,RangeResultWithVersion && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1cont4loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont4Catch1(error, 0);
		} catch (...) {
			a_body1cont4Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 7);

	}
	void a_callback_error(ActorSingleCallback< _executeActor2, 7, RangeResultWithVersion >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1cont4Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont4Catch1(error, 0);
		} catch (...) {
			a_body1cont4Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 7);

	}
	int a_body1cont4loopBody1cont2(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1cont4loopHead1(0);

		return loopDepth;
	}
	int a_body1cont4loopBody1cont1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont4loopBody1cont1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont4loopBody1cont1loopBody1(int loopDepth) 
	{
															#line 2781 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!(i < r.first.size()))
															#line 22423 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
			return a_body1cont4loopBody1cont1break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 2783 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_8 = logFile.writeKV(r.first[i].key.substr(backupLogPrefixBytes + 16), r.first[i].value);
															#line 2783 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor2*>(this)->actor_wait_state < 0) return a_body1cont4Catch1(actor_cancelled(), std::max(0, loopDepth - 2));
															#line 22431 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_8.isReady()) { if (__when_expr_8.isError()) return a_body1cont4Catch1(__when_expr_8.getError(), std::max(0, loopDepth - 2)); else return a_body1cont4loopBody1cont1loopBody1when1(__when_expr_8.get(), loopDepth); };
		static_cast<_executeActor2*>(this)->actor_wait_state = 9;
															#line 2783 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_8.addCallbackAndClear(static_cast<ActorCallback< _executeActor2, 8, Void >*>(static_cast<_executeActor2*>(this)));
															#line 22436 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont4loopBody1cont1break1(int loopDepth) 
	{
		try {
			return a_body1cont4loopBody1cont2(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1cont4Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1cont4Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont4loopBody1cont1loopBody1cont1(Void const& _,int loopDepth) 
	{
															#line 2784 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		lastVersion = r.second;
															#line 2781 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		++i;
															#line 22460 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (loopDepth == 0) return a_body1cont4loopBody1cont1loopHead1(0);

		return loopDepth;
	}
	int a_body1cont4loopBody1cont1loopBody1cont1(Void && _,int loopDepth) 
	{
															#line 2784 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		lastVersion = r.second;
															#line 2781 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		++i;
															#line 22471 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (loopDepth == 0) return a_body1cont4loopBody1cont1loopHead1(0);

		return loopDepth;
	}
	int a_body1cont4loopBody1cont1loopBody1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont4loopBody1cont1loopBody1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont4loopBody1cont1loopBody1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont4loopBody1cont1loopBody1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose9() 
	{
		if (static_cast<_executeActor2*>(this)->actor_wait_state > 0) static_cast<_executeActor2*>(this)->actor_wait_state = 0;
		static_cast<_executeActor2*>(this)->ActorCallback< _executeActor2, 8, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor2, 8, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 8);
		a_exitChoose9();
		try {
			a_body1cont4loopBody1cont1loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont4Catch1(error, 0);
		} catch (...) {
			a_body1cont4Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 8);

	}
	void a_callback_fire(ActorCallback< _executeActor2, 8, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 8);
		a_exitChoose9();
		try {
			a_body1cont4loopBody1cont1loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont4Catch1(error, 0);
		} catch (...) {
			a_body1cont4Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 8);

	}
	void a_callback_error(ActorCallback< _executeActor2, 8, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 8);
		a_exitChoose9();
		try {
			a_body1cont4Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont4Catch1(error, 0);
		} catch (...) {
			a_body1cont4Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 8);

	}
	int a_body1cont4Catch1cont1(int loopDepth) 
	{
		loopDepth = a_body1cont6(loopDepth);

		return loopDepth;
	}
	int a_body1cont4Catch1cont3(Void const& _,int loopDepth) 
	{
															#line 2794 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		return a_body1Catch1(err, loopDepth);
															#line 22549 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"

		return loopDepth;
	}
	int a_body1cont4Catch1cont3(Void && _,int loopDepth) 
	{
															#line 2794 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		return a_body1Catch1(err, loopDepth);
															#line 22557 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"

		return loopDepth;
	}
	int a_body1cont4Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont4Catch1cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont4Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont4Catch1cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose10() 
	{
		if (static_cast<_executeActor2*>(this)->actor_wait_state > 0) static_cast<_executeActor2*>(this)->actor_wait_state = 0;
		static_cast<_executeActor2*>(this)->ActorCallback< _executeActor2, 9, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor2, 9, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 9);
		a_exitChoose10();
		try {
			a_body1cont4Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 9);

	}
	void a_callback_fire(ActorCallback< _executeActor2, 9, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 9);
		a_exitChoose10();
		try {
			a_body1cont4Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 9);

	}
	void a_callback_error(ActorCallback< _executeActor2, 9, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 9);
		a_exitChoose10();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 9);

	}
	int a_body1cont9(Void const& _,int loopDepth) 
	{
															#line 2801 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_11 = outFile->finish();
															#line 2801 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor2*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 22630 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_11.isReady()) { if (__when_expr_11.isError()) return a_body1Catch1(__when_expr_11.getError(), loopDepth); else return a_body1cont9when1(__when_expr_11.get(), loopDepth); };
		static_cast<_executeActor2*>(this)->actor_wait_state = 12;
															#line 2801 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_11.addCallbackAndClear(static_cast<ActorCallback< _executeActor2, 11, Void >*>(static_cast<_executeActor2*>(this)));
															#line 22635 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont9(Void && _,int loopDepth) 
	{
															#line 2801 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_11 = outFile->finish();
															#line 2801 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor2*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 22646 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_11.isReady()) { if (__when_expr_11.isError()) return a_body1Catch1(__when_expr_11.getError(), loopDepth); else return a_body1cont9when1(__when_expr_11.get(), loopDepth); };
		static_cast<_executeActor2*>(this)->actor_wait_state = 12;
															#line 2801 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_11.addCallbackAndClear(static_cast<ActorCallback< _executeActor2, 11, Void >*>(static_cast<_executeActor2*>(this)));
															#line 22651 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont6when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont9(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont6when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont9(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose11() 
	{
		if (static_cast<_executeActor2*>(this)->actor_wait_state > 0) static_cast<_executeActor2*>(this)->actor_wait_state = 0;
		static_cast<_executeActor2*>(this)->ActorCallback< _executeActor2, 10, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor2, 10, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 10);
		a_exitChoose11();
		try {
			a_body1cont6when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 10);

	}
	void a_callback_fire(ActorCallback< _executeActor2, 10, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 10);
		a_exitChoose11();
		try {
			a_body1cont6when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 10);

	}
	void a_callback_error(ActorCallback< _executeActor2, 10, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 10);
		a_exitChoose11();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 10);

	}
	int a_body1cont10(Void const& _,int loopDepth) 
	{
															#line 2803 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FileBackupWroteLogFile") .suppressFor(60) .detail("BackupUID", config.getUid()) .detail("Size", outFile->size()) .detail("BeginVersion", beginVersion) .detail("EndVersion", endVersion) .detail("LastReadVersion", lastVersion);
															#line 2811 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Params.fileSize().set(task, outFile->size());
															#line 2813 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_executeActor2*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_executeActor2State(); static_cast<_executeActor2*>(this)->destroy(); return 0; }
															#line 22727 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_executeActor2*>(this)->SAV< Void >::value()) Void(Void());
		this->~_executeActor2State();
		static_cast<_executeActor2*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont10(Void && _,int loopDepth) 
	{
															#line 2803 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FileBackupWroteLogFile") .suppressFor(60) .detail("BackupUID", config.getUid()) .detail("Size", outFile->size()) .detail("BeginVersion", beginVersion) .detail("EndVersion", endVersion) .detail("LastReadVersion", lastVersion);
															#line 2811 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Params.fileSize().set(task, outFile->size());
															#line 2813 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_executeActor2*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_executeActor2State(); static_cast<_executeActor2*>(this)->destroy(); return 0; }
															#line 22743 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_executeActor2*>(this)->SAV< Void >::value()) Void(Void());
		this->~_executeActor2State();
		static_cast<_executeActor2*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont9when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont10(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont9when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont10(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose12() 
	{
		if (static_cast<_executeActor2*>(this)->actor_wait_state > 0) static_cast<_executeActor2*>(this)->actor_wait_state = 0;
		static_cast<_executeActor2*>(this)->ActorCallback< _executeActor2, 11, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor2, 11, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 11);
		a_exitChoose12();
		try {
			a_body1cont9when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 11);

	}
	void a_callback_fire(ActorCallback< _executeActor2, 11, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 11);
		a_exitChoose12();
		try {
			a_body1cont9when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 11);

	}
	void a_callback_error(ActorCallback< _executeActor2, 11, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 11);
		a_exitChoose12();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 11);

	}
															#line 2695 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Database cx;
															#line 2695 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskBucket> taskBucket;
															#line 2695 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<FutureBucket> futureBucket;
															#line 2695 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> task;
															#line 2699 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<FlowLock> lock;
															#line 2703 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version beginVersion;
															#line 2704 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version endVersion;
															#line 2706 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	BackupConfig config;
															#line 2707 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<IBackupContainer> bc;
															#line 2709 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 2742 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Standalone<VectorRef<KeyRangeRef>> ranges;
															#line 2750 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int blockSize;
															#line 2752 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<IBackupFile> outFile;
															#line 2753 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	LogFileWriter logFile;
															#line 2758 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	PromiseStream<RangeResultWithVersion> results;
															#line 2759 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::vector<Future<Void>> rc;
															#line 2766 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<Void> sendEOS;
															#line 2774 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version lastVersion;
															#line 2777 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	RangeResultWithVersion r;
															#line 2780 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int i;
															#line 2792 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Error err;
															#line 22856 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via _execute()
															#line 2695 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _executeActor2 final : public Actor<Void>, public ActorCallback< _executeActor2, 0, Void >, public ActorCallback< _executeActor2, 1, Void >, public ActorCallback< _executeActor2, 2, Reference<IBackupContainer> >, public ActorCallback< _executeActor2, 3, Void >, public ActorCallback< _executeActor2, 4, Void >, public ActorCallback< _executeActor2, 5, Key >, public ActorCallback< _executeActor2, 6, Reference<IBackupFile> >, public ActorSingleCallback< _executeActor2, 7, RangeResultWithVersion >, public ActorCallback< _executeActor2, 8, Void >, public ActorCallback< _executeActor2, 9, Void >, public ActorCallback< _executeActor2, 10, Void >, public ActorCallback< _executeActor2, 11, Void >, public FastAllocated<_executeActor2>, public _executeActor2State<_executeActor2> {
															#line 22861 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<_executeActor2>::operator new;
	using FastAllocated<_executeActor2>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< _executeActor2, 0, Void >;
friend struct ActorCallback< _executeActor2, 1, Void >;
friend struct ActorCallback< _executeActor2, 2, Reference<IBackupContainer> >;
friend struct ActorCallback< _executeActor2, 3, Void >;
friend struct ActorCallback< _executeActor2, 4, Void >;
friend struct ActorCallback< _executeActor2, 5, Key >;
friend struct ActorCallback< _executeActor2, 6, Reference<IBackupFile> >;
friend struct ActorSingleCallback< _executeActor2, 7, RangeResultWithVersion >;
friend struct ActorCallback< _executeActor2, 8, Void >;
friend struct ActorCallback< _executeActor2, 9, Void >;
friend struct ActorCallback< _executeActor2, 10, Void >;
friend struct ActorCallback< _executeActor2, 11, Void >;
															#line 2695 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_executeActor2(Database const& cx,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 22883 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   _executeActor2State<_executeActor2>(cx, taskBucket, futureBucket, task)
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("_execute");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< _executeActor2, 0, Void >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< _executeActor2, 1, Void >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< _executeActor2, 2, Reference<IBackupContainer> >*)0, actor_cancelled()); break;
		case 4: this->a_callback_error((ActorCallback< _executeActor2, 3, Void >*)0, actor_cancelled()); break;
		case 5: this->a_callback_error((ActorCallback< _executeActor2, 4, Void >*)0, actor_cancelled()); break;
		case 6: this->a_callback_error((ActorCallback< _executeActor2, 5, Key >*)0, actor_cancelled()); break;
		case 7: this->a_callback_error((ActorCallback< _executeActor2, 6, Reference<IBackupFile> >*)0, actor_cancelled()); break;
		case 8: this->a_callback_error((ActorSingleCallback< _executeActor2, 7, RangeResultWithVersion >*)0, actor_cancelled()); break;
		case 9: this->a_callback_error((ActorCallback< _executeActor2, 8, Void >*)0, actor_cancelled()); break;
		case 10: this->a_callback_error((ActorCallback< _executeActor2, 9, Void >*)0, actor_cancelled()); break;
		case 11: this->a_callback_error((ActorCallback< _executeActor2, 10, Void >*)0, actor_cancelled()); break;
		case 12: this->a_callback_error((ActorCallback< _executeActor2, 11, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 2695 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> _execute( Database const& cx, Reference<TaskBucket> const& taskBucket, Reference<FutureBucket> const& futureBucket, Reference<Task> const& task ) {
															#line 2695 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new _executeActor2(cx, taskBucket, futureBucket, task));
															#line 22921 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 2815 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

																#line 22926 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via addTask()
															#line 2816 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class AddTaskActor2>
															#line 2816 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class AddTaskActor2State {
															#line 22932 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 2816 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	AddTaskActor2State(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<Task> const& parentTask,int const& priority,Version const& beginVersion,Version const& endVersion,TaskCompletionKey const& completionKey,Reference<TaskFuture> const& waitFor = Reference<TaskFuture>()) 
															#line 2816 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 2816 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : tr(tr),
															#line 2816 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskBucket(taskBucket),
															#line 2816 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   parentTask(parentTask),
															#line 2816 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   priority(priority),
															#line 2816 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   beginVersion(beginVersion),
															#line 2816 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   endVersion(endVersion),
															#line 2816 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   completionKey(completionKey),
															#line 2816 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   waitFor(waitFor)
															#line 22953 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("addTask", reinterpret_cast<unsigned long>(this));

	}
	~AddTaskActor2State() 
	{
		fdb_probe_actor_destroy("addTask", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 2824 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Key> __when_expr_0 = addBackupTask( BackupLogRangeTaskFunc::name, BackupLogRangeTaskFunc::version, tr, taskBucket, completionKey, BackupConfig(parentTask), waitFor, [=](Reference<Task> task) { Params.beginVersion().set(task, beginVersion); Params.endVersion().set(task, endVersion); Params.addBackupLogRangeTasks().set(task, false); }, priority);
															#line 2824 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<AddTaskActor2*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 22970 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<AddTaskActor2*>(this)->actor_wait_state = 1;
															#line 2824 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< AddTaskActor2, 0, Key >*>(static_cast<AddTaskActor2*>(this)));
															#line 22975 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~AddTaskActor2State();
		static_cast<AddTaskActor2*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Key const& key,int loopDepth) 
	{
															#line 2838 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<AddTaskActor2*>(this)->SAV<Key>::futures) { (void)(key); this->~AddTaskActor2State(); static_cast<AddTaskActor2*>(this)->destroy(); return 0; }
															#line 22998 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<AddTaskActor2*>(this)->SAV< Key >::value()) Key(key);
		this->~AddTaskActor2State();
		static_cast<AddTaskActor2*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont1(Key && key,int loopDepth) 
	{
															#line 2838 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<AddTaskActor2*>(this)->SAV<Key>::futures) { (void)(key); this->~AddTaskActor2State(); static_cast<AddTaskActor2*>(this)->destroy(); return 0; }
															#line 23010 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<AddTaskActor2*>(this)->SAV< Key >::value()) Key(key);
		this->~AddTaskActor2State();
		static_cast<AddTaskActor2*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1when1(Key const& key,int loopDepth) 
	{
		loopDepth = a_body1cont1(key, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Key && key,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(key), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<AddTaskActor2*>(this)->actor_wait_state > 0) static_cast<AddTaskActor2*>(this)->actor_wait_state = 0;
		static_cast<AddTaskActor2*>(this)->ActorCallback< AddTaskActor2, 0, Key >::remove();

	}
	void a_callback_fire(ActorCallback< AddTaskActor2, 0, Key >*,Key const& value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< AddTaskActor2, 0, Key >*,Key && value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< AddTaskActor2, 0, Key >*,Error err) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 0);

	}
															#line 2816 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 2816 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskBucket> taskBucket;
															#line 2816 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> parentTask;
															#line 2816 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int priority;
															#line 2816 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version beginVersion;
															#line 2816 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version endVersion;
															#line 2816 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	TaskCompletionKey completionKey;
															#line 2816 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskFuture> waitFor;
															#line 23097 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via addTask()
															#line 2816 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class AddTaskActor2 final : public Actor<Key>, public ActorCallback< AddTaskActor2, 0, Key >, public FastAllocated<AddTaskActor2>, public AddTaskActor2State<AddTaskActor2> {
															#line 23102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<AddTaskActor2>::operator new;
	using FastAllocated<AddTaskActor2>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Key>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< AddTaskActor2, 0, Key >;
															#line 2816 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	AddTaskActor2(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<Task> const& parentTask,int const& priority,Version const& beginVersion,Version const& endVersion,TaskCompletionKey const& completionKey,Reference<TaskFuture> const& waitFor = Reference<TaskFuture>()) 
															#line 23113 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Key>(),
		   AddTaskActor2State<AddTaskActor2>(tr, taskBucket, parentTask, priority, beginVersion, endVersion, completionKey, waitFor)
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("addTask");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< AddTaskActor2, 0, Key >*)0, actor_cancelled()); break;
		}

	}
};
															#line 2816 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Key> addTask( Reference<ReadYourWritesTransaction> const& tr, Reference<TaskBucket> const& taskBucket, Reference<Task> const& parentTask, int const& priority, Version const& beginVersion, Version const& endVersion, TaskCompletionKey const& completionKey, Reference<TaskFuture> const& waitFor = Reference<TaskFuture>() ) {
															#line 2816 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Key>(new AddTaskActor2(tr, taskBucket, parentTask, priority, beginVersion, endVersion, completionKey, waitFor));
															#line 23140 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 2840 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

																#line 23145 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via startBackupLogRangeInternal()
															#line 2841 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class StartBackupLogRangeInternalActor>
															#line 2841 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class StartBackupLogRangeInternalActorState {
															#line 23151 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 2841 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	StartBackupLogRangeInternalActorState(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task,Reference<TaskFuture> const& taskFuture,Version const& beginVersion,Version const& endVersion) 
															#line 2841 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 2841 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : tr(tr),
															#line 2841 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskBucket(taskBucket),
															#line 2841 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   futureBucket(futureBucket),
															#line 2841 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   task(task),
															#line 2841 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskFuture(taskFuture),
															#line 2841 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   beginVersion(beginVersion),
															#line 2841 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   endVersion(endVersion)
															#line 23170 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("startBackupLogRangeInternal", reinterpret_cast<unsigned long>(this));

	}
	~StartBackupLogRangeInternalActorState() 
	{
		fdb_probe_actor_destroy("startBackupLogRangeInternal", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 2848 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 2849 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 2851 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			std::vector<Future<Key>> addTaskVector;
															#line 2852 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			int tasks = 0;
															#line 2853 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			for(int64_t vblock = beginVersion / CLIENT_KNOBS->LOG_RANGE_BLOCK_SIZE;vblock < (endVersion + CLIENT_KNOBS->LOG_RANGE_BLOCK_SIZE - 1) / CLIENT_KNOBS->LOG_RANGE_BLOCK_SIZE;vblock += CLIENT_KNOBS->BACKUP_MAX_LOG_RANGES) {
															#line 2856 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				Version bv = std::max(beginVersion, vblock * CLIENT_KNOBS->LOG_RANGE_BLOCK_SIZE);
															#line 2858 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (tasks >= CLIENT_KNOBS->BACKUP_SHARD_TASK_LIMIT)
															#line 23197 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				{
															#line 2859 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					addTaskVector.push_back(addTask(tr, taskBucket, task, task->getPriority(), bv, endVersion, TaskCompletionKey::joinWith(taskFuture)));
															#line 23201 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
					break;
				}
															#line 2869 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				Version ev = std::min(endVersion, (vblock + CLIENT_KNOBS->BACKUP_MAX_LOG_RANGES) * CLIENT_KNOBS->LOG_RANGE_BLOCK_SIZE);
															#line 2871 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				addTaskVector.push_back( addTask(tr, taskBucket, task, task->getPriority(), bv, ev, TaskCompletionKey::joinWith(taskFuture)));
															#line 2873 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				tasks++;
															#line 23210 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
															#line 2876 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_0 = waitForAll(addTaskVector);
															#line 2876 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<StartBackupLogRangeInternalActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 23216 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<StartBackupLogRangeInternalActor*>(this)->actor_wait_state = 1;
															#line 2876 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< StartBackupLogRangeInternalActor, 0, Void >*>(static_cast<StartBackupLogRangeInternalActor*>(this)));
															#line 23221 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~StartBackupLogRangeInternalActorState();
		static_cast<StartBackupLogRangeInternalActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Void const& _,int loopDepth) 
	{
															#line 2878 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<StartBackupLogRangeInternalActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~StartBackupLogRangeInternalActorState(); static_cast<StartBackupLogRangeInternalActor*>(this)->destroy(); return 0; }
															#line 23244 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<StartBackupLogRangeInternalActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~StartBackupLogRangeInternalActorState();
		static_cast<StartBackupLogRangeInternalActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont1(Void && _,int loopDepth) 
	{
															#line 2878 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<StartBackupLogRangeInternalActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~StartBackupLogRangeInternalActorState(); static_cast<StartBackupLogRangeInternalActor*>(this)->destroy(); return 0; }
															#line 23256 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<StartBackupLogRangeInternalActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~StartBackupLogRangeInternalActorState();
		static_cast<StartBackupLogRangeInternalActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<StartBackupLogRangeInternalActor*>(this)->actor_wait_state > 0) static_cast<StartBackupLogRangeInternalActor*>(this)->actor_wait_state = 0;
		static_cast<StartBackupLogRangeInternalActor*>(this)->ActorCallback< StartBackupLogRangeInternalActor, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< StartBackupLogRangeInternalActor, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("startBackupLogRangeInternal", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("startBackupLogRangeInternal", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< StartBackupLogRangeInternalActor, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("startBackupLogRangeInternal", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("startBackupLogRangeInternal", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< StartBackupLogRangeInternalActor, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("startBackupLogRangeInternal", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("startBackupLogRangeInternal", reinterpret_cast<unsigned long>(this), 0);

	}
															#line 2841 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 2841 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskBucket> taskBucket;
															#line 2841 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<FutureBucket> futureBucket;
															#line 2841 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> task;
															#line 2841 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskFuture> taskFuture;
															#line 2841 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version beginVersion;
															#line 2841 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version endVersion;
															#line 23341 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via startBackupLogRangeInternal()
															#line 2841 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class StartBackupLogRangeInternalActor final : public Actor<Void>, public ActorCallback< StartBackupLogRangeInternalActor, 0, Void >, public FastAllocated<StartBackupLogRangeInternalActor>, public StartBackupLogRangeInternalActorState<StartBackupLogRangeInternalActor> {
															#line 23346 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<StartBackupLogRangeInternalActor>::operator new;
	using FastAllocated<StartBackupLogRangeInternalActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< StartBackupLogRangeInternalActor, 0, Void >;
															#line 2841 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	StartBackupLogRangeInternalActor(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task,Reference<TaskFuture> const& taskFuture,Version const& beginVersion,Version const& endVersion) 
															#line 23357 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   StartBackupLogRangeInternalActorState<StartBackupLogRangeInternalActor>(tr, taskBucket, futureBucket, task, taskFuture, beginVersion, endVersion)
	{
		fdb_probe_actor_enter("startBackupLogRangeInternal", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("startBackupLogRangeInternal");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("startBackupLogRangeInternal", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< StartBackupLogRangeInternalActor, 0, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 2841 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> startBackupLogRangeInternal( Reference<ReadYourWritesTransaction> const& tr, Reference<TaskBucket> const& taskBucket, Reference<FutureBucket> const& futureBucket, Reference<Task> const& task, Reference<TaskFuture> const& taskFuture, Version const& beginVersion, Version const& endVersion ) {
															#line 2841 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new StartBackupLogRangeInternalActor(tr, taskBucket, futureBucket, task, taskFuture, beginVersion, endVersion));
															#line 23384 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 2880 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

																#line 23389 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via _finish()
															#line 2881 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class _finishActor4>
															#line 2881 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _finishActor4State {
															#line 23395 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 2881 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_finishActor4State(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 2881 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 2881 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : tr(tr),
															#line 2881 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskBucket(taskBucket),
															#line 2881 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   futureBucket(futureBucket),
															#line 2881 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   task(task),
															#line 2885 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   beginVersion(Params.beginVersion().get(task)),
															#line 2886 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   endVersion(Params.endVersion().get(task)),
															#line 2887 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskFuture(futureBucket->unpack(task->params[Task::reservedTaskParamKeyDone])),
															#line 2888 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   config(task)
															#line 23416 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("_finish", reinterpret_cast<unsigned long>(this));

	}
	~_finishActor4State() 
	{
		fdb_probe_actor_destroy("_finish", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 2890 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (Params.fileSize().exists(task))
															#line 23431 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 2891 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				config.logBytesWritten().atomicOp(tr, Params.fileSize().get(task), MutationRef::AddValue);
															#line 23435 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
															#line 2894 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (Params.addBackupLogRangeTasks().get(task))
															#line 23439 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 2895 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				StrictFuture<Void> __when_expr_0 = startBackupLogRangeInternal(tr, taskBucket, futureBucket, task, taskFuture, beginVersion, endVersion);
															#line 2895 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (static_cast<_finishActor4*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 23445 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
				static_cast<_finishActor4*>(this)->actor_wait_state = 1;
															#line 2895 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< _finishActor4, 0, Void >*>(static_cast<_finishActor4*>(this)));
															#line 23450 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				loopDepth = 0;
			}
			else
			{
															#line 2897 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				StrictFuture<Void> __when_expr_1 = taskFuture->set(tr, taskBucket);
															#line 2897 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (static_cast<_finishActor4*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 23459 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1when2(__when_expr_1.get(), loopDepth); };
				static_cast<_finishActor4*>(this)->actor_wait_state = 2;
															#line 2897 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< _finishActor4, 1, Void >*>(static_cast<_finishActor4*>(this)));
															#line 23464 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				loopDepth = 0;
			}
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~_finishActor4State();
		static_cast<_finishActor4*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 2900 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_2 = taskBucket->finish(tr, task);
															#line 2900 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor4*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 23490 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont1when1(__when_expr_2.get(), loopDepth); };
		static_cast<_finishActor4*>(this)->actor_wait_state = 3;
															#line 2900 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< _finishActor4, 2, Void >*>(static_cast<_finishActor4*>(this)));
															#line 23495 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont3(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont3(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<_finishActor4*>(this)->actor_wait_state > 0) static_cast<_finishActor4*>(this)->actor_wait_state = 0;
		static_cast<_finishActor4*>(this)->ActorCallback< _finishActor4, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor4, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< _finishActor4, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< _finishActor4, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont4(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont4(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1when2(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont4(_, loopDepth);

		return loopDepth;
	}
	int a_body1when2(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont4(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<_finishActor4*>(this)->actor_wait_state > 0) static_cast<_finishActor4*>(this)->actor_wait_state = 0;
		static_cast<_finishActor4*>(this)->ActorCallback< _finishActor4, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor4, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1when2(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< _finishActor4, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1when2(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< _finishActor4, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont5(Void const& _,int loopDepth) 
	{
															#line 2901 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_finishActor4*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_finishActor4State(); static_cast<_finishActor4*>(this)->destroy(); return 0; }
															#line 23654 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_finishActor4*>(this)->SAV< Void >::value()) Void(Void());
		this->~_finishActor4State();
		static_cast<_finishActor4*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont5(Void && _,int loopDepth) 
	{
															#line 2901 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_finishActor4*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_finishActor4State(); static_cast<_finishActor4*>(this)->destroy(); return 0; }
															#line 23666 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_finishActor4*>(this)->SAV< Void >::value()) Void(Void());
		this->~_finishActor4State();
		static_cast<_finishActor4*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont5(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont5(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<_finishActor4*>(this)->actor_wait_state > 0) static_cast<_finishActor4*>(this)->actor_wait_state = 0;
		static_cast<_finishActor4*>(this)->ActorCallback< _finishActor4, 2, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor4, 2, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< _finishActor4, 2, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< _finishActor4, 2, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 2);

	}
															#line 2881 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 2881 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskBucket> taskBucket;
															#line 2881 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<FutureBucket> futureBucket;
															#line 2881 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> task;
															#line 2885 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version beginVersion;
															#line 2886 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version endVersion;
															#line 2887 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskFuture> taskFuture;
															#line 2888 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	BackupConfig config;
															#line 23753 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via _finish()
															#line 2881 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _finishActor4 final : public Actor<Void>, public ActorCallback< _finishActor4, 0, Void >, public ActorCallback< _finishActor4, 1, Void >, public ActorCallback< _finishActor4, 2, Void >, public FastAllocated<_finishActor4>, public _finishActor4State<_finishActor4> {
															#line 23758 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<_finishActor4>::operator new;
	using FastAllocated<_finishActor4>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< _finishActor4, 0, Void >;
friend struct ActorCallback< _finishActor4, 1, Void >;
friend struct ActorCallback< _finishActor4, 2, Void >;
															#line 2881 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_finishActor4(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 23771 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   _finishActor4State<_finishActor4>(tr, taskBucket, futureBucket, task)
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("_finish");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< _finishActor4, 0, Void >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< _finishActor4, 1, Void >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< _finishActor4, 2, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 2881 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> _finish( Reference<ReadYourWritesTransaction> const& tr, Reference<TaskBucket> const& taskBucket, Reference<FutureBucket> const& futureBucket, Reference<Task> const& task ) {
															#line 2881 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new _finishActor4(tr, taskBucket, futureBucket, task));
															#line 23800 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 2903 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
};

StringRef BackupLogRangeTaskFunc::name = "file_backup_write_logs_5.2"_sr;
REGISTER_TASKFUNC(BackupLogRangeTaskFunc);

// This task stopped being used in 6.2, however the code remains here to handle upgrades.
struct EraseLogRangeTaskFunc : BackupTaskFuncBase {
	static StringRef name;
	static constexpr uint32_t version = 1;
	StringRef getName() const override { return name; };

	static struct {
		static TaskParam<Version> beginVersion() { return __FUNCTION__sr; }
		static TaskParam<Version> endVersion() { return __FUNCTION__sr; }
		static TaskParam<Key> destUidValue() { return __FUNCTION__sr; }
	} Params;

																#line 23821 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via addTask()
															#line 2920 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class AddTaskActor3>
															#line 2920 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class AddTaskActor3State {
															#line 23827 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 2920 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	AddTaskActor3State(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,UID const& logUid,TaskCompletionKey const& completionKey,Key const& destUidValue,Version const& endVersion = 0,Reference<TaskFuture> const& waitFor = Reference<TaskFuture>()) 
															#line 2920 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 2920 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : tr(tr),
															#line 2920 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskBucket(taskBucket),
															#line 2920 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   logUid(logUid),
															#line 2920 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   completionKey(completionKey),
															#line 2920 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   destUidValue(destUidValue),
															#line 2920 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   endVersion(endVersion),
															#line 2920 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   waitFor(waitFor)
															#line 23846 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("addTask", reinterpret_cast<unsigned long>(this));

	}
	~AddTaskActor3State() 
	{
		fdb_probe_actor_destroy("addTask", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 2927 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Key> __when_expr_0 = addBackupTask( EraseLogRangeTaskFunc::name, EraseLogRangeTaskFunc::version, tr, taskBucket, completionKey, BackupConfig(logUid), waitFor, [=](Reference<Task> task) { Params.beginVersion().set(task, 1); Params.endVersion().set(task, endVersion); Params.destUidValue().set(task, destUidValue); }, 0, SetValidation::False);
															#line 2927 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<AddTaskActor3*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 23863 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<AddTaskActor3*>(this)->actor_wait_state = 1;
															#line 2927 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< AddTaskActor3, 0, Key >*>(static_cast<AddTaskActor3*>(this)));
															#line 23868 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~AddTaskActor3State();
		static_cast<AddTaskActor3*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Key const& key,int loopDepth) 
	{
															#line 2944 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<AddTaskActor3*>(this)->SAV<Key>::futures) { (void)(key); this->~AddTaskActor3State(); static_cast<AddTaskActor3*>(this)->destroy(); return 0; }
															#line 23891 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<AddTaskActor3*>(this)->SAV< Key >::value()) Key(key);
		this->~AddTaskActor3State();
		static_cast<AddTaskActor3*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont1(Key && key,int loopDepth) 
	{
															#line 2944 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<AddTaskActor3*>(this)->SAV<Key>::futures) { (void)(key); this->~AddTaskActor3State(); static_cast<AddTaskActor3*>(this)->destroy(); return 0; }
															#line 23903 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<AddTaskActor3*>(this)->SAV< Key >::value()) Key(key);
		this->~AddTaskActor3State();
		static_cast<AddTaskActor3*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1when1(Key const& key,int loopDepth) 
	{
		loopDepth = a_body1cont1(key, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Key && key,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(key), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<AddTaskActor3*>(this)->actor_wait_state > 0) static_cast<AddTaskActor3*>(this)->actor_wait_state = 0;
		static_cast<AddTaskActor3*>(this)->ActorCallback< AddTaskActor3, 0, Key >::remove();

	}
	void a_callback_fire(ActorCallback< AddTaskActor3, 0, Key >*,Key const& value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< AddTaskActor3, 0, Key >*,Key && value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< AddTaskActor3, 0, Key >*,Error err) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 0);

	}
															#line 2920 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 2920 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskBucket> taskBucket;
															#line 2920 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	UID logUid;
															#line 2920 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	TaskCompletionKey completionKey;
															#line 2920 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key destUidValue;
															#line 2920 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version endVersion;
															#line 2920 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskFuture> waitFor;
															#line 23988 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via addTask()
															#line 2920 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class AddTaskActor3 final : public Actor<Key>, public ActorCallback< AddTaskActor3, 0, Key >, public FastAllocated<AddTaskActor3>, public AddTaskActor3State<AddTaskActor3> {
															#line 23993 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<AddTaskActor3>::operator new;
	using FastAllocated<AddTaskActor3>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Key>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< AddTaskActor3, 0, Key >;
															#line 2920 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	AddTaskActor3(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,UID const& logUid,TaskCompletionKey const& completionKey,Key const& destUidValue,Version const& endVersion = 0,Reference<TaskFuture> const& waitFor = Reference<TaskFuture>()) 
															#line 24004 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Key>(),
		   AddTaskActor3State<AddTaskActor3>(tr, taskBucket, logUid, completionKey, destUidValue, endVersion, waitFor)
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("addTask");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< AddTaskActor3, 0, Key >*)0, actor_cancelled()); break;
		}

	}
};
															#line 2920 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Key> addTask( Reference<ReadYourWritesTransaction> const& tr, Reference<TaskBucket> const& taskBucket, UID const& logUid, TaskCompletionKey const& completionKey, Key const& destUidValue, Version const& endVersion = 0, Reference<TaskFuture> const& waitFor = Reference<TaskFuture>() ) {
															#line 2920 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Key>(new AddTaskActor3(tr, taskBucket, logUid, completionKey, destUidValue, endVersion, waitFor));
															#line 24031 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 2946 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

																#line 24036 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via _finish()
															#line 2947 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class _finishActor5>
															#line 2947 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _finishActor5State {
															#line 24042 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 2947 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_finishActor5State(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 2947 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 2947 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : tr(tr),
															#line 2947 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskBucket(taskBucket),
															#line 2947 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   futureBucket(futureBucket),
															#line 2947 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   task(task),
															#line 2951 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskFuture(futureBucket->unpack(task->params[Task::reservedTaskParamKeyDone]))
															#line 24057 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("_finish", reinterpret_cast<unsigned long>(this));

	}
	~_finishActor5State() 
	{
		fdb_probe_actor_destroy("_finish", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 2953 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_0 = checkTaskVersion(tr->getDatabase(), task, EraseLogRangeTaskFunc::name, EraseLogRangeTaskFunc::version);
															#line 2953 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_finishActor5*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 24074 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<_finishActor5*>(this)->actor_wait_state = 1;
															#line 2953 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< _finishActor5, 0, Void >*>(static_cast<_finishActor5*>(this)));
															#line 24079 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~_finishActor5State();
		static_cast<_finishActor5*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Void const& _,int loopDepth) 
	{
															#line 2955 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		endVersion = Params.endVersion().get(task);
															#line 2956 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		destUidValue = Params.destUidValue().get(task);
															#line 2958 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config = BackupConfig(task);
															#line 2959 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		logUidValue = config.getUidAsKey();
															#line 2961 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = taskFuture->set(tr, taskBucket) && taskBucket->finish(tr, task) && eraseLogData( tr, logUidValue, destUidValue, endVersion != 0 ? Optional<Version>(endVersion) : Optional<Version>());
															#line 2961 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor5*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 24112 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<_finishActor5*>(this)->actor_wait_state = 2;
															#line 2961 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< _finishActor5, 1, Void >*>(static_cast<_finishActor5*>(this)));
															#line 24117 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Void && _,int loopDepth) 
	{
															#line 2955 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		endVersion = Params.endVersion().get(task);
															#line 2956 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		destUidValue = Params.destUidValue().get(task);
															#line 2958 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config = BackupConfig(task);
															#line 2959 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		logUidValue = config.getUidAsKey();
															#line 2961 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = taskFuture->set(tr, taskBucket) && taskBucket->finish(tr, task) && eraseLogData( tr, logUidValue, destUidValue, endVersion != 0 ? Optional<Version>(endVersion) : Optional<Version>());
															#line 2961 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor5*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 24136 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<_finishActor5*>(this)->actor_wait_state = 2;
															#line 2961 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< _finishActor5, 1, Void >*>(static_cast<_finishActor5*>(this)));
															#line 24141 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<_finishActor5*>(this)->actor_wait_state > 0) static_cast<_finishActor5*>(this)->actor_wait_state = 0;
		static_cast<_finishActor5*>(this)->ActorCallback< _finishActor5, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor5, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< _finishActor5, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< _finishActor5, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont2(Void const& _,int loopDepth) 
	{
															#line 2965 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_finishActor5*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_finishActor5State(); static_cast<_finishActor5*>(this)->destroy(); return 0; }
															#line 24213 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_finishActor5*>(this)->SAV< Void >::value()) Void(Void());
		this->~_finishActor5State();
		static_cast<_finishActor5*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont2(Void && _,int loopDepth) 
	{
															#line 2965 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_finishActor5*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_finishActor5State(); static_cast<_finishActor5*>(this)->destroy(); return 0; }
															#line 24225 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_finishActor5*>(this)->SAV< Void >::value()) Void(Void());
		this->~_finishActor5State();
		static_cast<_finishActor5*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<_finishActor5*>(this)->actor_wait_state > 0) static_cast<_finishActor5*>(this)->actor_wait_state = 0;
		static_cast<_finishActor5*>(this)->ActorCallback< _finishActor5, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor5, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< _finishActor5, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< _finishActor5, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 1);

	}
															#line 2947 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 2947 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskBucket> taskBucket;
															#line 2947 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<FutureBucket> futureBucket;
															#line 2947 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> task;
															#line 2951 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskFuture> taskFuture;
															#line 2955 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version endVersion;
															#line 2956 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key destUidValue;
															#line 2958 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	BackupConfig config;
															#line 2959 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key logUidValue;
															#line 24314 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via _finish()
															#line 2947 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _finishActor5 final : public Actor<Void>, public ActorCallback< _finishActor5, 0, Void >, public ActorCallback< _finishActor5, 1, Void >, public FastAllocated<_finishActor5>, public _finishActor5State<_finishActor5> {
															#line 24319 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<_finishActor5>::operator new;
	using FastAllocated<_finishActor5>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< _finishActor5, 0, Void >;
friend struct ActorCallback< _finishActor5, 1, Void >;
															#line 2947 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_finishActor5(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 24331 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   _finishActor5State<_finishActor5>(tr, taskBucket, futureBucket, task)
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("_finish");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< _finishActor5, 0, Void >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< _finishActor5, 1, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 2947 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> _finish( Reference<ReadYourWritesTransaction> const& tr, Reference<TaskBucket> const& taskBucket, Reference<FutureBucket> const& futureBucket, Reference<Task> const& task ) {
															#line 2947 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new _finishActor5(tr, taskBucket, futureBucket, task));
															#line 24359 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 2967 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

	Future<Void> execute(Database cx,
	                     Reference<TaskBucket> tb,
	                     Reference<FutureBucket> fb,
	                     Reference<Task> task) override {
		return Void();
	};
	Future<Void> finish(Reference<ReadYourWritesTransaction> tr,
	                    Reference<TaskBucket> tb,
	                    Reference<FutureBucket> fb,
	                    Reference<Task> task) override {
		return _finish(tr, tb, fb, task);
	};
};
StringRef EraseLogRangeTaskFunc::name = "file_backup_erase_logs_5.2"_sr;
REGISTER_TASKFUNC(EraseLogRangeTaskFunc);

struct BackupLogsDispatchTask : BackupTaskFuncBase {
	static StringRef name;
	static constexpr uint32_t version = 1;

	static struct {
		static TaskParam<Version> prevBeginVersion() { return __FUNCTION__sr; }
		static TaskParam<Version> beginVersion() { return __FUNCTION__sr; }
	} Params;

																#line 24389 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via _finish()
															#line 2993 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class _finishActor6>
															#line 2993 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _finishActor6State {
															#line 24395 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 2993 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_finishActor6State(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 2993 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 2993 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : tr(tr),
															#line 2993 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskBucket(taskBucket),
															#line 2993 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   futureBucket(futureBucket),
															#line 2993 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   task(task)
															#line 24408 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("_finish", reinterpret_cast<unsigned long>(this));

	}
	~_finishActor6State() 
	{
		fdb_probe_actor_destroy("_finish", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 2997 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_0 = checkTaskVersion(tr->getDatabase(), task, BackupLogsDispatchTask::name, BackupLogsDispatchTask::version);
															#line 2997 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_finishActor6*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 24425 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<_finishActor6*>(this)->actor_wait_state = 1;
															#line 2997 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< _finishActor6, 0, Void >*>(static_cast<_finishActor6*>(this)));
															#line 24430 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~_finishActor6State();
		static_cast<_finishActor6*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Void const& _,int loopDepth) 
	{
															#line 2999 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 3000 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 3002 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		onDone = task->getDoneFuture(futureBucket);
															#line 3003 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		prevBeginVersion = Params.prevBeginVersion().get(task);
															#line 3004 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		beginVersion = Params.beginVersion().get(task);
															#line 3005 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config = BackupConfig(task);
															#line 3006 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config.latestLogEndVersion().set(tr, beginVersion);
															#line 3008 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		stopWhenDone = bool();
															#line 3009 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restorableVersion = Optional<Version>();
															#line 3010 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		backupState = EBackupState();
															#line 3011 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tag = Optional<std::string>();
															#line 3012 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		latestSnapshotEndVersion = Optional<Version>();
															#line 3013 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		partitionedLog = Optional<bool>();
															#line 3015 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = store(stopWhenDone, config.stopWhenDone().getOrThrow(tr)) && store(restorableVersion, config.getLatestRestorableVersion(tr)) && store(backupState, config.stateEnum().getOrThrow(tr)) && store(tag, config.tag().get(tr)) && store(latestSnapshotEndVersion, config.latestSnapshotEndVersion().get(tr)) && store(partitionedLog, config.partitionedLogEnabled().get(tr));
															#line 3015 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor6*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 24481 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<_finishActor6*>(this)->actor_wait_state = 2;
															#line 3015 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< _finishActor6, 1, Void >*>(static_cast<_finishActor6*>(this)));
															#line 24486 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Void && _,int loopDepth) 
	{
															#line 2999 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 3000 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 3002 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		onDone = task->getDoneFuture(futureBucket);
															#line 3003 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		prevBeginVersion = Params.prevBeginVersion().get(task);
															#line 3004 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		beginVersion = Params.beginVersion().get(task);
															#line 3005 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config = BackupConfig(task);
															#line 3006 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config.latestLogEndVersion().set(tr, beginVersion);
															#line 3008 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		stopWhenDone = bool();
															#line 3009 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restorableVersion = Optional<Version>();
															#line 3010 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		backupState = EBackupState();
															#line 3011 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tag = Optional<std::string>();
															#line 3012 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		latestSnapshotEndVersion = Optional<Version>();
															#line 3013 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		partitionedLog = Optional<bool>();
															#line 3015 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = store(stopWhenDone, config.stopWhenDone().getOrThrow(tr)) && store(restorableVersion, config.getLatestRestorableVersion(tr)) && store(backupState, config.stateEnum().getOrThrow(tr)) && store(tag, config.tag().get(tr)) && store(latestSnapshotEndVersion, config.latestSnapshotEndVersion().get(tr)) && store(partitionedLog, config.partitionedLogEnabled().get(tr));
															#line 3015 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor6*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 24523 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<_finishActor6*>(this)->actor_wait_state = 2;
															#line 3015 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< _finishActor6, 1, Void >*>(static_cast<_finishActor6*>(this)));
															#line 24528 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<_finishActor6*>(this)->actor_wait_state > 0) static_cast<_finishActor6*>(this)->actor_wait_state = 0;
		static_cast<_finishActor6*>(this)->ActorCallback< _finishActor6, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor6, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< _finishActor6, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< _finishActor6, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont2(Void const& _,int loopDepth) 
	{
															#line 3022 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (restorableVersion.present() && tag.present())
															#line 24600 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3023 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			FileBackupAgent().setLastRestorable(tr, StringRef(tag.get()), restorableVersion.get());
															#line 24604 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 3027 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (restorableVersion.present() && backupState != EBackupState::STATE_RUNNING_DIFFERENTIAL)
															#line 24608 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3028 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			config.stateEnum().set(tr, EBackupState::STATE_RUNNING_DIFFERENTIAL);
															#line 24612 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 3032 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (stopWhenDone && restorableVersion.present())
															#line 24616 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3033 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_2 = onDone->set(tr, taskBucket) && taskBucket->finish(tr, task);
															#line 3033 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_finishActor6*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 24622 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont2when1(__when_expr_2.get(), loopDepth); };
			static_cast<_finishActor6*>(this)->actor_wait_state = 3;
															#line 3033 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< _finishActor6, 2, Void >*>(static_cast<_finishActor6*>(this)));
															#line 24627 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont3(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont2(Void && _,int loopDepth) 
	{
															#line 3022 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (restorableVersion.present() && tag.present())
															#line 24641 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3023 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			FileBackupAgent().setLastRestorable(tr, StringRef(tag.get()), restorableVersion.get());
															#line 24645 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 3027 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (restorableVersion.present() && backupState != EBackupState::STATE_RUNNING_DIFFERENTIAL)
															#line 24649 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3028 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			config.stateEnum().set(tr, EBackupState::STATE_RUNNING_DIFFERENTIAL);
															#line 24653 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 3032 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (stopWhenDone && restorableVersion.present())
															#line 24657 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3033 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_2 = onDone->set(tr, taskBucket) && taskBucket->finish(tr, task);
															#line 3033 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_finishActor6*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 24663 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont2when1(__when_expr_2.get(), loopDepth); };
			static_cast<_finishActor6*>(this)->actor_wait_state = 3;
															#line 3033 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< _finishActor6, 2, Void >*>(static_cast<_finishActor6*>(this)));
															#line 24668 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont3(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<_finishActor6*>(this)->actor_wait_state > 0) static_cast<_finishActor6*>(this)->actor_wait_state = 0;
		static_cast<_finishActor6*>(this)->ActorCallback< _finishActor6, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor6, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< _finishActor6, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< _finishActor6, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont3(int loopDepth) 
	{
															#line 3043 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		endVersion = std::max<Version>(tr->getReadVersion().get() + 1, beginVersion + (CLIENT_KNOBS->BACKUP_MAX_LOG_RANGES - 1) * CLIENT_KNOBS->LOG_RANGE_BLOCK_SIZE);
															#line 3047 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FileBackupLogDispatch") .suppressFor(60) .detail("BeginVersion", beginVersion) .detail("EndVersion", endVersion) .detail("RestorableVersion", restorableVersion.orDefault(-1));
															#line 3053 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		logDispatchBatchFuture = futureBucket->future(tr);
															#line 3056 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		priority = latestSnapshotEndVersion.present() ? 1 : 0;
															#line 3058 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!partitionedLog.present() || !partitionedLog.get())
															#line 24753 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3061 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_3 = success(BackupLogRangeTaskFunc::addTask(tr, taskBucket, task, priority, beginVersion, endVersion, TaskCompletionKey::joinWith(logDispatchBatchFuture)));
															#line 3061 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_finishActor6*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 24759 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1cont3when1(__when_expr_3.get(), loopDepth); };
			static_cast<_finishActor6*>(this)->actor_wait_state = 4;
															#line 3061 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< _finishActor6, 3, Void >*>(static_cast<_finishActor6*>(this)));
															#line 24764 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
															#line 3084 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			Version scheduledVersion = tr->getReadVersion().get() + CLIENT_KNOBS->BACKUP_POLL_PROGRESS_SECONDS * CLIENT_KNOBS->VERSIONS_PER_SECOND;
															#line 3086 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_7 = success(BackupLogsDispatchTask::addTask(tr, taskBucket, task, 1, beginVersion, endVersion, TaskCompletionKey::signal(onDone), Reference<TaskFuture>(), scheduledVersion));
															#line 3086 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_finishActor6*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 24775 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_7.isReady()) { if (__when_expr_7.isError()) return a_body1Catch1(__when_expr_7.getError(), loopDepth); else return a_body1cont3when2(__when_expr_7.get(), loopDepth); };
			static_cast<_finishActor6*>(this)->actor_wait_state = 8;
															#line 3086 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_7.addCallbackAndClear(static_cast<ActorCallback< _finishActor6, 7, Void >*>(static_cast<_finishActor6*>(this)));
															#line 24780 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}

		return loopDepth;
	}
	int a_body1cont6(Void const& _,int loopDepth) 
	{
															#line 3035 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FileBackupLogsDispatchDone") .detail("BackupUID", config.getUid()) .detail("BeginVersion", beginVersion) .detail("RestorableVersion", restorableVersion.orDefault(-1));
															#line 3040 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_finishActor6*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_finishActor6State(); static_cast<_finishActor6*>(this)->destroy(); return 0; }
															#line 24792 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_finishActor6*>(this)->SAV< Void >::value()) Void(Void());
		this->~_finishActor6State();
		static_cast<_finishActor6*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont6(Void && _,int loopDepth) 
	{
															#line 3035 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FileBackupLogsDispatchDone") .detail("BackupUID", config.getUid()) .detail("BeginVersion", beginVersion) .detail("RestorableVersion", restorableVersion.orDefault(-1));
															#line 3040 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_finishActor6*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_finishActor6State(); static_cast<_finishActor6*>(this)->destroy(); return 0; }
															#line 24806 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_finishActor6*>(this)->SAV< Void >::value()) Void(Void());
		this->~_finishActor6State();
		static_cast<_finishActor6*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont6(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont6(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<_finishActor6*>(this)->actor_wait_state > 0) static_cast<_finishActor6*>(this)->actor_wait_state = 0;
		static_cast<_finishActor6*>(this)->ActorCallback< _finishActor6, 2, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor6, 2, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< _finishActor6, 2, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< _finishActor6, 2, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 2);

	}
	int a_body1cont8(int loopDepth) 
	{
															#line 3097 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_8 = taskBucket->finish(tr, task);
															#line 3097 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor6*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 24883 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_8.isReady()) { if (__when_expr_8.isError()) return a_body1Catch1(__when_expr_8.getError(), loopDepth); else return a_body1cont8when1(__when_expr_8.get(), loopDepth); };
		static_cast<_finishActor6*>(this)->actor_wait_state = 9;
															#line 3097 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_8.addCallbackAndClear(static_cast<ActorCallback< _finishActor6, 8, Void >*>(static_cast<_finishActor6*>(this)));
															#line 24888 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont9(Void const& _,int loopDepth) 
	{
															#line 3068 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_4 = success(BackupLogsDispatchTask::addTask(tr, taskBucket, task, priority, beginVersion, endVersion, TaskCompletionKey::signal(onDone), logDispatchBatchFuture));
															#line 3068 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor6*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 24899 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1cont9when1(__when_expr_4.get(), loopDepth); };
		static_cast<_finishActor6*>(this)->actor_wait_state = 5;
															#line 3068 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< _finishActor6, 4, Void >*>(static_cast<_finishActor6*>(this)));
															#line 24904 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont9(Void && _,int loopDepth) 
	{
															#line 3068 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_4 = success(BackupLogsDispatchTask::addTask(tr, taskBucket, task, priority, beginVersion, endVersion, TaskCompletionKey::signal(onDone), logDispatchBatchFuture));
															#line 3068 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor6*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 24915 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1cont9when1(__when_expr_4.get(), loopDepth); };
		static_cast<_finishActor6*>(this)->actor_wait_state = 5;
															#line 3068 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< _finishActor6, 4, Void >*>(static_cast<_finishActor6*>(this)));
															#line 24920 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont3when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont9(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont3when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont9(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose4() 
	{
		if (static_cast<_finishActor6*>(this)->actor_wait_state > 0) static_cast<_finishActor6*>(this)->actor_wait_state = 0;
		static_cast<_finishActor6*>(this)->ActorCallback< _finishActor6, 3, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor6, 3, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont3when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_fire(ActorCallback< _finishActor6, 3, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont3when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_error(ActorCallback< _finishActor6, 3, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 3);

	}
	int a_body1cont10(Void const& _,int loopDepth) 
	{
															#line 3078 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (prevBeginVersion > 0)
															#line 24992 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3079 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Key> __when_expr_5 = config.destUidValue().getOrThrow(tr);
															#line 3079 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_finishActor6*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 24998 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_5.isReady()) { if (__when_expr_5.isError()) return a_body1Catch1(__when_expr_5.getError(), loopDepth); else return a_body1cont10when1(__when_expr_5.get(), loopDepth); };
			static_cast<_finishActor6*>(this)->actor_wait_state = 6;
															#line 3079 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_5.addCallbackAndClear(static_cast<ActorCallback< _finishActor6, 5, Key >*>(static_cast<_finishActor6*>(this)));
															#line 25003 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont10cont1(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont10(Void && _,int loopDepth) 
	{
															#line 3078 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (prevBeginVersion > 0)
															#line 25017 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3079 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Key> __when_expr_5 = config.destUidValue().getOrThrow(tr);
															#line 3079 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_finishActor6*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 25023 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_5.isReady()) { if (__when_expr_5.isError()) return a_body1Catch1(__when_expr_5.getError(), loopDepth); else return a_body1cont10when1(__when_expr_5.get(), loopDepth); };
			static_cast<_finishActor6*>(this)->actor_wait_state = 6;
															#line 3079 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_5.addCallbackAndClear(static_cast<ActorCallback< _finishActor6, 5, Key >*>(static_cast<_finishActor6*>(this)));
															#line 25028 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont10cont1(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont9when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont10(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont9when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont10(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose5() 
	{
		if (static_cast<_finishActor6*>(this)->actor_wait_state > 0) static_cast<_finishActor6*>(this)->actor_wait_state = 0;
		static_cast<_finishActor6*>(this)->ActorCallback< _finishActor6, 4, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor6, 4, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont9when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_fire(ActorCallback< _finishActor6, 4, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont9when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_error(ActorCallback< _finishActor6, 4, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 4);

	}
	int a_body1cont10cont1(int loopDepth) 
	{
		loopDepth = a_body1cont8(loopDepth);

		return loopDepth;
	}
	int a_body1cont10cont2(int loopDepth) 
	{
															#line 3080 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_6 = eraseLogData(tr, config.getUidAsKey(), destUidValue, Optional<Version>(beginVersion));
															#line 3080 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor6*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 25113 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_6.isReady()) { if (__when_expr_6.isError()) return a_body1Catch1(__when_expr_6.getError(), loopDepth); else return a_body1cont10cont2when1(__when_expr_6.get(), loopDepth); };
		static_cast<_finishActor6*>(this)->actor_wait_state = 7;
															#line 3080 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_6.addCallbackAndClear(static_cast<ActorCallback< _finishActor6, 6, Void >*>(static_cast<_finishActor6*>(this)));
															#line 25118 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont10when1(Key const& __destUidValue,int loopDepth) 
	{
															#line 3079 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		destUidValue = __destUidValue;
															#line 25127 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont10cont2(loopDepth);

		return loopDepth;
	}
	int a_body1cont10when1(Key && __destUidValue,int loopDepth) 
	{
		destUidValue = std::move(__destUidValue);
		loopDepth = a_body1cont10cont2(loopDepth);

		return loopDepth;
	}
	void a_exitChoose6() 
	{
		if (static_cast<_finishActor6*>(this)->actor_wait_state > 0) static_cast<_finishActor6*>(this)->actor_wait_state = 0;
		static_cast<_finishActor6*>(this)->ActorCallback< _finishActor6, 5, Key >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor6, 5, Key >*,Key const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont10when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_fire(ActorCallback< _finishActor6, 5, Key >*,Key && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont10when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_error(ActorCallback< _finishActor6, 5, Key >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 5);

	}
	int a_body1cont10cont3(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont10cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont10cont3(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont10cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont10cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont10cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont10cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont10cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose7() 
	{
		if (static_cast<_finishActor6*>(this)->actor_wait_state > 0) static_cast<_finishActor6*>(this)->actor_wait_state = 0;
		static_cast<_finishActor6*>(this)->ActorCallback< _finishActor6, 6, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor6, 6, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1cont10cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 6);

	}
	void a_callback_fire(ActorCallback< _finishActor6, 6, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1cont10cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 6);

	}
	void a_callback_error(ActorCallback< _finishActor6, 6, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 6);

	}
	int a_body1cont11(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont8(loopDepth);

		return loopDepth;
	}
	int a_body1cont11(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont8(loopDepth);

		return loopDepth;
	}
	int a_body1cont3when2(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont11(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont3when2(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont11(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose8() 
	{
		if (static_cast<_finishActor6*>(this)->actor_wait_state > 0) static_cast<_finishActor6*>(this)->actor_wait_state = 0;
		static_cast<_finishActor6*>(this)->ActorCallback< _finishActor6, 7, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor6, 7, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1cont3when2(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 7);

	}
	void a_callback_fire(ActorCallback< _finishActor6, 7, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1cont3when2(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 7);

	}
	void a_callback_error(ActorCallback< _finishActor6, 7, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 7);

	}
	int a_body1cont12(Void const& _,int loopDepth) 
	{
															#line 3099 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FileBackupLogsDispatchContinuing") .suppressFor(60) .detail("BackupUID", config.getUid()) .detail("BeginVersion", beginVersion) .detail("EndVersion", endVersion);
															#line 3105 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_finishActor6*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_finishActor6State(); static_cast<_finishActor6*>(this)->destroy(); return 0; }
															#line 25346 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_finishActor6*>(this)->SAV< Void >::value()) Void(Void());
		this->~_finishActor6State();
		static_cast<_finishActor6*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont12(Void && _,int loopDepth) 
	{
															#line 3099 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FileBackupLogsDispatchContinuing") .suppressFor(60) .detail("BackupUID", config.getUid()) .detail("BeginVersion", beginVersion) .detail("EndVersion", endVersion);
															#line 3105 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_finishActor6*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_finishActor6State(); static_cast<_finishActor6*>(this)->destroy(); return 0; }
															#line 25360 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_finishActor6*>(this)->SAV< Void >::value()) Void(Void());
		this->~_finishActor6State();
		static_cast<_finishActor6*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont8when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont12(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont8when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont12(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose9() 
	{
		if (static_cast<_finishActor6*>(this)->actor_wait_state > 0) static_cast<_finishActor6*>(this)->actor_wait_state = 0;
		static_cast<_finishActor6*>(this)->ActorCallback< _finishActor6, 8, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor6, 8, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 8);
		a_exitChoose9();
		try {
			a_body1cont8when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 8);

	}
	void a_callback_fire(ActorCallback< _finishActor6, 8, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 8);
		a_exitChoose9();
		try {
			a_body1cont8when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 8);

	}
	void a_callback_error(ActorCallback< _finishActor6, 8, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 8);
		a_exitChoose9();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 8);

	}
															#line 2993 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 2993 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskBucket> taskBucket;
															#line 2993 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<FutureBucket> futureBucket;
															#line 2993 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> task;
															#line 3002 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskFuture> onDone;
															#line 3003 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version prevBeginVersion;
															#line 3004 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version beginVersion;
															#line 3005 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	BackupConfig config;
															#line 3008 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	bool stopWhenDone;
															#line 3009 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<Version> restorableVersion;
															#line 3010 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	EBackupState backupState;
															#line 3011 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<std::string> tag;
															#line 3012 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<Version> latestSnapshotEndVersion;
															#line 3013 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<bool> partitionedLog;
															#line 3043 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version endVersion;
															#line 3053 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskFuture> logDispatchBatchFuture;
															#line 3056 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int priority;
															#line 3079 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key destUidValue;
															#line 25467 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via _finish()
															#line 2993 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _finishActor6 final : public Actor<Void>, public ActorCallback< _finishActor6, 0, Void >, public ActorCallback< _finishActor6, 1, Void >, public ActorCallback< _finishActor6, 2, Void >, public ActorCallback< _finishActor6, 3, Void >, public ActorCallback< _finishActor6, 4, Void >, public ActorCallback< _finishActor6, 5, Key >, public ActorCallback< _finishActor6, 6, Void >, public ActorCallback< _finishActor6, 7, Void >, public ActorCallback< _finishActor6, 8, Void >, public FastAllocated<_finishActor6>, public _finishActor6State<_finishActor6> {
															#line 25472 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<_finishActor6>::operator new;
	using FastAllocated<_finishActor6>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< _finishActor6, 0, Void >;
friend struct ActorCallback< _finishActor6, 1, Void >;
friend struct ActorCallback< _finishActor6, 2, Void >;
friend struct ActorCallback< _finishActor6, 3, Void >;
friend struct ActorCallback< _finishActor6, 4, Void >;
friend struct ActorCallback< _finishActor6, 5, Key >;
friend struct ActorCallback< _finishActor6, 6, Void >;
friend struct ActorCallback< _finishActor6, 7, Void >;
friend struct ActorCallback< _finishActor6, 8, Void >;
															#line 2993 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_finishActor6(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 25491 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   _finishActor6State<_finishActor6>(tr, taskBucket, futureBucket, task)
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("_finish");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< _finishActor6, 0, Void >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< _finishActor6, 1, Void >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< _finishActor6, 2, Void >*)0, actor_cancelled()); break;
		case 4: this->a_callback_error((ActorCallback< _finishActor6, 3, Void >*)0, actor_cancelled()); break;
		case 5: this->a_callback_error((ActorCallback< _finishActor6, 4, Void >*)0, actor_cancelled()); break;
		case 6: this->a_callback_error((ActorCallback< _finishActor6, 5, Key >*)0, actor_cancelled()); break;
		case 7: this->a_callback_error((ActorCallback< _finishActor6, 6, Void >*)0, actor_cancelled()); break;
		case 8: this->a_callback_error((ActorCallback< _finishActor6, 7, Void >*)0, actor_cancelled()); break;
		case 9: this->a_callback_error((ActorCallback< _finishActor6, 8, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 2993 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> _finish( Reference<ReadYourWritesTransaction> const& tr, Reference<TaskBucket> const& taskBucket, Reference<FutureBucket> const& futureBucket, Reference<Task> const& task ) {
															#line 2993 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new _finishActor6(tr, taskBucket, futureBucket, task));
															#line 25526 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 3107 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

																#line 25531 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via addTask()
															#line 3108 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class AddTaskActor4>
															#line 3108 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class AddTaskActor4State {
															#line 25537 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 3108 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	AddTaskActor4State(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<Task> const& parentTask,int const& priority,Version const& prevBeginVersion,Version const& beginVersion,TaskCompletionKey const& completionKey,Reference<TaskFuture> const& waitFor = Reference<TaskFuture>(),Version const& scheduledVersion = invalidVersion) 
															#line 3108 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 3108 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : tr(tr),
															#line 3108 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskBucket(taskBucket),
															#line 3108 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   parentTask(parentTask),
															#line 3108 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   priority(priority),
															#line 3108 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   prevBeginVersion(prevBeginVersion),
															#line 3108 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   beginVersion(beginVersion),
															#line 3108 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   completionKey(completionKey),
															#line 3108 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   waitFor(waitFor),
															#line 3108 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   scheduledVersion(scheduledVersion)
															#line 25560 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("addTask", reinterpret_cast<unsigned long>(this));

	}
	~AddTaskActor4State() 
	{
		fdb_probe_actor_destroy("addTask", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 3117 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Key> __when_expr_0 = addBackupTask( BackupLogsDispatchTask::name, BackupLogsDispatchTask::version, tr, taskBucket, completionKey, BackupConfig(parentTask), waitFor, [=](Reference<Task> task) { Params.prevBeginVersion().set(task, prevBeginVersion); Params.beginVersion().set(task, beginVersion); if (scheduledVersion != invalidVersion) { ReservedTaskParams::scheduledVersion().set(task, scheduledVersion); } }, priority);
															#line 3117 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<AddTaskActor4*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 25577 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<AddTaskActor4*>(this)->actor_wait_state = 1;
															#line 3117 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< AddTaskActor4, 0, Key >*>(static_cast<AddTaskActor4*>(this)));
															#line 25582 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~AddTaskActor4State();
		static_cast<AddTaskActor4*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Key const& key,int loopDepth) 
	{
															#line 3133 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<AddTaskActor4*>(this)->SAV<Key>::futures) { (void)(key); this->~AddTaskActor4State(); static_cast<AddTaskActor4*>(this)->destroy(); return 0; }
															#line 25605 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<AddTaskActor4*>(this)->SAV< Key >::value()) Key(key);
		this->~AddTaskActor4State();
		static_cast<AddTaskActor4*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont1(Key && key,int loopDepth) 
	{
															#line 3133 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<AddTaskActor4*>(this)->SAV<Key>::futures) { (void)(key); this->~AddTaskActor4State(); static_cast<AddTaskActor4*>(this)->destroy(); return 0; }
															#line 25617 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<AddTaskActor4*>(this)->SAV< Key >::value()) Key(key);
		this->~AddTaskActor4State();
		static_cast<AddTaskActor4*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1when1(Key const& key,int loopDepth) 
	{
		loopDepth = a_body1cont1(key, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Key && key,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(key), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<AddTaskActor4*>(this)->actor_wait_state > 0) static_cast<AddTaskActor4*>(this)->actor_wait_state = 0;
		static_cast<AddTaskActor4*>(this)->ActorCallback< AddTaskActor4, 0, Key >::remove();

	}
	void a_callback_fire(ActorCallback< AddTaskActor4, 0, Key >*,Key const& value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< AddTaskActor4, 0, Key >*,Key && value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< AddTaskActor4, 0, Key >*,Error err) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 0);

	}
															#line 3108 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 3108 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskBucket> taskBucket;
															#line 3108 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> parentTask;
															#line 3108 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int priority;
															#line 3108 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version prevBeginVersion;
															#line 3108 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version beginVersion;
															#line 3108 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	TaskCompletionKey completionKey;
															#line 3108 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskFuture> waitFor;
															#line 3108 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version scheduledVersion;
															#line 25706 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via addTask()
															#line 3108 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class AddTaskActor4 final : public Actor<Key>, public ActorCallback< AddTaskActor4, 0, Key >, public FastAllocated<AddTaskActor4>, public AddTaskActor4State<AddTaskActor4> {
															#line 25711 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<AddTaskActor4>::operator new;
	using FastAllocated<AddTaskActor4>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Key>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< AddTaskActor4, 0, Key >;
															#line 3108 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	AddTaskActor4(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<Task> const& parentTask,int const& priority,Version const& prevBeginVersion,Version const& beginVersion,TaskCompletionKey const& completionKey,Reference<TaskFuture> const& waitFor = Reference<TaskFuture>(),Version const& scheduledVersion = invalidVersion) 
															#line 25722 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Key>(),
		   AddTaskActor4State<AddTaskActor4>(tr, taskBucket, parentTask, priority, prevBeginVersion, beginVersion, completionKey, waitFor, scheduledVersion)
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("addTask");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< AddTaskActor4, 0, Key >*)0, actor_cancelled()); break;
		}

	}
};
															#line 3108 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Key> addTask( Reference<ReadYourWritesTransaction> const& tr, Reference<TaskBucket> const& taskBucket, Reference<Task> const& parentTask, int const& priority, Version const& prevBeginVersion, Version const& beginVersion, TaskCompletionKey const& completionKey, Reference<TaskFuture> const& waitFor = Reference<TaskFuture>(), Version const& scheduledVersion = invalidVersion ) {
															#line 3108 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Key>(new AddTaskActor4(tr, taskBucket, parentTask, priority, prevBeginVersion, beginVersion, completionKey, waitFor, scheduledVersion));
															#line 25749 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 3135 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

	StringRef getName() const override { return name; };

	Future<Void> execute(Database cx,
	                     Reference<TaskBucket> tb,
	                     Reference<FutureBucket> fb,
	                     Reference<Task> task) override {
		return Void();
	};
	Future<Void> finish(Reference<ReadYourWritesTransaction> tr,
	                    Reference<TaskBucket> tb,
	                    Reference<FutureBucket> fb,
	                    Reference<Task> task) override {
		return _finish(tr, tb, fb, task);
	};
};
StringRef BackupLogsDispatchTask::name = "file_backup_dispatch_logs_5.2"_sr;
REGISTER_TASKFUNC(BackupLogsDispatchTask);

struct FileBackupFinishedTask : BackupTaskFuncBase {
	static StringRef name;
	static constexpr uint32_t version = 1;

	StringRef getName() const override { return name; };

																#line 25778 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via _finish()
															#line 3160 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class _finishActor7>
															#line 3160 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _finishActor7State {
															#line 25784 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 3160 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_finishActor7State(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 3160 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 3160 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : tr(tr),
															#line 3160 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskBucket(taskBucket),
															#line 3160 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   futureBucket(futureBucket),
															#line 3160 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   task(task)
															#line 25797 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("_finish", reinterpret_cast<unsigned long>(this));

	}
	~_finishActor7State() 
	{
		fdb_probe_actor_destroy("_finish", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 3164 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_0 = checkTaskVersion(tr->getDatabase(), task, FileBackupFinishedTask::name, FileBackupFinishedTask::version);
															#line 3164 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_finishActor7*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 25814 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<_finishActor7*>(this)->actor_wait_state = 1;
															#line 3164 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< _finishActor7, 0, Void >*>(static_cast<_finishActor7*>(this)));
															#line 25819 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~_finishActor7State();
		static_cast<_finishActor7*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Void const& _,int loopDepth) 
	{
															#line 3166 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		backup = BackupConfig(task);
															#line 3167 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		uid = backup.getUid();
															#line 3169 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->setOption(FDBTransactionOptions::COMMIT_ON_FIRST_PROXY);
															#line 3170 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Key> __when_expr_1 = backup.destUidValue().getOrThrow(tr);
															#line 3170 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor7*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 25850 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<_finishActor7*>(this)->actor_wait_state = 2;
															#line 3170 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< _finishActor7, 1, Key >*>(static_cast<_finishActor7*>(this)));
															#line 25855 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Void && _,int loopDepth) 
	{
															#line 3166 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		backup = BackupConfig(task);
															#line 3167 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		uid = backup.getUid();
															#line 3169 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->setOption(FDBTransactionOptions::COMMIT_ON_FIRST_PROXY);
															#line 3170 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Key> __when_expr_1 = backup.destUidValue().getOrThrow(tr);
															#line 3170 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor7*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 25872 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<_finishActor7*>(this)->actor_wait_state = 2;
															#line 3170 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< _finishActor7, 1, Key >*>(static_cast<_finishActor7*>(this)));
															#line 25877 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<_finishActor7*>(this)->actor_wait_state > 0) static_cast<_finishActor7*>(this)->actor_wait_state = 0;
		static_cast<_finishActor7*>(this)->ActorCallback< _finishActor7, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor7, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< _finishActor7, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< _finishActor7, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont2(int loopDepth) 
	{
															#line 3172 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_2 = eraseLogData(tr, backup.getUidAsKey(), destUidValue) && clearBackupStartID(tr, uid);
															#line 3172 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor7*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 25951 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont2when1(__when_expr_2.get(), loopDepth); };
		static_cast<_finishActor7*>(this)->actor_wait_state = 3;
															#line 3172 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< _finishActor7, 2, Void >*>(static_cast<_finishActor7*>(this)));
															#line 25956 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1when1(Key const& __destUidValue,int loopDepth) 
	{
															#line 3170 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		destUidValue = __destUidValue;
															#line 25965 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont2(loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Key && __destUidValue,int loopDepth) 
	{
		destUidValue = std::move(__destUidValue);
		loopDepth = a_body1cont2(loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<_finishActor7*>(this)->actor_wait_state > 0) static_cast<_finishActor7*>(this)->actor_wait_state = 0;
		static_cast<_finishActor7*>(this)->ActorCallback< _finishActor7, 1, Key >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor7, 1, Key >*,Key const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< _finishActor7, 1, Key >*,Key && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< _finishActor7, 1, Key >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont3(Void const& _,int loopDepth) 
	{
															#line 3174 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		backup.stateEnum().set(tr, EBackupState::STATE_COMPLETED);
															#line 3176 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_3 = taskBucket->finish(tr, task);
															#line 3176 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor7*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 26036 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1cont3when1(__when_expr_3.get(), loopDepth); };
		static_cast<_finishActor7*>(this)->actor_wait_state = 4;
															#line 3176 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< _finishActor7, 3, Void >*>(static_cast<_finishActor7*>(this)));
															#line 26041 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont3(Void && _,int loopDepth) 
	{
															#line 3174 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		backup.stateEnum().set(tr, EBackupState::STATE_COMPLETED);
															#line 3176 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_3 = taskBucket->finish(tr, task);
															#line 3176 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor7*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 26054 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1cont3when1(__when_expr_3.get(), loopDepth); };
		static_cast<_finishActor7*>(this)->actor_wait_state = 4;
															#line 3176 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< _finishActor7, 3, Void >*>(static_cast<_finishActor7*>(this)));
															#line 26059 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<_finishActor7*>(this)->actor_wait_state > 0) static_cast<_finishActor7*>(this)->actor_wait_state = 0;
		static_cast<_finishActor7*>(this)->ActorCallback< _finishActor7, 2, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor7, 2, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< _finishActor7, 2, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< _finishActor7, 2, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 2);

	}
	int a_body1cont4(Void const& _,int loopDepth) 
	{
															#line 3178 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FileBackupFinished").detail("BackupUID", uid);
															#line 3180 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_finishActor7*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_finishActor7State(); static_cast<_finishActor7*>(this)->destroy(); return 0; }
															#line 26133 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_finishActor7*>(this)->SAV< Void >::value()) Void(Void());
		this->~_finishActor7State();
		static_cast<_finishActor7*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont4(Void && _,int loopDepth) 
	{
															#line 3178 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FileBackupFinished").detail("BackupUID", uid);
															#line 3180 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_finishActor7*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_finishActor7State(); static_cast<_finishActor7*>(this)->destroy(); return 0; }
															#line 26147 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_finishActor7*>(this)->SAV< Void >::value()) Void(Void());
		this->~_finishActor7State();
		static_cast<_finishActor7*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont3when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont4(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont3when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont4(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose4() 
	{
		if (static_cast<_finishActor7*>(this)->actor_wait_state > 0) static_cast<_finishActor7*>(this)->actor_wait_state = 0;
		static_cast<_finishActor7*>(this)->ActorCallback< _finishActor7, 3, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor7, 3, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont3when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_fire(ActorCallback< _finishActor7, 3, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont3when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_error(ActorCallback< _finishActor7, 3, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 3);

	}
															#line 3160 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 3160 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskBucket> taskBucket;
															#line 3160 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<FutureBucket> futureBucket;
															#line 3160 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> task;
															#line 3166 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	BackupConfig backup;
															#line 3167 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	UID uid;
															#line 3170 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key destUidValue;
															#line 26232 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via _finish()
															#line 3160 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _finishActor7 final : public Actor<Void>, public ActorCallback< _finishActor7, 0, Void >, public ActorCallback< _finishActor7, 1, Key >, public ActorCallback< _finishActor7, 2, Void >, public ActorCallback< _finishActor7, 3, Void >, public FastAllocated<_finishActor7>, public _finishActor7State<_finishActor7> {
															#line 26237 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<_finishActor7>::operator new;
	using FastAllocated<_finishActor7>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< _finishActor7, 0, Void >;
friend struct ActorCallback< _finishActor7, 1, Key >;
friend struct ActorCallback< _finishActor7, 2, Void >;
friend struct ActorCallback< _finishActor7, 3, Void >;
															#line 3160 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_finishActor7(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 26251 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   _finishActor7State<_finishActor7>(tr, taskBucket, futureBucket, task)
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("_finish");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< _finishActor7, 0, Void >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< _finishActor7, 1, Key >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< _finishActor7, 2, Void >*)0, actor_cancelled()); break;
		case 4: this->a_callback_error((ActorCallback< _finishActor7, 3, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 3160 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> _finish( Reference<ReadYourWritesTransaction> const& tr, Reference<TaskBucket> const& taskBucket, Reference<FutureBucket> const& futureBucket, Reference<Task> const& task ) {
															#line 3160 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new _finishActor7(tr, taskBucket, futureBucket, task));
															#line 26281 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 3182 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

																#line 26286 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via addTask()
															#line 3183 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class AddTaskActor5>
															#line 3183 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class AddTaskActor5State {
															#line 26292 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 3183 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	AddTaskActor5State(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<Task> const& parentTask,TaskCompletionKey const& completionKey,Reference<TaskFuture> const& waitFor = Reference<TaskFuture>()) 
															#line 3183 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 3183 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : tr(tr),
															#line 3183 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskBucket(taskBucket),
															#line 3183 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   parentTask(parentTask),
															#line 3183 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   completionKey(completionKey),
															#line 3183 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   waitFor(waitFor)
															#line 26307 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("addTask", reinterpret_cast<unsigned long>(this));

	}
	~AddTaskActor5State() 
	{
		fdb_probe_actor_destroy("addTask", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 3188 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Key> __when_expr_0 = addBackupTask(FileBackupFinishedTask::name, FileBackupFinishedTask::version, tr, taskBucket, completionKey, BackupConfig(parentTask), waitFor);
															#line 3188 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<AddTaskActor5*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 26324 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<AddTaskActor5*>(this)->actor_wait_state = 1;
															#line 3188 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< AddTaskActor5, 0, Key >*>(static_cast<AddTaskActor5*>(this)));
															#line 26329 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~AddTaskActor5State();
		static_cast<AddTaskActor5*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Key const& key,int loopDepth) 
	{
															#line 3195 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<AddTaskActor5*>(this)->SAV<Key>::futures) { (void)(key); this->~AddTaskActor5State(); static_cast<AddTaskActor5*>(this)->destroy(); return 0; }
															#line 26352 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<AddTaskActor5*>(this)->SAV< Key >::value()) Key(key);
		this->~AddTaskActor5State();
		static_cast<AddTaskActor5*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont1(Key && key,int loopDepth) 
	{
															#line 3195 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<AddTaskActor5*>(this)->SAV<Key>::futures) { (void)(key); this->~AddTaskActor5State(); static_cast<AddTaskActor5*>(this)->destroy(); return 0; }
															#line 26364 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<AddTaskActor5*>(this)->SAV< Key >::value()) Key(key);
		this->~AddTaskActor5State();
		static_cast<AddTaskActor5*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1when1(Key const& key,int loopDepth) 
	{
		loopDepth = a_body1cont1(key, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Key && key,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(key), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<AddTaskActor5*>(this)->actor_wait_state > 0) static_cast<AddTaskActor5*>(this)->actor_wait_state = 0;
		static_cast<AddTaskActor5*>(this)->ActorCallback< AddTaskActor5, 0, Key >::remove();

	}
	void a_callback_fire(ActorCallback< AddTaskActor5, 0, Key >*,Key const& value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< AddTaskActor5, 0, Key >*,Key && value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< AddTaskActor5, 0, Key >*,Error err) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 0);

	}
															#line 3183 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 3183 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskBucket> taskBucket;
															#line 3183 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> parentTask;
															#line 3183 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	TaskCompletionKey completionKey;
															#line 3183 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskFuture> waitFor;
															#line 26445 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via addTask()
															#line 3183 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class AddTaskActor5 final : public Actor<Key>, public ActorCallback< AddTaskActor5, 0, Key >, public FastAllocated<AddTaskActor5>, public AddTaskActor5State<AddTaskActor5> {
															#line 26450 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<AddTaskActor5>::operator new;
	using FastAllocated<AddTaskActor5>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Key>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< AddTaskActor5, 0, Key >;
															#line 3183 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	AddTaskActor5(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<Task> const& parentTask,TaskCompletionKey const& completionKey,Reference<TaskFuture> const& waitFor = Reference<TaskFuture>()) 
															#line 26461 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Key>(),
		   AddTaskActor5State<AddTaskActor5>(tr, taskBucket, parentTask, completionKey, waitFor)
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("addTask");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< AddTaskActor5, 0, Key >*)0, actor_cancelled()); break;
		}

	}
};
															#line 3183 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Key> addTask( Reference<ReadYourWritesTransaction> const& tr, Reference<TaskBucket> const& taskBucket, Reference<Task> const& parentTask, TaskCompletionKey const& completionKey, Reference<TaskFuture> const& waitFor = Reference<TaskFuture>() ) {
															#line 3183 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Key>(new AddTaskActor5(tr, taskBucket, parentTask, completionKey, waitFor));
															#line 26488 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 3197 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

	Future<Void> execute(Database cx,
	                     Reference<TaskBucket> tb,
	                     Reference<FutureBucket> fb,
	                     Reference<Task> task) override {
		return Void();
	};
	Future<Void> finish(Reference<ReadYourWritesTransaction> tr,
	                    Reference<TaskBucket> tb,
	                    Reference<FutureBucket> fb,
	                    Reference<Task> task) override {
		return _finish(tr, tb, fb, task);
	};
};
StringRef FileBackupFinishedTask::name = "file_backup_finished_5.2"_sr;
REGISTER_TASKFUNC(FileBackupFinishedTask);

struct BackupSnapshotManifest : BackupTaskFuncBase {
	static StringRef name;
	static constexpr uint32_t version = 1;
	static struct {
		static TaskParam<Version> endVersion() { return __FUNCTION__sr; }
	} Params;

																#line 26516 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via _execute()
															#line 3221 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class _executeActor3>
															#line 3221 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _executeActor3State {
															#line 26522 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 3221 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_executeActor3State(Database const& cx,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 3221 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 3221 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : cx(cx),
															#line 3221 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskBucket(taskBucket),
															#line 3221 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   futureBucket(futureBucket),
															#line 3221 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   task(task),
															#line 3225 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   config(task),
															#line 3226 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   bc(),
															#line 3227 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   dbConfig(),
															#line 3229 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tr(new ReadYourWritesTransaction(cx)),
															#line 3233 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   localmap(),
															#line 3234 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   startKey(),
															#line 3235 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   batchSize(BUGGIFY ? 1 : 1000000)
															#line 26549 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("_execute", reinterpret_cast<unsigned long>(this));

	}
	~_executeActor3State() 
	{
		fdb_probe_actor_destroy("_execute", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 3237 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			;
															#line 26564 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = a_body1loopHead1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~_executeActor3State();
		static_cast<_executeActor3*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 3268 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		files = std::vector<std::string>();
															#line 3269 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		beginEndKeys = std::vector<std::pair<Key, Key>>();
															#line 3270 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		maxVer = 0;
															#line 3271 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		minVer = std::numeric_limits<Version>::max();
															#line 3272 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		totalBytes = 0;
															#line 3274 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!localmap.empty())
															#line 26597 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3276 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			auto ri = localmap.rbegin();
															#line 3277 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			auto i = (++ri).base();
															#line 3279 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			for(;1;) {
															#line 3280 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				const BackupConfig::RangeSlice& r = i->second;
															#line 3283 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				files.push_back(r.fileName);
															#line 3286 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				beginEndKeys.emplace_back(i->second.begin, i->first);
															#line 3289 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (r.version < minVer)
															#line 26613 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				{
															#line 3290 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					minVer = r.version;
															#line 26617 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				}
															#line 3291 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (r.version > maxVer)
															#line 26621 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				{
															#line 3292 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					maxVer = r.version;
															#line 26625 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				}
															#line 3295 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				totalBytes += r.fileSize;
															#line 3300 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				i = localmap.upper_bound(i->second.begin);
															#line 3303 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (i == localmap.begin())
															#line 26633 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				{
					break;
				}
															#line 3305 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				--i;
															#line 26639 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
		}
															#line 3309 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Params.endVersion().set(task, maxVer);
															#line 3312 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_5 = bc->writeKeyspaceSnapshotFile(files, beginEndKeys, totalBytes, dbConfig.encryptionAtRestMode.isEncryptionEnabled() ? IncludeKeyRangeMap::False : IncludeKeyRangeMap::True);
															#line 3312 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor3*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 26648 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_5.isReady()) { if (__when_expr_5.isError()) return a_body1Catch1(__when_expr_5.getError(), loopDepth); else return a_body1cont1when1(__when_expr_5.get(), loopDepth); };
		static_cast<_executeActor3*>(this)->actor_wait_state = 6;
															#line 3312 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_5.addCallbackAndClear(static_cast<ActorCallback< _executeActor3, 5, Void >*>(static_cast<_executeActor3*>(this)));
															#line 26653 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1(int loopDepth) 
	{
		try {
															#line 3239 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 3240 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 3242 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_0 = taskBucket->keepRunning(tr, task);
															#line 3242 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor3*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 26676 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1loopBody1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1loopBody1when1(__when_expr_0.get(), loopDepth); };
			static_cast<_executeActor3*>(this)->actor_wait_state = 1;
															#line 3242 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< _executeActor3, 0, Void >*>(static_cast<_executeActor3*>(this)));
															#line 26681 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1break1(int loopDepth) 
	{
		try {
			return a_body1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1loopHead1(0);

		return loopDepth;
	}
	int a_body1loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 3264 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_4 = tr->onError(e);
															#line 3264 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor3*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 26718 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1Catch1(__when_expr_4.getError(), std::max(0, loopDepth - 1)); else return a_body1loopBody1Catch1when1(__when_expr_4.get(), loopDepth); };
			static_cast<_executeActor3*>(this)->actor_wait_state = 5;
															#line 3264 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< _executeActor3, 4, Void >*>(static_cast<_executeActor3*>(this)));
															#line 26723 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1loopBody1cont2(Void const& _,int loopDepth) 
	{
															#line 3243 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = store(dbConfig, getDatabaseConfiguration(cx));
															#line 3243 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor3*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 26740 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1loopBody1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1loopBody1cont2when1(__when_expr_1.get(), loopDepth); };
		static_cast<_executeActor3*>(this)->actor_wait_state = 2;
															#line 3243 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< _executeActor3, 1, Void >*>(static_cast<_executeActor3*>(this)));
															#line 26745 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont2(Void && _,int loopDepth) 
	{
															#line 3243 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = store(dbConfig, getDatabaseConfiguration(cx));
															#line 3243 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor3*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 26756 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1loopBody1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1loopBody1cont2when1(__when_expr_1.get(), loopDepth); };
		static_cast<_executeActor3*>(this)->actor_wait_state = 2;
															#line 3243 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< _executeActor3, 1, Void >*>(static_cast<_executeActor3*>(this)));
															#line 26761 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<_executeActor3*>(this)->actor_wait_state > 0) static_cast<_executeActor3*>(this)->actor_wait_state = 0;
		static_cast<_executeActor3*>(this)->ActorCallback< _executeActor3, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor3, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< _executeActor3, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< _executeActor3, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1loopBody1cont3(Void const& _,int loopDepth) 
	{
															#line 3245 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!bc)
															#line 26833 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3247 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Reference<IBackupContainer>> __when_expr_2 = config.backupContainer().getOrThrow(tr);
															#line 3247 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor3*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 26839 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1loopBody1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1loopBody1cont3when1(__when_expr_2.get(), loopDepth); };
			static_cast<_executeActor3*>(this)->actor_wait_state = 3;
															#line 3247 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< _executeActor3, 2, Reference<IBackupContainer> >*>(static_cast<_executeActor3*>(this)));
															#line 26844 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1loopBody1cont4(loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1cont3(Void && _,int loopDepth) 
	{
															#line 3245 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!bc)
															#line 26858 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3247 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Reference<IBackupContainer>> __when_expr_2 = config.backupContainer().getOrThrow(tr);
															#line 3247 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor3*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 26864 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1loopBody1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1loopBody1cont3when1(__when_expr_2.get(), loopDepth); };
			static_cast<_executeActor3*>(this)->actor_wait_state = 3;
															#line 3247 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< _executeActor3, 2, Reference<IBackupContainer> >*>(static_cast<_executeActor3*>(this)));
															#line 26869 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1loopBody1cont4(loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<_executeActor3*>(this)->actor_wait_state > 0) static_cast<_executeActor3*>(this)->actor_wait_state = 0;
		static_cast<_executeActor3*>(this)->ActorCallback< _executeActor3, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor3, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< _executeActor3, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< _executeActor3, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1loopBody1cont4(int loopDepth) 
	{
															#line 3251 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<BackupConfig::RangeFileMapT::RangeResultType> __when_expr_3 = config.snapshotRangeFileMap().getRange(tr, startKey, {}, batchSize);
															#line 3251 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor3*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 26948 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1loopBody1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1loopBody1cont4when1(__when_expr_3.get(), loopDepth); };
		static_cast<_executeActor3*>(this)->actor_wait_state = 4;
															#line 3251 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< _executeActor3, 3, BackupConfig::RangeFileMapT::RangeResultType >*>(static_cast<_executeActor3*>(this)));
															#line 26953 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont5(Reference<IBackupContainer> const& _bc,int loopDepth) 
	{
															#line 3248 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		bc = getBackupContainerWithProxy(_bc);
															#line 26962 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1loopBody1cont4(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont5(Reference<IBackupContainer> && _bc,int loopDepth) 
	{
															#line 3248 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		bc = getBackupContainerWithProxy(_bc);
															#line 26971 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1loopBody1cont4(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont3when1(Reference<IBackupContainer> const& _bc,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont5(_bc, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont3when1(Reference<IBackupContainer> && _bc,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont5(std::move(_bc), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<_executeActor3*>(this)->actor_wait_state > 0) static_cast<_executeActor3*>(this)->actor_wait_state = 0;
		static_cast<_executeActor3*>(this)->ActorCallback< _executeActor3, 2, Reference<IBackupContainer> >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor3, 2, Reference<IBackupContainer> >*,Reference<IBackupContainer> const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1loopBody1cont3when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< _executeActor3, 2, Reference<IBackupContainer> >*,Reference<IBackupContainer> && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1loopBody1cont3when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< _executeActor3, 2, Reference<IBackupContainer> >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 2);

	}
	int a_body1loopBody1cont7(BackupConfig::RangeFileMapT::RangeResultType const& rangeresults,int loopDepth) 
	{
															#line 3254 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		for( auto& p : rangeresults.results ) {
															#line 3255 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			localmap.insert(p);
															#line 27045 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 3258 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!rangeresults.more)
															#line 27049 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
			return a_body1break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 3261 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		startKey = keyAfter(rangeresults.results.back().first);
															#line 3262 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->reset();
															#line 27057 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1loopBody1cont11(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont7(BackupConfig::RangeFileMapT::RangeResultType && rangeresults,int loopDepth) 
	{
															#line 3254 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		for( auto& p : rangeresults.results ) {
															#line 3255 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			localmap.insert(p);
															#line 27068 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 3258 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!rangeresults.more)
															#line 27072 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
			return a_body1break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 3261 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		startKey = keyAfter(rangeresults.results.back().first);
															#line 3262 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->reset();
															#line 27080 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1loopBody1cont11(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont4when1(BackupConfig::RangeFileMapT::RangeResultType const& rangeresults,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont7(rangeresults, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont4when1(BackupConfig::RangeFileMapT::RangeResultType && rangeresults,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont7(std::move(rangeresults), loopDepth);

		return loopDepth;
	}
	void a_exitChoose4() 
	{
		if (static_cast<_executeActor3*>(this)->actor_wait_state > 0) static_cast<_executeActor3*>(this)->actor_wait_state = 0;
		static_cast<_executeActor3*>(this)->ActorCallback< _executeActor3, 3, BackupConfig::RangeFileMapT::RangeResultType >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor3, 3, BackupConfig::RangeFileMapT::RangeResultType >*,BackupConfig::RangeFileMapT::RangeResultType const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1loopBody1cont4when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_fire(ActorCallback< _executeActor3, 3, BackupConfig::RangeFileMapT::RangeResultType >*,BackupConfig::RangeFileMapT::RangeResultType && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1loopBody1cont4when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_error(ActorCallback< _executeActor3, 3, BackupConfig::RangeFileMapT::RangeResultType >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 3);

	}
	int a_body1loopBody1cont11(int loopDepth) 
	{
		try {
			loopDepth = a_body1loopBody1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1loopBody1Catch1cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1Catch1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1Catch1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose5() 
	{
		if (static_cast<_executeActor3*>(this)->actor_wait_state > 0) static_cast<_executeActor3*>(this)->actor_wait_state = 0;
		static_cast<_executeActor3*>(this)->ActorCallback< _executeActor3, 4, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor3, 4, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_fire(ActorCallback< _executeActor3, 4, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_error(ActorCallback< _executeActor3, 4, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 4);

	}
	int a_body1cont2(Void const& _,int loopDepth) 
	{
															#line 3319 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent(SevInfo, "FileBackupWroteSnapshotManifest") .detail("BackupUID", config.getUid()) .detail("BeginVersion", minVer) .detail("EndVersion", maxVer) .detail("TotalBytes", totalBytes);
															#line 3325 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_executeActor3*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_executeActor3State(); static_cast<_executeActor3*>(this)->destroy(); return 0; }
															#line 27242 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_executeActor3*>(this)->SAV< Void >::value()) Void(Void());
		this->~_executeActor3State();
		static_cast<_executeActor3*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont2(Void && _,int loopDepth) 
	{
															#line 3319 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent(SevInfo, "FileBackupWroteSnapshotManifest") .detail("BackupUID", config.getUid()) .detail("BeginVersion", minVer) .detail("EndVersion", maxVer) .detail("TotalBytes", totalBytes);
															#line 3325 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_executeActor3*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_executeActor3State(); static_cast<_executeActor3*>(this)->destroy(); return 0; }
															#line 27256 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_executeActor3*>(this)->SAV< Void >::value()) Void(Void());
		this->~_executeActor3State();
		static_cast<_executeActor3*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose6() 
	{
		if (static_cast<_executeActor3*>(this)->actor_wait_state > 0) static_cast<_executeActor3*>(this)->actor_wait_state = 0;
		static_cast<_executeActor3*>(this)->ActorCallback< _executeActor3, 5, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor3, 5, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_fire(ActorCallback< _executeActor3, 5, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_error(ActorCallback< _executeActor3, 5, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 5);

	}
															#line 3221 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Database cx;
															#line 3221 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskBucket> taskBucket;
															#line 3221 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<FutureBucket> futureBucket;
															#line 3221 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> task;
															#line 3225 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	BackupConfig config;
															#line 3226 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<IBackupContainer> bc;
															#line 3227 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	DatabaseConfiguration dbConfig;
															#line 3229 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 3233 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::map<Key, BackupConfig::RangeSlice> localmap;
															#line 3234 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key startKey;
															#line 3235 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int batchSize;
															#line 3268 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::vector<std::string> files;
															#line 3269 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::vector<std::pair<Key, Key>> beginEndKeys;
															#line 3270 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version maxVer;
															#line 3271 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version minVer;
															#line 3272 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int64_t totalBytes;
															#line 27359 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via _execute()
															#line 3221 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _executeActor3 final : public Actor<Void>, public ActorCallback< _executeActor3, 0, Void >, public ActorCallback< _executeActor3, 1, Void >, public ActorCallback< _executeActor3, 2, Reference<IBackupContainer> >, public ActorCallback< _executeActor3, 3, BackupConfig::RangeFileMapT::RangeResultType >, public ActorCallback< _executeActor3, 4, Void >, public ActorCallback< _executeActor3, 5, Void >, public FastAllocated<_executeActor3>, public _executeActor3State<_executeActor3> {
															#line 27364 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<_executeActor3>::operator new;
	using FastAllocated<_executeActor3>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< _executeActor3, 0, Void >;
friend struct ActorCallback< _executeActor3, 1, Void >;
friend struct ActorCallback< _executeActor3, 2, Reference<IBackupContainer> >;
friend struct ActorCallback< _executeActor3, 3, BackupConfig::RangeFileMapT::RangeResultType >;
friend struct ActorCallback< _executeActor3, 4, Void >;
friend struct ActorCallback< _executeActor3, 5, Void >;
															#line 3221 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_executeActor3(Database const& cx,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 27380 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   _executeActor3State<_executeActor3>(cx, taskBucket, futureBucket, task)
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("_execute");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< _executeActor3, 0, Void >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< _executeActor3, 1, Void >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< _executeActor3, 2, Reference<IBackupContainer> >*)0, actor_cancelled()); break;
		case 4: this->a_callback_error((ActorCallback< _executeActor3, 3, BackupConfig::RangeFileMapT::RangeResultType >*)0, actor_cancelled()); break;
		case 5: this->a_callback_error((ActorCallback< _executeActor3, 4, Void >*)0, actor_cancelled()); break;
		case 6: this->a_callback_error((ActorCallback< _executeActor3, 5, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 3221 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> _execute( Database const& cx, Reference<TaskBucket> const& taskBucket, Reference<FutureBucket> const& futureBucket, Reference<Task> const& task ) {
															#line 3221 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new _executeActor3(cx, taskBucket, futureBucket, task));
															#line 27412 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 3327 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

																#line 27417 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via _finish()
															#line 3328 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class _finishActor8>
															#line 3328 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _finishActor8State {
															#line 27423 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 3328 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_finishActor8State(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 3328 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 3328 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : tr(tr),
															#line 3328 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskBucket(taskBucket),
															#line 3328 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   futureBucket(futureBucket),
															#line 3328 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   task(task)
															#line 27436 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("_finish", reinterpret_cast<unsigned long>(this));

	}
	~_finishActor8State() 
	{
		fdb_probe_actor_destroy("_finish", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 3332 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_0 = checkTaskVersion(tr->getDatabase(), task, BackupSnapshotManifest::name, BackupSnapshotManifest::version);
															#line 3332 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_finishActor8*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 27453 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<_finishActor8*>(this)->actor_wait_state = 1;
															#line 3332 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< _finishActor8, 0, Void >*>(static_cast<_finishActor8*>(this)));
															#line 27458 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~_finishActor8State();
		static_cast<_finishActor8*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Void const& _,int loopDepth) 
	{
															#line 3334 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config = BackupConfig(task);
															#line 3337 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config.latestSnapshotEndVersion().set(tr, Params.endVersion().get(task));
															#line 3339 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		stopWhenDone = bool();
															#line 3340 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		backupState = EBackupState();
															#line 3341 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restorableVersion = Optional<Version>();
															#line 3342 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		firstSnapshotEndVersion = Optional<Version>();
															#line 3343 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tag = Optional<std::string>();
															#line 3345 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = store(stopWhenDone, config.stopWhenDone().getOrThrow(tr)) && store(backupState, config.stateEnum().getOrThrow(tr)) && store(restorableVersion, config.getLatestRestorableVersion(tr)) && store(firstSnapshotEndVersion, config.firstSnapshotEndVersion().get(tr)) && store(tag, config.tag().get(tr));
															#line 3345 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor8*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 27497 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<_finishActor8*>(this)->actor_wait_state = 2;
															#line 3345 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< _finishActor8, 1, Void >*>(static_cast<_finishActor8*>(this)));
															#line 27502 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Void && _,int loopDepth) 
	{
															#line 3334 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config = BackupConfig(task);
															#line 3337 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config.latestSnapshotEndVersion().set(tr, Params.endVersion().get(task));
															#line 3339 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		stopWhenDone = bool();
															#line 3340 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		backupState = EBackupState();
															#line 3341 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restorableVersion = Optional<Version>();
															#line 3342 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		firstSnapshotEndVersion = Optional<Version>();
															#line 3343 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tag = Optional<std::string>();
															#line 3345 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = store(stopWhenDone, config.stopWhenDone().getOrThrow(tr)) && store(backupState, config.stateEnum().getOrThrow(tr)) && store(restorableVersion, config.getLatestRestorableVersion(tr)) && store(firstSnapshotEndVersion, config.firstSnapshotEndVersion().get(tr)) && store(tag, config.tag().get(tr));
															#line 3345 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor8*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 27527 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<_finishActor8*>(this)->actor_wait_state = 2;
															#line 3345 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< _finishActor8, 1, Void >*>(static_cast<_finishActor8*>(this)));
															#line 27532 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<_finishActor8*>(this)->actor_wait_state > 0) static_cast<_finishActor8*>(this)->actor_wait_state = 0;
		static_cast<_finishActor8*>(this)->ActorCallback< _finishActor8, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor8, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< _finishActor8, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< _finishActor8, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont2(Void const& _,int loopDepth) 
	{
															#line 3352 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (restorableVersion.present() && tag.present())
															#line 27604 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3353 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			FileBackupAgent().setLastRestorable(tr, StringRef(tag.get()), restorableVersion.get());
															#line 27608 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 3356 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!firstSnapshotEndVersion.present())
															#line 27612 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3357 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			config.firstSnapshotEndVersion().set(tr, Params.endVersion().get(task));
															#line 27616 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 3361 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (restorableVersion.present() && backupState != EBackupState::STATE_RUNNING_DIFFERENTIAL)
															#line 27620 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3362 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			config.stateEnum().set(tr, EBackupState::STATE_RUNNING_DIFFERENTIAL);
															#line 27624 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 3365 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Reference<TaskFuture> snapshotDoneFuture = task->getDoneFuture(futureBucket);
															#line 3366 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!stopWhenDone)
															#line 27630 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3367 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_2 = config.initNewSnapshot(tr) && success(BackupSnapshotDispatchTask::addTask( tr, taskBucket, task, 1, TaskCompletionKey::signal(snapshotDoneFuture)));
															#line 3367 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_finishActor8*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 27636 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont2when1(__when_expr_2.get(), loopDepth); };
			static_cast<_finishActor8*>(this)->actor_wait_state = 3;
															#line 3367 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< _finishActor8, 2, Void >*>(static_cast<_finishActor8*>(this)));
															#line 27641 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
															#line 3372 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_3 = snapshotDoneFuture->set(tr, taskBucket);
															#line 3372 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_finishActor8*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 27650 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1cont2when2(__when_expr_3.get(), loopDepth); };
			static_cast<_finishActor8*>(this)->actor_wait_state = 4;
															#line 3372 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< _finishActor8, 3, Void >*>(static_cast<_finishActor8*>(this)));
															#line 27655 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}

		return loopDepth;
	}
	int a_body1cont2(Void && _,int loopDepth) 
	{
															#line 3352 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (restorableVersion.present() && tag.present())
															#line 27665 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3353 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			FileBackupAgent().setLastRestorable(tr, StringRef(tag.get()), restorableVersion.get());
															#line 27669 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 3356 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!firstSnapshotEndVersion.present())
															#line 27673 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3357 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			config.firstSnapshotEndVersion().set(tr, Params.endVersion().get(task));
															#line 27677 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 3361 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (restorableVersion.present() && backupState != EBackupState::STATE_RUNNING_DIFFERENTIAL)
															#line 27681 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3362 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			config.stateEnum().set(tr, EBackupState::STATE_RUNNING_DIFFERENTIAL);
															#line 27685 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 3365 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Reference<TaskFuture> snapshotDoneFuture = task->getDoneFuture(futureBucket);
															#line 3366 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!stopWhenDone)
															#line 27691 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3367 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_2 = config.initNewSnapshot(tr) && success(BackupSnapshotDispatchTask::addTask( tr, taskBucket, task, 1, TaskCompletionKey::signal(snapshotDoneFuture)));
															#line 3367 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_finishActor8*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 27697 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont2when1(__when_expr_2.get(), loopDepth); };
			static_cast<_finishActor8*>(this)->actor_wait_state = 3;
															#line 3367 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< _finishActor8, 2, Void >*>(static_cast<_finishActor8*>(this)));
															#line 27702 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
															#line 3372 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_3 = snapshotDoneFuture->set(tr, taskBucket);
															#line 3372 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_finishActor8*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 27711 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1cont2when2(__when_expr_3.get(), loopDepth); };
			static_cast<_finishActor8*>(this)->actor_wait_state = 4;
															#line 3372 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< _finishActor8, 3, Void >*>(static_cast<_finishActor8*>(this)));
															#line 27716 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}

		return loopDepth;
	}
	int a_body1cont1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<_finishActor8*>(this)->actor_wait_state > 0) static_cast<_finishActor8*>(this)->actor_wait_state = 0;
		static_cast<_finishActor8*>(this)->ActorCallback< _finishActor8, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor8, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< _finishActor8, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< _finishActor8, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont3(int loopDepth) 
	{
															#line 3375 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_4 = taskBucket->finish(tr, task);
															#line 3375 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor8*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 27791 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1cont3when1(__when_expr_4.get(), loopDepth); };
		static_cast<_finishActor8*>(this)->actor_wait_state = 5;
															#line 3375 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< _finishActor8, 4, Void >*>(static_cast<_finishActor8*>(this)));
															#line 27796 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont7(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3(loopDepth);

		return loopDepth;
	}
	int a_body1cont7(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3(loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont7(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont7(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<_finishActor8*>(this)->actor_wait_state > 0) static_cast<_finishActor8*>(this)->actor_wait_state = 0;
		static_cast<_finishActor8*>(this)->ActorCallback< _finishActor8, 2, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor8, 2, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< _finishActor8, 2, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< _finishActor8, 2, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 2);

	}
	int a_body1cont8(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3(loopDepth);

		return loopDepth;
	}
	int a_body1cont8(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3(loopDepth);

		return loopDepth;
	}
	int a_body1cont2when2(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont8(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont2when2(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont8(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose4() 
	{
		if (static_cast<_finishActor8*>(this)->actor_wait_state > 0) static_cast<_finishActor8*>(this)->actor_wait_state = 0;
		static_cast<_finishActor8*>(this)->ActorCallback< _finishActor8, 3, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor8, 3, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont2when2(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_fire(ActorCallback< _finishActor8, 3, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont2when2(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_error(ActorCallback< _finishActor8, 3, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 3);

	}
	int a_body1cont9(Void const& _,int loopDepth) 
	{
															#line 3376 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_finishActor8*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_finishActor8State(); static_cast<_finishActor8*>(this)->destroy(); return 0; }
															#line 27955 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_finishActor8*>(this)->SAV< Void >::value()) Void(Void());
		this->~_finishActor8State();
		static_cast<_finishActor8*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont9(Void && _,int loopDepth) 
	{
															#line 3376 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_finishActor8*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_finishActor8State(); static_cast<_finishActor8*>(this)->destroy(); return 0; }
															#line 27967 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_finishActor8*>(this)->SAV< Void >::value()) Void(Void());
		this->~_finishActor8State();
		static_cast<_finishActor8*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont3when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont9(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont3when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont9(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose5() 
	{
		if (static_cast<_finishActor8*>(this)->actor_wait_state > 0) static_cast<_finishActor8*>(this)->actor_wait_state = 0;
		static_cast<_finishActor8*>(this)->ActorCallback< _finishActor8, 4, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor8, 4, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont3when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_fire(ActorCallback< _finishActor8, 4, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont3when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_error(ActorCallback< _finishActor8, 4, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 4);

	}
															#line 3328 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 3328 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskBucket> taskBucket;
															#line 3328 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<FutureBucket> futureBucket;
															#line 3328 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> task;
															#line 3334 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	BackupConfig config;
															#line 3339 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	bool stopWhenDone;
															#line 3340 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	EBackupState backupState;
															#line 3341 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<Version> restorableVersion;
															#line 3342 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<Version> firstSnapshotEndVersion;
															#line 3343 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<std::string> tag;
															#line 28058 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via _finish()
															#line 3328 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _finishActor8 final : public Actor<Void>, public ActorCallback< _finishActor8, 0, Void >, public ActorCallback< _finishActor8, 1, Void >, public ActorCallback< _finishActor8, 2, Void >, public ActorCallback< _finishActor8, 3, Void >, public ActorCallback< _finishActor8, 4, Void >, public FastAllocated<_finishActor8>, public _finishActor8State<_finishActor8> {
															#line 28063 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<_finishActor8>::operator new;
	using FastAllocated<_finishActor8>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< _finishActor8, 0, Void >;
friend struct ActorCallback< _finishActor8, 1, Void >;
friend struct ActorCallback< _finishActor8, 2, Void >;
friend struct ActorCallback< _finishActor8, 3, Void >;
friend struct ActorCallback< _finishActor8, 4, Void >;
															#line 3328 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_finishActor8(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 28078 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   _finishActor8State<_finishActor8>(tr, taskBucket, futureBucket, task)
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("_finish");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< _finishActor8, 0, Void >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< _finishActor8, 1, Void >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< _finishActor8, 2, Void >*)0, actor_cancelled()); break;
		case 4: this->a_callback_error((ActorCallback< _finishActor8, 3, Void >*)0, actor_cancelled()); break;
		case 5: this->a_callback_error((ActorCallback< _finishActor8, 4, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 3328 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> _finish( Reference<ReadYourWritesTransaction> const& tr, Reference<TaskBucket> const& taskBucket, Reference<FutureBucket> const& futureBucket, Reference<Task> const& task ) {
															#line 3328 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new _finishActor8(tr, taskBucket, futureBucket, task));
															#line 28109 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 3378 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

																#line 28114 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via addTask()
															#line 3379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class AddTaskActor6>
															#line 3379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class AddTaskActor6State {
															#line 28120 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 3379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	AddTaskActor6State(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<Task> const& parentTask,TaskCompletionKey const& completionKey,Reference<TaskFuture> const& waitFor = Reference<TaskFuture>()) 
															#line 3379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 3379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : tr(tr),
															#line 3379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskBucket(taskBucket),
															#line 3379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   parentTask(parentTask),
															#line 3379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   completionKey(completionKey),
															#line 3379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   waitFor(waitFor)
															#line 28135 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("addTask", reinterpret_cast<unsigned long>(this));

	}
	~AddTaskActor6State() 
	{
		fdb_probe_actor_destroy("addTask", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 3384 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Key> __when_expr_0 = addBackupTask(BackupSnapshotManifest::name, BackupSnapshotManifest::version, tr, taskBucket, completionKey, BackupConfig(parentTask), waitFor, NOP_SETUP_TASK_FN, 1);
															#line 3384 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<AddTaskActor6*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 28152 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<AddTaskActor6*>(this)->actor_wait_state = 1;
															#line 3384 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< AddTaskActor6, 0, Key >*>(static_cast<AddTaskActor6*>(this)));
															#line 28157 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~AddTaskActor6State();
		static_cast<AddTaskActor6*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Key const& key,int loopDepth) 
	{
															#line 3393 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<AddTaskActor6*>(this)->SAV<Key>::futures) { (void)(key); this->~AddTaskActor6State(); static_cast<AddTaskActor6*>(this)->destroy(); return 0; }
															#line 28180 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<AddTaskActor6*>(this)->SAV< Key >::value()) Key(key);
		this->~AddTaskActor6State();
		static_cast<AddTaskActor6*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont1(Key && key,int loopDepth) 
	{
															#line 3393 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<AddTaskActor6*>(this)->SAV<Key>::futures) { (void)(key); this->~AddTaskActor6State(); static_cast<AddTaskActor6*>(this)->destroy(); return 0; }
															#line 28192 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<AddTaskActor6*>(this)->SAV< Key >::value()) Key(key);
		this->~AddTaskActor6State();
		static_cast<AddTaskActor6*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1when1(Key const& key,int loopDepth) 
	{
		loopDepth = a_body1cont1(key, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Key && key,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(key), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<AddTaskActor6*>(this)->actor_wait_state > 0) static_cast<AddTaskActor6*>(this)->actor_wait_state = 0;
		static_cast<AddTaskActor6*>(this)->ActorCallback< AddTaskActor6, 0, Key >::remove();

	}
	void a_callback_fire(ActorCallback< AddTaskActor6, 0, Key >*,Key const& value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< AddTaskActor6, 0, Key >*,Key && value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< AddTaskActor6, 0, Key >*,Error err) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 0);

	}
															#line 3379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 3379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskBucket> taskBucket;
															#line 3379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> parentTask;
															#line 3379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	TaskCompletionKey completionKey;
															#line 3379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskFuture> waitFor;
															#line 28273 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via addTask()
															#line 3379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class AddTaskActor6 final : public Actor<Key>, public ActorCallback< AddTaskActor6, 0, Key >, public FastAllocated<AddTaskActor6>, public AddTaskActor6State<AddTaskActor6> {
															#line 28278 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<AddTaskActor6>::operator new;
	using FastAllocated<AddTaskActor6>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Key>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< AddTaskActor6, 0, Key >;
															#line 3379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	AddTaskActor6(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<Task> const& parentTask,TaskCompletionKey const& completionKey,Reference<TaskFuture> const& waitFor = Reference<TaskFuture>()) 
															#line 28289 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Key>(),
		   AddTaskActor6State<AddTaskActor6>(tr, taskBucket, parentTask, completionKey, waitFor)
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("addTask");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< AddTaskActor6, 0, Key >*)0, actor_cancelled()); break;
		}

	}
};
															#line 3379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Key> addTask( Reference<ReadYourWritesTransaction> const& tr, Reference<TaskBucket> const& taskBucket, Reference<Task> const& parentTask, TaskCompletionKey const& completionKey, Reference<TaskFuture> const& waitFor = Reference<TaskFuture>() ) {
															#line 3379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Key>(new AddTaskActor6(tr, taskBucket, parentTask, completionKey, waitFor));
															#line 28316 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 3395 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

	StringRef getName() const override { return name; };

	Future<Void> execute(Database cx,
	                     Reference<TaskBucket> tb,
	                     Reference<FutureBucket> fb,
	                     Reference<Task> task) override {
		return _execute(cx, tb, fb, task);
	};
	Future<Void> finish(Reference<ReadYourWritesTransaction> tr,
	                    Reference<TaskBucket> tb,
	                    Reference<FutureBucket> fb,
	                    Reference<Task> task) override {
		return _finish(tr, tb, fb, task);
	};
};
StringRef BackupSnapshotManifest::name = "file_backup_write_snapshot_manifest_5.2"_sr;
REGISTER_TASKFUNC(BackupSnapshotManifest);

Future<Key> BackupSnapshotDispatchTask::addSnapshotManifestTask(Reference<ReadYourWritesTransaction> tr,
                                                                Reference<TaskBucket> taskBucket,
                                                                Reference<Task> parentTask,
                                                                TaskCompletionKey completionKey,
                                                                Reference<TaskFuture> waitFor) {
	return BackupSnapshotManifest::addTask(tr, taskBucket, parentTask, completionKey, waitFor);
}

struct StartFullBackupTaskFunc : BackupTaskFuncBase {
	static StringRef name;
	static constexpr uint32_t version = 1;

	static struct {
		static TaskParam<Version> beginVersion() { return __FUNCTION__sr; }
	} Params;

																#line 28355 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via _execute()
															#line 3430 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class _executeActor4>
															#line 3430 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _executeActor4State {
															#line 28361 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 3430 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_executeActor4State(Database const& cx,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 3430 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 3430 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : cx(cx),
															#line 3430 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskBucket(taskBucket),
															#line 3430 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   futureBucket(futureBucket),
															#line 3430 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   task(task)
															#line 28374 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("_execute", reinterpret_cast<unsigned long>(this));

	}
	~_executeActor4State() 
	{
		fdb_probe_actor_destroy("_execute", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 3434 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_0 = checkTaskVersion(cx, task, StartFullBackupTaskFunc::name, StartFullBackupTaskFunc::version);
															#line 3434 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor4*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 28391 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<_executeActor4*>(this)->actor_wait_state = 1;
															#line 3434 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< _executeActor4, 0, Void >*>(static_cast<_executeActor4*>(this)));
															#line 28396 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~_executeActor4State();
		static_cast<_executeActor4*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Void const& _,int loopDepth) 
	{
															#line 3436 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr = Reference<ReadYourWritesTransaction>(new ReadYourWritesTransaction(cx));
															#line 3437 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config = BackupConfig(task);
															#line 3438 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		partitionedLog = Future<Optional<bool>>();
															#line 3439 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 28425 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont1loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1cont1(Void && _,int loopDepth) 
	{
															#line 3436 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr = Reference<ReadYourWritesTransaction>(new ReadYourWritesTransaction(cx));
															#line 3437 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config = BackupConfig(task);
															#line 3438 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		partitionedLog = Future<Optional<bool>>();
															#line 3439 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 28440 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont1loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<_executeActor4*>(this)->actor_wait_state > 0) static_cast<_executeActor4*>(this)->actor_wait_state = 0;
		static_cast<_executeActor4*>(this)->ActorCallback< _executeActor4, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor4, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< _executeActor4, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< _executeActor4, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont2(int loopDepth) 
	{
															#line 3455 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<DatabaseConfiguration> __when_expr_3 = getDatabaseConfiguration(cx);
															#line 3455 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor4*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 28514 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1cont2when1(__when_expr_3.get(), loopDepth); };
		static_cast<_executeActor4*>(this)->actor_wait_state = 4;
															#line 3455 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< _executeActor4, 3, DatabaseConfiguration >*>(static_cast<_executeActor4*>(this)));
															#line 28519 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1(int loopDepth) 
	{
		try {
															#line 3441 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 3442 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 3443 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			partitionedLog = config.partitionedLogEnabled().get(tr);
															#line 3444 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			startVersionFuture = tr->getReadVersion();
															#line 3445 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_1 = success(partitionedLog) && success(startVersionFuture);
															#line 3445 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor4*>(this)->actor_wait_state < 0) return a_body1cont1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 28546 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1cont1loopBody1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1loopBody1when1(__when_expr_1.get(), loopDepth); };
			static_cast<_executeActor4*>(this)->actor_wait_state = 2;
															#line 3445 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< _executeActor4, 1, Void >*>(static_cast<_executeActor4*>(this)));
															#line 28551 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1cont1loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1cont1loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont1break1(int loopDepth) 
	{
		try {
			return a_body1cont2(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont1loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1cont1loopHead1(0);

		return loopDepth;
	}
	int a_body1cont1loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 3450 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_2 = tr->onError(e);
															#line 3450 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor4*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 28588 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), std::max(0, loopDepth - 1)); else return a_body1cont1loopBody1Catch1when1(__when_expr_2.get(), loopDepth); };
			static_cast<_executeActor4*>(this)->actor_wait_state = 3;
															#line 3450 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< _executeActor4, 2, Void >*>(static_cast<_executeActor4*>(this)));
															#line 28593 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont1loopBody1cont2(Void const& _,int loopDepth) 
	{
															#line 3447 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Params.beginVersion().set(task, startVersionFuture.get());
															#line 28608 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		return a_body1cont1break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1cont1loopBody1cont2(Void && _,int loopDepth) 
	{
															#line 3447 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Params.beginVersion().set(task, startVersionFuture.get());
															#line 28617 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		return a_body1cont1break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1cont1loopBody1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<_executeActor4*>(this)->actor_wait_state > 0) static_cast<_executeActor4*>(this)->actor_wait_state = 0;
		static_cast<_executeActor4*>(this)->ActorCallback< _executeActor4, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor4, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< _executeActor4, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< _executeActor4, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont1loopBody1Catch1cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1Catch1cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1Catch1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1Catch1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<_executeActor4*>(this)->actor_wait_state > 0) static_cast<_executeActor4*>(this)->actor_wait_state = 0;
		static_cast<_executeActor4*>(this)->ActorCallback< _executeActor4, 2, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor4, 2, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont1loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< _executeActor4, 2, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont1loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< _executeActor4, 2, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 2);

	}
	int a_body1cont3(DatabaseConfiguration const& dbConfig,int loopDepth) 
	{
															#line 3456 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		backupWorkerEnabled = dbConfig.backupWorkerEnabled;
															#line 3457 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!backupWorkerEnabled && partitionedLog.get().present() && partitionedLog.get().get())
															#line 28766 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3460 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_4 = success(ManagementAPI::changeConfig(cx.getReference(), "backup_worker_enabled:=1", true));
															#line 3460 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor4*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 28772 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1cont3when1(__when_expr_4.get(), loopDepth); };
			static_cast<_executeActor4*>(this)->actor_wait_state = 5;
															#line 3460 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< _executeActor4, 4, Void >*>(static_cast<_executeActor4*>(this)));
															#line 28777 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont4(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont3(DatabaseConfiguration && dbConfig,int loopDepth) 
	{
															#line 3456 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		backupWorkerEnabled = dbConfig.backupWorkerEnabled;
															#line 3457 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!backupWorkerEnabled && partitionedLog.get().present() && partitionedLog.get().get())
															#line 28793 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3460 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_4 = success(ManagementAPI::changeConfig(cx.getReference(), "backup_worker_enabled:=1", true));
															#line 3460 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor4*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 28799 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1cont3when1(__when_expr_4.get(), loopDepth); };
			static_cast<_executeActor4*>(this)->actor_wait_state = 5;
															#line 3460 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< _executeActor4, 4, Void >*>(static_cast<_executeActor4*>(this)));
															#line 28804 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont4(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont2when1(DatabaseConfiguration const& dbConfig,int loopDepth) 
	{
		loopDepth = a_body1cont3(dbConfig, loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(DatabaseConfiguration && dbConfig,int loopDepth) 
	{
		loopDepth = a_body1cont3(std::move(dbConfig), loopDepth);

		return loopDepth;
	}
	void a_exitChoose4() 
	{
		if (static_cast<_executeActor4*>(this)->actor_wait_state > 0) static_cast<_executeActor4*>(this)->actor_wait_state = 0;
		static_cast<_executeActor4*>(this)->ActorCallback< _executeActor4, 3, DatabaseConfiguration >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor4, 3, DatabaseConfiguration >*,DatabaseConfiguration const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_fire(ActorCallback< _executeActor4, 3, DatabaseConfiguration >*,DatabaseConfiguration && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_error(ActorCallback< _executeActor4, 3, DatabaseConfiguration >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 3);

	}
	int a_body1cont4(int loopDepth) 
	{
															#line 3465 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->reset();
															#line 3466 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 28883 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont4loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1cont5(Void const& _,int loopDepth) 
	{
															#line 3461 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		backupWorkerEnabled = true;
															#line 28892 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont4(loopDepth);

		return loopDepth;
	}
	int a_body1cont5(Void && _,int loopDepth) 
	{
															#line 3461 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		backupWorkerEnabled = true;
															#line 28901 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont4(loopDepth);

		return loopDepth;
	}
	int a_body1cont3when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont5(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont3when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont5(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose5() 
	{
		if (static_cast<_executeActor4*>(this)->actor_wait_state > 0) static_cast<_executeActor4*>(this)->actor_wait_state = 0;
		static_cast<_executeActor4*>(this)->ActorCallback< _executeActor4, 4, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor4, 4, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont3when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_fire(ActorCallback< _executeActor4, 4, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont3when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_error(ActorCallback< _executeActor4, 4, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 4);

	}
	int a_body1cont4loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont4loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont4loopBody1(int loopDepth) 
	{
															#line 3467 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		watchFuture = Future<Void>();
															#line 28980 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		try {
															#line 3469 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 3470 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 3471 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			keepRunning = taskBucket->keepRunning(tr, task);
															#line 3473 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			started = tr->get(backupStartedKey);
															#line 3474 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			taskStarted = tr->get(config.allWorkerStarted().key);
															#line 3475 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			partitionedLog = config.partitionedLogEnabled().get(tr);
															#line 3476 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_5 = success(started) && success(taskStarted) && success(partitionedLog);
															#line 3476 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor4*>(this)->actor_wait_state < 0) return a_body1cont4loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 28998 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_5.isReady()) { if (__when_expr_5.isError()) return a_body1cont4loopBody1Catch1(__when_expr_5.getError(), loopDepth); else return a_body1cont4loopBody1when1(__when_expr_5.get(), loopDepth); };
			static_cast<_executeActor4*>(this)->actor_wait_state = 6;
															#line 3476 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_5.addCallbackAndClear(static_cast<ActorCallback< _executeActor4, 5, Void >*>(static_cast<_executeActor4*>(this)));
															#line 29003 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1cont4loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1cont4loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont4loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1cont4loopHead1(0);

		return loopDepth;
	}
	int a_body1cont4loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 3512 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_9 = tr->onError(e);
															#line 3512 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor4*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 29027 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_9.isReady()) { if (__when_expr_9.isError()) return a_body1Catch1(__when_expr_9.getError(), std::max(0, loopDepth - 1)); else return a_body1cont4loopBody1Catch1when1(__when_expr_9.get(), loopDepth); };
			static_cast<_executeActor4*>(this)->actor_wait_state = 10;
															#line 3512 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_9.addCallbackAndClear(static_cast<ActorCallback< _executeActor4, 9, Void >*>(static_cast<_executeActor4*>(this)));
															#line 29032 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont4loopBody1cont2(Void const& _,int loopDepth) 
	{
															#line 3478 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!partitionedLog.get().present() || !partitionedLog.get().get())
															#line 29047 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3479 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<_executeActor4*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_executeActor4State(); static_cast<_executeActor4*>(this)->destroy(); return 0; }
															#line 29051 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<_executeActor4*>(this)->SAV< Void >::value()) Void(Void());
			this->~_executeActor4State();
			static_cast<_executeActor4*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 3482 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		std::vector<std::pair<UID, Version>> ids;
															#line 3483 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (started.get().present())
															#line 29061 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3484 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			ids = decodeBackupStartedValue(started.get().get());
															#line 29065 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 3486 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		const UID uid = config.getUid();
															#line 3487 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		auto it = std::find_if( ids.begin(), ids.end(), [uid](const std::pair<UID, Version>& p) { return p.first == uid; });
															#line 3489 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (it == ids.end())
															#line 29073 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3490 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			ids.emplace_back(uid, Params.beginVersion().get(task));
															#line 29077 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		else
		{
															#line 3492 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			Params.beginVersion().set(task, it->second);
															#line 29083 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 3495 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->set(backupStartedKey, encodeBackupStartedValue(ids));
															#line 3496 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (backupWorkerEnabled)
															#line 29089 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3497 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			config.backupWorkerEnabled().set(tr, true);
															#line 29093 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 3501 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!taskStarted.get().present())
															#line 29097 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3502 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			watchFuture = tr->watch(config.allWorkerStarted().key);
															#line 29101 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 3505 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_6 = keepRunning;
															#line 3505 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor4*>(this)->actor_wait_state < 0) return a_body1cont4loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 29107 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_6.isReady()) { if (__when_expr_6.isError()) return a_body1cont4loopBody1Catch1(__when_expr_6.getError(), loopDepth); else return a_body1cont4loopBody1cont2when1(__when_expr_6.get(), loopDepth); };
		static_cast<_executeActor4*>(this)->actor_wait_state = 7;
															#line 3505 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_6.addCallbackAndClear(static_cast<ActorCallback< _executeActor4, 6, Void >*>(static_cast<_executeActor4*>(this)));
															#line 29112 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont4loopBody1cont2(Void && _,int loopDepth) 
	{
															#line 3478 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!partitionedLog.get().present() || !partitionedLog.get().get())
															#line 29121 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3479 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<_executeActor4*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_executeActor4State(); static_cast<_executeActor4*>(this)->destroy(); return 0; }
															#line 29125 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<_executeActor4*>(this)->SAV< Void >::value()) Void(Void());
			this->~_executeActor4State();
			static_cast<_executeActor4*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 3482 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		std::vector<std::pair<UID, Version>> ids;
															#line 3483 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (started.get().present())
															#line 29135 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3484 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			ids = decodeBackupStartedValue(started.get().get());
															#line 29139 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 3486 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		const UID uid = config.getUid();
															#line 3487 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		auto it = std::find_if( ids.begin(), ids.end(), [uid](const std::pair<UID, Version>& p) { return p.first == uid; });
															#line 3489 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (it == ids.end())
															#line 29147 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3490 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			ids.emplace_back(uid, Params.beginVersion().get(task));
															#line 29151 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		else
		{
															#line 3492 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			Params.beginVersion().set(task, it->second);
															#line 29157 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 3495 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->set(backupStartedKey, encodeBackupStartedValue(ids));
															#line 3496 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (backupWorkerEnabled)
															#line 29163 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3497 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			config.backupWorkerEnabled().set(tr, true);
															#line 29167 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 3501 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!taskStarted.get().present())
															#line 29171 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3502 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			watchFuture = tr->watch(config.allWorkerStarted().key);
															#line 29175 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 3505 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_6 = keepRunning;
															#line 3505 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor4*>(this)->actor_wait_state < 0) return a_body1cont4loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 29181 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_6.isReady()) { if (__when_expr_6.isError()) return a_body1cont4loopBody1Catch1(__when_expr_6.getError(), loopDepth); else return a_body1cont4loopBody1cont2when1(__when_expr_6.get(), loopDepth); };
		static_cast<_executeActor4*>(this)->actor_wait_state = 7;
															#line 3505 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_6.addCallbackAndClear(static_cast<ActorCallback< _executeActor4, 6, Void >*>(static_cast<_executeActor4*>(this)));
															#line 29186 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont4loopBody1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont4loopBody1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont4loopBody1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont4loopBody1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose6() 
	{
		if (static_cast<_executeActor4*>(this)->actor_wait_state > 0) static_cast<_executeActor4*>(this)->actor_wait_state = 0;
		static_cast<_executeActor4*>(this)->ActorCallback< _executeActor4, 5, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor4, 5, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont4loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont4loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont4loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_fire(ActorCallback< _executeActor4, 5, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont4loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont4loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont4loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_error(ActorCallback< _executeActor4, 5, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont4loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont4loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont4loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 5);

	}
	int a_body1cont4loopBody1cont3(Void const& _,int loopDepth) 
	{
															#line 3506 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_7 = tr->commit();
															#line 3506 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor4*>(this)->actor_wait_state < 0) return a_body1cont4loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 29260 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_7.isReady()) { if (__when_expr_7.isError()) return a_body1cont4loopBody1Catch1(__when_expr_7.getError(), loopDepth); else return a_body1cont4loopBody1cont3when1(__when_expr_7.get(), loopDepth); };
		static_cast<_executeActor4*>(this)->actor_wait_state = 8;
															#line 3506 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_7.addCallbackAndClear(static_cast<ActorCallback< _executeActor4, 7, Void >*>(static_cast<_executeActor4*>(this)));
															#line 29265 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont4loopBody1cont3(Void && _,int loopDepth) 
	{
															#line 3506 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_7 = tr->commit();
															#line 3506 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor4*>(this)->actor_wait_state < 0) return a_body1cont4loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 29276 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_7.isReady()) { if (__when_expr_7.isError()) return a_body1cont4loopBody1Catch1(__when_expr_7.getError(), loopDepth); else return a_body1cont4loopBody1cont3when1(__when_expr_7.get(), loopDepth); };
		static_cast<_executeActor4*>(this)->actor_wait_state = 8;
															#line 3506 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_7.addCallbackAndClear(static_cast<ActorCallback< _executeActor4, 7, Void >*>(static_cast<_executeActor4*>(this)));
															#line 29281 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont4loopBody1cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont4loopBody1cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont4loopBody1cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont4loopBody1cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose7() 
	{
		if (static_cast<_executeActor4*>(this)->actor_wait_state > 0) static_cast<_executeActor4*>(this)->actor_wait_state = 0;
		static_cast<_executeActor4*>(this)->ActorCallback< _executeActor4, 6, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor4, 6, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1cont4loopBody1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont4loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont4loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 6);

	}
	void a_callback_fire(ActorCallback< _executeActor4, 6, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1cont4loopBody1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont4loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont4loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 6);

	}
	void a_callback_error(ActorCallback< _executeActor4, 6, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1cont4loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont4loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont4loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 6);

	}
	int a_body1cont4loopBody1cont10(Void const& _,int loopDepth) 
	{
															#line 3507 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!taskStarted.get().present())
															#line 29353 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3508 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_8 = watchFuture;
															#line 3508 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor4*>(this)->actor_wait_state < 0) return a_body1cont4loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 29359 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_8.isReady()) { if (__when_expr_8.isError()) return a_body1cont4loopBody1Catch1(__when_expr_8.getError(), loopDepth); else return a_body1cont4loopBody1cont10when1(__when_expr_8.get(), loopDepth); };
			static_cast<_executeActor4*>(this)->actor_wait_state = 9;
															#line 3508 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_8.addCallbackAndClear(static_cast<ActorCallback< _executeActor4, 8, Void >*>(static_cast<_executeActor4*>(this)));
															#line 29364 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont4loopBody1cont10cont1(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont4loopBody1cont10(Void && _,int loopDepth) 
	{
															#line 3507 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!taskStarted.get().present())
															#line 29378 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3508 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_8 = watchFuture;
															#line 3508 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor4*>(this)->actor_wait_state < 0) return a_body1cont4loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 29384 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_8.isReady()) { if (__when_expr_8.isError()) return a_body1cont4loopBody1Catch1(__when_expr_8.getError(), loopDepth); else return a_body1cont4loopBody1cont10when1(__when_expr_8.get(), loopDepth); };
			static_cast<_executeActor4*>(this)->actor_wait_state = 9;
															#line 3508 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_8.addCallbackAndClear(static_cast<ActorCallback< _executeActor4, 8, Void >*>(static_cast<_executeActor4*>(this)));
															#line 29389 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont4loopBody1cont10cont1(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont4loopBody1cont3when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont4loopBody1cont10(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont4loopBody1cont3when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont4loopBody1cont10(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose8() 
	{
		if (static_cast<_executeActor4*>(this)->actor_wait_state > 0) static_cast<_executeActor4*>(this)->actor_wait_state = 0;
		static_cast<_executeActor4*>(this)->ActorCallback< _executeActor4, 7, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor4, 7, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1cont4loopBody1cont3when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont4loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont4loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 7);

	}
	void a_callback_fire(ActorCallback< _executeActor4, 7, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1cont4loopBody1cont3when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont4loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont4loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 7);

	}
	void a_callback_error(ActorCallback< _executeActor4, 7, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1cont4loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont4loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont4loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 7);

	}
	int a_body1cont4loopBody1cont10cont1(int loopDepth) 
	{
															#line 3510 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_executeActor4*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_executeActor4State(); static_cast<_executeActor4*>(this)->destroy(); return 0; }
															#line 29466 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_executeActor4*>(this)->SAV< Void >::value()) Void(Void());
		this->~_executeActor4State();
		static_cast<_executeActor4*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont4loopBody1cont10cont2(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont4loopBody1cont10cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont4loopBody1cont10cont2(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont4loopBody1cont10cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont4loopBody1cont10when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont4loopBody1cont10cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont4loopBody1cont10when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont4loopBody1cont10cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose9() 
	{
		if (static_cast<_executeActor4*>(this)->actor_wait_state > 0) static_cast<_executeActor4*>(this)->actor_wait_state = 0;
		static_cast<_executeActor4*>(this)->ActorCallback< _executeActor4, 8, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor4, 8, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 8);
		a_exitChoose9();
		try {
			a_body1cont4loopBody1cont10when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont4loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont4loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 8);

	}
	void a_callback_fire(ActorCallback< _executeActor4, 8, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 8);
		a_exitChoose9();
		try {
			a_body1cont4loopBody1cont10when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont4loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont4loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 8);

	}
	void a_callback_error(ActorCallback< _executeActor4, 8, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 8);
		a_exitChoose9();
		try {
			a_body1cont4loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont4loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont4loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 8);

	}
	int a_body1cont4loopBody1Catch1cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont4loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont4loopBody1Catch1cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont4loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont4loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont4loopBody1Catch1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont4loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont4loopBody1Catch1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose10() 
	{
		if (static_cast<_executeActor4*>(this)->actor_wait_state > 0) static_cast<_executeActor4*>(this)->actor_wait_state = 0;
		static_cast<_executeActor4*>(this)->ActorCallback< _executeActor4, 9, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor4, 9, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 9);
		a_exitChoose10();
		try {
			a_body1cont4loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 9);

	}
	void a_callback_fire(ActorCallback< _executeActor4, 9, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 9);
		a_exitChoose10();
		try {
			a_body1cont4loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 9);

	}
	void a_callback_error(ActorCallback< _executeActor4, 9, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 9);
		a_exitChoose10();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 9);

	}
															#line 3430 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Database cx;
															#line 3430 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskBucket> taskBucket;
															#line 3430 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<FutureBucket> futureBucket;
															#line 3430 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> task;
															#line 3436 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 3437 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	BackupConfig config;
															#line 3438 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<Optional<bool>> partitionedLog;
															#line 3444 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<Version> startVersionFuture;
															#line 3456 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	bool backupWorkerEnabled;
															#line 3467 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<Void> watchFuture;
															#line 3471 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<Void> keepRunning;
															#line 3473 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<Optional<Value>> started;
															#line 3474 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<Optional<Value>> taskStarted;
															#line 29650 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via _execute()
															#line 3430 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _executeActor4 final : public Actor<Void>, public ActorCallback< _executeActor4, 0, Void >, public ActorCallback< _executeActor4, 1, Void >, public ActorCallback< _executeActor4, 2, Void >, public ActorCallback< _executeActor4, 3, DatabaseConfiguration >, public ActorCallback< _executeActor4, 4, Void >, public ActorCallback< _executeActor4, 5, Void >, public ActorCallback< _executeActor4, 6, Void >, public ActorCallback< _executeActor4, 7, Void >, public ActorCallback< _executeActor4, 8, Void >, public ActorCallback< _executeActor4, 9, Void >, public FastAllocated<_executeActor4>, public _executeActor4State<_executeActor4> {
															#line 29655 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<_executeActor4>::operator new;
	using FastAllocated<_executeActor4>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< _executeActor4, 0, Void >;
friend struct ActorCallback< _executeActor4, 1, Void >;
friend struct ActorCallback< _executeActor4, 2, Void >;
friend struct ActorCallback< _executeActor4, 3, DatabaseConfiguration >;
friend struct ActorCallback< _executeActor4, 4, Void >;
friend struct ActorCallback< _executeActor4, 5, Void >;
friend struct ActorCallback< _executeActor4, 6, Void >;
friend struct ActorCallback< _executeActor4, 7, Void >;
friend struct ActorCallback< _executeActor4, 8, Void >;
friend struct ActorCallback< _executeActor4, 9, Void >;
															#line 3430 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_executeActor4(Database const& cx,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 29675 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   _executeActor4State<_executeActor4>(cx, taskBucket, futureBucket, task)
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("_execute");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< _executeActor4, 0, Void >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< _executeActor4, 1, Void >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< _executeActor4, 2, Void >*)0, actor_cancelled()); break;
		case 4: this->a_callback_error((ActorCallback< _executeActor4, 3, DatabaseConfiguration >*)0, actor_cancelled()); break;
		case 5: this->a_callback_error((ActorCallback< _executeActor4, 4, Void >*)0, actor_cancelled()); break;
		case 6: this->a_callback_error((ActorCallback< _executeActor4, 5, Void >*)0, actor_cancelled()); break;
		case 7: this->a_callback_error((ActorCallback< _executeActor4, 6, Void >*)0, actor_cancelled()); break;
		case 8: this->a_callback_error((ActorCallback< _executeActor4, 7, Void >*)0, actor_cancelled()); break;
		case 9: this->a_callback_error((ActorCallback< _executeActor4, 8, Void >*)0, actor_cancelled()); break;
		case 10: this->a_callback_error((ActorCallback< _executeActor4, 9, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 3430 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> _execute( Database const& cx, Reference<TaskBucket> const& taskBucket, Reference<FutureBucket> const& futureBucket, Reference<Task> const& task ) {
															#line 3430 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new _executeActor4(cx, taskBucket, futureBucket, task));
															#line 29711 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 3516 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

																#line 29716 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via _finish()
															#line 3517 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class _finishActor9>
															#line 3517 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _finishActor9State {
															#line 29722 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 3517 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_finishActor9State(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 3517 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 3517 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : tr(tr),
															#line 3517 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskBucket(taskBucket),
															#line 3517 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   futureBucket(futureBucket),
															#line 3517 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   task(task),
															#line 3521 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   config(task),
															#line 3522 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   beginVersion(Params.beginVersion().get(task)),
															#line 3524 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   backupRangesFuture(config.backupRanges().getOrThrow(tr)),
															#line 3525 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   destUidValueFuture(config.destUidValue().getOrThrow(tr)),
															#line 3526 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   partitionedLog(config.partitionedLogEnabled().get(tr)),
															#line 3527 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   incrementalBackupOnly(config.incrementalBackupOnly().get(tr))
															#line 29747 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("_finish", reinterpret_cast<unsigned long>(this));

	}
	~_finishActor9State() 
	{
		fdb_probe_actor_destroy("_finish", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 3528 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_0 = success(backupRangesFuture) && success(destUidValueFuture) && success(partitionedLog) && success(incrementalBackupOnly);
															#line 3528 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_finishActor9*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 29764 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<_finishActor9*>(this)->actor_wait_state = 1;
															#line 3528 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< _finishActor9, 0, Void >*>(static_cast<_finishActor9*>(this)));
															#line 29769 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~_finishActor9State();
		static_cast<_finishActor9*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Void const& _,int loopDepth) 
	{
															#line 3530 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		std::vector<KeyRange> backupRanges = backupRangesFuture.get();
															#line 3531 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Key destUidValue = destUidValueFuture.get();
															#line 3534 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!partitionedLog.get().present() || !partitionedLog.get().get())
															#line 29796 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3535 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			for( auto& backupRange : backupRanges ) {
															#line 3536 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				config.startMutationLogs(tr, backupRange, destUidValue);
															#line 29802 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
		}
															#line 3540 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config.stateEnum().set(tr, EBackupState::STATE_RUNNING);
															#line 3542 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		backupFinished = futureBucket->future(tr);
															#line 3545 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Optional<int64_t>> __when_expr_1 = config.initialSnapshotIntervalSeconds().get(tr);
															#line 3545 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor9*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 29813 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<_finishActor9*>(this)->actor_wait_state = 2;
															#line 3545 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< _finishActor9, 1, Optional<int64_t> >*>(static_cast<_finishActor9*>(this)));
															#line 29818 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Void && _,int loopDepth) 
	{
															#line 3530 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		std::vector<KeyRange> backupRanges = backupRangesFuture.get();
															#line 3531 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Key destUidValue = destUidValueFuture.get();
															#line 3534 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!partitionedLog.get().present() || !partitionedLog.get().get())
															#line 29831 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3535 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			for( auto& backupRange : backupRanges ) {
															#line 3536 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				config.startMutationLogs(tr, backupRange, destUidValue);
															#line 29837 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
		}
															#line 3540 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config.stateEnum().set(tr, EBackupState::STATE_RUNNING);
															#line 3542 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		backupFinished = futureBucket->future(tr);
															#line 3545 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Optional<int64_t>> __when_expr_1 = config.initialSnapshotIntervalSeconds().get(tr);
															#line 3545 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor9*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 29848 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<_finishActor9*>(this)->actor_wait_state = 2;
															#line 3545 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< _finishActor9, 1, Optional<int64_t> >*>(static_cast<_finishActor9*>(this)));
															#line 29853 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<_finishActor9*>(this)->actor_wait_state > 0) static_cast<_finishActor9*>(this)->actor_wait_state = 0;
		static_cast<_finishActor9*>(this)->ActorCallback< _finishActor9, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor9, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< _finishActor9, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< _finishActor9, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont2(int loopDepth) 
	{
															#line 3546 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_2 = config.initNewSnapshot(tr, initialSnapshotIntervalSeconds.orDefault(0));
															#line 3546 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor9*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 29927 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont2when1(__when_expr_2.get(), loopDepth); };
		static_cast<_finishActor9*>(this)->actor_wait_state = 3;
															#line 3546 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< _finishActor9, 2, Void >*>(static_cast<_finishActor9*>(this)));
															#line 29932 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1when1(Optional<int64_t> const& __initialSnapshotIntervalSeconds,int loopDepth) 
	{
															#line 3545 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		initialSnapshotIntervalSeconds = __initialSnapshotIntervalSeconds;
															#line 29941 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont2(loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Optional<int64_t> && __initialSnapshotIntervalSeconds,int loopDepth) 
	{
		initialSnapshotIntervalSeconds = std::move(__initialSnapshotIntervalSeconds);
		loopDepth = a_body1cont2(loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<_finishActor9*>(this)->actor_wait_state > 0) static_cast<_finishActor9*>(this)->actor_wait_state = 0;
		static_cast<_finishActor9*>(this)->ActorCallback< _finishActor9, 1, Optional<int64_t> >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor9, 1, Optional<int64_t> >*,Optional<int64_t> const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< _finishActor9, 1, Optional<int64_t> >*,Optional<int64_t> && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< _finishActor9, 1, Optional<int64_t> >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont5(Void const& _,int loopDepth) 
	{
															#line 3550 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!incrementalBackupOnly.get().present() || !incrementalBackupOnly.get().get())
															#line 30008 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3551 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_3 = success(BackupSnapshotDispatchTask::addTask( tr, taskBucket, task, 1, TaskCompletionKey::joinWith(backupFinished)));
															#line 3551 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_finishActor9*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 30014 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1cont5when1(__when_expr_3.get(), loopDepth); };
			static_cast<_finishActor9*>(this)->actor_wait_state = 4;
															#line 3551 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< _finishActor9, 3, Void >*>(static_cast<_finishActor9*>(this)));
															#line 30019 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont6(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont5(Void && _,int loopDepth) 
	{
															#line 3550 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!incrementalBackupOnly.get().present() || !incrementalBackupOnly.get().get())
															#line 30033 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3551 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_3 = success(BackupSnapshotDispatchTask::addTask( tr, taskBucket, task, 1, TaskCompletionKey::joinWith(backupFinished)));
															#line 3551 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_finishActor9*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 30039 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1cont5when1(__when_expr_3.get(), loopDepth); };
			static_cast<_finishActor9*>(this)->actor_wait_state = 4;
															#line 3551 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< _finishActor9, 3, Void >*>(static_cast<_finishActor9*>(this)));
															#line 30044 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont6(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont5(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont5(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<_finishActor9*>(this)->actor_wait_state > 0) static_cast<_finishActor9*>(this)->actor_wait_state = 0;
		static_cast<_finishActor9*>(this)->ActorCallback< _finishActor9, 2, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor9, 2, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< _finishActor9, 2, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< _finishActor9, 2, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 2);

	}
	int a_body1cont6(int loopDepth) 
	{
															#line 3554 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_4 = success(BackupLogsDispatchTask::addTask( tr, taskBucket, task, 1, 0, beginVersion, TaskCompletionKey::joinWith(backupFinished)));
															#line 3554 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor9*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 30123 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1cont6when1(__when_expr_4.get(), loopDepth); };
		static_cast<_finishActor9*>(this)->actor_wait_state = 5;
															#line 3554 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< _finishActor9, 4, Void >*>(static_cast<_finishActor9*>(this)));
															#line 30128 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont7(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont6(loopDepth);

		return loopDepth;
	}
	int a_body1cont7(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont6(loopDepth);

		return loopDepth;
	}
	int a_body1cont5when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont7(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont5when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont7(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose4() 
	{
		if (static_cast<_finishActor9*>(this)->actor_wait_state > 0) static_cast<_finishActor9*>(this)->actor_wait_state = 0;
		static_cast<_finishActor9*>(this)->ActorCallback< _finishActor9, 3, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor9, 3, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont5when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_fire(ActorCallback< _finishActor9, 3, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont5when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_error(ActorCallback< _finishActor9, 3, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 3);

	}
	int a_body1cont8(Void const& _,int loopDepth) 
	{
															#line 3559 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_5 = success( FileBackupFinishedTask::addTask(tr, taskBucket, task, TaskCompletionKey::noSignal(), backupFinished));
															#line 3559 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor9*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 30214 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_5.isReady()) { if (__when_expr_5.isError()) return a_body1Catch1(__when_expr_5.getError(), loopDepth); else return a_body1cont8when1(__when_expr_5.get(), loopDepth); };
		static_cast<_finishActor9*>(this)->actor_wait_state = 6;
															#line 3559 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_5.addCallbackAndClear(static_cast<ActorCallback< _finishActor9, 5, Void >*>(static_cast<_finishActor9*>(this)));
															#line 30219 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont8(Void && _,int loopDepth) 
	{
															#line 3559 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_5 = success( FileBackupFinishedTask::addTask(tr, taskBucket, task, TaskCompletionKey::noSignal(), backupFinished));
															#line 3559 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor9*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 30230 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_5.isReady()) { if (__when_expr_5.isError()) return a_body1Catch1(__when_expr_5.getError(), loopDepth); else return a_body1cont8when1(__when_expr_5.get(), loopDepth); };
		static_cast<_finishActor9*>(this)->actor_wait_state = 6;
															#line 3559 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_5.addCallbackAndClear(static_cast<ActorCallback< _finishActor9, 5, Void >*>(static_cast<_finishActor9*>(this)));
															#line 30235 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont6when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont8(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont6when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont8(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose5() 
	{
		if (static_cast<_finishActor9*>(this)->actor_wait_state > 0) static_cast<_finishActor9*>(this)->actor_wait_state = 0;
		static_cast<_finishActor9*>(this)->ActorCallback< _finishActor9, 4, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor9, 4, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont6when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_fire(ActorCallback< _finishActor9, 4, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont6when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_error(ActorCallback< _finishActor9, 4, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 4);

	}
	int a_body1cont9(Void const& _,int loopDepth) 
	{
															#line 3562 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_6 = taskBucket->finish(tr, task);
															#line 3562 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor9*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 30309 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_6.isReady()) { if (__when_expr_6.isError()) return a_body1Catch1(__when_expr_6.getError(), loopDepth); else return a_body1cont9when1(__when_expr_6.get(), loopDepth); };
		static_cast<_finishActor9*>(this)->actor_wait_state = 7;
															#line 3562 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_6.addCallbackAndClear(static_cast<ActorCallback< _finishActor9, 6, Void >*>(static_cast<_finishActor9*>(this)));
															#line 30314 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont9(Void && _,int loopDepth) 
	{
															#line 3562 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_6 = taskBucket->finish(tr, task);
															#line 3562 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor9*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 30325 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_6.isReady()) { if (__when_expr_6.isError()) return a_body1Catch1(__when_expr_6.getError(), loopDepth); else return a_body1cont9when1(__when_expr_6.get(), loopDepth); };
		static_cast<_finishActor9*>(this)->actor_wait_state = 7;
															#line 3562 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_6.addCallbackAndClear(static_cast<ActorCallback< _finishActor9, 6, Void >*>(static_cast<_finishActor9*>(this)));
															#line 30330 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont8when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont9(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont8when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont9(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose6() 
	{
		if (static_cast<_finishActor9*>(this)->actor_wait_state > 0) static_cast<_finishActor9*>(this)->actor_wait_state = 0;
		static_cast<_finishActor9*>(this)->ActorCallback< _finishActor9, 5, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor9, 5, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont8when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_fire(ActorCallback< _finishActor9, 5, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont8when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_error(ActorCallback< _finishActor9, 5, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 5);

	}
	int a_body1cont10(Void const& _,int loopDepth) 
	{
															#line 3564 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_finishActor9*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_finishActor9State(); static_cast<_finishActor9*>(this)->destroy(); return 0; }
															#line 30402 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_finishActor9*>(this)->SAV< Void >::value()) Void(Void());
		this->~_finishActor9State();
		static_cast<_finishActor9*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont10(Void && _,int loopDepth) 
	{
															#line 3564 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_finishActor9*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_finishActor9State(); static_cast<_finishActor9*>(this)->destroy(); return 0; }
															#line 30414 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_finishActor9*>(this)->SAV< Void >::value()) Void(Void());
		this->~_finishActor9State();
		static_cast<_finishActor9*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont9when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont10(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont9when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont10(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose7() 
	{
		if (static_cast<_finishActor9*>(this)->actor_wait_state > 0) static_cast<_finishActor9*>(this)->actor_wait_state = 0;
		static_cast<_finishActor9*>(this)->ActorCallback< _finishActor9, 6, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor9, 6, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1cont9when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 6);

	}
	void a_callback_fire(ActorCallback< _finishActor9, 6, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1cont9when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 6);

	}
	void a_callback_error(ActorCallback< _finishActor9, 6, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 6);

	}
															#line 3517 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 3517 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskBucket> taskBucket;
															#line 3517 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<FutureBucket> futureBucket;
															#line 3517 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> task;
															#line 3521 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	BackupConfig config;
															#line 3522 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version beginVersion;
															#line 3524 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<std::vector<KeyRange>> backupRangesFuture;
															#line 3525 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<Key> destUidValueFuture;
															#line 3526 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<Optional<bool>> partitionedLog;
															#line 3527 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<Optional<bool>> incrementalBackupOnly;
															#line 3542 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskFuture> backupFinished;
															#line 3545 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<int64_t> initialSnapshotIntervalSeconds;
															#line 30509 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via _finish()
															#line 3517 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _finishActor9 final : public Actor<Void>, public ActorCallback< _finishActor9, 0, Void >, public ActorCallback< _finishActor9, 1, Optional<int64_t> >, public ActorCallback< _finishActor9, 2, Void >, public ActorCallback< _finishActor9, 3, Void >, public ActorCallback< _finishActor9, 4, Void >, public ActorCallback< _finishActor9, 5, Void >, public ActorCallback< _finishActor9, 6, Void >, public FastAllocated<_finishActor9>, public _finishActor9State<_finishActor9> {
															#line 30514 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<_finishActor9>::operator new;
	using FastAllocated<_finishActor9>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< _finishActor9, 0, Void >;
friend struct ActorCallback< _finishActor9, 1, Optional<int64_t> >;
friend struct ActorCallback< _finishActor9, 2, Void >;
friend struct ActorCallback< _finishActor9, 3, Void >;
friend struct ActorCallback< _finishActor9, 4, Void >;
friend struct ActorCallback< _finishActor9, 5, Void >;
friend struct ActorCallback< _finishActor9, 6, Void >;
															#line 3517 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_finishActor9(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 30531 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   _finishActor9State<_finishActor9>(tr, taskBucket, futureBucket, task)
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("_finish");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< _finishActor9, 0, Void >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< _finishActor9, 1, Optional<int64_t> >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< _finishActor9, 2, Void >*)0, actor_cancelled()); break;
		case 4: this->a_callback_error((ActorCallback< _finishActor9, 3, Void >*)0, actor_cancelled()); break;
		case 5: this->a_callback_error((ActorCallback< _finishActor9, 4, Void >*)0, actor_cancelled()); break;
		case 6: this->a_callback_error((ActorCallback< _finishActor9, 5, Void >*)0, actor_cancelled()); break;
		case 7: this->a_callback_error((ActorCallback< _finishActor9, 6, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 3517 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> _finish( Reference<ReadYourWritesTransaction> const& tr, Reference<TaskBucket> const& taskBucket, Reference<FutureBucket> const& futureBucket, Reference<Task> const& task ) {
															#line 3517 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new _finishActor9(tr, taskBucket, futureBucket, task));
															#line 30564 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 3566 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

																#line 30569 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via addTask()
															#line 3567 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class AddTaskActor7>
															#line 3567 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class AddTaskActor7State {
															#line 30575 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 3567 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	AddTaskActor7State(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,UID const& uid,TaskCompletionKey const& completionKey,Reference<TaskFuture> const& waitFor = Reference<TaskFuture>()) 
															#line 3567 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 3567 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : tr(tr),
															#line 3567 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskBucket(taskBucket),
															#line 3567 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   uid(uid),
															#line 3567 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   completionKey(completionKey),
															#line 3567 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   waitFor(waitFor)
															#line 30590 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("addTask", reinterpret_cast<unsigned long>(this));

	}
	~AddTaskActor7State() 
	{
		fdb_probe_actor_destroy("addTask", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 3572 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Key> __when_expr_0 = addBackupTask(StartFullBackupTaskFunc::name, StartFullBackupTaskFunc::version, tr, taskBucket, completionKey, BackupConfig(uid), waitFor);
															#line 3572 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<AddTaskActor7*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 30607 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<AddTaskActor7*>(this)->actor_wait_state = 1;
															#line 3572 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< AddTaskActor7, 0, Key >*>(static_cast<AddTaskActor7*>(this)));
															#line 30612 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~AddTaskActor7State();
		static_cast<AddTaskActor7*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Key const& key,int loopDepth) 
	{
															#line 3579 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<AddTaskActor7*>(this)->SAV<Key>::futures) { (void)(key); this->~AddTaskActor7State(); static_cast<AddTaskActor7*>(this)->destroy(); return 0; }
															#line 30635 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<AddTaskActor7*>(this)->SAV< Key >::value()) Key(key);
		this->~AddTaskActor7State();
		static_cast<AddTaskActor7*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont1(Key && key,int loopDepth) 
	{
															#line 3579 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<AddTaskActor7*>(this)->SAV<Key>::futures) { (void)(key); this->~AddTaskActor7State(); static_cast<AddTaskActor7*>(this)->destroy(); return 0; }
															#line 30647 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<AddTaskActor7*>(this)->SAV< Key >::value()) Key(key);
		this->~AddTaskActor7State();
		static_cast<AddTaskActor7*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1when1(Key const& key,int loopDepth) 
	{
		loopDepth = a_body1cont1(key, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Key && key,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(key), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<AddTaskActor7*>(this)->actor_wait_state > 0) static_cast<AddTaskActor7*>(this)->actor_wait_state = 0;
		static_cast<AddTaskActor7*>(this)->ActorCallback< AddTaskActor7, 0, Key >::remove();

	}
	void a_callback_fire(ActorCallback< AddTaskActor7, 0, Key >*,Key const& value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< AddTaskActor7, 0, Key >*,Key && value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< AddTaskActor7, 0, Key >*,Error err) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 0);

	}
															#line 3567 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 3567 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskBucket> taskBucket;
															#line 3567 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	UID uid;
															#line 3567 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	TaskCompletionKey completionKey;
															#line 3567 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskFuture> waitFor;
															#line 30728 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via addTask()
															#line 3567 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class AddTaskActor7 final : public Actor<Key>, public ActorCallback< AddTaskActor7, 0, Key >, public FastAllocated<AddTaskActor7>, public AddTaskActor7State<AddTaskActor7> {
															#line 30733 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<AddTaskActor7>::operator new;
	using FastAllocated<AddTaskActor7>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Key>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< AddTaskActor7, 0, Key >;
															#line 3567 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	AddTaskActor7(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,UID const& uid,TaskCompletionKey const& completionKey,Reference<TaskFuture> const& waitFor = Reference<TaskFuture>()) 
															#line 30744 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Key>(),
		   AddTaskActor7State<AddTaskActor7>(tr, taskBucket, uid, completionKey, waitFor)
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("addTask");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< AddTaskActor7, 0, Key >*)0, actor_cancelled()); break;
		}

	}
};
															#line 3567 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Key> addTask( Reference<ReadYourWritesTransaction> const& tr, Reference<TaskBucket> const& taskBucket, UID const& uid, TaskCompletionKey const& completionKey, Reference<TaskFuture> const& waitFor = Reference<TaskFuture>() ) {
															#line 3567 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Key>(new AddTaskActor7(tr, taskBucket, uid, completionKey, waitFor));
															#line 30771 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 3581 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

	StringRef getName() const override { return name; };

	Future<Void> execute(Database cx,
	                     Reference<TaskBucket> tb,
	                     Reference<FutureBucket> fb,
	                     Reference<Task> task) override {
		return _execute(cx, tb, fb, task);
	};
	Future<Void> finish(Reference<ReadYourWritesTransaction> tr,
	                    Reference<TaskBucket> tb,
	                    Reference<FutureBucket> fb,
	                    Reference<Task> task) override {
		return _finish(tr, tb, fb, task);
	};
};
StringRef StartFullBackupTaskFunc::name = "file_backup_start_5.2"_sr;
REGISTER_TASKFUNC(StartFullBackupTaskFunc);

struct RestoreCompleteTaskFunc : RestoreTaskFuncBase {
																#line 30795 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via _finish()
															#line 3601 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class _finishActor10>
															#line 3601 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _finishActor10State {
															#line 30801 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 3601 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_finishActor10State(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 3601 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 3601 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : tr(tr),
															#line 3601 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskBucket(taskBucket),
															#line 3601 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   futureBucket(futureBucket),
															#line 3601 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   task(task)
															#line 30814 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("_finish", reinterpret_cast<unsigned long>(this));

	}
	~_finishActor10State() 
	{
		fdb_probe_actor_destroy("_finish", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 3605 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_0 = checkTaskVersion(tr->getDatabase(), task, name, version);
															#line 3605 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_finishActor10*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 30831 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<_finishActor10*>(this)->actor_wait_state = 1;
															#line 3605 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< _finishActor10, 0, Void >*>(static_cast<_finishActor10*>(this)));
															#line 30836 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~_finishActor10State();
		static_cast<_finishActor10*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Void const& _,int loopDepth) 
	{
															#line 3607 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restore = RestoreConfig(task);
															#line 3608 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restore.stateEnum().set(tr, ERestoreState::COMPLETED);
															#line 3609 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<bool> __when_expr_1 = restore.unlockDBAfterRestore().getD(tr, Snapshot::False, true);
															#line 3609 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor10*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 30865 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<_finishActor10*>(this)->actor_wait_state = 2;
															#line 3609 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< _finishActor10, 1, bool >*>(static_cast<_finishActor10*>(this)));
															#line 30870 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Void && _,int loopDepth) 
	{
															#line 3607 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restore = RestoreConfig(task);
															#line 3608 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restore.stateEnum().set(tr, ERestoreState::COMPLETED);
															#line 3609 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<bool> __when_expr_1 = restore.unlockDBAfterRestore().getD(tr, Snapshot::False, true);
															#line 3609 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor10*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 30885 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<_finishActor10*>(this)->actor_wait_state = 2;
															#line 3609 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< _finishActor10, 1, bool >*>(static_cast<_finishActor10*>(this)));
															#line 30890 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<_finishActor10*>(this)->actor_wait_state > 0) static_cast<_finishActor10*>(this)->actor_wait_state = 0;
		static_cast<_finishActor10*>(this)->ActorCallback< _finishActor10, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor10, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< _finishActor10, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< _finishActor10, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont2(int loopDepth) 
	{
															#line 3611 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->atomicOp(metadataVersionKey, metadataVersionRequiredValue, MutationRef::SetVersionstampedValue);
															#line 3613 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restore.fileSet().clear(tr);
															#line 3623 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restore.clearApplyMutationsKeys(tr);
															#line 3625 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_2 = taskBucket->finish(tr, task);
															#line 3625 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor10*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 30970 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont2when1(__when_expr_2.get(), loopDepth); };
		static_cast<_finishActor10*>(this)->actor_wait_state = 3;
															#line 3625 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< _finishActor10, 2, Void >*>(static_cast<_finishActor10*>(this)));
															#line 30975 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1when1(bool const& __unlockDB,int loopDepth) 
	{
															#line 3609 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		unlockDB = __unlockDB;
															#line 30984 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont2(loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(bool && __unlockDB,int loopDepth) 
	{
		unlockDB = std::move(__unlockDB);
		loopDepth = a_body1cont2(loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<_finishActor10*>(this)->actor_wait_state > 0) static_cast<_finishActor10*>(this)->actor_wait_state = 0;
		static_cast<_finishActor10*>(this)->ActorCallback< _finishActor10, 1, bool >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor10, 1, bool >*,bool const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< _finishActor10, 1, bool >*,bool && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< _finishActor10, 1, bool >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont3(Void const& _,int loopDepth) 
	{
															#line 3626 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (unlockDB)
															#line 31051 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3627 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_3 = unlockDatabase(tr, restore.getUid());
															#line 3627 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_finishActor10*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 31057 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1cont3when1(__when_expr_3.get(), loopDepth); };
			static_cast<_finishActor10*>(this)->actor_wait_state = 4;
															#line 3627 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< _finishActor10, 3, Void >*>(static_cast<_finishActor10*>(this)));
															#line 31062 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont4(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont3(Void && _,int loopDepth) 
	{
															#line 3626 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (unlockDB)
															#line 31076 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3627 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_3 = unlockDatabase(tr, restore.getUid());
															#line 3627 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_finishActor10*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 31082 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1cont3when1(__when_expr_3.get(), loopDepth); };
			static_cast<_finishActor10*>(this)->actor_wait_state = 4;
															#line 3627 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< _finishActor10, 3, Void >*>(static_cast<_finishActor10*>(this)));
															#line 31087 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont4(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<_finishActor10*>(this)->actor_wait_state > 0) static_cast<_finishActor10*>(this)->actor_wait_state = 0;
		static_cast<_finishActor10*>(this)->ActorCallback< _finishActor10, 2, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor10, 2, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< _finishActor10, 2, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< _finishActor10, 2, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 2);

	}
	int a_body1cont4(int loopDepth) 
	{
															#line 3630 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_finishActor10*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_finishActor10State(); static_cast<_finishActor10*>(this)->destroy(); return 0; }
															#line 31164 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_finishActor10*>(this)->SAV< Void >::value()) Void(Void());
		this->~_finishActor10State();
		static_cast<_finishActor10*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont5(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont4(loopDepth);

		return loopDepth;
	}
	int a_body1cont5(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont4(loopDepth);

		return loopDepth;
	}
	int a_body1cont3when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont5(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont3when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont5(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose4() 
	{
		if (static_cast<_finishActor10*>(this)->actor_wait_state > 0) static_cast<_finishActor10*>(this)->actor_wait_state = 0;
		static_cast<_finishActor10*>(this)->ActorCallback< _finishActor10, 3, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor10, 3, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont3when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_fire(ActorCallback< _finishActor10, 3, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont3when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_error(ActorCallback< _finishActor10, 3, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 3);

	}
															#line 3601 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 3601 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskBucket> taskBucket;
															#line 3601 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<FutureBucket> futureBucket;
															#line 3601 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> task;
															#line 3607 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	RestoreConfig restore;
															#line 3609 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	bool unlockDB;
															#line 31259 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via _finish()
															#line 3601 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _finishActor10 final : public Actor<Void>, public ActorCallback< _finishActor10, 0, Void >, public ActorCallback< _finishActor10, 1, bool >, public ActorCallback< _finishActor10, 2, Void >, public ActorCallback< _finishActor10, 3, Void >, public FastAllocated<_finishActor10>, public _finishActor10State<_finishActor10> {
															#line 31264 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<_finishActor10>::operator new;
	using FastAllocated<_finishActor10>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< _finishActor10, 0, Void >;
friend struct ActorCallback< _finishActor10, 1, bool >;
friend struct ActorCallback< _finishActor10, 2, Void >;
friend struct ActorCallback< _finishActor10, 3, Void >;
															#line 3601 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_finishActor10(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 31278 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   _finishActor10State<_finishActor10>(tr, taskBucket, futureBucket, task)
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("_finish");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< _finishActor10, 0, Void >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< _finishActor10, 1, bool >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< _finishActor10, 2, Void >*)0, actor_cancelled()); break;
		case 4: this->a_callback_error((ActorCallback< _finishActor10, 3, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 3601 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> _finish( Reference<ReadYourWritesTransaction> const& tr, Reference<TaskBucket> const& taskBucket, Reference<FutureBucket> const& futureBucket, Reference<Task> const& task ) {
															#line 3601 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new _finishActor10(tr, taskBucket, futureBucket, task));
															#line 31308 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 3632 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

																#line 31313 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via addTask()
															#line 3633 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class AddTaskActor8>
															#line 3633 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class AddTaskActor8State {
															#line 31319 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 3633 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	AddTaskActor8State(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<Task> const& parentTask,TaskCompletionKey const& completionKey,Reference<TaskFuture> const& waitFor = Reference<TaskFuture>()) 
															#line 3633 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 3633 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : tr(tr),
															#line 3633 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskBucket(taskBucket),
															#line 3633 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   parentTask(parentTask),
															#line 3633 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   completionKey(completionKey),
															#line 3633 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   waitFor(waitFor)
															#line 31334 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("addTask", reinterpret_cast<unsigned long>(this));

	}
	~AddTaskActor8State() 
	{
		fdb_probe_actor_destroy("addTask", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 3638 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Key> __when_expr_0 = completionKey.get(tr, taskBucket);
															#line 3638 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<AddTaskActor8*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 31351 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<AddTaskActor8*>(this)->actor_wait_state = 1;
															#line 3638 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< AddTaskActor8, 0, Key >*>(static_cast<AddTaskActor8*>(this)));
															#line 31356 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~AddTaskActor8State();
		static_cast<AddTaskActor8*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Key const& doneKey,int loopDepth) 
	{
															#line 3639 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		task = Reference<Task>(new Task(RestoreCompleteTaskFunc::name, RestoreCompleteTaskFunc::version, doneKey));
															#line 3642 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = RestoreConfig(parentTask).toTask(tr, task);
															#line 3642 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AddTaskActor8*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 31383 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<AddTaskActor8*>(this)->actor_wait_state = 2;
															#line 3642 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< AddTaskActor8, 1, Void >*>(static_cast<AddTaskActor8*>(this)));
															#line 31388 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Key && doneKey,int loopDepth) 
	{
															#line 3639 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		task = Reference<Task>(new Task(RestoreCompleteTaskFunc::name, RestoreCompleteTaskFunc::version, doneKey));
															#line 3642 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = RestoreConfig(parentTask).toTask(tr, task);
															#line 3642 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AddTaskActor8*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 31401 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<AddTaskActor8*>(this)->actor_wait_state = 2;
															#line 3642 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< AddTaskActor8, 1, Void >*>(static_cast<AddTaskActor8*>(this)));
															#line 31406 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1when1(Key const& doneKey,int loopDepth) 
	{
		loopDepth = a_body1cont1(doneKey, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Key && doneKey,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(doneKey), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<AddTaskActor8*>(this)->actor_wait_state > 0) static_cast<AddTaskActor8*>(this)->actor_wait_state = 0;
		static_cast<AddTaskActor8*>(this)->ActorCallback< AddTaskActor8, 0, Key >::remove();

	}
	void a_callback_fire(ActorCallback< AddTaskActor8, 0, Key >*,Key const& value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< AddTaskActor8, 0, Key >*,Key && value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< AddTaskActor8, 0, Key >*,Error err) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont2(Void const& _,int loopDepth) 
	{
															#line 3644 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!waitFor)
															#line 31478 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3645 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<AddTaskActor8*>(this)->SAV<Key>::futures) { (void)(taskBucket->addTask(tr, task)); this->~AddTaskActor8State(); static_cast<AddTaskActor8*>(this)->destroy(); return 0; }
															#line 31482 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<AddTaskActor8*>(this)->SAV< Key >::value()) Key(taskBucket->addTask(tr, task));
			this->~AddTaskActor8State();
			static_cast<AddTaskActor8*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 3648 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_2 = waitFor->onSetAddTask(tr, taskBucket, task);
															#line 3648 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AddTaskActor8*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 31492 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont2when1(__when_expr_2.get(), loopDepth); };
		static_cast<AddTaskActor8*>(this)->actor_wait_state = 3;
															#line 3648 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< AddTaskActor8, 2, Void >*>(static_cast<AddTaskActor8*>(this)));
															#line 31497 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont2(Void && _,int loopDepth) 
	{
															#line 3644 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!waitFor)
															#line 31506 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3645 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<AddTaskActor8*>(this)->SAV<Key>::futures) { (void)(taskBucket->addTask(tr, task)); this->~AddTaskActor8State(); static_cast<AddTaskActor8*>(this)->destroy(); return 0; }
															#line 31510 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<AddTaskActor8*>(this)->SAV< Key >::value()) Key(taskBucket->addTask(tr, task));
			this->~AddTaskActor8State();
			static_cast<AddTaskActor8*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 3648 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_2 = waitFor->onSetAddTask(tr, taskBucket, task);
															#line 3648 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AddTaskActor8*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 31520 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont2when1(__when_expr_2.get(), loopDepth); };
		static_cast<AddTaskActor8*>(this)->actor_wait_state = 3;
															#line 3648 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< AddTaskActor8, 2, Void >*>(static_cast<AddTaskActor8*>(this)));
															#line 31525 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<AddTaskActor8*>(this)->actor_wait_state > 0) static_cast<AddTaskActor8*>(this)->actor_wait_state = 0;
		static_cast<AddTaskActor8*>(this)->ActorCallback< AddTaskActor8, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< AddTaskActor8, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< AddTaskActor8, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< AddTaskActor8, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont3(Void const& _,int loopDepth) 
	{
															#line 3649 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<AddTaskActor8*>(this)->SAV<Key>::futures) { (void)("OnSetAddTask"_sr); this->~AddTaskActor8State(); static_cast<AddTaskActor8*>(this)->destroy(); return 0; }
															#line 31597 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<AddTaskActor8*>(this)->SAV< Key >::value()) Key("OnSetAddTask"_sr);
		this->~AddTaskActor8State();
		static_cast<AddTaskActor8*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont3(Void && _,int loopDepth) 
	{
															#line 3649 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<AddTaskActor8*>(this)->SAV<Key>::futures) { (void)("OnSetAddTask"_sr); this->~AddTaskActor8State(); static_cast<AddTaskActor8*>(this)->destroy(); return 0; }
															#line 31609 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<AddTaskActor8*>(this)->SAV< Key >::value()) Key("OnSetAddTask"_sr);
		this->~AddTaskActor8State();
		static_cast<AddTaskActor8*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<AddTaskActor8*>(this)->actor_wait_state > 0) static_cast<AddTaskActor8*>(this)->actor_wait_state = 0;
		static_cast<AddTaskActor8*>(this)->ActorCallback< AddTaskActor8, 2, Void >::remove();

	}
	void a_callback_fire(ActorCallback< AddTaskActor8, 2, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< AddTaskActor8, 2, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< AddTaskActor8, 2, Void >*,Error err) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 2);

	}
															#line 3633 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 3633 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskBucket> taskBucket;
															#line 3633 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> parentTask;
															#line 3633 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	TaskCompletionKey completionKey;
															#line 3633 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskFuture> waitFor;
															#line 3639 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> task;
															#line 31692 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via addTask()
															#line 3633 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class AddTaskActor8 final : public Actor<Key>, public ActorCallback< AddTaskActor8, 0, Key >, public ActorCallback< AddTaskActor8, 1, Void >, public ActorCallback< AddTaskActor8, 2, Void >, public FastAllocated<AddTaskActor8>, public AddTaskActor8State<AddTaskActor8> {
															#line 31697 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<AddTaskActor8>::operator new;
	using FastAllocated<AddTaskActor8>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Key>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< AddTaskActor8, 0, Key >;
friend struct ActorCallback< AddTaskActor8, 1, Void >;
friend struct ActorCallback< AddTaskActor8, 2, Void >;
															#line 3633 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	AddTaskActor8(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<Task> const& parentTask,TaskCompletionKey const& completionKey,Reference<TaskFuture> const& waitFor = Reference<TaskFuture>()) 
															#line 31710 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Key>(),
		   AddTaskActor8State<AddTaskActor8>(tr, taskBucket, parentTask, completionKey, waitFor)
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("addTask");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< AddTaskActor8, 0, Key >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< AddTaskActor8, 1, Void >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< AddTaskActor8, 2, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 3633 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Key> addTask( Reference<ReadYourWritesTransaction> const& tr, Reference<TaskBucket> const& taskBucket, Reference<Task> const& parentTask, TaskCompletionKey const& completionKey, Reference<TaskFuture> const& waitFor = Reference<TaskFuture>() ) {
															#line 3633 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Key>(new AddTaskActor8(tr, taskBucket, parentTask, completionKey, waitFor));
															#line 31739 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 3651 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

	static StringRef name;
	static constexpr uint32_t version = 1;
	StringRef getName() const override { return name; };

	Future<Void> execute(Database cx,
	                     Reference<TaskBucket> tb,
	                     Reference<FutureBucket> fb,
	                     Reference<Task> task) override {
		return Void();
	};
	Future<Void> finish(Reference<ReadYourWritesTransaction> tr,
	                    Reference<TaskBucket> tb,
	                    Reference<FutureBucket> fb,
	                    Reference<Task> task) override {
		return _finish(tr, tb, fb, task);
	};
};
StringRef RestoreCompleteTaskFunc::name = "restore_complete"_sr;
REGISTER_TASKFUNC(RestoreCompleteTaskFunc);

struct RestoreFileTaskFuncBase : RestoreTaskFuncBase {
	struct InputParams {
		static TaskParam<RestoreFile> inputFile() { return __FUNCTION__sr; }
		static TaskParam<int64_t> readOffset() { return __FUNCTION__sr; }
		static TaskParam<int64_t> readLen() { return __FUNCTION__sr; }
	} Params;

	std::string toString(Reference<Task> task) const override {
		return format("fileName '%s' readLen %lld readOffset %lld",
		              Params.inputFile().get(task).fileName.c_str(),
		              Params.readLen().get(task),
		              Params.readOffset().get(task));
	}
};

struct RestoreRangeTaskFunc : RestoreFileTaskFuncBase {
	static struct : InputParams {
		// The range of data that the (possibly empty) data represented, which is set if it intersects the target
		// restore range
		static TaskParam<KeyRange> originalFileRange() { return __FUNCTION__sr; }
		static TaskParam<std::vector<KeyRange>> originalFileRanges() { return __FUNCTION__sr; }

		static std::vector<KeyRange> getOriginalFileRanges(Reference<Task> task) {
			if (originalFileRanges().exists(task)) {
				return Params.originalFileRanges().get(task);
			} else {
				std::vector<KeyRange> range;
				if (originalFileRange().exists(task))
					range.push_back(Params.originalFileRange().get(task));
				return range;
			}
		}
	} Params;

	std::string toString(Reference<Task> task) const override {
		std::string returnStr = RestoreFileTaskFuncBase::toString(task);
		for (auto& range : Params.getOriginalFileRanges(task))
			returnStr += format("  originalFileRange '%s'", printable(range).c_str());
		return returnStr;
	}

																#line 31805 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via _validTenantAccess()
															#line 3713 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class _validTenantAccessActor>
															#line 3713 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _validTenantAccessActorState {
															#line 31811 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 3713 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_validTenantAccessActorState(KeyRef const& key,Reference<TenantEntryCache<Void>> const& tenantCache) 
															#line 3713 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 3713 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : key(key),
															#line 3713 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tenantCache(tenantCache)
															#line 31820 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("_validTenantAccess", reinterpret_cast<unsigned long>(this));

	}
	~_validTenantAccessActorState() 
	{
		fdb_probe_actor_destroy("_validTenantAccess", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 3714 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (isSystemKey(key))
															#line 31835 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 3715 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (!static_cast<_validTenantAccessActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_validTenantAccessActorState(); static_cast<_validTenantAccessActor*>(this)->destroy(); return 0; }
															#line 31839 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				new (&static_cast<_validTenantAccessActor*>(this)->SAV< Void >::value()) Void(Void());
				this->~_validTenantAccessActorState();
				static_cast<_validTenantAccessActor*>(this)->finishSendAndDelPromiseRef();
				return 0;
			}
															#line 3717 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tenantId = TenantAPI::extractTenantIdFromKeyRef(key);
															#line 3718 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Optional<TenantEntryCachePayload<Void>>> __when_expr_0 = tenantCache->getById(tenantId);
															#line 3718 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_validTenantAccessActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 31851 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<_validTenantAccessActor*>(this)->actor_wait_state = 1;
															#line 3718 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< _validTenantAccessActor, 0, Optional<TenantEntryCachePayload<Void>> >*>(static_cast<_validTenantAccessActor*>(this)));
															#line 31856 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~_validTenantAccessActorState();
		static_cast<_validTenantAccessActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Optional<TenantEntryCachePayload<Void>> const& payload,int loopDepth) 
	{
															#line 3719 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		ASSERT(payload.present());
															#line 3720 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_validTenantAccessActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_validTenantAccessActorState(); static_cast<_validTenantAccessActor*>(this)->destroy(); return 0; }
															#line 31881 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_validTenantAccessActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~_validTenantAccessActorState();
		static_cast<_validTenantAccessActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont1(Optional<TenantEntryCachePayload<Void>> && payload,int loopDepth) 
	{
															#line 3719 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		ASSERT(payload.present());
															#line 3720 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_validTenantAccessActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_validTenantAccessActorState(); static_cast<_validTenantAccessActor*>(this)->destroy(); return 0; }
															#line 31895 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_validTenantAccessActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~_validTenantAccessActorState();
		static_cast<_validTenantAccessActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1when1(Optional<TenantEntryCachePayload<Void>> const& payload,int loopDepth) 
	{
		loopDepth = a_body1cont1(payload, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Optional<TenantEntryCachePayload<Void>> && payload,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(payload), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<_validTenantAccessActor*>(this)->actor_wait_state > 0) static_cast<_validTenantAccessActor*>(this)->actor_wait_state = 0;
		static_cast<_validTenantAccessActor*>(this)->ActorCallback< _validTenantAccessActor, 0, Optional<TenantEntryCachePayload<Void>> >::remove();

	}
	void a_callback_fire(ActorCallback< _validTenantAccessActor, 0, Optional<TenantEntryCachePayload<Void>> >*,Optional<TenantEntryCachePayload<Void>> const& value) 
	{
		fdb_probe_actor_enter("_validTenantAccess", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_validTenantAccess", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< _validTenantAccessActor, 0, Optional<TenantEntryCachePayload<Void>> >*,Optional<TenantEntryCachePayload<Void>> && value) 
	{
		fdb_probe_actor_enter("_validTenantAccess", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_validTenantAccess", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< _validTenantAccessActor, 0, Optional<TenantEntryCachePayload<Void>> >*,Error err) 
	{
		fdb_probe_actor_enter("_validTenantAccess", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_validTenantAccess", reinterpret_cast<unsigned long>(this), 0);

	}
															#line 3713 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	KeyRef key;
															#line 3713 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TenantEntryCache<Void>> tenantCache;
															#line 3717 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int64_t tenantId;
															#line 31972 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via _validTenantAccess()
															#line 3713 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _validTenantAccessActor final : public Actor<Void>, public ActorCallback< _validTenantAccessActor, 0, Optional<TenantEntryCachePayload<Void>> >, public FastAllocated<_validTenantAccessActor>, public _validTenantAccessActorState<_validTenantAccessActor> {
															#line 31977 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<_validTenantAccessActor>::operator new;
	using FastAllocated<_validTenantAccessActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< _validTenantAccessActor, 0, Optional<TenantEntryCachePayload<Void>> >;
															#line 3713 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_validTenantAccessActor(KeyRef const& key,Reference<TenantEntryCache<Void>> const& tenantCache) 
															#line 31988 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   _validTenantAccessActorState<_validTenantAccessActor>(key, tenantCache)
	{
		fdb_probe_actor_enter("_validTenantAccess", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("_validTenantAccess");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("_validTenantAccess", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< _validTenantAccessActor, 0, Optional<TenantEntryCachePayload<Void>> >*)0, actor_cancelled()); break;
		}

	}
};
															#line 3713 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> _validTenantAccess( KeyRef const& key, Reference<TenantEntryCache<Void>> const& tenantCache ) {
															#line 3713 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new _validTenantAccessActor(key, tenantCache));
															#line 32015 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 3722 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

																#line 32020 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via _execute()
															#line 3723 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class _executeActor5>
															#line 3723 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _executeActor5State {
															#line 32026 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 3723 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_executeActor5State(Database const& cx,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 3723 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 3723 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : cx(cx),
															#line 3723 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskBucket(taskBucket),
															#line 3723 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   futureBucket(futureBucket),
															#line 3723 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   task(task),
															#line 3727 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   restore(task),
															#line 3729 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   rangeFile(Params.inputFile().get(task)),
															#line 3730 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   readOffset(Params.readOffset().get(task)),
															#line 3731 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   readLen(Params.readLen().get(task))
															#line 32047 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("_execute", reinterpret_cast<unsigned long>(this));

	}
	~_executeActor5State() 
	{
		fdb_probe_actor_destroy("_execute", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 3733 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent("FileRestoreRangeStart") .suppressFor(60) .detail("RestoreUID", restore.getUid()) .detail("FileName", rangeFile.fileName) .detail("FileVersion", rangeFile.version) .detail("FileSize", rangeFile.fileSize) .detail("ReadOffset", readOffset) .detail("ReadLen", readLen) .detail("TaskInstance", THIS_ADDR);
															#line 3743 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr = Reference<ReadYourWritesTransaction>(new ReadYourWritesTransaction(cx));
															#line 3744 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			bc = Future<Reference<IBackupContainer>>();
															#line 3745 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			restoreRanges = Future<std::vector<KeyRange>>();
															#line 3746 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			addPrefix = Future<Key>();
															#line 3747 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			removePrefix = Future<Key>();
															#line 3749 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			;
															#line 32074 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = a_body1loopHead1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~_executeActor5State();
		static_cast<_executeActor5*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 3771 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Reference<IAsyncFile>> __when_expr_4 = bc.get()->readFile(rangeFile.fileName);
															#line 3771 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor5*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 32099 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1cont1when1(__when_expr_4.get(), loopDepth); };
		static_cast<_executeActor5*>(this)->actor_wait_state = 5;
															#line 3771 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< _executeActor5, 4, Reference<IAsyncFile> >*>(static_cast<_executeActor5*>(this)));
															#line 32104 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1(int loopDepth) 
	{
		try {
															#line 3751 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 3752 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 3754 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Reference<IBackupContainer>> __when_expr_0 = restore.sourceContainer().getOrThrow(tr);
															#line 3754 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor5*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 32127 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1loopBody1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1loopBody1when1(__when_expr_0.get(), loopDepth); };
			static_cast<_executeActor5*>(this)->actor_wait_state = 1;
															#line 3754 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< _executeActor5, 0, Reference<IBackupContainer> >*>(static_cast<_executeActor5*>(this)));
															#line 32132 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1break1(int loopDepth) 
	{
		try {
			return a_body1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1loopHead1(0);

		return loopDepth;
	}
	int a_body1loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 3767 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_3 = tr->onError(e);
															#line 3767 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor5*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 32169 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1Catch1(__when_expr_3.getError(), std::max(0, loopDepth - 1)); else return a_body1loopBody1Catch1when1(__when_expr_3.get(), loopDepth); };
			static_cast<_executeActor5*>(this)->actor_wait_state = 4;
															#line 3767 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< _executeActor5, 3, Void >*>(static_cast<_executeActor5*>(this)));
															#line 32174 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1loopBody1cont2(Reference<IBackupContainer> const& _bc,int loopDepth) 
	{
															#line 3755 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		bc = getBackupContainerWithProxy(_bc);
															#line 3756 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restoreRanges = restore.getRestoreRangesOrDefault(tr);
															#line 3757 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		addPrefix = restore.addPrefix().getD(tr);
															#line 3758 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		removePrefix = restore.removePrefix().getD(tr);
															#line 3760 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = taskBucket->keepRunning(tr, task);
															#line 3760 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor5*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 32199 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1loopBody1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1loopBody1cont2when1(__when_expr_1.get(), loopDepth); };
		static_cast<_executeActor5*>(this)->actor_wait_state = 2;
															#line 3760 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< _executeActor5, 1, Void >*>(static_cast<_executeActor5*>(this)));
															#line 32204 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont2(Reference<IBackupContainer> && _bc,int loopDepth) 
	{
															#line 3755 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		bc = getBackupContainerWithProxy(_bc);
															#line 3756 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restoreRanges = restore.getRestoreRangesOrDefault(tr);
															#line 3757 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		addPrefix = restore.addPrefix().getD(tr);
															#line 3758 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		removePrefix = restore.removePrefix().getD(tr);
															#line 3760 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = taskBucket->keepRunning(tr, task);
															#line 3760 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor5*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 32223 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1loopBody1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1loopBody1cont2when1(__when_expr_1.get(), loopDepth); };
		static_cast<_executeActor5*>(this)->actor_wait_state = 2;
															#line 3760 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< _executeActor5, 1, Void >*>(static_cast<_executeActor5*>(this)));
															#line 32228 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1when1(Reference<IBackupContainer> const& _bc,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont2(_bc, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1when1(Reference<IBackupContainer> && _bc,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont2(std::move(_bc), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<_executeActor5*>(this)->actor_wait_state > 0) static_cast<_executeActor5*>(this)->actor_wait_state = 0;
		static_cast<_executeActor5*>(this)->ActorCallback< _executeActor5, 0, Reference<IBackupContainer> >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor5, 0, Reference<IBackupContainer> >*,Reference<IBackupContainer> const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< _executeActor5, 0, Reference<IBackupContainer> >*,Reference<IBackupContainer> && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< _executeActor5, 0, Reference<IBackupContainer> >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1loopBody1cont3(Void const& _,int loopDepth) 
	{
															#line 3762 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_2 = success(bc) && success(restoreRanges) && success(addPrefix) && success(removePrefix) && checkTaskVersion(tr->getDatabase(), task, name, version);
															#line 3762 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor5*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 32302 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1loopBody1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1loopBody1cont3when1(__when_expr_2.get(), loopDepth); };
		static_cast<_executeActor5*>(this)->actor_wait_state = 3;
															#line 3762 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< _executeActor5, 2, Void >*>(static_cast<_executeActor5*>(this)));
															#line 32307 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont3(Void && _,int loopDepth) 
	{
															#line 3762 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_2 = success(bc) && success(restoreRanges) && success(addPrefix) && success(removePrefix) && checkTaskVersion(tr->getDatabase(), task, name, version);
															#line 3762 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor5*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 32318 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1loopBody1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1loopBody1cont3when1(__when_expr_2.get(), loopDepth); };
		static_cast<_executeActor5*>(this)->actor_wait_state = 3;
															#line 3762 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< _executeActor5, 2, Void >*>(static_cast<_executeActor5*>(this)));
															#line 32323 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<_executeActor5*>(this)->actor_wait_state > 0) static_cast<_executeActor5*>(this)->actor_wait_state = 0;
		static_cast<_executeActor5*>(this)->ActorCallback< _executeActor5, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor5, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< _executeActor5, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< _executeActor5, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1loopBody1cont4(Void const& _,int loopDepth) 
	{
		return a_body1break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1loopBody1cont4(Void && _,int loopDepth) 
	{
		return a_body1break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1loopBody1cont3when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont4(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont3when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont4(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<_executeActor5*>(this)->actor_wait_state > 0) static_cast<_executeActor5*>(this)->actor_wait_state = 0;
		static_cast<_executeActor5*>(this)->ActorCallback< _executeActor5, 2, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor5, 2, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1loopBody1cont3when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< _executeActor5, 2, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1loopBody1cont3when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< _executeActor5, 2, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 2);

	}
	int a_body1loopBody1Catch1cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1Catch1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1Catch1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose4() 
	{
		if (static_cast<_executeActor5*>(this)->actor_wait_state > 0) static_cast<_executeActor5*>(this)->actor_wait_state = 0;
		static_cast<_executeActor5*>(this)->ActorCallback< _executeActor5, 3, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor5, 3, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_fire(ActorCallback< _executeActor5, 3, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_error(ActorCallback< _executeActor5, 3, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 3);

	}
	int a_body1cont2(int loopDepth) 
	{
															#line 3772 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		blockData = Standalone<VectorRef<KeyValueRef>>();
															#line 32545 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		try {
															#line 3774 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Standalone<VectorRef<KeyValueRef>>> __when_expr_5 = decodeRangeFileBlock(inFile, readOffset, readLen, cx);
															#line 3774 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor5*>(this)->actor_wait_state < 0) return a_body1cont2Catch1(actor_cancelled(), loopDepth);
															#line 32551 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_5.isReady()) { if (__when_expr_5.isError()) return a_body1cont2Catch1(__when_expr_5.getError(), loopDepth); else return a_body1cont2when1(__when_expr_5.get(), loopDepth); };
			static_cast<_executeActor5*>(this)->actor_wait_state = 6;
															#line 3774 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_5.addCallbackAndClear(static_cast<ActorCallback< _executeActor5, 5, Standalone<VectorRef<KeyValueRef>> >*>(static_cast<_executeActor5*>(this)));
															#line 32556 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1cont2Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1cont2Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont1when1(Reference<IAsyncFile> const& __inFile,int loopDepth) 
	{
															#line 3771 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		inFile = __inFile;
															#line 32571 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont2(loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Reference<IAsyncFile> && __inFile,int loopDepth) 
	{
		inFile = std::move(__inFile);
		loopDepth = a_body1cont2(loopDepth);

		return loopDepth;
	}
	void a_exitChoose5() 
	{
		if (static_cast<_executeActor5*>(this)->actor_wait_state > 0) static_cast<_executeActor5*>(this)->actor_wait_state = 0;
		static_cast<_executeActor5*>(this)->ActorCallback< _executeActor5, 4, Reference<IAsyncFile> >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor5, 4, Reference<IAsyncFile> >*,Reference<IAsyncFile> const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_fire(ActorCallback< _executeActor5, 4, Reference<IAsyncFile> >*,Reference<IAsyncFile> && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_error(ActorCallback< _executeActor5, 4, Reference<IAsyncFile> >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 4);

	}
	int a_body1cont3(int loopDepth) 
	{
															#line 3784 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tenantCache = Optional<Reference<TenantEntryCache<Void>>>();
															#line 3785 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		validTenantCheckFutures = std::vector<Future<Void>>();
															#line 3786 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		arena = Arena();
															#line 3787 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<DatabaseConfiguration> __when_expr_6 = getDatabaseConfiguration(cx);
															#line 3787 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor5*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 32646 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_6.isReady()) { if (__when_expr_6.isError()) return a_body1Catch1(__when_expr_6.getError(), loopDepth); else return a_body1cont3when1(__when_expr_6.get(), loopDepth); };
		static_cast<_executeActor5*>(this)->actor_wait_state = 7;
															#line 3787 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_6.addCallbackAndClear(static_cast<ActorCallback< _executeActor5, 6, DatabaseConfiguration >*>(static_cast<_executeActor5*>(this)));
															#line 32651 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont2Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 3778 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (e.code() == error_code_encrypt_keys_fetch_failed || e.code() == error_code_tenant_not_found || e.code() == error_code_encrypt_key_not_found)
															#line 32661 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 3780 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (!static_cast<_executeActor5*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_executeActor5State(); static_cast<_executeActor5*>(this)->destroy(); return 0; }
															#line 32665 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				new (&static_cast<_executeActor5*>(this)->SAV< Void >::value()) Void(Void());
				this->~_executeActor5State();
				static_cast<_executeActor5*>(this)->finishSendAndDelPromiseRef();
				return 0;
			}
															#line 3782 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			return a_body1Catch1(e, loopDepth);
															#line 32673 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont4(Standalone<VectorRef<KeyValueRef>> const& data,int loopDepth) 
	{
															#line 3775 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		blockData = data;
															#line 32687 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont6(loopDepth);

		return loopDepth;
	}
	int a_body1cont4(Standalone<VectorRef<KeyValueRef>> && data,int loopDepth) 
	{
															#line 3775 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		blockData = data;
															#line 32696 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont6(loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(Standalone<VectorRef<KeyValueRef>> const& data,int loopDepth) 
	{
		loopDepth = a_body1cont4(data, loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(Standalone<VectorRef<KeyValueRef>> && data,int loopDepth) 
	{
		loopDepth = a_body1cont4(std::move(data), loopDepth);

		return loopDepth;
	}
	void a_exitChoose6() 
	{
		if (static_cast<_executeActor5*>(this)->actor_wait_state > 0) static_cast<_executeActor5*>(this)->actor_wait_state = 0;
		static_cast<_executeActor5*>(this)->ActorCallback< _executeActor5, 5, Standalone<VectorRef<KeyValueRef>> >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor5, 5, Standalone<VectorRef<KeyValueRef>> >*,Standalone<VectorRef<KeyValueRef>> const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont2Catch1(error, 0);
		} catch (...) {
			a_body1cont2Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_fire(ActorCallback< _executeActor5, 5, Standalone<VectorRef<KeyValueRef>> >*,Standalone<VectorRef<KeyValueRef>> && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont2Catch1(error, 0);
		} catch (...) {
			a_body1cont2Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_error(ActorCallback< _executeActor5, 5, Standalone<VectorRef<KeyValueRef>> >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont2Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont2Catch1(error, 0);
		} catch (...) {
			a_body1cont2Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 5);

	}
	int a_body1cont6(int loopDepth) 
	{
		try {
			loopDepth = a_body1cont3(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont7(int loopDepth) 
	{
															#line 3788 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (config.tenantMode == TenantMode::REQUIRED && g_network && g_network->isSimulated())
															#line 32781 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3789 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tenantCache = makeReference<TenantEntryCache<Void>>(cx, TenantEntryCacheRefreshMode::WATCH);
															#line 3790 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_7 = tenantCache.get()->init();
															#line 3790 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor5*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 32789 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_7.isReady()) { if (__when_expr_7.isError()) return a_body1Catch1(__when_expr_7.getError(), loopDepth); else return a_body1cont7when1(__when_expr_7.get(), loopDepth); };
			static_cast<_executeActor5*>(this)->actor_wait_state = 8;
															#line 3790 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_7.addCallbackAndClear(static_cast<ActorCallback< _executeActor5, 7, Void >*>(static_cast<_executeActor5*>(this)));
															#line 32794 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont8(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont3when1(DatabaseConfiguration const& __config,int loopDepth) 
	{
															#line 3787 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config = __config;
															#line 32808 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont7(loopDepth);

		return loopDepth;
	}
	int a_body1cont3when1(DatabaseConfiguration && __config,int loopDepth) 
	{
		config = std::move(__config);
		loopDepth = a_body1cont7(loopDepth);

		return loopDepth;
	}
	void a_exitChoose7() 
	{
		if (static_cast<_executeActor5*>(this)->actor_wait_state > 0) static_cast<_executeActor5*>(this)->actor_wait_state = 0;
		static_cast<_executeActor5*>(this)->ActorCallback< _executeActor5, 6, DatabaseConfiguration >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor5, 6, DatabaseConfiguration >*,DatabaseConfiguration const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1cont3when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 6);

	}
	void a_callback_fire(ActorCallback< _executeActor5, 6, DatabaseConfiguration >*,DatabaseConfiguration && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1cont3when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 6);

	}
	void a_callback_error(ActorCallback< _executeActor5, 6, DatabaseConfiguration >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 6);

	}
	int a_body1cont8(int loopDepth) 
	{
															#line 3794 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		fileRange = KeyRange();
															#line 3795 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		originalFileRanges = std::vector<KeyRange>();
															#line 3797 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		index = int();
															#line 3798 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		index = 0;
															#line 32881 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont8loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1cont9(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont8(loopDepth);

		return loopDepth;
	}
	int a_body1cont9(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont8(loopDepth);

		return loopDepth;
	}
	int a_body1cont7when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont9(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont7when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont9(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose8() 
	{
		if (static_cast<_executeActor5*>(this)->actor_wait_state > 0) static_cast<_executeActor5*>(this)->actor_wait_state = 0;
		static_cast<_executeActor5*>(this)->ActorCallback< _executeActor5, 7, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor5, 7, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1cont7when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 7);

	}
	void a_callback_fire(ActorCallback< _executeActor5, 7, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1cont7when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 7);

	}
	void a_callback_error(ActorCallback< _executeActor5, 7, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 7);

	}
	int a_body1cont10(int loopDepth) 
	{
															#line 3928 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!originalFileRanges.empty())
															#line 32965 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3929 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (BUGGIFY && restoreRanges.get().size() == 1)
															#line 32969 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 3930 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				Params.originalFileRange().set(task, originalFileRanges[0]);
															#line 32973 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
			else
			{
															#line 3932 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				Params.originalFileRanges().set(task, originalFileRanges);
															#line 32979 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
		}
															#line 3935 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_executeActor5*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_executeActor5State(); static_cast<_executeActor5*>(this)->destroy(); return 0; }
															#line 32984 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_executeActor5*>(this)->SAV< Void >::value()) Void(Void());
		this->~_executeActor5State();
		static_cast<_executeActor5*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont8loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont8loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont8loopBody1(int loopDepth) 
	{
															#line 3798 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!(index < restoreRanges.get().size()))
															#line 33003 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
			return a_body1cont8break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 3799 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		auto& restoreRange = restoreRanges.get()[index];
															#line 3800 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		fileRange = KeyRangeRef(blockData.front().key, blockData.back().key);
															#line 3801 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!fileRange.intersects(restoreRange))
															#line 33013 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
			return a_body1cont8continue1(loopDepth); // continue
		}
															#line 3807 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		int rangeStart = 1;
															#line 3808 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		int rangeEnd = blockData.size() - 1;
															#line 3810 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		for(;rangeStart < rangeEnd && !restoreRange.contains(blockData[rangeStart].key);) {
															#line 3811 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			++rangeStart;
															#line 33025 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 3813 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		for(;rangeEnd > rangeStart && !restoreRange.contains(blockData[rangeEnd - 1].key);) {
															#line 3814 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			--rangeEnd;
															#line 33031 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 3816 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		data = blockData.slice(rangeStart, rangeEnd);
															#line 3821 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		originalFileRange = KeyRangeRef(std::max(fileRange.begin, restoreRange.begin), std::min(fileRange.end, restoreRange.end));
															#line 3823 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		originalFileRanges.push_back(originalFileRange);
															#line 3826 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Key fileEnd = std::min(fileRange.end, restoreRange.end);
															#line 3827 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (fileEnd == (removePrefix.get() == StringRef() ? allKeys.end : strinc(removePrefix.get())))
															#line 33043 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3828 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			fileEnd = addPrefix.get() == StringRef() ? allKeys.end : strinc(addPrefix.get());
															#line 33047 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		else
		{
															#line 3830 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			fileEnd = fileEnd.removePrefix(removePrefix.get()).withPrefix(addPrefix.get());
															#line 33053 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 3832 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		fileRange = KeyRangeRef(std::max(fileRange.begin, restoreRange.begin) .removePrefix(removePrefix.get()) .withPrefix(addPrefix.get()), fileEnd);
															#line 3837 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		start = 0;
															#line 3838 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		end = data.size();
															#line 3839 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		dataSizeLimit = BUGGIFY ? deterministicRandom()->randomInt(256 * 1024, 10e6) : CLIENT_KNOBS->RESTORE_WRITE_TX_SIZE;
															#line 3842 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->reset();
															#line 3843 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 33067 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont8loopBody1loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1cont8break1(int loopDepth) 
	{
		try {
			return a_body1cont10(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont8continue1(int loopDepth) 
	{
															#line 3798 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		index++;
															#line 33089 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (loopDepth == 0) return a_body1cont8loopHead1(0);

		return loopDepth;
	}
	int a_body1cont8loopBody1cont1(int loopDepth) 
	{
															#line 3798 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		index++;
															#line 33098 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (loopDepth == 0) return a_body1cont8loopHead1(0);

		return loopDepth;
	}
	int a_body1cont8loopBody1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont8loopBody1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont8loopBody1loopBody1(int loopDepth) 
	{
		try {
															#line 3845 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 3846 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 3848 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			i = start;
															#line 3849 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			txBytes = 0;
															#line 3850 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			iend = start;
															#line 3853 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			for(;iend < end && txBytes < dataSizeLimit;++iend) {
															#line 3854 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				txBytes += data[iend].key.expectedSize();
															#line 3855 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				txBytes += data[iend].value.expectedSize();
															#line 33129 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
															#line 3861 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			trRange = KeyRangeRef( (start == 0) ? fileRange.begin : data[start].key.removePrefix(removePrefix.get()).withPrefix(addPrefix.get()), (iend == end) ? fileRange.end : data[iend].key.removePrefix(removePrefix.get()).withPrefix(addPrefix.get()));
															#line 3866 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->clear(trRange);
															#line 3868 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			for(;i < iend;++i) {
															#line 3869 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				tr->setOption(FDBTransactionOptions::NEXT_WRITE_NO_WRITE_CONFLICT_RANGE);
															#line 3870 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (tenantCache.present())
															#line 33141 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				{
															#line 3871 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					validTenantCheckFutures.push_back(_validTenantAccess( StringRef(arena, data[i].key.removePrefix(removePrefix.get()).withPrefix(addPrefix.get())), tenantCache.get()));
															#line 33145 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				}
															#line 3876 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				tr->set(data[i].key.removePrefix(removePrefix.get()).withPrefix(addPrefix.get()), data[i].value);
															#line 33149 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
															#line 3881 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			restore.bytesWritten().atomicOp(tr, txBytes, MutationRef::Type::AddValue);
															#line 3883 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			checkLock = checkDatabaseLock(tr, restore.getUid());
															#line 3885 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_8 = taskBucket->keepRunning(tr, task);
															#line 3885 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor5*>(this)->actor_wait_state < 0) return a_body1cont8loopBody1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 33159 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_8.isReady()) { if (__when_expr_8.isError()) return a_body1cont8loopBody1loopBody1Catch1(__when_expr_8.getError(), loopDepth); else return a_body1cont8loopBody1loopBody1when1(__when_expr_8.get(), loopDepth); };
			static_cast<_executeActor5*>(this)->actor_wait_state = 9;
															#line 3885 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_8.addCallbackAndClear(static_cast<ActorCallback< _executeActor5, 8, Void >*>(static_cast<_executeActor5*>(this)));
															#line 33164 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1cont8loopBody1loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1cont8loopBody1loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont8loopBody1break1(int loopDepth) 
	{
		try {
			return a_body1cont8loopBody1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont8loopBody1loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1cont8loopBody1loopHead1(0);

		return loopDepth;
	}
	int a_body1cont8loopBody1loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 3921 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (e.code() == error_code_transaction_too_large)
															#line 33199 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 3922 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				dataSizeLimit /= 2;
															#line 33203 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				loopDepth = a_body1cont8loopBody1loopBody1Catch1cont1(loopDepth);
			}
			else
			{
															#line 3924 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				StrictFuture<Void> __when_expr_11 = tr->onError(e);
															#line 3924 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (static_cast<_executeActor5*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 2));
															#line 33212 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				if (__when_expr_11.isReady()) { if (__when_expr_11.isError()) return a_body1Catch1(__when_expr_11.getError(), std::max(0, loopDepth - 2)); else return a_body1cont8loopBody1loopBody1Catch1when1(__when_expr_11.get(), loopDepth); };
				static_cast<_executeActor5*>(this)->actor_wait_state = 12;
															#line 3924 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				__when_expr_11.addCallbackAndClear(static_cast<ActorCallback< _executeActor5, 11, Void >*>(static_cast<_executeActor5*>(this)));
															#line 33217 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				loopDepth = 0;
			}
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 2));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 2));
		}

		return loopDepth;
	}
	int a_body1cont8loopBody1loopBody1cont2(Void const& _,int loopDepth) 
	{
															#line 3887 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_9 = checkLock;
															#line 3887 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor5*>(this)->actor_wait_state < 0) return a_body1cont8loopBody1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 33235 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_9.isReady()) { if (__when_expr_9.isError()) return a_body1cont8loopBody1loopBody1Catch1(__when_expr_9.getError(), loopDepth); else return a_body1cont8loopBody1loopBody1cont2when1(__when_expr_9.get(), loopDepth); };
		static_cast<_executeActor5*>(this)->actor_wait_state = 10;
															#line 3887 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_9.addCallbackAndClear(static_cast<ActorCallback< _executeActor5, 9, Void >*>(static_cast<_executeActor5*>(this)));
															#line 33240 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont8loopBody1loopBody1cont2(Void && _,int loopDepth) 
	{
															#line 3887 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_9 = checkLock;
															#line 3887 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor5*>(this)->actor_wait_state < 0) return a_body1cont8loopBody1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 33251 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_9.isReady()) { if (__when_expr_9.isError()) return a_body1cont8loopBody1loopBody1Catch1(__when_expr_9.getError(), loopDepth); else return a_body1cont8loopBody1loopBody1cont2when1(__when_expr_9.get(), loopDepth); };
		static_cast<_executeActor5*>(this)->actor_wait_state = 10;
															#line 3887 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_9.addCallbackAndClear(static_cast<ActorCallback< _executeActor5, 9, Void >*>(static_cast<_executeActor5*>(this)));
															#line 33256 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont8loopBody1loopBody1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont8loopBody1loopBody1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont8loopBody1loopBody1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont8loopBody1loopBody1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose9() 
	{
		if (static_cast<_executeActor5*>(this)->actor_wait_state > 0) static_cast<_executeActor5*>(this)->actor_wait_state = 0;
		static_cast<_executeActor5*>(this)->ActorCallback< _executeActor5, 8, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor5, 8, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 8);
		a_exitChoose9();
		try {
			a_body1cont8loopBody1loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont8loopBody1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont8loopBody1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 8);

	}
	void a_callback_fire(ActorCallback< _executeActor5, 8, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 8);
		a_exitChoose9();
		try {
			a_body1cont8loopBody1loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont8loopBody1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont8loopBody1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 8);

	}
	void a_callback_error(ActorCallback< _executeActor5, 8, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 8);
		a_exitChoose9();
		try {
			a_body1cont8loopBody1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont8loopBody1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont8loopBody1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 8);

	}
	int a_body1cont8loopBody1loopBody1cont6(Void const& _,int loopDepth) 
	{
															#line 3889 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_10 = tr->commit();
															#line 3889 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor5*>(this)->actor_wait_state < 0) return a_body1cont8loopBody1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 33330 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_10.isReady()) { if (__when_expr_10.isError()) return a_body1cont8loopBody1loopBody1Catch1(__when_expr_10.getError(), loopDepth); else return a_body1cont8loopBody1loopBody1cont6when1(__when_expr_10.get(), loopDepth); };
		static_cast<_executeActor5*>(this)->actor_wait_state = 11;
															#line 3889 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_10.addCallbackAndClear(static_cast<ActorCallback< _executeActor5, 10, Void >*>(static_cast<_executeActor5*>(this)));
															#line 33335 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont8loopBody1loopBody1cont6(Void && _,int loopDepth) 
	{
															#line 3889 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_10 = tr->commit();
															#line 3889 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor5*>(this)->actor_wait_state < 0) return a_body1cont8loopBody1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 33346 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_10.isReady()) { if (__when_expr_10.isError()) return a_body1cont8loopBody1loopBody1Catch1(__when_expr_10.getError(), loopDepth); else return a_body1cont8loopBody1loopBody1cont6when1(__when_expr_10.get(), loopDepth); };
		static_cast<_executeActor5*>(this)->actor_wait_state = 11;
															#line 3889 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_10.addCallbackAndClear(static_cast<ActorCallback< _executeActor5, 10, Void >*>(static_cast<_executeActor5*>(this)));
															#line 33351 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont8loopBody1loopBody1cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont8loopBody1loopBody1cont6(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont8loopBody1loopBody1cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont8loopBody1loopBody1cont6(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose10() 
	{
		if (static_cast<_executeActor5*>(this)->actor_wait_state > 0) static_cast<_executeActor5*>(this)->actor_wait_state = 0;
		static_cast<_executeActor5*>(this)->ActorCallback< _executeActor5, 9, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor5, 9, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 9);
		a_exitChoose10();
		try {
			a_body1cont8loopBody1loopBody1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont8loopBody1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont8loopBody1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 9);

	}
	void a_callback_fire(ActorCallback< _executeActor5, 9, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 9);
		a_exitChoose10();
		try {
			a_body1cont8loopBody1loopBody1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont8loopBody1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont8loopBody1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 9);

	}
	void a_callback_error(ActorCallback< _executeActor5, 9, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 9);
		a_exitChoose10();
		try {
			a_body1cont8loopBody1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont8loopBody1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont8loopBody1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 9);

	}
	int a_body1cont8loopBody1loopBody1cont7(Void const& _,int loopDepth) 
	{
															#line 3891 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!validTenantCheckFutures.empty())
															#line 33423 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3892 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			waitForAll(validTenantCheckFutures);
															#line 3893 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			validTenantCheckFutures.clear();
															#line 33429 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 3896 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FileRestoreCommittedRange") .suppressFor(60) .detail("RestoreUID", restore.getUid()) .detail("FileName", rangeFile.fileName) .detail("FileVersion", rangeFile.version) .detail("FileSize", rangeFile.fileSize) .detail("ReadOffset", readOffset) .detail("ReadLen", readLen) .detail("CommitVersion", tr->getCommittedVersion()) .detail("BeginRange", trRange.begin) .detail("EndRange", trRange.end) .detail("StartIndex", start) .detail("EndIndex", i) .detail("DataSize", data.size()) .detail("Bytes", txBytes) .detail("OriginalFileRange", originalFileRange) .detail("TaskInstance", THIS_ADDR);
															#line 3915 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		start = i;
															#line 3917 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (start == end)
															#line 33437 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
			return a_body1cont8loopBody1break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 3919 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->reset();
															#line 33443 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont8loopBody1loopBody1cont11(loopDepth);

		return loopDepth;
	}
	int a_body1cont8loopBody1loopBody1cont7(Void && _,int loopDepth) 
	{
															#line 3891 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!validTenantCheckFutures.empty())
															#line 33452 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3892 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			waitForAll(validTenantCheckFutures);
															#line 3893 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			validTenantCheckFutures.clear();
															#line 33458 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 3896 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FileRestoreCommittedRange") .suppressFor(60) .detail("RestoreUID", restore.getUid()) .detail("FileName", rangeFile.fileName) .detail("FileVersion", rangeFile.version) .detail("FileSize", rangeFile.fileSize) .detail("ReadOffset", readOffset) .detail("ReadLen", readLen) .detail("CommitVersion", tr->getCommittedVersion()) .detail("BeginRange", trRange.begin) .detail("EndRange", trRange.end) .detail("StartIndex", start) .detail("EndIndex", i) .detail("DataSize", data.size()) .detail("Bytes", txBytes) .detail("OriginalFileRange", originalFileRange) .detail("TaskInstance", THIS_ADDR);
															#line 3915 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		start = i;
															#line 3917 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (start == end)
															#line 33466 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
			return a_body1cont8loopBody1break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 3919 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->reset();
															#line 33472 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont8loopBody1loopBody1cont11(loopDepth);

		return loopDepth;
	}
	int a_body1cont8loopBody1loopBody1cont6when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont8loopBody1loopBody1cont7(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont8loopBody1loopBody1cont6when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont8loopBody1loopBody1cont7(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose11() 
	{
		if (static_cast<_executeActor5*>(this)->actor_wait_state > 0) static_cast<_executeActor5*>(this)->actor_wait_state = 0;
		static_cast<_executeActor5*>(this)->ActorCallback< _executeActor5, 10, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor5, 10, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 10);
		a_exitChoose11();
		try {
			a_body1cont8loopBody1loopBody1cont6when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont8loopBody1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont8loopBody1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 10);

	}
	void a_callback_fire(ActorCallback< _executeActor5, 10, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 10);
		a_exitChoose11();
		try {
			a_body1cont8loopBody1loopBody1cont6when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont8loopBody1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont8loopBody1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 10);

	}
	void a_callback_error(ActorCallback< _executeActor5, 10, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 10);
		a_exitChoose11();
		try {
			a_body1cont8loopBody1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont8loopBody1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont8loopBody1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 10);

	}
	int a_body1cont8loopBody1loopBody1cont11(int loopDepth) 
	{
		try {
			loopDepth = a_body1cont8loopBody1loopBody1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 2));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 2));
		}

		return loopDepth;
	}
	int a_body1cont8loopBody1loopBody1Catch1cont1(int loopDepth) 
	{
		loopDepth = a_body1cont8loopBody1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont8loopBody1loopBody1Catch1cont3(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont8loopBody1loopBody1Catch1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont8loopBody1loopBody1Catch1cont3(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont8loopBody1loopBody1Catch1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont8loopBody1loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont8loopBody1loopBody1Catch1cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont8loopBody1loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont8loopBody1loopBody1Catch1cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose12() 
	{
		if (static_cast<_executeActor5*>(this)->actor_wait_state > 0) static_cast<_executeActor5*>(this)->actor_wait_state = 0;
		static_cast<_executeActor5*>(this)->ActorCallback< _executeActor5, 11, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor5, 11, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 11);
		a_exitChoose12();
		try {
			a_body1cont8loopBody1loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 11);

	}
	void a_callback_fire(ActorCallback< _executeActor5, 11, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 11);
		a_exitChoose12();
		try {
			a_body1cont8loopBody1loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 11);

	}
	void a_callback_error(ActorCallback< _executeActor5, 11, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 11);
		a_exitChoose12();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 11);

	}
															#line 3723 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Database cx;
															#line 3723 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskBucket> taskBucket;
															#line 3723 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<FutureBucket> futureBucket;
															#line 3723 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> task;
															#line 3727 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	RestoreConfig restore;
															#line 3729 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	RestoreFile rangeFile;
															#line 3730 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int64_t readOffset;
															#line 3731 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int64_t readLen;
															#line 3743 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 3744 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<Reference<IBackupContainer>> bc;
															#line 3745 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<std::vector<KeyRange>> restoreRanges;
															#line 3746 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<Key> addPrefix;
															#line 3747 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<Key> removePrefix;
															#line 3771 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<IAsyncFile> inFile;
															#line 3772 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Standalone<VectorRef<KeyValueRef>> blockData;
															#line 3784 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<Reference<TenantEntryCache<Void>>> tenantCache;
															#line 3785 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::vector<Future<Void>> validTenantCheckFutures;
															#line 3786 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Arena arena;
															#line 3787 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	DatabaseConfiguration config;
															#line 3794 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	KeyRange fileRange;
															#line 3795 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::vector<KeyRange> originalFileRanges;
															#line 3797 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int index;
															#line 3816 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	VectorRef<KeyValueRef> data;
															#line 3821 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	KeyRange originalFileRange;
															#line 3837 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int start;
															#line 3838 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int end;
															#line 3839 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int dataSizeLimit;
															#line 3848 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int i;
															#line 3849 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int txBytes;
															#line 3850 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int iend;
															#line 3861 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	KeyRange trRange;
															#line 3883 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<Void> checkLock;
															#line 33698 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via _execute()
															#line 3723 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _executeActor5 final : public Actor<Void>, public ActorCallback< _executeActor5, 0, Reference<IBackupContainer> >, public ActorCallback< _executeActor5, 1, Void >, public ActorCallback< _executeActor5, 2, Void >, public ActorCallback< _executeActor5, 3, Void >, public ActorCallback< _executeActor5, 4, Reference<IAsyncFile> >, public ActorCallback< _executeActor5, 5, Standalone<VectorRef<KeyValueRef>> >, public ActorCallback< _executeActor5, 6, DatabaseConfiguration >, public ActorCallback< _executeActor5, 7, Void >, public ActorCallback< _executeActor5, 8, Void >, public ActorCallback< _executeActor5, 9, Void >, public ActorCallback< _executeActor5, 10, Void >, public ActorCallback< _executeActor5, 11, Void >, public FastAllocated<_executeActor5>, public _executeActor5State<_executeActor5> {
															#line 33703 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<_executeActor5>::operator new;
	using FastAllocated<_executeActor5>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< _executeActor5, 0, Reference<IBackupContainer> >;
friend struct ActorCallback< _executeActor5, 1, Void >;
friend struct ActorCallback< _executeActor5, 2, Void >;
friend struct ActorCallback< _executeActor5, 3, Void >;
friend struct ActorCallback< _executeActor5, 4, Reference<IAsyncFile> >;
friend struct ActorCallback< _executeActor5, 5, Standalone<VectorRef<KeyValueRef>> >;
friend struct ActorCallback< _executeActor5, 6, DatabaseConfiguration >;
friend struct ActorCallback< _executeActor5, 7, Void >;
friend struct ActorCallback< _executeActor5, 8, Void >;
friend struct ActorCallback< _executeActor5, 9, Void >;
friend struct ActorCallback< _executeActor5, 10, Void >;
friend struct ActorCallback< _executeActor5, 11, Void >;
															#line 3723 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_executeActor5(Database const& cx,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 33725 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   _executeActor5State<_executeActor5>(cx, taskBucket, futureBucket, task)
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("_execute");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< _executeActor5, 0, Reference<IBackupContainer> >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< _executeActor5, 1, Void >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< _executeActor5, 2, Void >*)0, actor_cancelled()); break;
		case 4: this->a_callback_error((ActorCallback< _executeActor5, 3, Void >*)0, actor_cancelled()); break;
		case 5: this->a_callback_error((ActorCallback< _executeActor5, 4, Reference<IAsyncFile> >*)0, actor_cancelled()); break;
		case 6: this->a_callback_error((ActorCallback< _executeActor5, 5, Standalone<VectorRef<KeyValueRef>> >*)0, actor_cancelled()); break;
		case 7: this->a_callback_error((ActorCallback< _executeActor5, 6, DatabaseConfiguration >*)0, actor_cancelled()); break;
		case 8: this->a_callback_error((ActorCallback< _executeActor5, 7, Void >*)0, actor_cancelled()); break;
		case 9: this->a_callback_error((ActorCallback< _executeActor5, 8, Void >*)0, actor_cancelled()); break;
		case 10: this->a_callback_error((ActorCallback< _executeActor5, 9, Void >*)0, actor_cancelled()); break;
		case 11: this->a_callback_error((ActorCallback< _executeActor5, 10, Void >*)0, actor_cancelled()); break;
		case 12: this->a_callback_error((ActorCallback< _executeActor5, 11, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 3723 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> _execute( Database const& cx, Reference<TaskBucket> const& taskBucket, Reference<FutureBucket> const& futureBucket, Reference<Task> const& task ) {
															#line 3723 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new _executeActor5(cx, taskBucket, futureBucket, task));
															#line 33763 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 3937 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

																#line 33768 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via _finish()
															#line 3938 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class _finishActor11>
															#line 3938 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _finishActor11State {
															#line 33774 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 3938 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_finishActor11State(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 3938 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 3938 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : tr(tr),
															#line 3938 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskBucket(taskBucket),
															#line 3938 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   futureBucket(futureBucket),
															#line 3938 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   task(task),
															#line 3942 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   restore(task)
															#line 33789 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("_finish", reinterpret_cast<unsigned long>(this));

	}
	~_finishActor11State() 
	{
		fdb_probe_actor_destroy("_finish", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 3943 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			restore.fileBlocksFinished().atomicOp(tr, 1, MutationRef::Type::AddValue);
															#line 3946 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			std::vector<Future<Void>> updateMap;
															#line 3947 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			std::vector<KeyRange> ranges = Params.getOriginalFileRanges(task);
															#line 3948 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			for( auto& range : ranges ) {
															#line 3949 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				Value versionEncoded = BinaryWriter::toValue(Params.inputFile().get(task).version, Unversioned());
															#line 3950 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				updateMap.push_back(krmSetRange(tr, restore.applyMutationsMapPrefix(), range, versionEncoded));
															#line 33814 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
															#line 3953 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			taskFuture = futureBucket->unpack(task->params[Task::reservedTaskParamKeyDone]);
															#line 3954 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_0 = taskFuture->set(tr, taskBucket) && taskBucket->finish(tr, task) && waitForAll(updateMap);
															#line 3954 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_finishActor11*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 33822 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<_finishActor11*>(this)->actor_wait_state = 1;
															#line 3954 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< _finishActor11, 0, Void >*>(static_cast<_finishActor11*>(this)));
															#line 33827 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~_finishActor11State();
		static_cast<_finishActor11*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Void const& _,int loopDepth) 
	{
															#line 3956 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_finishActor11*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_finishActor11State(); static_cast<_finishActor11*>(this)->destroy(); return 0; }
															#line 33850 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_finishActor11*>(this)->SAV< Void >::value()) Void(Void());
		this->~_finishActor11State();
		static_cast<_finishActor11*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont1(Void && _,int loopDepth) 
	{
															#line 3956 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_finishActor11*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_finishActor11State(); static_cast<_finishActor11*>(this)->destroy(); return 0; }
															#line 33862 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_finishActor11*>(this)->SAV< Void >::value()) Void(Void());
		this->~_finishActor11State();
		static_cast<_finishActor11*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<_finishActor11*>(this)->actor_wait_state > 0) static_cast<_finishActor11*>(this)->actor_wait_state = 0;
		static_cast<_finishActor11*>(this)->ActorCallback< _finishActor11, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor11, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< _finishActor11, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< _finishActor11, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
															#line 3938 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 3938 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskBucket> taskBucket;
															#line 3938 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<FutureBucket> futureBucket;
															#line 3938 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> task;
															#line 3942 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	RestoreConfig restore;
															#line 3953 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskFuture> taskFuture;
															#line 33945 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via _finish()
															#line 3938 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _finishActor11 final : public Actor<Void>, public ActorCallback< _finishActor11, 0, Void >, public FastAllocated<_finishActor11>, public _finishActor11State<_finishActor11> {
															#line 33950 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<_finishActor11>::operator new;
	using FastAllocated<_finishActor11>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< _finishActor11, 0, Void >;
															#line 3938 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_finishActor11(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 33961 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   _finishActor11State<_finishActor11>(tr, taskBucket, futureBucket, task)
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("_finish");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< _finishActor11, 0, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 3938 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> _finish( Reference<ReadYourWritesTransaction> const& tr, Reference<TaskBucket> const& taskBucket, Reference<FutureBucket> const& futureBucket, Reference<Task> const& task ) {
															#line 3938 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new _finishActor11(tr, taskBucket, futureBucket, task));
															#line 33988 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 3958 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

																#line 33993 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via addTask()
															#line 3959 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class AddTaskActor9>
															#line 3959 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class AddTaskActor9State {
															#line 33999 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 3959 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	AddTaskActor9State(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<Task> const& parentTask,RestoreFile const& rf,int64_t const& offset,int64_t const& len,TaskCompletionKey const& completionKey,Reference<TaskFuture> const& waitFor = Reference<TaskFuture>()) 
															#line 3959 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 3959 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : tr(tr),
															#line 3959 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskBucket(taskBucket),
															#line 3959 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   parentTask(parentTask),
															#line 3959 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   rf(rf),
															#line 3959 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   offset(offset),
															#line 3959 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   len(len),
															#line 3959 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   completionKey(completionKey),
															#line 3959 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   waitFor(waitFor)
															#line 34020 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("addTask", reinterpret_cast<unsigned long>(this));

	}
	~AddTaskActor9State() 
	{
		fdb_probe_actor_destroy("addTask", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 3967 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Key> __when_expr_0 = completionKey.get(tr, taskBucket);
															#line 3967 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<AddTaskActor9*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 34037 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<AddTaskActor9*>(this)->actor_wait_state = 1;
															#line 3967 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< AddTaskActor9, 0, Key >*>(static_cast<AddTaskActor9*>(this)));
															#line 34042 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~AddTaskActor9State();
		static_cast<AddTaskActor9*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Key const& doneKey,int loopDepth) 
	{
															#line 3968 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		task = Reference<Task>(new Task(RestoreRangeTaskFunc::name, RestoreRangeTaskFunc::version, doneKey));
															#line 3971 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = RestoreConfig(parentTask).toTask(tr, task);
															#line 3971 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AddTaskActor9*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 34069 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<AddTaskActor9*>(this)->actor_wait_state = 2;
															#line 3971 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< AddTaskActor9, 1, Void >*>(static_cast<AddTaskActor9*>(this)));
															#line 34074 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Key && doneKey,int loopDepth) 
	{
															#line 3968 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		task = Reference<Task>(new Task(RestoreRangeTaskFunc::name, RestoreRangeTaskFunc::version, doneKey));
															#line 3971 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = RestoreConfig(parentTask).toTask(tr, task);
															#line 3971 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AddTaskActor9*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 34087 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<AddTaskActor9*>(this)->actor_wait_state = 2;
															#line 3971 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< AddTaskActor9, 1, Void >*>(static_cast<AddTaskActor9*>(this)));
															#line 34092 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1when1(Key const& doneKey,int loopDepth) 
	{
		loopDepth = a_body1cont1(doneKey, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Key && doneKey,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(doneKey), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<AddTaskActor9*>(this)->actor_wait_state > 0) static_cast<AddTaskActor9*>(this)->actor_wait_state = 0;
		static_cast<AddTaskActor9*>(this)->ActorCallback< AddTaskActor9, 0, Key >::remove();

	}
	void a_callback_fire(ActorCallback< AddTaskActor9, 0, Key >*,Key const& value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< AddTaskActor9, 0, Key >*,Key && value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< AddTaskActor9, 0, Key >*,Error err) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont2(Void const& _,int loopDepth) 
	{
															#line 3973 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Params.inputFile().set(task, rf);
															#line 3974 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Params.readOffset().set(task, offset);
															#line 3975 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Params.readLen().set(task, len);
															#line 3977 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!waitFor)
															#line 34170 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3978 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<AddTaskActor9*>(this)->SAV<Key>::futures) { (void)(taskBucket->addTask(tr, task)); this->~AddTaskActor9State(); static_cast<AddTaskActor9*>(this)->destroy(); return 0; }
															#line 34174 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<AddTaskActor9*>(this)->SAV< Key >::value()) Key(taskBucket->addTask(tr, task));
			this->~AddTaskActor9State();
			static_cast<AddTaskActor9*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 3981 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_2 = waitFor->onSetAddTask(tr, taskBucket, task);
															#line 3981 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AddTaskActor9*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 34184 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont2when1(__when_expr_2.get(), loopDepth); };
		static_cast<AddTaskActor9*>(this)->actor_wait_state = 3;
															#line 3981 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< AddTaskActor9, 2, Void >*>(static_cast<AddTaskActor9*>(this)));
															#line 34189 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont2(Void && _,int loopDepth) 
	{
															#line 3973 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Params.inputFile().set(task, rf);
															#line 3974 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Params.readOffset().set(task, offset);
															#line 3975 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Params.readLen().set(task, len);
															#line 3977 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!waitFor)
															#line 34204 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 3978 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<AddTaskActor9*>(this)->SAV<Key>::futures) { (void)(taskBucket->addTask(tr, task)); this->~AddTaskActor9State(); static_cast<AddTaskActor9*>(this)->destroy(); return 0; }
															#line 34208 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<AddTaskActor9*>(this)->SAV< Key >::value()) Key(taskBucket->addTask(tr, task));
			this->~AddTaskActor9State();
			static_cast<AddTaskActor9*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 3981 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_2 = waitFor->onSetAddTask(tr, taskBucket, task);
															#line 3981 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AddTaskActor9*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 34218 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont2when1(__when_expr_2.get(), loopDepth); };
		static_cast<AddTaskActor9*>(this)->actor_wait_state = 3;
															#line 3981 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< AddTaskActor9, 2, Void >*>(static_cast<AddTaskActor9*>(this)));
															#line 34223 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<AddTaskActor9*>(this)->actor_wait_state > 0) static_cast<AddTaskActor9*>(this)->actor_wait_state = 0;
		static_cast<AddTaskActor9*>(this)->ActorCallback< AddTaskActor9, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< AddTaskActor9, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< AddTaskActor9, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< AddTaskActor9, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont3(Void const& _,int loopDepth) 
	{
															#line 3982 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<AddTaskActor9*>(this)->SAV<Key>::futures) { (void)("OnSetAddTask"_sr); this->~AddTaskActor9State(); static_cast<AddTaskActor9*>(this)->destroy(); return 0; }
															#line 34295 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<AddTaskActor9*>(this)->SAV< Key >::value()) Key("OnSetAddTask"_sr);
		this->~AddTaskActor9State();
		static_cast<AddTaskActor9*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont3(Void && _,int loopDepth) 
	{
															#line 3982 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<AddTaskActor9*>(this)->SAV<Key>::futures) { (void)("OnSetAddTask"_sr); this->~AddTaskActor9State(); static_cast<AddTaskActor9*>(this)->destroy(); return 0; }
															#line 34307 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<AddTaskActor9*>(this)->SAV< Key >::value()) Key("OnSetAddTask"_sr);
		this->~AddTaskActor9State();
		static_cast<AddTaskActor9*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<AddTaskActor9*>(this)->actor_wait_state > 0) static_cast<AddTaskActor9*>(this)->actor_wait_state = 0;
		static_cast<AddTaskActor9*>(this)->ActorCallback< AddTaskActor9, 2, Void >::remove();

	}
	void a_callback_fire(ActorCallback< AddTaskActor9, 2, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< AddTaskActor9, 2, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< AddTaskActor9, 2, Void >*,Error err) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 2);

	}
															#line 3959 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 3959 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskBucket> taskBucket;
															#line 3959 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> parentTask;
															#line 3959 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	RestoreFile rf;
															#line 3959 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int64_t offset;
															#line 3959 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int64_t len;
															#line 3959 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	TaskCompletionKey completionKey;
															#line 3959 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskFuture> waitFor;
															#line 3968 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> task;
															#line 34396 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via addTask()
															#line 3959 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class AddTaskActor9 final : public Actor<Key>, public ActorCallback< AddTaskActor9, 0, Key >, public ActorCallback< AddTaskActor9, 1, Void >, public ActorCallback< AddTaskActor9, 2, Void >, public FastAllocated<AddTaskActor9>, public AddTaskActor9State<AddTaskActor9> {
															#line 34401 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<AddTaskActor9>::operator new;
	using FastAllocated<AddTaskActor9>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Key>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< AddTaskActor9, 0, Key >;
friend struct ActorCallback< AddTaskActor9, 1, Void >;
friend struct ActorCallback< AddTaskActor9, 2, Void >;
															#line 3959 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	AddTaskActor9(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<Task> const& parentTask,RestoreFile const& rf,int64_t const& offset,int64_t const& len,TaskCompletionKey const& completionKey,Reference<TaskFuture> const& waitFor = Reference<TaskFuture>()) 
															#line 34414 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Key>(),
		   AddTaskActor9State<AddTaskActor9>(tr, taskBucket, parentTask, rf, offset, len, completionKey, waitFor)
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("addTask");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< AddTaskActor9, 0, Key >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< AddTaskActor9, 1, Void >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< AddTaskActor9, 2, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 3959 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Key> addTask( Reference<ReadYourWritesTransaction> const& tr, Reference<TaskBucket> const& taskBucket, Reference<Task> const& parentTask, RestoreFile const& rf, int64_t const& offset, int64_t const& len, TaskCompletionKey const& completionKey, Reference<TaskFuture> const& waitFor = Reference<TaskFuture>() ) {
															#line 3959 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Key>(new AddTaskActor9(tr, taskBucket, parentTask, rf, offset, len, completionKey, waitFor));
															#line 34443 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 3984 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

	static StringRef name;
	static constexpr uint32_t version = 1;
	StringRef getName() const override { return name; };

	Future<Void> execute(Database cx,
	                     Reference<TaskBucket> tb,
	                     Reference<FutureBucket> fb,
	                     Reference<Task> task) override {
		return _execute(cx, tb, fb, task);
	};
	Future<Void> finish(Reference<ReadYourWritesTransaction> tr,
	                    Reference<TaskBucket> tb,
	                    Reference<FutureBucket> fb,
	                    Reference<Task> task) override {
		return _finish(tr, tb, fb, task);
	};
};
StringRef RestoreRangeTaskFunc::name = "restore_range_data"_sr;
REGISTER_TASKFUNC(RestoreRangeTaskFunc);

// Decodes a mutation log key, which contains (hash, commitVersion, chunkNumber) and
// returns (commitVersion, chunkNumber)
std::pair<Version, int32_t> decodeMutationLogKey(const StringRef& key) {
	ASSERT(key.size() == sizeof(uint8_t) + sizeof(Version) + sizeof(int32_t));

	uint8_t hash;
	Version version;
	int32_t part;
	BinaryReader rd(key, Unversioned());
	rd >> hash >> version >> part;
	version = bigEndian64(version);
	part = bigEndian32(part);

	int32_t v = version / CLIENT_KNOBS->LOG_RANGE_BLOCK_SIZE;
	ASSERT(((uint8_t)hashlittle(&v, sizeof(v), 0)) == hash);

	return std::make_pair(version, part);
}

// Decodes an encoded list of mutations in the format of:
//   [includeVersion:uint64_t][val_length:uint32_t][mutation_1][mutation_2]...[mutation_k],
// where a mutation is encoded as:
//   [type:uint32_t][keyLength:uint32_t][valueLength:uint32_t][param1][param2]
std::vector<MutationRef> decodeMutationLogValue(const StringRef& value) {
	StringRefReader reader(value, restore_corrupted_data());

	Version protocolVersion = reader.consume<uint64_t>();
	if (protocolVersion <= 0x0FDB00A200090001) {
		throw incompatible_protocol_version();
	}

	uint32_t val_length = reader.consume<uint32_t>();
	if (val_length != value.size() - sizeof(uint64_t) - sizeof(uint32_t)) {
		TraceEvent(SevError, "FileRestoreLogValueError")
		    .detail("ValueLen", val_length)
		    .detail("ValueSize", value.size())
		    .detail("Value", printable(value));
	}

	std::vector<MutationRef> mutations;
	while (1) {
		if (reader.eof())
			break;

		// Deserialization of a MutationRef, which was packed by MutationListRef::push_back_deep()
		uint32_t type, p1len, p2len;
		type = reader.consume<uint32_t>();
		p1len = reader.consume<uint32_t>();
		p2len = reader.consume<uint32_t>();

		const uint8_t* key = reader.consume(p1len);
		const uint8_t* val = reader.consume(p2len);

		mutations.emplace_back((MutationRef::Type)type, StringRef(key, p1len), StringRef(val, p2len));
	}
	return mutations;
}

void AccumulatedMutations::addChunk(int chunkNumber, const KeyValueRef& kv) {
	if (chunkNumber == lastChunkNumber + 1) {
		lastChunkNumber = chunkNumber;
		serializedMutations += kv.value.toString();
	} else {
		lastChunkNumber = -2;
		serializedMutations.clear();
	}
	kvs.push_back(kv);
}

bool AccumulatedMutations::isComplete() const {
	if (lastChunkNumber >= 0) {
		StringRefReader reader(serializedMutations, restore_corrupted_data());

		Version protocolVersion = reader.consume<uint64_t>();
		if (protocolVersion <= 0x0FDB00A200090001) {
			throw incompatible_protocol_version();
		}

		uint32_t vLen = reader.consume<uint32_t>();
		return vLen == reader.remainder().size();
	}

	return false;
}

// Returns true if a complete chunk contains any MutationRefs which intersect with any
// range in ranges.
// It is undefined behavior to run this if isComplete() does not return true.
bool AccumulatedMutations::matchesAnyRange(const RangeMapFilters& filters) const {
	std::vector<MutationRef> mutations = decodeMutationLogValue(serializedMutations);
	for (auto& m : mutations) {
		if (m.type == MutationRef::Encrypted) {
			// TODO:  In order to filter out encrypted mutations that are not relevant to the
			// target range, they would have to be decrypted here in order to check relevance
			// below, however the staged mutations would still need to remain encrypted for
			// staging into the destination database.  Without decrypting, we must assume that
			// some data could match the range and return true here.
			return true;
		}
		if (filters.match(m)) {
			return true;
		}
	}

	return false;
}

bool RangeMapFilters::match(const MutationRef& m) const {
	if (isSingleKeyMutation((MutationRef::Type)m.type)) {
		if (match(singleKeyRange(m.param1))) {
			return true;
		}
	} else if (m.type == MutationRef::ClearRange) {
		if (match(KeyRangeRef(m.param1, m.param2))) {
			return true;
		}
	} else {
		ASSERT(false);
	}
	return false;
}

bool RangeMapFilters::match(const KeyValueRef& kv) const {
	return match(singleKeyRange(kv.key));
}

bool RangeMapFilters::match(const KeyRangeRef& range) const {
	auto ranges = rangeMap.intersectingRanges(range);
	for (const auto& r : ranges) {
		if (r.cvalue() == 1) {
			return true;
		}
	}
	return false;
}

// Returns a vector of filtered KV refs from data which are either part of incomplete mutation groups OR complete
// and have data relevant to one of the KV ranges in ranges
std::vector<KeyValueRef> filterLogMutationKVPairs(VectorRef<KeyValueRef> data, const RangeMapFilters& filters) {
	std::unordered_map<Version, AccumulatedMutations> mutationBlocksByVersion;

	for (auto& kv : data) {
		auto versionAndChunkNumber = decodeMutationLogKey(kv.key);
		mutationBlocksByVersion[versionAndChunkNumber.first].addChunk(versionAndChunkNumber.second, kv);
	}

	std::vector<KeyValueRef> output;

	for (auto& vb : mutationBlocksByVersion) {
		AccumulatedMutations& m = vb.second;

		// If the mutations are incomplete or match one of the ranges, include in results.
		if (!m.isComplete() || m.matchesAnyRange(filters)) {
			output.insert(output.end(), m.kvs.begin(), m.kvs.end());
		}
	}

	return output;
}
struct RestoreLogDataTaskFunc : RestoreFileTaskFuncBase {
	static StringRef name;
	static constexpr uint32_t version = 1;
	StringRef getName() const override { return name; };

	static struct : InputParams {
	} Params;

																#line 34635 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via _execute()
															#line 4172 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class _executeActor6>
															#line 4172 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _executeActor6State {
															#line 34641 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 4172 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_executeActor6State(Database const& cx,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 4172 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 4172 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : cx(cx),
															#line 4172 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskBucket(taskBucket),
															#line 4172 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   futureBucket(futureBucket),
															#line 4172 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   task(task),
															#line 4176 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   restore(task),
															#line 4178 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   logFile(Params.inputFile().get(task)),
															#line 4179 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   readOffset(Params.readOffset().get(task)),
															#line 4180 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   readLen(Params.readLen().get(task))
															#line 34662 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("_execute", reinterpret_cast<unsigned long>(this));

	}
	~_executeActor6State() 
	{
		fdb_probe_actor_destroy("_execute", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 4182 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent("FileRestoreLogStart") .suppressFor(60) .detail("RestoreUID", restore.getUid()) .detail("FileName", logFile.fileName) .detail("FileBeginVersion", logFile.version) .detail("FileEndVersion", logFile.endVersion) .detail("FileSize", logFile.fileSize) .detail("ReadOffset", readOffset) .detail("ReadLen", readLen) .detail("TaskInstance", THIS_ADDR);
															#line 4193 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr = Reference<ReadYourWritesTransaction>(new ReadYourWritesTransaction(cx));
															#line 4194 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			bc = Reference<IBackupContainer>();
															#line 4195 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			ranges = std::vector<KeyRange>();
															#line 4197 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			;
															#line 34685 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = a_body1loopHead1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~_executeActor6State();
		static_cast<_executeActor6*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 4216 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		mutationLogPrefix = restore.mutationLogPrefix();
															#line 4217 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Reference<IAsyncFile>> __when_expr_5 = bc->readFile(logFile.fileName);
															#line 4217 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor6*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 34712 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_5.isReady()) { if (__when_expr_5.isError()) return a_body1Catch1(__when_expr_5.getError(), loopDepth); else return a_body1cont1when1(__when_expr_5.get(), loopDepth); };
		static_cast<_executeActor6*>(this)->actor_wait_state = 6;
															#line 4217 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_5.addCallbackAndClear(static_cast<ActorCallback< _executeActor6, 5, Reference<IAsyncFile> >*>(static_cast<_executeActor6*>(this)));
															#line 34717 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1(int loopDepth) 
	{
		try {
															#line 4199 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 4200 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 4202 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Reference<IBackupContainer>> __when_expr_0 = restore.sourceContainer().getOrThrow(tr);
															#line 4202 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor6*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 34740 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1loopBody1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1loopBody1when1(__when_expr_0.get(), loopDepth); };
			static_cast<_executeActor6*>(this)->actor_wait_state = 1;
															#line 4202 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< _executeActor6, 0, Reference<IBackupContainer> >*>(static_cast<_executeActor6*>(this)));
															#line 34745 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1break1(int loopDepth) 
	{
		try {
			return a_body1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1loopHead1(0);

		return loopDepth;
	}
	int a_body1loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 4212 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_4 = tr->onError(e);
															#line 4212 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor6*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 34782 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1Catch1(__when_expr_4.getError(), std::max(0, loopDepth - 1)); else return a_body1loopBody1Catch1when1(__when_expr_4.get(), loopDepth); };
			static_cast<_executeActor6*>(this)->actor_wait_state = 5;
															#line 4212 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< _executeActor6, 4, Void >*>(static_cast<_executeActor6*>(this)));
															#line 34787 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1loopBody1cont2(Reference<IBackupContainer> const& _bc,int loopDepth) 
	{
															#line 4203 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		bc = getBackupContainerWithProxy(_bc);
															#line 4205 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = store(ranges, restore.getRestoreRangesOrDefault(tr));
															#line 4205 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor6*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 34806 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1loopBody1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1loopBody1cont2when1(__when_expr_1.get(), loopDepth); };
		static_cast<_executeActor6*>(this)->actor_wait_state = 2;
															#line 4205 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< _executeActor6, 1, Void >*>(static_cast<_executeActor6*>(this)));
															#line 34811 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont2(Reference<IBackupContainer> && _bc,int loopDepth) 
	{
															#line 4203 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		bc = getBackupContainerWithProxy(_bc);
															#line 4205 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = store(ranges, restore.getRestoreRangesOrDefault(tr));
															#line 4205 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor6*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 34824 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1loopBody1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1loopBody1cont2when1(__when_expr_1.get(), loopDepth); };
		static_cast<_executeActor6*>(this)->actor_wait_state = 2;
															#line 4205 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< _executeActor6, 1, Void >*>(static_cast<_executeActor6*>(this)));
															#line 34829 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1when1(Reference<IBackupContainer> const& _bc,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont2(_bc, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1when1(Reference<IBackupContainer> && _bc,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont2(std::move(_bc), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<_executeActor6*>(this)->actor_wait_state > 0) static_cast<_executeActor6*>(this)->actor_wait_state = 0;
		static_cast<_executeActor6*>(this)->ActorCallback< _executeActor6, 0, Reference<IBackupContainer> >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor6, 0, Reference<IBackupContainer> >*,Reference<IBackupContainer> const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< _executeActor6, 0, Reference<IBackupContainer> >*,Reference<IBackupContainer> && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< _executeActor6, 0, Reference<IBackupContainer> >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1loopBody1cont3(Void const& _,int loopDepth) 
	{
															#line 4207 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_2 = checkTaskVersion(tr->getDatabase(), task, name, version);
															#line 4207 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor6*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 34903 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1loopBody1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1loopBody1cont3when1(__when_expr_2.get(), loopDepth); };
		static_cast<_executeActor6*>(this)->actor_wait_state = 3;
															#line 4207 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< _executeActor6, 2, Void >*>(static_cast<_executeActor6*>(this)));
															#line 34908 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont3(Void && _,int loopDepth) 
	{
															#line 4207 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_2 = checkTaskVersion(tr->getDatabase(), task, name, version);
															#line 4207 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor6*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 34919 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1loopBody1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1loopBody1cont3when1(__when_expr_2.get(), loopDepth); };
		static_cast<_executeActor6*>(this)->actor_wait_state = 3;
															#line 4207 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< _executeActor6, 2, Void >*>(static_cast<_executeActor6*>(this)));
															#line 34924 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<_executeActor6*>(this)->actor_wait_state > 0) static_cast<_executeActor6*>(this)->actor_wait_state = 0;
		static_cast<_executeActor6*>(this)->ActorCallback< _executeActor6, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor6, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< _executeActor6, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< _executeActor6, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1loopBody1cont4(Void const& _,int loopDepth) 
	{
															#line 4208 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_3 = taskBucket->keepRunning(tr, task);
															#line 4208 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor6*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 34998 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1loopBody1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1loopBody1cont4when1(__when_expr_3.get(), loopDepth); };
		static_cast<_executeActor6*>(this)->actor_wait_state = 4;
															#line 4208 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< _executeActor6, 3, Void >*>(static_cast<_executeActor6*>(this)));
															#line 35003 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont4(Void && _,int loopDepth) 
	{
															#line 4208 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_3 = taskBucket->keepRunning(tr, task);
															#line 4208 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor6*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 35014 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1loopBody1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1loopBody1cont4when1(__when_expr_3.get(), loopDepth); };
		static_cast<_executeActor6*>(this)->actor_wait_state = 4;
															#line 4208 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< _executeActor6, 3, Void >*>(static_cast<_executeActor6*>(this)));
															#line 35019 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont3when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont4(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont3when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont4(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<_executeActor6*>(this)->actor_wait_state > 0) static_cast<_executeActor6*>(this)->actor_wait_state = 0;
		static_cast<_executeActor6*>(this)->ActorCallback< _executeActor6, 2, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor6, 2, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1loopBody1cont3when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< _executeActor6, 2, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1loopBody1cont3when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< _executeActor6, 2, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 2);

	}
	int a_body1loopBody1cont5(Void const& _,int loopDepth) 
	{
		return a_body1break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1loopBody1cont5(Void && _,int loopDepth) 
	{
		return a_body1break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1loopBody1cont4when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont5(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont4when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont5(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose4() 
	{
		if (static_cast<_executeActor6*>(this)->actor_wait_state > 0) static_cast<_executeActor6*>(this)->actor_wait_state = 0;
		static_cast<_executeActor6*>(this)->ActorCallback< _executeActor6, 3, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor6, 3, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1loopBody1cont4when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_fire(ActorCallback< _executeActor6, 3, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1loopBody1cont4when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_error(ActorCallback< _executeActor6, 3, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 3);

	}
	int a_body1loopBody1Catch1cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1Catch1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1Catch1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose5() 
	{
		if (static_cast<_executeActor6*>(this)->actor_wait_state > 0) static_cast<_executeActor6*>(this)->actor_wait_state = 0;
		static_cast<_executeActor6*>(this)->ActorCallback< _executeActor6, 4, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor6, 4, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_fire(ActorCallback< _executeActor6, 4, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_error(ActorCallback< _executeActor6, 4, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 4);

	}
	int a_body1cont2(int loopDepth) 
	{
															#line 4218 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Standalone<VectorRef<KeyValueRef>>> __when_expr_6 = decodeMutationLogFileBlock(inFile, readOffset, readLen);
															#line 4218 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor6*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 35243 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_6.isReady()) { if (__when_expr_6.isError()) return a_body1Catch1(__when_expr_6.getError(), loopDepth); else return a_body1cont2when1(__when_expr_6.get(), loopDepth); };
		static_cast<_executeActor6*>(this)->actor_wait_state = 7;
															#line 4218 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_6.addCallbackAndClear(static_cast<ActorCallback< _executeActor6, 6, Standalone<VectorRef<KeyValueRef>> >*>(static_cast<_executeActor6*>(this)));
															#line 35248 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1when1(Reference<IAsyncFile> const& __inFile,int loopDepth) 
	{
															#line 4217 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		inFile = __inFile;
															#line 35257 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont2(loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Reference<IAsyncFile> && __inFile,int loopDepth) 
	{
		inFile = std::move(__inFile);
		loopDepth = a_body1cont2(loopDepth);

		return loopDepth;
	}
	void a_exitChoose6() 
	{
		if (static_cast<_executeActor6*>(this)->actor_wait_state > 0) static_cast<_executeActor6*>(this)->actor_wait_state = 0;
		static_cast<_executeActor6*>(this)->ActorCallback< _executeActor6, 5, Reference<IAsyncFile> >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor6, 5, Reference<IAsyncFile> >*,Reference<IAsyncFile> const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_fire(ActorCallback< _executeActor6, 5, Reference<IAsyncFile> >*,Reference<IAsyncFile> && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_error(ActorCallback< _executeActor6, 5, Reference<IAsyncFile> >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 5);

	}
	int a_body1cont3(int loopDepth) 
	{
															#line 4223 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		RangeMapFilters filters(ranges);
															#line 4224 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		dataFiltered = filterLogMutationKVPairs(dataOriginal, filters);
															#line 4226 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		start = 0;
															#line 4227 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		end = dataFiltered.size();
															#line 4228 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		dataSizeLimit = BUGGIFY ? deterministicRandom()->randomInt(256 * 1024, 10e6) : CLIENT_KNOBS->RESTORE_WRITE_TX_SIZE;
															#line 4231 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->reset();
															#line 4232 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 35336 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont3loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(Standalone<VectorRef<KeyValueRef>> const& __dataOriginal,int loopDepth) 
	{
															#line 4218 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		dataOriginal = __dataOriginal;
															#line 35345 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont3(loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(Standalone<VectorRef<KeyValueRef>> && __dataOriginal,int loopDepth) 
	{
		dataOriginal = std::move(__dataOriginal);
		loopDepth = a_body1cont3(loopDepth);

		return loopDepth;
	}
	void a_exitChoose7() 
	{
		if (static_cast<_executeActor6*>(this)->actor_wait_state > 0) static_cast<_executeActor6*>(this)->actor_wait_state = 0;
		static_cast<_executeActor6*>(this)->ActorCallback< _executeActor6, 6, Standalone<VectorRef<KeyValueRef>> >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor6, 6, Standalone<VectorRef<KeyValueRef>> >*,Standalone<VectorRef<KeyValueRef>> const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 6);

	}
	void a_callback_fire(ActorCallback< _executeActor6, 6, Standalone<VectorRef<KeyValueRef>> >*,Standalone<VectorRef<KeyValueRef>> && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 6);

	}
	void a_callback_error(ActorCallback< _executeActor6, 6, Standalone<VectorRef<KeyValueRef>> >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 6);

	}
	int a_body1cont3loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont3loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1(int loopDepth) 
	{
		try {
															#line 4234 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (start == end)
															#line 35420 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 4235 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (!static_cast<_executeActor6*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_executeActor6State(); static_cast<_executeActor6*>(this)->destroy(); return 0; }
															#line 35424 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				new (&static_cast<_executeActor6*>(this)->SAV< Void >::value()) Void(Void());
				this->~_executeActor6State();
				static_cast<_executeActor6*>(this)->finishSendAndDelPromiseRef();
				return 0;
			}
															#line 4237 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 4238 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 4240 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			i = start;
															#line 4241 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			txBytes = 0;
															#line 4242 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			for(;i < end && txBytes < dataSizeLimit;++i) {
															#line 4243 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				Key k = dataFiltered[i].key.withPrefix(mutationLogPrefix);
															#line 4244 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				ValueRef v = dataFiltered[i].value;
															#line 4245 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				tr->set(k, v);
															#line 4246 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				txBytes += k.expectedSize();
															#line 4247 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				txBytes += v.expectedSize();
															#line 35450 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
															#line 4250 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			checkLock = checkDatabaseLock(tr, restore.getUid());
															#line 4252 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_7 = taskBucket->keepRunning(tr, task);
															#line 4252 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor6*>(this)->actor_wait_state < 0) return a_body1cont3loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 35458 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_7.isReady()) { if (__when_expr_7.isError()) return a_body1cont3loopBody1Catch1(__when_expr_7.getError(), loopDepth); else return a_body1cont3loopBody1when1(__when_expr_7.get(), loopDepth); };
			static_cast<_executeActor6*>(this)->actor_wait_state = 8;
															#line 4252 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_7.addCallbackAndClear(static_cast<ActorCallback< _executeActor6, 7, Void >*>(static_cast<_executeActor6*>(this)));
															#line 35463 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1cont3loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1cont3loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont3loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1cont3loopHead1(0);

		return loopDepth;
	}
	int a_body1cont3loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 4281 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (e.code() == error_code_transaction_too_large)
															#line 35485 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 4282 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				dataSizeLimit /= 2;
															#line 35489 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				loopDepth = a_body1cont3loopBody1Catch1cont1(loopDepth);
			}
			else
			{
															#line 4284 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				StrictFuture<Void> __when_expr_10 = tr->onError(e);
															#line 4284 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (static_cast<_executeActor6*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 35498 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				if (__when_expr_10.isReady()) { if (__when_expr_10.isError()) return a_body1Catch1(__when_expr_10.getError(), std::max(0, loopDepth - 1)); else return a_body1cont3loopBody1Catch1when1(__when_expr_10.get(), loopDepth); };
				static_cast<_executeActor6*>(this)->actor_wait_state = 11;
															#line 4284 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				__when_expr_10.addCallbackAndClear(static_cast<ActorCallback< _executeActor6, 10, Void >*>(static_cast<_executeActor6*>(this)));
															#line 35503 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				loopDepth = 0;
			}
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont3loopBody1cont2(Void const& _,int loopDepth) 
	{
															#line 4253 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_8 = checkLock;
															#line 4253 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor6*>(this)->actor_wait_state < 0) return a_body1cont3loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 35521 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_8.isReady()) { if (__when_expr_8.isError()) return a_body1cont3loopBody1Catch1(__when_expr_8.getError(), loopDepth); else return a_body1cont3loopBody1cont2when1(__when_expr_8.get(), loopDepth); };
		static_cast<_executeActor6*>(this)->actor_wait_state = 9;
															#line 4253 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_8.addCallbackAndClear(static_cast<ActorCallback< _executeActor6, 8, Void >*>(static_cast<_executeActor6*>(this)));
															#line 35526 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont3loopBody1cont2(Void && _,int loopDepth) 
	{
															#line 4253 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_8 = checkLock;
															#line 4253 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor6*>(this)->actor_wait_state < 0) return a_body1cont3loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 35537 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_8.isReady()) { if (__when_expr_8.isError()) return a_body1cont3loopBody1Catch1(__when_expr_8.getError(), loopDepth); else return a_body1cont3loopBody1cont2when1(__when_expr_8.get(), loopDepth); };
		static_cast<_executeActor6*>(this)->actor_wait_state = 9;
															#line 4253 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_8.addCallbackAndClear(static_cast<ActorCallback< _executeActor6, 8, Void >*>(static_cast<_executeActor6*>(this)));
															#line 35542 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont3loopBody1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose8() 
	{
		if (static_cast<_executeActor6*>(this)->actor_wait_state > 0) static_cast<_executeActor6*>(this)->actor_wait_state = 0;
		static_cast<_executeActor6*>(this)->ActorCallback< _executeActor6, 7, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor6, 7, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1cont3loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont3loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont3loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 7);

	}
	void a_callback_fire(ActorCallback< _executeActor6, 7, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1cont3loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont3loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont3loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 7);

	}
	void a_callback_error(ActorCallback< _executeActor6, 7, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1cont3loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont3loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont3loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 7);

	}
	int a_body1cont3loopBody1cont5(Void const& _,int loopDepth) 
	{
															#line 4256 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restore.bytesWritten().atomicOp(tr, txBytes, MutationRef::Type::AddValue);
															#line 4258 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_9 = tr->commit();
															#line 4258 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor6*>(this)->actor_wait_state < 0) return a_body1cont3loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 35618 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_9.isReady()) { if (__when_expr_9.isError()) return a_body1cont3loopBody1Catch1(__when_expr_9.getError(), loopDepth); else return a_body1cont3loopBody1cont5when1(__when_expr_9.get(), loopDepth); };
		static_cast<_executeActor6*>(this)->actor_wait_state = 10;
															#line 4258 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_9.addCallbackAndClear(static_cast<ActorCallback< _executeActor6, 9, Void >*>(static_cast<_executeActor6*>(this)));
															#line 35623 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont3loopBody1cont5(Void && _,int loopDepth) 
	{
															#line 4256 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restore.bytesWritten().atomicOp(tr, txBytes, MutationRef::Type::AddValue);
															#line 4258 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_9 = tr->commit();
															#line 4258 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor6*>(this)->actor_wait_state < 0) return a_body1cont3loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 35636 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_9.isReady()) { if (__when_expr_9.isError()) return a_body1cont3loopBody1Catch1(__when_expr_9.getError(), loopDepth); else return a_body1cont3loopBody1cont5when1(__when_expr_9.get(), loopDepth); };
		static_cast<_executeActor6*>(this)->actor_wait_state = 10;
															#line 4258 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_9.addCallbackAndClear(static_cast<ActorCallback< _executeActor6, 9, Void >*>(static_cast<_executeActor6*>(this)));
															#line 35641 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont3loopBody1cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1cont5(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1cont5(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose9() 
	{
		if (static_cast<_executeActor6*>(this)->actor_wait_state > 0) static_cast<_executeActor6*>(this)->actor_wait_state = 0;
		static_cast<_executeActor6*>(this)->ActorCallback< _executeActor6, 8, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor6, 8, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 8);
		a_exitChoose9();
		try {
			a_body1cont3loopBody1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont3loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont3loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 8);

	}
	void a_callback_fire(ActorCallback< _executeActor6, 8, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 8);
		a_exitChoose9();
		try {
			a_body1cont3loopBody1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont3loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont3loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 8);

	}
	void a_callback_error(ActorCallback< _executeActor6, 8, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 8);
		a_exitChoose9();
		try {
			a_body1cont3loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont3loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont3loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 8);

	}
	int a_body1cont3loopBody1cont6(Void const& _,int loopDepth) 
	{
															#line 4260 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FileRestoreCommittedLog") .suppressFor(60) .detail("RestoreUID", restore.getUid()) .detail("FileName", logFile.fileName) .detail("FileBeginVersion", logFile.version) .detail("FileEndVersion", logFile.endVersion) .detail("FileSize", logFile.fileSize) .detail("ReadOffset", readOffset) .detail("ReadLen", readLen) .detail("CommitVersion", tr->getCommittedVersion()) .detail("StartIndex", start) .detail("EndIndex", i) .detail("RecordCountOriginal", dataOriginal.size()) .detail("RecordCountFiltered", dataFiltered.size()) .detail("Bytes", txBytes) .detail("TaskInstance", THIS_ADDR);
															#line 4278 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		start = i;
															#line 4279 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->reset();
															#line 35717 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont3loopBody1cont8(loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1cont6(Void && _,int loopDepth) 
	{
															#line 4260 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FileRestoreCommittedLog") .suppressFor(60) .detail("RestoreUID", restore.getUid()) .detail("FileName", logFile.fileName) .detail("FileBeginVersion", logFile.version) .detail("FileEndVersion", logFile.endVersion) .detail("FileSize", logFile.fileSize) .detail("ReadOffset", readOffset) .detail("ReadLen", readLen) .detail("CommitVersion", tr->getCommittedVersion()) .detail("StartIndex", start) .detail("EndIndex", i) .detail("RecordCountOriginal", dataOriginal.size()) .detail("RecordCountFiltered", dataFiltered.size()) .detail("Bytes", txBytes) .detail("TaskInstance", THIS_ADDR);
															#line 4278 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		start = i;
															#line 4279 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->reset();
															#line 35730 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont3loopBody1cont8(loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1cont5when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1cont6(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1cont5when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1cont6(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose10() 
	{
		if (static_cast<_executeActor6*>(this)->actor_wait_state > 0) static_cast<_executeActor6*>(this)->actor_wait_state = 0;
		static_cast<_executeActor6*>(this)->ActorCallback< _executeActor6, 9, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor6, 9, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 9);
		a_exitChoose10();
		try {
			a_body1cont3loopBody1cont5when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont3loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont3loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 9);

	}
	void a_callback_fire(ActorCallback< _executeActor6, 9, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 9);
		a_exitChoose10();
		try {
			a_body1cont3loopBody1cont5when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont3loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont3loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 9);

	}
	void a_callback_error(ActorCallback< _executeActor6, 9, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 9);
		a_exitChoose10();
		try {
			a_body1cont3loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont3loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont3loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 9);

	}
	int a_body1cont3loopBody1cont8(int loopDepth) 
	{
		try {
			loopDepth = a_body1cont3loopBody1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont3loopBody1Catch1cont1(int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1Catch1cont3(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1Catch1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1Catch1cont3(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1Catch1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1Catch1cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1Catch1cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose11() 
	{
		if (static_cast<_executeActor6*>(this)->actor_wait_state > 0) static_cast<_executeActor6*>(this)->actor_wait_state = 0;
		static_cast<_executeActor6*>(this)->ActorCallback< _executeActor6, 10, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor6, 10, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 10);
		a_exitChoose11();
		try {
			a_body1cont3loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 10);

	}
	void a_callback_fire(ActorCallback< _executeActor6, 10, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 10);
		a_exitChoose11();
		try {
			a_body1cont3loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 10);

	}
	void a_callback_error(ActorCallback< _executeActor6, 10, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 10);
		a_exitChoose11();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 10);

	}
															#line 4172 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Database cx;
															#line 4172 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskBucket> taskBucket;
															#line 4172 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<FutureBucket> futureBucket;
															#line 4172 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> task;
															#line 4176 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	RestoreConfig restore;
															#line 4178 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	RestoreFile logFile;
															#line 4179 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int64_t readOffset;
															#line 4180 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int64_t readLen;
															#line 4193 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 4194 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<IBackupContainer> bc;
															#line 4195 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::vector<KeyRange> ranges;
															#line 4216 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key mutationLogPrefix;
															#line 4217 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<IAsyncFile> inFile;
															#line 4218 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Standalone<VectorRef<KeyValueRef>> dataOriginal;
															#line 4224 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::vector<KeyValueRef> dataFiltered;
															#line 4226 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int start;
															#line 4227 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int end;
															#line 4228 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int dataSizeLimit;
															#line 4240 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int i;
															#line 4241 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int txBytes;
															#line 4250 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<Void> checkLock;
															#line 35934 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via _execute()
															#line 4172 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _executeActor6 final : public Actor<Void>, public ActorCallback< _executeActor6, 0, Reference<IBackupContainer> >, public ActorCallback< _executeActor6, 1, Void >, public ActorCallback< _executeActor6, 2, Void >, public ActorCallback< _executeActor6, 3, Void >, public ActorCallback< _executeActor6, 4, Void >, public ActorCallback< _executeActor6, 5, Reference<IAsyncFile> >, public ActorCallback< _executeActor6, 6, Standalone<VectorRef<KeyValueRef>> >, public ActorCallback< _executeActor6, 7, Void >, public ActorCallback< _executeActor6, 8, Void >, public ActorCallback< _executeActor6, 9, Void >, public ActorCallback< _executeActor6, 10, Void >, public FastAllocated<_executeActor6>, public _executeActor6State<_executeActor6> {
															#line 35939 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<_executeActor6>::operator new;
	using FastAllocated<_executeActor6>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< _executeActor6, 0, Reference<IBackupContainer> >;
friend struct ActorCallback< _executeActor6, 1, Void >;
friend struct ActorCallback< _executeActor6, 2, Void >;
friend struct ActorCallback< _executeActor6, 3, Void >;
friend struct ActorCallback< _executeActor6, 4, Void >;
friend struct ActorCallback< _executeActor6, 5, Reference<IAsyncFile> >;
friend struct ActorCallback< _executeActor6, 6, Standalone<VectorRef<KeyValueRef>> >;
friend struct ActorCallback< _executeActor6, 7, Void >;
friend struct ActorCallback< _executeActor6, 8, Void >;
friend struct ActorCallback< _executeActor6, 9, Void >;
friend struct ActorCallback< _executeActor6, 10, Void >;
															#line 4172 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_executeActor6(Database const& cx,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 35960 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   _executeActor6State<_executeActor6>(cx, taskBucket, futureBucket, task)
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("_execute");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< _executeActor6, 0, Reference<IBackupContainer> >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< _executeActor6, 1, Void >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< _executeActor6, 2, Void >*)0, actor_cancelled()); break;
		case 4: this->a_callback_error((ActorCallback< _executeActor6, 3, Void >*)0, actor_cancelled()); break;
		case 5: this->a_callback_error((ActorCallback< _executeActor6, 4, Void >*)0, actor_cancelled()); break;
		case 6: this->a_callback_error((ActorCallback< _executeActor6, 5, Reference<IAsyncFile> >*)0, actor_cancelled()); break;
		case 7: this->a_callback_error((ActorCallback< _executeActor6, 6, Standalone<VectorRef<KeyValueRef>> >*)0, actor_cancelled()); break;
		case 8: this->a_callback_error((ActorCallback< _executeActor6, 7, Void >*)0, actor_cancelled()); break;
		case 9: this->a_callback_error((ActorCallback< _executeActor6, 8, Void >*)0, actor_cancelled()); break;
		case 10: this->a_callback_error((ActorCallback< _executeActor6, 9, Void >*)0, actor_cancelled()); break;
		case 11: this->a_callback_error((ActorCallback< _executeActor6, 10, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 4172 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> _execute( Database const& cx, Reference<TaskBucket> const& taskBucket, Reference<FutureBucket> const& futureBucket, Reference<Task> const& task ) {
															#line 4172 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new _executeActor6(cx, taskBucket, futureBucket, task));
															#line 35997 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 4288 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

																#line 36002 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via _finish()
															#line 4289 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class _finishActor12>
															#line 4289 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _finishActor12State {
															#line 36008 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 4289 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_finishActor12State(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 4289 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 4289 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : tr(tr),
															#line 4289 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskBucket(taskBucket),
															#line 4289 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   futureBucket(futureBucket),
															#line 4289 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   task(task)
															#line 36021 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("_finish", reinterpret_cast<unsigned long>(this));

	}
	~_finishActor12State() 
	{
		fdb_probe_actor_destroy("_finish", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 4293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			RestoreConfig(task).fileBlocksFinished().atomicOp(tr, 1, MutationRef::Type::AddValue);
															#line 4295 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			taskFuture = futureBucket->unpack(task->params[Task::reservedTaskParamKeyDone]);
															#line 4299 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_0 = taskFuture->set(tr, taskBucket) && taskBucket->finish(tr, task);
															#line 4299 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_finishActor12*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 36042 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<_finishActor12*>(this)->actor_wait_state = 1;
															#line 4299 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< _finishActor12, 0, Void >*>(static_cast<_finishActor12*>(this)));
															#line 36047 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~_finishActor12State();
		static_cast<_finishActor12*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Void const& _,int loopDepth) 
	{
															#line 4301 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_finishActor12*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_finishActor12State(); static_cast<_finishActor12*>(this)->destroy(); return 0; }
															#line 36070 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_finishActor12*>(this)->SAV< Void >::value()) Void(Void());
		this->~_finishActor12State();
		static_cast<_finishActor12*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont1(Void && _,int loopDepth) 
	{
															#line 4301 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_finishActor12*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_finishActor12State(); static_cast<_finishActor12*>(this)->destroy(); return 0; }
															#line 36082 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_finishActor12*>(this)->SAV< Void >::value()) Void(Void());
		this->~_finishActor12State();
		static_cast<_finishActor12*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<_finishActor12*>(this)->actor_wait_state > 0) static_cast<_finishActor12*>(this)->actor_wait_state = 0;
		static_cast<_finishActor12*>(this)->ActorCallback< _finishActor12, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor12, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< _finishActor12, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< _finishActor12, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
															#line 4289 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 4289 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskBucket> taskBucket;
															#line 4289 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<FutureBucket> futureBucket;
															#line 4289 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> task;
															#line 4295 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskFuture> taskFuture;
															#line 36163 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via _finish()
															#line 4289 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _finishActor12 final : public Actor<Void>, public ActorCallback< _finishActor12, 0, Void >, public FastAllocated<_finishActor12>, public _finishActor12State<_finishActor12> {
															#line 36168 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<_finishActor12>::operator new;
	using FastAllocated<_finishActor12>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< _finishActor12, 0, Void >;
															#line 4289 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_finishActor12(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 36179 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   _finishActor12State<_finishActor12>(tr, taskBucket, futureBucket, task)
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("_finish");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< _finishActor12, 0, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 4289 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> _finish( Reference<ReadYourWritesTransaction> const& tr, Reference<TaskBucket> const& taskBucket, Reference<FutureBucket> const& futureBucket, Reference<Task> const& task ) {
															#line 4289 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new _finishActor12(tr, taskBucket, futureBucket, task));
															#line 36206 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 4303 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

																#line 36211 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via addTask()
															#line 4304 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class AddTaskActor10>
															#line 4304 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class AddTaskActor10State {
															#line 36217 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 4304 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	AddTaskActor10State(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<Task> const& parentTask,RestoreFile const& lf,int64_t const& offset,int64_t const& len,TaskCompletionKey const& completionKey,Reference<TaskFuture> const& waitFor = Reference<TaskFuture>()) 
															#line 4304 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 4304 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : tr(tr),
															#line 4304 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskBucket(taskBucket),
															#line 4304 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   parentTask(parentTask),
															#line 4304 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   lf(lf),
															#line 4304 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   offset(offset),
															#line 4304 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   len(len),
															#line 4304 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   completionKey(completionKey),
															#line 4304 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   waitFor(waitFor)
															#line 36238 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("addTask", reinterpret_cast<unsigned long>(this));

	}
	~AddTaskActor10State() 
	{
		fdb_probe_actor_destroy("addTask", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 4312 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Key> __when_expr_0 = completionKey.get(tr, taskBucket);
															#line 4312 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<AddTaskActor10*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 36255 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<AddTaskActor10*>(this)->actor_wait_state = 1;
															#line 4312 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< AddTaskActor10, 0, Key >*>(static_cast<AddTaskActor10*>(this)));
															#line 36260 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~AddTaskActor10State();
		static_cast<AddTaskActor10*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Key const& doneKey,int loopDepth) 
	{
															#line 4313 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		task = Reference<Task>(new Task(RestoreLogDataTaskFunc::name, RestoreLogDataTaskFunc::version, doneKey));
															#line 4316 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = RestoreConfig(parentTask).toTask(tr, task);
															#line 4316 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AddTaskActor10*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 36287 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<AddTaskActor10*>(this)->actor_wait_state = 2;
															#line 4316 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< AddTaskActor10, 1, Void >*>(static_cast<AddTaskActor10*>(this)));
															#line 36292 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Key && doneKey,int loopDepth) 
	{
															#line 4313 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		task = Reference<Task>(new Task(RestoreLogDataTaskFunc::name, RestoreLogDataTaskFunc::version, doneKey));
															#line 4316 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = RestoreConfig(parentTask).toTask(tr, task);
															#line 4316 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AddTaskActor10*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 36305 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<AddTaskActor10*>(this)->actor_wait_state = 2;
															#line 4316 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< AddTaskActor10, 1, Void >*>(static_cast<AddTaskActor10*>(this)));
															#line 36310 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1when1(Key const& doneKey,int loopDepth) 
	{
		loopDepth = a_body1cont1(doneKey, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Key && doneKey,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(doneKey), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<AddTaskActor10*>(this)->actor_wait_state > 0) static_cast<AddTaskActor10*>(this)->actor_wait_state = 0;
		static_cast<AddTaskActor10*>(this)->ActorCallback< AddTaskActor10, 0, Key >::remove();

	}
	void a_callback_fire(ActorCallback< AddTaskActor10, 0, Key >*,Key const& value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< AddTaskActor10, 0, Key >*,Key && value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< AddTaskActor10, 0, Key >*,Error err) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont2(Void const& _,int loopDepth) 
	{
															#line 4317 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Params.inputFile().set(task, lf);
															#line 4318 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Params.readOffset().set(task, offset);
															#line 4319 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Params.readLen().set(task, len);
															#line 4321 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!waitFor)
															#line 36388 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 4322 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<AddTaskActor10*>(this)->SAV<Key>::futures) { (void)(taskBucket->addTask(tr, task)); this->~AddTaskActor10State(); static_cast<AddTaskActor10*>(this)->destroy(); return 0; }
															#line 36392 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<AddTaskActor10*>(this)->SAV< Key >::value()) Key(taskBucket->addTask(tr, task));
			this->~AddTaskActor10State();
			static_cast<AddTaskActor10*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 4325 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_2 = waitFor->onSetAddTask(tr, taskBucket, task);
															#line 4325 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AddTaskActor10*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 36402 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont2when1(__when_expr_2.get(), loopDepth); };
		static_cast<AddTaskActor10*>(this)->actor_wait_state = 3;
															#line 4325 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< AddTaskActor10, 2, Void >*>(static_cast<AddTaskActor10*>(this)));
															#line 36407 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont2(Void && _,int loopDepth) 
	{
															#line 4317 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Params.inputFile().set(task, lf);
															#line 4318 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Params.readOffset().set(task, offset);
															#line 4319 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Params.readLen().set(task, len);
															#line 4321 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!waitFor)
															#line 36422 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 4322 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<AddTaskActor10*>(this)->SAV<Key>::futures) { (void)(taskBucket->addTask(tr, task)); this->~AddTaskActor10State(); static_cast<AddTaskActor10*>(this)->destroy(); return 0; }
															#line 36426 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<AddTaskActor10*>(this)->SAV< Key >::value()) Key(taskBucket->addTask(tr, task));
			this->~AddTaskActor10State();
			static_cast<AddTaskActor10*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 4325 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_2 = waitFor->onSetAddTask(tr, taskBucket, task);
															#line 4325 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AddTaskActor10*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 36436 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont2when1(__when_expr_2.get(), loopDepth); };
		static_cast<AddTaskActor10*>(this)->actor_wait_state = 3;
															#line 4325 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< AddTaskActor10, 2, Void >*>(static_cast<AddTaskActor10*>(this)));
															#line 36441 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<AddTaskActor10*>(this)->actor_wait_state > 0) static_cast<AddTaskActor10*>(this)->actor_wait_state = 0;
		static_cast<AddTaskActor10*>(this)->ActorCallback< AddTaskActor10, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< AddTaskActor10, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< AddTaskActor10, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< AddTaskActor10, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont3(Void const& _,int loopDepth) 
	{
															#line 4326 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<AddTaskActor10*>(this)->SAV<Key>::futures) { (void)("OnSetAddTask"_sr); this->~AddTaskActor10State(); static_cast<AddTaskActor10*>(this)->destroy(); return 0; }
															#line 36513 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<AddTaskActor10*>(this)->SAV< Key >::value()) Key("OnSetAddTask"_sr);
		this->~AddTaskActor10State();
		static_cast<AddTaskActor10*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont3(Void && _,int loopDepth) 
	{
															#line 4326 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<AddTaskActor10*>(this)->SAV<Key>::futures) { (void)("OnSetAddTask"_sr); this->~AddTaskActor10State(); static_cast<AddTaskActor10*>(this)->destroy(); return 0; }
															#line 36525 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<AddTaskActor10*>(this)->SAV< Key >::value()) Key("OnSetAddTask"_sr);
		this->~AddTaskActor10State();
		static_cast<AddTaskActor10*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<AddTaskActor10*>(this)->actor_wait_state > 0) static_cast<AddTaskActor10*>(this)->actor_wait_state = 0;
		static_cast<AddTaskActor10*>(this)->ActorCallback< AddTaskActor10, 2, Void >::remove();

	}
	void a_callback_fire(ActorCallback< AddTaskActor10, 2, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< AddTaskActor10, 2, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< AddTaskActor10, 2, Void >*,Error err) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 2);

	}
															#line 4304 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 4304 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskBucket> taskBucket;
															#line 4304 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> parentTask;
															#line 4304 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	RestoreFile lf;
															#line 4304 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int64_t offset;
															#line 4304 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int64_t len;
															#line 4304 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	TaskCompletionKey completionKey;
															#line 4304 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskFuture> waitFor;
															#line 4313 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> task;
															#line 36614 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via addTask()
															#line 4304 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class AddTaskActor10 final : public Actor<Key>, public ActorCallback< AddTaskActor10, 0, Key >, public ActorCallback< AddTaskActor10, 1, Void >, public ActorCallback< AddTaskActor10, 2, Void >, public FastAllocated<AddTaskActor10>, public AddTaskActor10State<AddTaskActor10> {
															#line 36619 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<AddTaskActor10>::operator new;
	using FastAllocated<AddTaskActor10>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Key>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< AddTaskActor10, 0, Key >;
friend struct ActorCallback< AddTaskActor10, 1, Void >;
friend struct ActorCallback< AddTaskActor10, 2, Void >;
															#line 4304 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	AddTaskActor10(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<Task> const& parentTask,RestoreFile const& lf,int64_t const& offset,int64_t const& len,TaskCompletionKey const& completionKey,Reference<TaskFuture> const& waitFor = Reference<TaskFuture>()) 
															#line 36632 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Key>(),
		   AddTaskActor10State<AddTaskActor10>(tr, taskBucket, parentTask, lf, offset, len, completionKey, waitFor)
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("addTask");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< AddTaskActor10, 0, Key >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< AddTaskActor10, 1, Void >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< AddTaskActor10, 2, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 4304 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Key> addTask( Reference<ReadYourWritesTransaction> const& tr, Reference<TaskBucket> const& taskBucket, Reference<Task> const& parentTask, RestoreFile const& lf, int64_t const& offset, int64_t const& len, TaskCompletionKey const& completionKey, Reference<TaskFuture> const& waitFor = Reference<TaskFuture>() ) {
															#line 4304 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Key>(new AddTaskActor10(tr, taskBucket, parentTask, lf, offset, len, completionKey, waitFor));
															#line 36661 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 4328 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

	Future<Void> execute(Database cx,
	                     Reference<TaskBucket> tb,
	                     Reference<FutureBucket> fb,
	                     Reference<Task> task) override {
		return _execute(cx, tb, fb, task);
	};
	Future<Void> finish(Reference<ReadYourWritesTransaction> tr,
	                    Reference<TaskBucket> tb,
	                    Reference<FutureBucket> fb,
	                    Reference<Task> task) override {
		return _finish(tr, tb, fb, task);
	};
};
StringRef RestoreLogDataTaskFunc::name = "restore_log_data"_sr;
REGISTER_TASKFUNC(RestoreLogDataTaskFunc);

struct RestoreDispatchTaskFunc : RestoreTaskFuncBase {
	static StringRef name;
	static constexpr uint32_t version = 1;
	StringRef getName() const override { return name; };

	static struct {
		static TaskParam<Version> beginVersion() { return __FUNCTION__sr; }
		static TaskParam<std::string> beginFile() { return __FUNCTION__sr; }
		static TaskParam<int64_t> beginBlock() { return __FUNCTION__sr; }
		static TaskParam<int64_t> batchSize() { return __FUNCTION__sr; }
		static TaskParam<int64_t> remainingInBatch() { return __FUNCTION__sr; }
	} Params;

																#line 36695 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via _finish()
															#line 4358 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class _finishActor13>
															#line 4358 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _finishActor13State {
															#line 36701 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 4358 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_finishActor13State(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 4358 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 4358 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : tr(tr),
															#line 4358 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskBucket(taskBucket),
															#line 4358 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   futureBucket(futureBucket),
															#line 4358 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   task(task),
															#line 4362 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   restore(task),
															#line 4364 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   beginVersion(Params.beginVersion().get(task)),
															#line 4365 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   onDone(futureBucket->unpack(task->params[Task::reservedTaskParamKeyDone])),
															#line 4367 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   remainingInBatch(Params.remainingInBatch().get(task)),
															#line 4368 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   addingToExistingBatch(remainingInBatch > 0),
															#line 4369 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   restoreVersion(),
															#line 4370 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   onlyApplyMutationLogs(restore.onlyApplyMutationLogs().get(tr))
															#line 36728 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("_finish", reinterpret_cast<unsigned long>(this));

	}
	~_finishActor13State() 
	{
		fdb_probe_actor_destroy("_finish", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 4372 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_0 = store(restoreVersion, restore.restoreVersion().getOrThrow(tr)) && success(onlyApplyMutationLogs) && checkTaskVersion(tr->getDatabase(), task, name, version);
															#line 4372 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_finishActor13*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 36745 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<_finishActor13*>(this)->actor_wait_state = 1;
															#line 4372 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< _finishActor13, 0, Void >*>(static_cast<_finishActor13*>(this)));
															#line 36750 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~_finishActor13State();
		static_cast<_finishActor13*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Void const& _,int loopDepth) 
	{
															#line 4378 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!addingToExistingBatch && beginVersion > 0)
															#line 36773 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 4379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			restore.setApplyEndVersion(tr, std::min(beginVersion, restoreVersion + 1));
															#line 36777 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 4383 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<int64_t> __when_expr_1 = restore.getApplyVersionLag(tr);
															#line 4383 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor13*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 36783 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<_finishActor13*>(this)->actor_wait_state = 2;
															#line 4383 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< _finishActor13, 1, int64_t >*>(static_cast<_finishActor13*>(this)));
															#line 36788 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Void && _,int loopDepth) 
	{
															#line 4378 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!addingToExistingBatch && beginVersion > 0)
															#line 36797 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 4379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			restore.setApplyEndVersion(tr, std::min(beginVersion, restoreVersion + 1));
															#line 36801 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 4383 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<int64_t> __when_expr_1 = restore.getApplyVersionLag(tr);
															#line 4383 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor13*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 36807 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<_finishActor13*>(this)->actor_wait_state = 2;
															#line 4383 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< _finishActor13, 1, int64_t >*>(static_cast<_finishActor13*>(this)));
															#line 36812 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<_finishActor13*>(this)->actor_wait_state > 0) static_cast<_finishActor13*>(this)->actor_wait_state = 0;
		static_cast<_finishActor13*>(this)->ActorCallback< _finishActor13, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor13, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< _finishActor13, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< _finishActor13, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont2(int loopDepth) 
	{
															#line 4384 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		batchSize = Params.batchSize().get(task);
															#line 4387 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!addingToExistingBatch && applyLag > (BUGGIFY ? 1 : CLIENT_KNOBS->CORE_VERSIONSPERSECOND * 300))
															#line 36886 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 4389 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_2 = delay(FLOW_KNOBS->PREVENT_FAST_SPIN_DELAY);
															#line 4389 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_finishActor13*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 36892 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont2when1(__when_expr_2.get(), loopDepth); };
			static_cast<_finishActor13*>(this)->actor_wait_state = 3;
															#line 4389 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< _finishActor13, 2, Void >*>(static_cast<_finishActor13*>(this)));
															#line 36897 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont4(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont1when1(int64_t const& __applyLag,int loopDepth) 
	{
															#line 4383 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		applyLag = __applyLag;
															#line 36911 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont2(loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(int64_t && __applyLag,int loopDepth) 
	{
		applyLag = std::move(__applyLag);
		loopDepth = a_body1cont2(loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<_finishActor13*>(this)->actor_wait_state > 0) static_cast<_finishActor13*>(this)->actor_wait_state = 0;
		static_cast<_finishActor13*>(this)->ActorCallback< _finishActor13, 1, int64_t >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor13, 1, int64_t >*,int64_t const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< _finishActor13, 1, int64_t >*,int64_t && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< _finishActor13, 1, int64_t >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont4(int loopDepth) 
	{
															#line 4405 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		beginFile = Params.beginFile().getOrDefault(task);
															#line 4408 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		taskBatchSize = BUGGIFY ? 1 : CLIENT_KNOBS->RESTORE_DISPATCH_ADDTASK_SIZE;
															#line 4409 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<RestoreConfig::FileSetT::RangeResultType> __when_expr_5 = restore.fileSet().getRange( tr, Optional<RestoreConfig::RestoreFile>({ beginVersion, beginFile }), {}, taskBatchSize);
															#line 4409 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor13*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 36984 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_5.isReady()) { if (__when_expr_5.isError()) return a_body1Catch1(__when_expr_5.getError(), loopDepth); else return a_body1cont4when1(__when_expr_5.get(), loopDepth); };
		static_cast<_finishActor13*>(this)->actor_wait_state = 6;
															#line 4409 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_5.addCallbackAndClear(static_cast<ActorCallback< _finishActor13, 5, RestoreConfig::FileSetT::RangeResultType >*>(static_cast<_finishActor13*>(this)));
															#line 36989 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont5(Void const& _,int loopDepth) 
	{
															#line 4390 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_3 = success(RestoreDispatchTaskFunc::addTask( tr, taskBucket, task, beginVersion, "", 0, batchSize, remainingInBatch));
															#line 4390 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor13*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 37000 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1cont5when1(__when_expr_3.get(), loopDepth); };
		static_cast<_finishActor13*>(this)->actor_wait_state = 4;
															#line 4390 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< _finishActor13, 3, Void >*>(static_cast<_finishActor13*>(this)));
															#line 37005 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont5(Void && _,int loopDepth) 
	{
															#line 4390 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_3 = success(RestoreDispatchTaskFunc::addTask( tr, taskBucket, task, beginVersion, "", 0, batchSize, remainingInBatch));
															#line 4390 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor13*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 37016 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1cont5when1(__when_expr_3.get(), loopDepth); };
		static_cast<_finishActor13*>(this)->actor_wait_state = 4;
															#line 4390 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< _finishActor13, 3, Void >*>(static_cast<_finishActor13*>(this)));
															#line 37021 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont5(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont5(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<_finishActor13*>(this)->actor_wait_state > 0) static_cast<_finishActor13*>(this)->actor_wait_state = 0;
		static_cast<_finishActor13*>(this)->ActorCallback< _finishActor13, 2, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor13, 2, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< _finishActor13, 2, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< _finishActor13, 2, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 2);

	}
	int a_body1cont6(Void const& _,int loopDepth) 
	{
															#line 4393 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FileRestoreDispatch") .detail("RestoreUID", restore.getUid()) .detail("BeginVersion", beginVersion) .detail("ApplyLag", applyLag) .detail("BatchSize", batchSize) .detail("Decision", "too_far_behind") .detail("TaskInstance", THIS_ADDR);
															#line 4401 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_4 = taskBucket->finish(tr, task);
															#line 4401 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor13*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 37097 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1cont6when1(__when_expr_4.get(), loopDepth); };
		static_cast<_finishActor13*>(this)->actor_wait_state = 5;
															#line 4401 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< _finishActor13, 4, Void >*>(static_cast<_finishActor13*>(this)));
															#line 37102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont6(Void && _,int loopDepth) 
	{
															#line 4393 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FileRestoreDispatch") .detail("RestoreUID", restore.getUid()) .detail("BeginVersion", beginVersion) .detail("ApplyLag", applyLag) .detail("BatchSize", batchSize) .detail("Decision", "too_far_behind") .detail("TaskInstance", THIS_ADDR);
															#line 4401 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_4 = taskBucket->finish(tr, task);
															#line 4401 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor13*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 37115 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1cont6when1(__when_expr_4.get(), loopDepth); };
		static_cast<_finishActor13*>(this)->actor_wait_state = 5;
															#line 4401 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< _finishActor13, 4, Void >*>(static_cast<_finishActor13*>(this)));
															#line 37120 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont5when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont6(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont5when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont6(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose4() 
	{
		if (static_cast<_finishActor13*>(this)->actor_wait_state > 0) static_cast<_finishActor13*>(this)->actor_wait_state = 0;
		static_cast<_finishActor13*>(this)->ActorCallback< _finishActor13, 3, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor13, 3, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont5when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_fire(ActorCallback< _finishActor13, 3, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont5when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_error(ActorCallback< _finishActor13, 3, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 3);

	}
	int a_body1cont7(Void const& _,int loopDepth) 
	{
															#line 4402 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_finishActor13*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_finishActor13State(); static_cast<_finishActor13*>(this)->destroy(); return 0; }
															#line 37192 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_finishActor13*>(this)->SAV< Void >::value()) Void(Void());
		this->~_finishActor13State();
		static_cast<_finishActor13*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont7(Void && _,int loopDepth) 
	{
															#line 4402 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_finishActor13*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_finishActor13State(); static_cast<_finishActor13*>(this)->destroy(); return 0; }
															#line 37204 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_finishActor13*>(this)->SAV< Void >::value()) Void(Void());
		this->~_finishActor13State();
		static_cast<_finishActor13*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont6when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont7(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont6when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont7(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose5() 
	{
		if (static_cast<_finishActor13*>(this)->actor_wait_state > 0) static_cast<_finishActor13*>(this)->actor_wait_state = 0;
		static_cast<_finishActor13*>(this)->ActorCallback< _finishActor13, 4, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor13, 4, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont6when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_fire(ActorCallback< _finishActor13, 4, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont6when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_error(ActorCallback< _finishActor13, 4, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 4);

	}
	int a_body1cont9(int loopDepth) 
	{
															#line 4413 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		allPartsDone = Reference<TaskFuture>();
															#line 4416 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (addingToExistingBatch)
															#line 37281 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 4417 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Key> __when_expr_6 = restore.batchFuture().getD(tr);
															#line 4417 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_finishActor13*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 37287 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_6.isReady()) { if (__when_expr_6.isError()) return a_body1Catch1(__when_expr_6.getError(), loopDepth); else return a_body1cont9when1(__when_expr_6.get(), loopDepth); };
			static_cast<_finishActor13*>(this)->actor_wait_state = 7;
															#line 4417 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_6.addCallbackAndClear(static_cast<ActorCallback< _finishActor13, 6, Key >*>(static_cast<_finishActor13*>(this)));
															#line 37292 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
															#line 4421 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			allPartsDone = futureBucket->future(tr);
															#line 4422 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			restore.batchFuture().set(tr, allPartsDone->pack());
															#line 4424 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			remainingInBatch = batchSize;
															#line 37303 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = a_body1cont10(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont4when1(RestoreConfig::FileSetT::RangeResultType const& __files,int loopDepth) 
	{
															#line 4409 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		files = __files;
															#line 37313 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont9(loopDepth);

		return loopDepth;
	}
	int a_body1cont4when1(RestoreConfig::FileSetT::RangeResultType && __files,int loopDepth) 
	{
		files = std::move(__files);
		loopDepth = a_body1cont9(loopDepth);

		return loopDepth;
	}
	void a_exitChoose6() 
	{
		if (static_cast<_finishActor13*>(this)->actor_wait_state > 0) static_cast<_finishActor13*>(this)->actor_wait_state = 0;
		static_cast<_finishActor13*>(this)->ActorCallback< _finishActor13, 5, RestoreConfig::FileSetT::RangeResultType >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor13, 5, RestoreConfig::FileSetT::RangeResultType >*,RestoreConfig::FileSetT::RangeResultType const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont4when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_fire(ActorCallback< _finishActor13, 5, RestoreConfig::FileSetT::RangeResultType >*,RestoreConfig::FileSetT::RangeResultType && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont4when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_error(ActorCallback< _finishActor13, 5, RestoreConfig::FileSetT::RangeResultType >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 5);

	}
	int a_body1cont10(int loopDepth) 
	{
															#line 4428 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (files.results.size() == 0)
															#line 37380 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 4431 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (addingToExistingBatch)
															#line 37384 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 4434 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				StrictFuture<Void> __when_expr_7 = success(RestoreDispatchTaskFunc::addTask(tr, taskBucket, task, restoreVersion + 1, "", 0, batchSize, 0, TaskCompletionKey::noSignal(), allPartsDone));
															#line 4434 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (static_cast<_finishActor13*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 37390 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				if (__when_expr_7.isReady()) { if (__when_expr_7.isError()) return a_body1Catch1(__when_expr_7.getError(), loopDepth); else return a_body1cont10when1(__when_expr_7.get(), loopDepth); };
				static_cast<_finishActor13*>(this)->actor_wait_state = 8;
															#line 4434 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				__when_expr_7.addCallbackAndClear(static_cast<ActorCallback< _finishActor13, 7, Void >*>(static_cast<_finishActor13*>(this)));
															#line 37395 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				loopDepth = 0;
			}
			else
			{
															#line 4454 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (beginVersion < restoreVersion)
															#line 37402 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				{
															#line 4456 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					StrictFuture<Void> __when_expr_8 = success(RestoreDispatchTaskFunc::addTask(tr, taskBucket, task, restoreVersion, "", 0, batchSize));
															#line 4456 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					if (static_cast<_finishActor13*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 37408 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
					if (__when_expr_8.isReady()) { if (__when_expr_8.isError()) return a_body1Catch1(__when_expr_8.getError(), loopDepth); else return a_body1cont10when2(__when_expr_8.get(), loopDepth); };
					static_cast<_finishActor13*>(this)->actor_wait_state = 9;
															#line 4456 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					__when_expr_8.addCallbackAndClear(static_cast<ActorCallback< _finishActor13, 8, Void >*>(static_cast<_finishActor13*>(this)));
															#line 37413 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
					loopDepth = 0;
				}
				else
				{
															#line 4467 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					if (applyLag == 0)
															#line 37420 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
					{
															#line 4469 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
						StrictFuture<Void> __when_expr_9 = success(RestoreCompleteTaskFunc::addTask(tr, taskBucket, task, TaskCompletionKey::noSignal()));
															#line 4469 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
						if (static_cast<_finishActor13*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 37426 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
						if (__when_expr_9.isReady()) { if (__when_expr_9.isError()) return a_body1Catch1(__when_expr_9.getError(), loopDepth); else return a_body1cont10when3(__when_expr_9.get(), loopDepth); };
						static_cast<_finishActor13*>(this)->actor_wait_state = 10;
															#line 4469 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
						__when_expr_9.addCallbackAndClear(static_cast<ActorCallback< _finishActor13, 9, Void >*>(static_cast<_finishActor13*>(this)));
															#line 37431 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
						loopDepth = 0;
					}
					else
					{
															#line 4482 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
						StrictFuture<Void> __when_expr_10 = delay(FLOW_KNOBS->PREVENT_FAST_SPIN_DELAY);
															#line 4482 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
						if (static_cast<_finishActor13*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 37440 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
						if (__when_expr_10.isReady()) { if (__when_expr_10.isError()) return a_body1Catch1(__when_expr_10.getError(), loopDepth); else return a_body1cont10when4(__when_expr_10.get(), loopDepth); };
						static_cast<_finishActor13*>(this)->actor_wait_state = 11;
															#line 4482 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
						__when_expr_10.addCallbackAndClear(static_cast<ActorCallback< _finishActor13, 10, Void >*>(static_cast<_finishActor13*>(this)));
															#line 37445 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
						loopDepth = 0;
					}
				}
			}
		}
		else
		{
			loopDepth = a_body1cont10cont1(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont11(Key const& fKey,int loopDepth) 
	{
															#line 4418 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		allPartsDone = Reference<TaskFuture>(new TaskFuture(futureBucket, fKey));
															#line 37462 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont10(loopDepth);

		return loopDepth;
	}
	int a_body1cont11(Key && fKey,int loopDepth) 
	{
															#line 4418 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		allPartsDone = Reference<TaskFuture>(new TaskFuture(futureBucket, fKey));
															#line 37471 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont10(loopDepth);

		return loopDepth;
	}
	int a_body1cont9when1(Key const& fKey,int loopDepth) 
	{
		loopDepth = a_body1cont11(fKey, loopDepth);

		return loopDepth;
	}
	int a_body1cont9when1(Key && fKey,int loopDepth) 
	{
		loopDepth = a_body1cont11(std::move(fKey), loopDepth);

		return loopDepth;
	}
	void a_exitChoose7() 
	{
		if (static_cast<_finishActor13*>(this)->actor_wait_state > 0) static_cast<_finishActor13*>(this)->actor_wait_state = 0;
		static_cast<_finishActor13*>(this)->ActorCallback< _finishActor13, 6, Key >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor13, 6, Key >*,Key const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1cont9when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 6);

	}
	void a_callback_fire(ActorCallback< _finishActor13, 6, Key >*,Key && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1cont9when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 6);

	}
	void a_callback_error(ActorCallback< _finishActor13, 6, Key >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 6);

	}
	int a_body1cont10cont1(int loopDepth) 
	{
															#line 4505 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		addTaskFutures = std::vector<Future<Key>>();
															#line 4506 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		endVersion = files.results[0].version;
															#line 4507 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		blocksDispatched = 0;
															#line 4508 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		beginBlock = Params.beginBlock().getOrDefault(task);
															#line 4509 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		i = 0;
															#line 4511 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		for(;i < files.results.size();++i) {
															#line 4512 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			RestoreConfig::RestoreFile& f = files.results[i];
															#line 4517 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (f.version != endVersion && remainingInBatch <= 0)
															#line 37557 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 4519 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				++endVersion;
															#line 4520 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				beginFile = "";
															#line 4521 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				beginBlock = 0;
															#line 37565 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				break;
			}
															#line 4526 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			endVersion = f.version;
															#line 4527 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			beginFile = f.fileName;
															#line 4529 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			j = beginBlock * f.blockSize;
															#line 4531 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			for(;j < f.fileSize;j += f.blockSize) {
															#line 4533 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (blocksDispatched == taskBatchSize)
															#line 37578 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				{
					break;
				}
															#line 4536 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (f.isRange)
															#line 37584 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				{
															#line 4537 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					addTaskFutures.push_back( RestoreRangeTaskFunc::addTask(tr, taskBucket, task, f, j, std::min<int64_t>(f.blockSize, f.fileSize - j), TaskCompletionKey::joinWith(allPartsDone)));
															#line 37588 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				}
				else
				{
															#line 4546 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					addTaskFutures.push_back( RestoreLogDataTaskFunc::addTask(tr, taskBucket, task, f, j, std::min<int64_t>(f.blockSize, f.fileSize - j), TaskCompletionKey::joinWith(allPartsDone)));
															#line 37594 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				}
															#line 4557 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				++beginBlock;
															#line 4558 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				++blocksDispatched;
															#line 4559 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				--remainingInBatch;
															#line 37602 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
															#line 4563 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (blocksDispatched == taskBatchSize)
															#line 37606 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
				break;
			}
															#line 4568 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			beginFile = beginFile + '\x00';
															#line 4569 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			beginBlock = 0;
															#line 4571 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent("FileRestoreDispatchedFile") .suppressFor(60) .detail("RestoreUID", restore.getUid()) .detail("FileName", f.fileName) .detail("TaskInstance", THIS_ADDR);
															#line 37616 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 4580 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (blocksDispatched == 0)
															#line 37620 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 4581 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			std::string decision;
															#line 4585 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (i == 0)
															#line 37626 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 4586 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				batchSize *= 2;
															#line 4587 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				decision = "increased_batch_size";
															#line 37632 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
			else
			{
															#line 4589 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				decision = "all_files_were_empty";
															#line 37638 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
															#line 4591 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent("FileRestoreDispatch") .detail("RestoreUID", restore.getUid()) .detail("BeginVersion", beginVersion) .detail("BeginFile", Params.beginFile().get(task)) .detail("BeginBlock", Params.beginBlock().get(task)) .detail("EndVersion", endVersion) .detail("ApplyLag", applyLag) .detail("BatchSize", batchSize) .detail("Decision", decision) .detail("TaskInstance", THIS_ADDR) .detail("RemainingInBatch", remainingInBatch);
															#line 4603 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_13 = success(RestoreDispatchTaskFunc::addTask(tr, taskBucket, task, endVersion, beginFile, beginBlock, batchSize, remainingInBatch, TaskCompletionKey::joinWith((allPartsDone))));
															#line 4603 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_finishActor13*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 37646 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_13.isReady()) { if (__when_expr_13.isError()) return a_body1Catch1(__when_expr_13.getError(), loopDepth); else return a_body1cont10cont1when1(__when_expr_13.get(), loopDepth); };
			static_cast<_finishActor13*>(this)->actor_wait_state = 14;
															#line 4603 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_13.addCallbackAndClear(static_cast<ActorCallback< _finishActor13, 13, Void >*>(static_cast<_finishActor13*>(this)));
															#line 37651 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont10cont13(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont10cont2(int loopDepth) 
	{
															#line 4496 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Future<Void> setDone = addingToExistingBatch ? onDone->set(tr, taskBucket) : Void();
															#line 4498 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_12 = taskBucket->finish(tr, task) && setDone;
															#line 4498 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor13*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 37669 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_12.isReady()) { if (__when_expr_12.isError()) return a_body1Catch1(__when_expr_12.getError(), loopDepth); else return a_body1cont10cont2when1(__when_expr_12.get(), loopDepth); };
		static_cast<_finishActor13*>(this)->actor_wait_state = 13;
															#line 4498 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_12.addCallbackAndClear(static_cast<ActorCallback< _finishActor13, 12, Void >*>(static_cast<_finishActor13*>(this)));
															#line 37674 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont10cont3(Void const& _,int loopDepth) 
	{
															#line 4445 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FileRestoreDispatch") .detail("RestoreUID", restore.getUid()) .detail("BeginVersion", beginVersion) .detail("BeginFile", Params.beginFile().get(task)) .detail("BeginBlock", Params.beginBlock().get(task)) .detail("RestoreVersion", restoreVersion) .detail("ApplyLag", applyLag) .detail("Decision", "end_of_final_batch") .detail("TaskInstance", THIS_ADDR);
															#line 37683 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont10cont2(loopDepth);

		return loopDepth;
	}
	int a_body1cont10cont3(Void && _,int loopDepth) 
	{
															#line 4445 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FileRestoreDispatch") .detail("RestoreUID", restore.getUid()) .detail("BeginVersion", beginVersion) .detail("BeginFile", Params.beginFile().get(task)) .detail("BeginBlock", Params.beginBlock().get(task)) .detail("RestoreVersion", restoreVersion) .detail("ApplyLag", applyLag) .detail("Decision", "end_of_final_batch") .detail("TaskInstance", THIS_ADDR);
															#line 37692 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont10cont2(loopDepth);

		return loopDepth;
	}
	int a_body1cont10when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont10cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont10when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont10cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose8() 
	{
		if (static_cast<_finishActor13*>(this)->actor_wait_state > 0) static_cast<_finishActor13*>(this)->actor_wait_state = 0;
		static_cast<_finishActor13*>(this)->ActorCallback< _finishActor13, 7, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor13, 7, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1cont10when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 7);

	}
	void a_callback_fire(ActorCallback< _finishActor13, 7, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1cont10when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 7);

	}
	void a_callback_error(ActorCallback< _finishActor13, 7, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 7);

	}
	int a_body1cont10cont5(int loopDepth) 
	{
		loopDepth = a_body1cont10cont2(loopDepth);

		return loopDepth;
	}
	int a_body1cont10cont6(Void const& _,int loopDepth) 
	{
															#line 4458 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FileRestoreDispatch") .detail("RestoreUID", restore.getUid()) .detail("BeginVersion", beginVersion) .detail("BeginFile", Params.beginFile().get(task)) .detail("BeginBlock", Params.beginBlock().get(task)) .detail("RestoreVersion", restoreVersion) .detail("ApplyLag", applyLag) .detail("Decision", "apply_to_restore_version") .detail("TaskInstance", THIS_ADDR);
															#line 37770 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont10cont5(loopDepth);

		return loopDepth;
	}
	int a_body1cont10cont6(Void && _,int loopDepth) 
	{
															#line 4458 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FileRestoreDispatch") .detail("RestoreUID", restore.getUid()) .detail("BeginVersion", beginVersion) .detail("BeginFile", Params.beginFile().get(task)) .detail("BeginBlock", Params.beginBlock().get(task)) .detail("RestoreVersion", restoreVersion) .detail("ApplyLag", applyLag) .detail("Decision", "apply_to_restore_version") .detail("TaskInstance", THIS_ADDR);
															#line 37779 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont10cont5(loopDepth);

		return loopDepth;
	}
	int a_body1cont10when2(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont10cont6(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont10when2(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont10cont6(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose9() 
	{
		if (static_cast<_finishActor13*>(this)->actor_wait_state > 0) static_cast<_finishActor13*>(this)->actor_wait_state = 0;
		static_cast<_finishActor13*>(this)->ActorCallback< _finishActor13, 8, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor13, 8, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 8);
		a_exitChoose9();
		try {
			a_body1cont10when2(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 8);

	}
	void a_callback_fire(ActorCallback< _finishActor13, 8, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 8);
		a_exitChoose9();
		try {
			a_body1cont10when2(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 8);

	}
	void a_callback_error(ActorCallback< _finishActor13, 8, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 8);
		a_exitChoose9();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 8);

	}
	int a_body1cont10cont8(int loopDepth) 
	{
		loopDepth = a_body1cont10cont5(loopDepth);

		return loopDepth;
	}
	int a_body1cont10cont9(Void const& _,int loopDepth) 
	{
															#line 4471 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FileRestoreDispatch") .detail("RestoreUID", restore.getUid()) .detail("BeginVersion", beginVersion) .detail("BeginFile", Params.beginFile().get(task)) .detail("BeginBlock", Params.beginBlock().get(task)) .detail("ApplyLag", applyLag) .detail("Decision", "restore_complete") .detail("TaskInstance", THIS_ADDR);
															#line 37857 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont10cont8(loopDepth);

		return loopDepth;
	}
	int a_body1cont10cont9(Void && _,int loopDepth) 
	{
															#line 4471 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FileRestoreDispatch") .detail("RestoreUID", restore.getUid()) .detail("BeginVersion", beginVersion) .detail("BeginFile", Params.beginFile().get(task)) .detail("BeginBlock", Params.beginBlock().get(task)) .detail("ApplyLag", applyLag) .detail("Decision", "restore_complete") .detail("TaskInstance", THIS_ADDR);
															#line 37866 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont10cont8(loopDepth);

		return loopDepth;
	}
	int a_body1cont10when3(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont10cont9(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont10when3(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont10cont9(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose10() 
	{
		if (static_cast<_finishActor13*>(this)->actor_wait_state > 0) static_cast<_finishActor13*>(this)->actor_wait_state = 0;
		static_cast<_finishActor13*>(this)->ActorCallback< _finishActor13, 9, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor13, 9, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 9);
		a_exitChoose10();
		try {
			a_body1cont10when3(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 9);

	}
	void a_callback_fire(ActorCallback< _finishActor13, 9, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 9);
		a_exitChoose10();
		try {
			a_body1cont10when3(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 9);

	}
	void a_callback_error(ActorCallback< _finishActor13, 9, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 9);
		a_exitChoose10();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 9);

	}
	int a_body1cont10cont11(Void const& _,int loopDepth) 
	{
															#line 4483 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_11 = success(RestoreDispatchTaskFunc::addTask(tr, taskBucket, task, beginVersion, "", 0, batchSize));
															#line 4483 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor13*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 37940 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_11.isReady()) { if (__when_expr_11.isError()) return a_body1Catch1(__when_expr_11.getError(), loopDepth); else return a_body1cont10cont11when1(__when_expr_11.get(), loopDepth); };
		static_cast<_finishActor13*>(this)->actor_wait_state = 12;
															#line 4483 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_11.addCallbackAndClear(static_cast<ActorCallback< _finishActor13, 11, Void >*>(static_cast<_finishActor13*>(this)));
															#line 37945 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont10cont11(Void && _,int loopDepth) 
	{
															#line 4483 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_11 = success(RestoreDispatchTaskFunc::addTask(tr, taskBucket, task, beginVersion, "", 0, batchSize));
															#line 4483 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor13*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 37956 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_11.isReady()) { if (__when_expr_11.isError()) return a_body1Catch1(__when_expr_11.getError(), loopDepth); else return a_body1cont10cont11when1(__when_expr_11.get(), loopDepth); };
		static_cast<_finishActor13*>(this)->actor_wait_state = 12;
															#line 4483 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_11.addCallbackAndClear(static_cast<ActorCallback< _finishActor13, 11, Void >*>(static_cast<_finishActor13*>(this)));
															#line 37961 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont10when4(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont10cont11(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont10when4(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont10cont11(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose11() 
	{
		if (static_cast<_finishActor13*>(this)->actor_wait_state > 0) static_cast<_finishActor13*>(this)->actor_wait_state = 0;
		static_cast<_finishActor13*>(this)->ActorCallback< _finishActor13, 10, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor13, 10, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 10);
		a_exitChoose11();
		try {
			a_body1cont10when4(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 10);

	}
	void a_callback_fire(ActorCallback< _finishActor13, 10, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 10);
		a_exitChoose11();
		try {
			a_body1cont10when4(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 10);

	}
	void a_callback_error(ActorCallback< _finishActor13, 10, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 10);
		a_exitChoose11();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 10);

	}
	int a_body1cont10cont11cont1(Void const& _,int loopDepth) 
	{
															#line 4485 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FileRestoreDispatch") .detail("RestoreUID", restore.getUid()) .detail("BeginVersion", beginVersion) .detail("ApplyLag", applyLag) .detail("Decision", "apply_still_behind") .detail("TaskInstance", THIS_ADDR);
															#line 38033 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont10cont8(loopDepth);

		return loopDepth;
	}
	int a_body1cont10cont11cont1(Void && _,int loopDepth) 
	{
															#line 4485 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FileRestoreDispatch") .detail("RestoreUID", restore.getUid()) .detail("BeginVersion", beginVersion) .detail("ApplyLag", applyLag) .detail("Decision", "apply_still_behind") .detail("TaskInstance", THIS_ADDR);
															#line 38042 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont10cont8(loopDepth);

		return loopDepth;
	}
	int a_body1cont10cont11when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont10cont11cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont10cont11when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont10cont11cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose12() 
	{
		if (static_cast<_finishActor13*>(this)->actor_wait_state > 0) static_cast<_finishActor13*>(this)->actor_wait_state = 0;
		static_cast<_finishActor13*>(this)->ActorCallback< _finishActor13, 11, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor13, 11, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 11);
		a_exitChoose12();
		try {
			a_body1cont10cont11when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 11);

	}
	void a_callback_fire(ActorCallback< _finishActor13, 11, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 11);
		a_exitChoose12();
		try {
			a_body1cont10cont11when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 11);

	}
	void a_callback_error(ActorCallback< _finishActor13, 11, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 11);
		a_exitChoose12();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 11);

	}
	int a_body1cont10cont12(Void const& _,int loopDepth) 
	{
															#line 4499 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_finishActor13*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_finishActor13State(); static_cast<_finishActor13*>(this)->destroy(); return 0; }
															#line 38114 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_finishActor13*>(this)->SAV< Void >::value()) Void(Void());
		this->~_finishActor13State();
		static_cast<_finishActor13*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont10cont12(Void && _,int loopDepth) 
	{
															#line 4499 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_finishActor13*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_finishActor13State(); static_cast<_finishActor13*>(this)->destroy(); return 0; }
															#line 38126 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_finishActor13*>(this)->SAV< Void >::value()) Void(Void());
		this->~_finishActor13State();
		static_cast<_finishActor13*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont10cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont10cont12(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont10cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont10cont12(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose13() 
	{
		if (static_cast<_finishActor13*>(this)->actor_wait_state > 0) static_cast<_finishActor13*>(this)->actor_wait_state = 0;
		static_cast<_finishActor13*>(this)->ActorCallback< _finishActor13, 12, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor13, 12, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 12);
		a_exitChoose13();
		try {
			a_body1cont10cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 12);

	}
	void a_callback_fire(ActorCallback< _finishActor13, 12, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 12);
		a_exitChoose13();
		try {
			a_body1cont10cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 12);

	}
	void a_callback_error(ActorCallback< _finishActor13, 12, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 12);
		a_exitChoose13();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 12);

	}
	int a_body1cont10cont13(int loopDepth) 
	{
															#line 4624 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restore.filesBlocksDispatched().atomicOp(tr, blocksDispatched, MutationRef::Type::AddValue);
															#line 4629 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!beginFile.empty())
															#line 38203 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 4630 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			remainingInBatch = std::max<int64_t>(1, remainingInBatch);
															#line 38207 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 4634 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (remainingInBatch > 0)
															#line 38211 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 4635 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			addTaskFutures.push_back(RestoreDispatchTaskFunc::addTask(tr, taskBucket, task, endVersion, beginFile, beginBlock, batchSize, remainingInBatch, TaskCompletionKey::joinWith(allPartsDone)));
															#line 38215 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		else
		{
															#line 4645 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			addTaskFutures.push_back(RestoreDispatchTaskFunc::addTask(tr, taskBucket, task, endVersion, beginFile, beginBlock, batchSize, 0, TaskCompletionKey::noSignal(), allPartsDone));
															#line 38221 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 4656 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_15 = waitForAll(addTaskFutures);
															#line 4656 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor13*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 38227 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_15.isReady()) { if (__when_expr_15.isError()) return a_body1Catch1(__when_expr_15.getError(), loopDepth); else return a_body1cont10cont13when1(__when_expr_15.get(), loopDepth); };
		static_cast<_finishActor13*>(this)->actor_wait_state = 16;
															#line 4656 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_15.addCallbackAndClear(static_cast<ActorCallback< _finishActor13, 15, Void >*>(static_cast<_finishActor13*>(this)));
															#line 38232 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont10cont21(Void const& _,int loopDepth) 
	{
															#line 4616 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Future<Void> setDone = addingToExistingBatch ? onDone->set(tr, taskBucket) : Void();
															#line 4618 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_14 = setDone && taskBucket->finish(tr, task);
															#line 4618 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor13*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 38245 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_14.isReady()) { if (__when_expr_14.isError()) return a_body1Catch1(__when_expr_14.getError(), loopDepth); else return a_body1cont10cont21when1(__when_expr_14.get(), loopDepth); };
		static_cast<_finishActor13*>(this)->actor_wait_state = 15;
															#line 4618 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_14.addCallbackAndClear(static_cast<ActorCallback< _finishActor13, 14, Void >*>(static_cast<_finishActor13*>(this)));
															#line 38250 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont10cont21(Void && _,int loopDepth) 
	{
															#line 4616 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Future<Void> setDone = addingToExistingBatch ? onDone->set(tr, taskBucket) : Void();
															#line 4618 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_14 = setDone && taskBucket->finish(tr, task);
															#line 4618 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor13*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 38263 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_14.isReady()) { if (__when_expr_14.isError()) return a_body1Catch1(__when_expr_14.getError(), loopDepth); else return a_body1cont10cont21when1(__when_expr_14.get(), loopDepth); };
		static_cast<_finishActor13*>(this)->actor_wait_state = 15;
															#line 4618 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_14.addCallbackAndClear(static_cast<ActorCallback< _finishActor13, 14, Void >*>(static_cast<_finishActor13*>(this)));
															#line 38268 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont10cont1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont10cont21(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont10cont1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont10cont21(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose14() 
	{
		if (static_cast<_finishActor13*>(this)->actor_wait_state > 0) static_cast<_finishActor13*>(this)->actor_wait_state = 0;
		static_cast<_finishActor13*>(this)->ActorCallback< _finishActor13, 13, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor13, 13, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 13);
		a_exitChoose14();
		try {
			a_body1cont10cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 13);

	}
	void a_callback_fire(ActorCallback< _finishActor13, 13, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 13);
		a_exitChoose14();
		try {
			a_body1cont10cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 13);

	}
	void a_callback_error(ActorCallback< _finishActor13, 13, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 13);
		a_exitChoose14();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 13);

	}
	int a_body1cont10cont21cont1(Void const& _,int loopDepth) 
	{
															#line 4620 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_finishActor13*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_finishActor13State(); static_cast<_finishActor13*>(this)->destroy(); return 0; }
															#line 38340 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_finishActor13*>(this)->SAV< Void >::value()) Void(Void());
		this->~_finishActor13State();
		static_cast<_finishActor13*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont10cont21cont1(Void && _,int loopDepth) 
	{
															#line 4620 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_finishActor13*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_finishActor13State(); static_cast<_finishActor13*>(this)->destroy(); return 0; }
															#line 38352 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_finishActor13*>(this)->SAV< Void >::value()) Void(Void());
		this->~_finishActor13State();
		static_cast<_finishActor13*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont10cont21when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont10cont21cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont10cont21when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont10cont21cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose15() 
	{
		if (static_cast<_finishActor13*>(this)->actor_wait_state > 0) static_cast<_finishActor13*>(this)->actor_wait_state = 0;
		static_cast<_finishActor13*>(this)->ActorCallback< _finishActor13, 14, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor13, 14, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 14);
		a_exitChoose15();
		try {
			a_body1cont10cont21when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 14);

	}
	void a_callback_fire(ActorCallback< _finishActor13, 14, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 14);
		a_exitChoose15();
		try {
			a_body1cont10cont21when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 14);

	}
	void a_callback_error(ActorCallback< _finishActor13, 14, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 14);
		a_exitChoose15();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 14);

	}
	int a_body1cont10cont13cont1(Void const& _,int loopDepth) 
	{
															#line 4659 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Future<Void> setDone = addingToExistingBatch ? onDone->set(tr, taskBucket) : Void();
															#line 4661 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_16 = setDone && taskBucket->finish(tr, task);
															#line 4661 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor13*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 38431 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_16.isReady()) { if (__when_expr_16.isError()) return a_body1Catch1(__when_expr_16.getError(), loopDepth); else return a_body1cont10cont13cont1when1(__when_expr_16.get(), loopDepth); };
		static_cast<_finishActor13*>(this)->actor_wait_state = 17;
															#line 4661 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_16.addCallbackAndClear(static_cast<ActorCallback< _finishActor13, 16, Void >*>(static_cast<_finishActor13*>(this)));
															#line 38436 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont10cont13cont1(Void && _,int loopDepth) 
	{
															#line 4659 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Future<Void> setDone = addingToExistingBatch ? onDone->set(tr, taskBucket) : Void();
															#line 4661 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_16 = setDone && taskBucket->finish(tr, task);
															#line 4661 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor13*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 38449 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_16.isReady()) { if (__when_expr_16.isError()) return a_body1Catch1(__when_expr_16.getError(), loopDepth); else return a_body1cont10cont13cont1when1(__when_expr_16.get(), loopDepth); };
		static_cast<_finishActor13*>(this)->actor_wait_state = 17;
															#line 4661 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_16.addCallbackAndClear(static_cast<ActorCallback< _finishActor13, 16, Void >*>(static_cast<_finishActor13*>(this)));
															#line 38454 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont10cont13when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont10cont13cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont10cont13when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont10cont13cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose16() 
	{
		if (static_cast<_finishActor13*>(this)->actor_wait_state > 0) static_cast<_finishActor13*>(this)->actor_wait_state = 0;
		static_cast<_finishActor13*>(this)->ActorCallback< _finishActor13, 15, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor13, 15, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 15);
		a_exitChoose16();
		try {
			a_body1cont10cont13when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 15);

	}
	void a_callback_fire(ActorCallback< _finishActor13, 15, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 15);
		a_exitChoose16();
		try {
			a_body1cont10cont13when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 15);

	}
	void a_callback_error(ActorCallback< _finishActor13, 15, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 15);
		a_exitChoose16();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 15);

	}
	int a_body1cont10cont13cont5(Void const& _,int loopDepth) 
	{
															#line 4663 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FileRestoreDispatch") .detail("RestoreUID", restore.getUid()) .detail("BeginVersion", beginVersion) .detail("BeginFile", Params.beginFile().get(task)) .detail("BeginBlock", Params.beginBlock().get(task)) .detail("EndVersion", endVersion) .detail("ApplyLag", applyLag) .detail("BatchSize", batchSize) .detail("Decision", "dispatched_files") .detail("FilesDispatched", i) .detail("BlocksDispatched", blocksDispatched) .detail("TaskInstance", THIS_ADDR) .detail("RemainingInBatch", remainingInBatch);
															#line 4677 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_finishActor13*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_finishActor13State(); static_cast<_finishActor13*>(this)->destroy(); return 0; }
															#line 38528 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_finishActor13*>(this)->SAV< Void >::value()) Void(Void());
		this->~_finishActor13State();
		static_cast<_finishActor13*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont10cont13cont5(Void && _,int loopDepth) 
	{
															#line 4663 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FileRestoreDispatch") .detail("RestoreUID", restore.getUid()) .detail("BeginVersion", beginVersion) .detail("BeginFile", Params.beginFile().get(task)) .detail("BeginBlock", Params.beginBlock().get(task)) .detail("EndVersion", endVersion) .detail("ApplyLag", applyLag) .detail("BatchSize", batchSize) .detail("Decision", "dispatched_files") .detail("FilesDispatched", i) .detail("BlocksDispatched", blocksDispatched) .detail("TaskInstance", THIS_ADDR) .detail("RemainingInBatch", remainingInBatch);
															#line 4677 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_finishActor13*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_finishActor13State(); static_cast<_finishActor13*>(this)->destroy(); return 0; }
															#line 38542 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_finishActor13*>(this)->SAV< Void >::value()) Void(Void());
		this->~_finishActor13State();
		static_cast<_finishActor13*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont10cont13cont1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont10cont13cont5(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont10cont13cont1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont10cont13cont5(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose17() 
	{
		if (static_cast<_finishActor13*>(this)->actor_wait_state > 0) static_cast<_finishActor13*>(this)->actor_wait_state = 0;
		static_cast<_finishActor13*>(this)->ActorCallback< _finishActor13, 16, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor13, 16, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 16);
		a_exitChoose17();
		try {
			a_body1cont10cont13cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 16);

	}
	void a_callback_fire(ActorCallback< _finishActor13, 16, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 16);
		a_exitChoose17();
		try {
			a_body1cont10cont13cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 16);

	}
	void a_callback_error(ActorCallback< _finishActor13, 16, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 16);
		a_exitChoose17();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 16);

	}
															#line 4358 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 4358 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskBucket> taskBucket;
															#line 4358 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<FutureBucket> futureBucket;
															#line 4358 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> task;
															#line 4362 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	RestoreConfig restore;
															#line 4364 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version beginVersion;
															#line 4365 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskFuture> onDone;
															#line 4367 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int64_t remainingInBatch;
															#line 4368 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	bool addingToExistingBatch;
															#line 4369 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version restoreVersion;
															#line 4370 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<Optional<bool>> onlyApplyMutationLogs;
															#line 4383 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int64_t applyLag;
															#line 4384 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int64_t batchSize;
															#line 4405 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::string beginFile;
															#line 4408 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int taskBatchSize;
															#line 4409 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	RestoreConfig::FileSetT::RangeResultType files;
															#line 4413 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskFuture> allPartsDone;
															#line 4505 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::vector<Future<Key>> addTaskFutures;
															#line 4506 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version endVersion;
															#line 4507 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int blocksDispatched;
															#line 4508 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int64_t beginBlock;
															#line 4509 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int i;
															#line 4529 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int64_t j;
															#line 38659 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via _finish()
															#line 4358 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _finishActor13 final : public Actor<Void>, public ActorCallback< _finishActor13, 0, Void >, public ActorCallback< _finishActor13, 1, int64_t >, public ActorCallback< _finishActor13, 2, Void >, public ActorCallback< _finishActor13, 3, Void >, public ActorCallback< _finishActor13, 4, Void >, public ActorCallback< _finishActor13, 5, RestoreConfig::FileSetT::RangeResultType >, public ActorCallback< _finishActor13, 6, Key >, public ActorCallback< _finishActor13, 7, Void >, public ActorCallback< _finishActor13, 8, Void >, public ActorCallback< _finishActor13, 9, Void >, public ActorCallback< _finishActor13, 10, Void >, public ActorCallback< _finishActor13, 11, Void >, public ActorCallback< _finishActor13, 12, Void >, public ActorCallback< _finishActor13, 13, Void >, public ActorCallback< _finishActor13, 14, Void >, public ActorCallback< _finishActor13, 15, Void >, public ActorCallback< _finishActor13, 16, Void >, public FastAllocated<_finishActor13>, public _finishActor13State<_finishActor13> {
															#line 38664 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<_finishActor13>::operator new;
	using FastAllocated<_finishActor13>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< _finishActor13, 0, Void >;
friend struct ActorCallback< _finishActor13, 1, int64_t >;
friend struct ActorCallback< _finishActor13, 2, Void >;
friend struct ActorCallback< _finishActor13, 3, Void >;
friend struct ActorCallback< _finishActor13, 4, Void >;
friend struct ActorCallback< _finishActor13, 5, RestoreConfig::FileSetT::RangeResultType >;
friend struct ActorCallback< _finishActor13, 6, Key >;
friend struct ActorCallback< _finishActor13, 7, Void >;
friend struct ActorCallback< _finishActor13, 8, Void >;
friend struct ActorCallback< _finishActor13, 9, Void >;
friend struct ActorCallback< _finishActor13, 10, Void >;
friend struct ActorCallback< _finishActor13, 11, Void >;
friend struct ActorCallback< _finishActor13, 12, Void >;
friend struct ActorCallback< _finishActor13, 13, Void >;
friend struct ActorCallback< _finishActor13, 14, Void >;
friend struct ActorCallback< _finishActor13, 15, Void >;
friend struct ActorCallback< _finishActor13, 16, Void >;
															#line 4358 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_finishActor13(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 38691 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   _finishActor13State<_finishActor13>(tr, taskBucket, futureBucket, task)
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("_finish");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< _finishActor13, 0, Void >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< _finishActor13, 1, int64_t >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< _finishActor13, 2, Void >*)0, actor_cancelled()); break;
		case 4: this->a_callback_error((ActorCallback< _finishActor13, 3, Void >*)0, actor_cancelled()); break;
		case 5: this->a_callback_error((ActorCallback< _finishActor13, 4, Void >*)0, actor_cancelled()); break;
		case 6: this->a_callback_error((ActorCallback< _finishActor13, 5, RestoreConfig::FileSetT::RangeResultType >*)0, actor_cancelled()); break;
		case 7: this->a_callback_error((ActorCallback< _finishActor13, 6, Key >*)0, actor_cancelled()); break;
		case 8: this->a_callback_error((ActorCallback< _finishActor13, 7, Void >*)0, actor_cancelled()); break;
		case 9: this->a_callback_error((ActorCallback< _finishActor13, 8, Void >*)0, actor_cancelled()); break;
		case 10: this->a_callback_error((ActorCallback< _finishActor13, 9, Void >*)0, actor_cancelled()); break;
		case 11: this->a_callback_error((ActorCallback< _finishActor13, 10, Void >*)0, actor_cancelled()); break;
		case 12: this->a_callback_error((ActorCallback< _finishActor13, 11, Void >*)0, actor_cancelled()); break;
		case 13: this->a_callback_error((ActorCallback< _finishActor13, 12, Void >*)0, actor_cancelled()); break;
		case 14: this->a_callback_error((ActorCallback< _finishActor13, 13, Void >*)0, actor_cancelled()); break;
		case 15: this->a_callback_error((ActorCallback< _finishActor13, 14, Void >*)0, actor_cancelled()); break;
		case 16: this->a_callback_error((ActorCallback< _finishActor13, 15, Void >*)0, actor_cancelled()); break;
		case 17: this->a_callback_error((ActorCallback< _finishActor13, 16, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 4358 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> _finish( Reference<ReadYourWritesTransaction> const& tr, Reference<TaskBucket> const& taskBucket, Reference<FutureBucket> const& futureBucket, Reference<Task> const& task ) {
															#line 4358 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new _finishActor13(tr, taskBucket, futureBucket, task));
															#line 38734 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 4679 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

																#line 38739 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via addTask()
															#line 4680 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class AddTaskActor11>
															#line 4680 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class AddTaskActor11State {
															#line 38745 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 4680 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	AddTaskActor11State(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<Task> const& parentTask,Version const& beginVersion,std::string const& beginFile,int64_t const& beginBlock,int64_t const& batchSize,int64_t const& remainingInBatch = 0,TaskCompletionKey const& completionKey = TaskCompletionKey::noSignal(),Reference<TaskFuture> const& waitFor = Reference<TaskFuture>()) 
															#line 4680 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 4680 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : tr(tr),
															#line 4680 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskBucket(taskBucket),
															#line 4680 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   parentTask(parentTask),
															#line 4680 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   beginVersion(beginVersion),
															#line 4680 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   beginFile(beginFile),
															#line 4680 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   beginBlock(beginBlock),
															#line 4680 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   batchSize(batchSize),
															#line 4680 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   remainingInBatch(remainingInBatch),
															#line 4680 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   completionKey(completionKey),
															#line 4680 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   waitFor(waitFor)
															#line 38770 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("addTask", reinterpret_cast<unsigned long>(this));

	}
	~AddTaskActor11State() 
	{
		fdb_probe_actor_destroy("addTask", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 4690 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Key> __when_expr_0 = completionKey.get(tr, taskBucket);
															#line 4690 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<AddTaskActor11*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 38787 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<AddTaskActor11*>(this)->actor_wait_state = 1;
															#line 4690 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< AddTaskActor11, 0, Key >*>(static_cast<AddTaskActor11*>(this)));
															#line 38792 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~AddTaskActor11State();
		static_cast<AddTaskActor11*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Key const& doneKey,int loopDepth) 
	{
															#line 4693 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		unsigned int priority = (remainingInBatch > 0) ? 1 : 0;
															#line 4694 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		task = Reference<Task>(new Task(RestoreDispatchTaskFunc::name, RestoreDispatchTaskFunc::version, doneKey, priority));
															#line 4698 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = RestoreConfig(parentTask).toTask(tr, task);
															#line 4698 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AddTaskActor11*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 38821 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<AddTaskActor11*>(this)->actor_wait_state = 2;
															#line 4698 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< AddTaskActor11, 1, Void >*>(static_cast<AddTaskActor11*>(this)));
															#line 38826 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Key && doneKey,int loopDepth) 
	{
															#line 4693 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		unsigned int priority = (remainingInBatch > 0) ? 1 : 0;
															#line 4694 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		task = Reference<Task>(new Task(RestoreDispatchTaskFunc::name, RestoreDispatchTaskFunc::version, doneKey, priority));
															#line 4698 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = RestoreConfig(parentTask).toTask(tr, task);
															#line 4698 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AddTaskActor11*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 38841 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<AddTaskActor11*>(this)->actor_wait_state = 2;
															#line 4698 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< AddTaskActor11, 1, Void >*>(static_cast<AddTaskActor11*>(this)));
															#line 38846 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1when1(Key const& doneKey,int loopDepth) 
	{
		loopDepth = a_body1cont1(doneKey, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Key && doneKey,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(doneKey), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<AddTaskActor11*>(this)->actor_wait_state > 0) static_cast<AddTaskActor11*>(this)->actor_wait_state = 0;
		static_cast<AddTaskActor11*>(this)->ActorCallback< AddTaskActor11, 0, Key >::remove();

	}
	void a_callback_fire(ActorCallback< AddTaskActor11, 0, Key >*,Key const& value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< AddTaskActor11, 0, Key >*,Key && value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< AddTaskActor11, 0, Key >*,Error err) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont2(Void const& _,int loopDepth) 
	{
															#line 4699 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Params.beginVersion().set(task, beginVersion);
															#line 4700 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Params.batchSize().set(task, batchSize);
															#line 4701 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Params.remainingInBatch().set(task, remainingInBatch);
															#line 4702 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Params.beginBlock().set(task, beginBlock);
															#line 4703 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Params.beginFile().set(task, beginFile);
															#line 4705 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!waitFor)
															#line 38928 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 4706 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<AddTaskActor11*>(this)->SAV<Key>::futures) { (void)(taskBucket->addTask(tr, task)); this->~AddTaskActor11State(); static_cast<AddTaskActor11*>(this)->destroy(); return 0; }
															#line 38932 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<AddTaskActor11*>(this)->SAV< Key >::value()) Key(taskBucket->addTask(tr, task));
			this->~AddTaskActor11State();
			static_cast<AddTaskActor11*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 4709 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_2 = waitFor->onSetAddTask(tr, taskBucket, task);
															#line 4709 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AddTaskActor11*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 38942 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont2when1(__when_expr_2.get(), loopDepth); };
		static_cast<AddTaskActor11*>(this)->actor_wait_state = 3;
															#line 4709 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< AddTaskActor11, 2, Void >*>(static_cast<AddTaskActor11*>(this)));
															#line 38947 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont2(Void && _,int loopDepth) 
	{
															#line 4699 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Params.beginVersion().set(task, beginVersion);
															#line 4700 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Params.batchSize().set(task, batchSize);
															#line 4701 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Params.remainingInBatch().set(task, remainingInBatch);
															#line 4702 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Params.beginBlock().set(task, beginBlock);
															#line 4703 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Params.beginFile().set(task, beginFile);
															#line 4705 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!waitFor)
															#line 38966 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 4706 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<AddTaskActor11*>(this)->SAV<Key>::futures) { (void)(taskBucket->addTask(tr, task)); this->~AddTaskActor11State(); static_cast<AddTaskActor11*>(this)->destroy(); return 0; }
															#line 38970 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<AddTaskActor11*>(this)->SAV< Key >::value()) Key(taskBucket->addTask(tr, task));
			this->~AddTaskActor11State();
			static_cast<AddTaskActor11*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 4709 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_2 = waitFor->onSetAddTask(tr, taskBucket, task);
															#line 4709 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AddTaskActor11*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 38980 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont2when1(__when_expr_2.get(), loopDepth); };
		static_cast<AddTaskActor11*>(this)->actor_wait_state = 3;
															#line 4709 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< AddTaskActor11, 2, Void >*>(static_cast<AddTaskActor11*>(this)));
															#line 38985 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<AddTaskActor11*>(this)->actor_wait_state > 0) static_cast<AddTaskActor11*>(this)->actor_wait_state = 0;
		static_cast<AddTaskActor11*>(this)->ActorCallback< AddTaskActor11, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< AddTaskActor11, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< AddTaskActor11, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< AddTaskActor11, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont3(Void const& _,int loopDepth) 
	{
															#line 4710 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<AddTaskActor11*>(this)->SAV<Key>::futures) { (void)("OnSetAddTask"_sr); this->~AddTaskActor11State(); static_cast<AddTaskActor11*>(this)->destroy(); return 0; }
															#line 39057 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<AddTaskActor11*>(this)->SAV< Key >::value()) Key("OnSetAddTask"_sr);
		this->~AddTaskActor11State();
		static_cast<AddTaskActor11*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont3(Void && _,int loopDepth) 
	{
															#line 4710 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<AddTaskActor11*>(this)->SAV<Key>::futures) { (void)("OnSetAddTask"_sr); this->~AddTaskActor11State(); static_cast<AddTaskActor11*>(this)->destroy(); return 0; }
															#line 39069 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<AddTaskActor11*>(this)->SAV< Key >::value()) Key("OnSetAddTask"_sr);
		this->~AddTaskActor11State();
		static_cast<AddTaskActor11*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<AddTaskActor11*>(this)->actor_wait_state > 0) static_cast<AddTaskActor11*>(this)->actor_wait_state = 0;
		static_cast<AddTaskActor11*>(this)->ActorCallback< AddTaskActor11, 2, Void >::remove();

	}
	void a_callback_fire(ActorCallback< AddTaskActor11, 2, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< AddTaskActor11, 2, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< AddTaskActor11, 2, Void >*,Error err) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 2);

	}
															#line 4680 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 4680 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskBucket> taskBucket;
															#line 4680 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> parentTask;
															#line 4680 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version beginVersion;
															#line 4680 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::string beginFile;
															#line 4680 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int64_t beginBlock;
															#line 4680 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int64_t batchSize;
															#line 4680 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int64_t remainingInBatch;
															#line 4680 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	TaskCompletionKey completionKey;
															#line 4680 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskFuture> waitFor;
															#line 4694 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> task;
															#line 39162 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via addTask()
															#line 4680 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class AddTaskActor11 final : public Actor<Key>, public ActorCallback< AddTaskActor11, 0, Key >, public ActorCallback< AddTaskActor11, 1, Void >, public ActorCallback< AddTaskActor11, 2, Void >, public FastAllocated<AddTaskActor11>, public AddTaskActor11State<AddTaskActor11> {
															#line 39167 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<AddTaskActor11>::operator new;
	using FastAllocated<AddTaskActor11>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Key>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< AddTaskActor11, 0, Key >;
friend struct ActorCallback< AddTaskActor11, 1, Void >;
friend struct ActorCallback< AddTaskActor11, 2, Void >;
															#line 4680 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	AddTaskActor11(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<Task> const& parentTask,Version const& beginVersion,std::string const& beginFile,int64_t const& beginBlock,int64_t const& batchSize,int64_t const& remainingInBatch = 0,TaskCompletionKey const& completionKey = TaskCompletionKey::noSignal(),Reference<TaskFuture> const& waitFor = Reference<TaskFuture>()) 
															#line 39180 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Key>(),
		   AddTaskActor11State<AddTaskActor11>(tr, taskBucket, parentTask, beginVersion, beginFile, beginBlock, batchSize, remainingInBatch, completionKey, waitFor)
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("addTask");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< AddTaskActor11, 0, Key >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< AddTaskActor11, 1, Void >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< AddTaskActor11, 2, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 4680 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Key> addTask( Reference<ReadYourWritesTransaction> const& tr, Reference<TaskBucket> const& taskBucket, Reference<Task> const& parentTask, Version const& beginVersion, std::string const& beginFile, int64_t const& beginBlock, int64_t const& batchSize, int64_t const& remainingInBatch = 0, TaskCompletionKey const& completionKey = TaskCompletionKey::noSignal(), Reference<TaskFuture> const& waitFor = Reference<TaskFuture>() ) {
															#line 4680 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Key>(new AddTaskActor11(tr, taskBucket, parentTask, beginVersion, beginFile, beginBlock, batchSize, remainingInBatch, completionKey, waitFor));
															#line 39209 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 4712 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

	Future<Void> execute(Database cx,
	                     Reference<TaskBucket> tb,
	                     Reference<FutureBucket> fb,
	                     Reference<Task> task) override {
		return Void();
	};
	Future<Void> finish(Reference<ReadYourWritesTransaction> tr,
	                    Reference<TaskBucket> tb,
	                    Reference<FutureBucket> fb,
	                    Reference<Task> task) override {
		return _finish(tr, tb, fb, task);
	};
};
StringRef RestoreDispatchTaskFunc::name = "restore_dispatch"_sr;
REGISTER_TASKFUNC(RestoreDispatchTaskFunc);

															#line 39230 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via restoreStatus()
															#line 4729 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class RestoreStatusActor>
															#line 4729 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class RestoreStatusActorState {
															#line 39236 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 4729 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	RestoreStatusActorState(Reference<ReadYourWritesTransaction> const& tr,Key const& tagName) 
															#line 4729 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 4729 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : tr(tr),
															#line 4729 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tagName(tagName)
															#line 39245 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("restoreStatus", reinterpret_cast<unsigned long>(this));

	}
	~RestoreStatusActorState() 
	{
		fdb_probe_actor_destroy("restoreStatus", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 4730 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::PRIORITY_SYSTEM_IMMEDIATE);
															#line 4731 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 4732 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 4734 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tags = std::vector<KeyBackedTag>();
															#line 4735 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (tagName.size() == 0)
															#line 39268 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 4736 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				StrictFuture<std::vector<KeyBackedTag>> __when_expr_0 = getAllRestoreTags(tr);
															#line 4736 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (static_cast<RestoreStatusActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 39274 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
				static_cast<RestoreStatusActor*>(this)->actor_wait_state = 1;
															#line 4736 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< RestoreStatusActor, 0, std::vector<KeyBackedTag> >*>(static_cast<RestoreStatusActor*>(this)));
															#line 39279 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				loopDepth = 0;
			}
			else
			{
															#line 4739 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				tags.push_back(makeRestoreTag(tagName.toString()));
															#line 39286 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				loopDepth = a_body1cont1(loopDepth);
			}
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~RestoreStatusActorState();
		static_cast<RestoreStatusActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 4741 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		result = std::string();
															#line 4742 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		i = 0;
															#line 4744 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 39314 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont1loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1cont2(std::vector<KeyBackedTag> const& t,int loopDepth) 
	{
															#line 4737 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tags = t;
															#line 39323 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont2(std::vector<KeyBackedTag> && t,int loopDepth) 
	{
															#line 4737 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tags = t;
															#line 39332 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1when1(std::vector<KeyBackedTag> const& t,int loopDepth) 
	{
		loopDepth = a_body1cont2(t, loopDepth);

		return loopDepth;
	}
	int a_body1when1(std::vector<KeyBackedTag> && t,int loopDepth) 
	{
		loopDepth = a_body1cont2(std::move(t), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<RestoreStatusActor*>(this)->actor_wait_state > 0) static_cast<RestoreStatusActor*>(this)->actor_wait_state = 0;
		static_cast<RestoreStatusActor*>(this)->ActorCallback< RestoreStatusActor, 0, std::vector<KeyBackedTag> >::remove();

	}
	void a_callback_fire(ActorCallback< RestoreStatusActor, 0, std::vector<KeyBackedTag> >*,std::vector<KeyBackedTag> const& value) 
	{
		fdb_probe_actor_enter("restoreStatus", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("restoreStatus", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< RestoreStatusActor, 0, std::vector<KeyBackedTag> >*,std::vector<KeyBackedTag> && value) 
	{
		fdb_probe_actor_enter("restoreStatus", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("restoreStatus", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< RestoreStatusActor, 0, std::vector<KeyBackedTag> >*,Error err) 
	{
		fdb_probe_actor_enter("restoreStatus", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("restoreStatus", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont5(int loopDepth) 
	{
															#line 4751 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<RestoreStatusActor*>(this)->SAV<std::string>::futures) { (void)(result); this->~RestoreStatusActorState(); static_cast<RestoreStatusActor*>(this)->destroy(); return 0; }
															#line 39404 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<RestoreStatusActor*>(this)->SAV< std::string >::value()) std::string(std::move(result)); // state_var_RVO
		this->~RestoreStatusActorState();
		static_cast<RestoreStatusActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1(int loopDepth) 
	{
															#line 4744 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!(i < tags.size()))
															#line 39423 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
			return a_body1cont1break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 4745 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<UidAndAbortedFlagT> __when_expr_1 = tags[i].getD(tr);
															#line 4745 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<RestoreStatusActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 39431 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), std::max(0, loopDepth - 1)); else return a_body1cont1loopBody1when1(__when_expr_1.get(), loopDepth); };
		static_cast<RestoreStatusActor*>(this)->actor_wait_state = 2;
															#line 4745 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< RestoreStatusActor, 1, UidAndAbortedFlagT >*>(static_cast<RestoreStatusActor*>(this)));
															#line 39436 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1break1(int loopDepth) 
	{
		try {
			return a_body1cont5(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont1loopBody1cont1(UidAndAbortedFlagT const& u,int loopDepth) 
	{
															#line 4746 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<std::string> __when_expr_2 = RestoreConfig(u.first).getFullStatus(tr);
															#line 4746 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<RestoreStatusActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 39460 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), std::max(0, loopDepth - 1)); else return a_body1cont1loopBody1cont1when1(__when_expr_2.get(), loopDepth); };
		static_cast<RestoreStatusActor*>(this)->actor_wait_state = 3;
															#line 4746 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< RestoreStatusActor, 2, std::string >*>(static_cast<RestoreStatusActor*>(this)));
															#line 39465 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1loopBody1cont1(UidAndAbortedFlagT && u,int loopDepth) 
	{
															#line 4746 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<std::string> __when_expr_2 = RestoreConfig(u.first).getFullStatus(tr);
															#line 4746 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<RestoreStatusActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 39476 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), std::max(0, loopDepth - 1)); else return a_body1cont1loopBody1cont1when1(__when_expr_2.get(), loopDepth); };
		static_cast<RestoreStatusActor*>(this)->actor_wait_state = 3;
															#line 4746 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< RestoreStatusActor, 2, std::string >*>(static_cast<RestoreStatusActor*>(this)));
															#line 39481 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1loopBody1when1(UidAndAbortedFlagT const& u,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont1(u, loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1when1(UidAndAbortedFlagT && u,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont1(std::move(u), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<RestoreStatusActor*>(this)->actor_wait_state > 0) static_cast<RestoreStatusActor*>(this)->actor_wait_state = 0;
		static_cast<RestoreStatusActor*>(this)->ActorCallback< RestoreStatusActor, 1, UidAndAbortedFlagT >::remove();

	}
	void a_callback_fire(ActorCallback< RestoreStatusActor, 1, UidAndAbortedFlagT >*,UidAndAbortedFlagT const& value) 
	{
		fdb_probe_actor_enter("restoreStatus", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("restoreStatus", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< RestoreStatusActor, 1, UidAndAbortedFlagT >*,UidAndAbortedFlagT && value) 
	{
		fdb_probe_actor_enter("restoreStatus", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("restoreStatus", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< RestoreStatusActor, 1, UidAndAbortedFlagT >*,Error err) 
	{
		fdb_probe_actor_enter("restoreStatus", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("restoreStatus", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont1loopBody1cont3(std::string const& s,int loopDepth) 
	{
															#line 4747 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		result.append(s);
															#line 4748 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		result.append("\n\n");
															#line 4744 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		++i;
															#line 39557 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (loopDepth == 0) return a_body1cont1loopHead1(0);

		return loopDepth;
	}
	int a_body1cont1loopBody1cont3(std::string && s,int loopDepth) 
	{
															#line 4747 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		result.append(s);
															#line 4748 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		result.append("\n\n");
															#line 4744 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		++i;
															#line 39570 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (loopDepth == 0) return a_body1cont1loopHead1(0);

		return loopDepth;
	}
	int a_body1cont1loopBody1cont1when1(std::string const& s,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont3(s, loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1cont1when1(std::string && s,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont3(std::move(s), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<RestoreStatusActor*>(this)->actor_wait_state > 0) static_cast<RestoreStatusActor*>(this)->actor_wait_state = 0;
		static_cast<RestoreStatusActor*>(this)->ActorCallback< RestoreStatusActor, 2, std::string >::remove();

	}
	void a_callback_fire(ActorCallback< RestoreStatusActor, 2, std::string >*,std::string const& value) 
	{
		fdb_probe_actor_enter("restoreStatus", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont1loopBody1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("restoreStatus", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< RestoreStatusActor, 2, std::string >*,std::string && value) 
	{
		fdb_probe_actor_enter("restoreStatus", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont1loopBody1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("restoreStatus", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< RestoreStatusActor, 2, std::string >*,Error err) 
	{
		fdb_probe_actor_enter("restoreStatus", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("restoreStatus", reinterpret_cast<unsigned long>(this), 2);

	}
															#line 4729 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 4729 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key tagName;
															#line 4734 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::vector<KeyBackedTag> tags;
															#line 4741 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::string result;
															#line 4742 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int i;
															#line 39648 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via restoreStatus()
															#line 4729 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class RestoreStatusActor final : public Actor<std::string>, public ActorCallback< RestoreStatusActor, 0, std::vector<KeyBackedTag> >, public ActorCallback< RestoreStatusActor, 1, UidAndAbortedFlagT >, public ActorCallback< RestoreStatusActor, 2, std::string >, public FastAllocated<RestoreStatusActor>, public RestoreStatusActorState<RestoreStatusActor> {
															#line 39653 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<RestoreStatusActor>::operator new;
	using FastAllocated<RestoreStatusActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<std::string>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< RestoreStatusActor, 0, std::vector<KeyBackedTag> >;
friend struct ActorCallback< RestoreStatusActor, 1, UidAndAbortedFlagT >;
friend struct ActorCallback< RestoreStatusActor, 2, std::string >;
															#line 4729 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	RestoreStatusActor(Reference<ReadYourWritesTransaction> const& tr,Key const& tagName) 
															#line 39666 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<std::string>(),
		   RestoreStatusActorState<RestoreStatusActor>(tr, tagName)
	{
		fdb_probe_actor_enter("restoreStatus", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("restoreStatus");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("restoreStatus", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< RestoreStatusActor, 0, std::vector<KeyBackedTag> >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< RestoreStatusActor, 1, UidAndAbortedFlagT >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< RestoreStatusActor, 2, std::string >*)0, actor_cancelled()); break;
		}

	}
};
															#line 4729 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] Future<std::string> restoreStatus( Reference<ReadYourWritesTransaction> const& tr, Key const& tagName ) {
															#line 4729 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<std::string>(new RestoreStatusActor(tr, tagName));
															#line 39695 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 4753 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

															#line 39700 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via abortRestore()
															#line 4754 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class AbortRestoreActor>
															#line 4754 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class AbortRestoreActorState {
															#line 39706 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 4754 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	AbortRestoreActorState(Reference<ReadYourWritesTransaction> const& tr,Key const& tagName) 
															#line 4754 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 4754 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : tr(tr),
															#line 4754 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tagName(tagName)
															#line 39715 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("abortRestore", reinterpret_cast<unsigned long>(this));

	}
	~AbortRestoreActorState() 
	{
		fdb_probe_actor_destroy("abortRestore", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 4755 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 4756 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 4757 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::COMMIT_ON_FIRST_PROXY);
															#line 4759 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tag = makeRestoreTag(tagName.toString());
															#line 4760 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Optional<UidAndAbortedFlagT>> __when_expr_0 = tag.get(tr);
															#line 4760 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<AbortRestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 39740 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<AbortRestoreActor*>(this)->actor_wait_state = 1;
															#line 4760 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< AbortRestoreActor, 0, Optional<UidAndAbortedFlagT> >*>(static_cast<AbortRestoreActor*>(this)));
															#line 39745 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~AbortRestoreActorState();
		static_cast<AbortRestoreActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 4761 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!current.present())
															#line 39768 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 4762 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<AbortRestoreActor*>(this)->SAV<ERestoreState>::futures) { (void)(ERestoreState::UNITIALIZED); this->~AbortRestoreActorState(); static_cast<AbortRestoreActor*>(this)->destroy(); return 0; }
															#line 39772 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<AbortRestoreActor*>(this)->SAV< ERestoreState >::value()) ERestoreState(ERestoreState::UNITIALIZED);
			this->~AbortRestoreActorState();
			static_cast<AbortRestoreActor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 4764 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restore = RestoreConfig(current.get().first);
															#line 4766 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<ERestoreState> __when_expr_1 = restore.stateEnum().getD(tr);
															#line 4766 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AbortRestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 39784 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<AbortRestoreActor*>(this)->actor_wait_state = 2;
															#line 4766 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< AbortRestoreActor, 1, ERestoreState >*>(static_cast<AbortRestoreActor*>(this)));
															#line 39789 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1when1(Optional<UidAndAbortedFlagT> const& __current,int loopDepth) 
	{
															#line 4760 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		current = __current;
															#line 39798 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1when1(Optional<UidAndAbortedFlagT> && __current,int loopDepth) 
	{
		current = std::move(__current);
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<AbortRestoreActor*>(this)->actor_wait_state > 0) static_cast<AbortRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<AbortRestoreActor*>(this)->ActorCallback< AbortRestoreActor, 0, Optional<UidAndAbortedFlagT> >::remove();

	}
	void a_callback_fire(ActorCallback< AbortRestoreActor, 0, Optional<UidAndAbortedFlagT> >*,Optional<UidAndAbortedFlagT> const& value) 
	{
		fdb_probe_actor_enter("abortRestore", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortRestore", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< AbortRestoreActor, 0, Optional<UidAndAbortedFlagT> >*,Optional<UidAndAbortedFlagT> && value) 
	{
		fdb_probe_actor_enter("abortRestore", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortRestore", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< AbortRestoreActor, 0, Optional<UidAndAbortedFlagT> >*,Error err) 
	{
		fdb_probe_actor_enter("abortRestore", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortRestore", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont2(int loopDepth) 
	{
															#line 4767 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<bool> __when_expr_2 = restore.isRunnable(tr);
															#line 4767 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AbortRestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 39867 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont2when1(__when_expr_2.get(), loopDepth); };
		static_cast<AbortRestoreActor*>(this)->actor_wait_state = 3;
															#line 4767 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< AbortRestoreActor, 2, bool >*>(static_cast<AbortRestoreActor*>(this)));
															#line 39872 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1when1(ERestoreState const& __status,int loopDepth) 
	{
															#line 4766 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		status = __status;
															#line 39881 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont2(loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(ERestoreState && __status,int loopDepth) 
	{
		status = std::move(__status);
		loopDepth = a_body1cont2(loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<AbortRestoreActor*>(this)->actor_wait_state > 0) static_cast<AbortRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<AbortRestoreActor*>(this)->ActorCallback< AbortRestoreActor, 1, ERestoreState >::remove();

	}
	void a_callback_fire(ActorCallback< AbortRestoreActor, 1, ERestoreState >*,ERestoreState const& value) 
	{
		fdb_probe_actor_enter("abortRestore", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortRestore", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< AbortRestoreActor, 1, ERestoreState >*,ERestoreState && value) 
	{
		fdb_probe_actor_enter("abortRestore", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortRestore", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< AbortRestoreActor, 1, ERestoreState >*,Error err) 
	{
		fdb_probe_actor_enter("abortRestore", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortRestore", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont4(int loopDepth) 
	{
															#line 4769 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!runnable)
															#line 39948 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 4770 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<AbortRestoreActor*>(this)->SAV<ERestoreState>::futures) { (void)(status); this->~AbortRestoreActorState(); static_cast<AbortRestoreActor*>(this)->destroy(); return 0; }
															#line 39952 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<AbortRestoreActor*>(this)->SAV< ERestoreState >::value()) ERestoreState(std::move(status)); // state_var_RVO
			this->~AbortRestoreActorState();
			static_cast<AbortRestoreActor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 4772 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restore.stateEnum().set(tr, ERestoreState::ABORTED);
															#line 4775 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restore.clearApplyMutationsKeys(tr);
															#line 4778 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_3 = tag.cancel(tr);
															#line 4778 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AbortRestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 39966 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1cont4when1(__when_expr_3.get(), loopDepth); };
		static_cast<AbortRestoreActor*>(this)->actor_wait_state = 4;
															#line 4778 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< AbortRestoreActor, 3, Void >*>(static_cast<AbortRestoreActor*>(this)));
															#line 39971 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont2when1(bool const& __runnable,int loopDepth) 
	{
															#line 4767 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		runnable = __runnable;
															#line 39980 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont4(loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(bool && __runnable,int loopDepth) 
	{
		runnable = std::move(__runnable);
		loopDepth = a_body1cont4(loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<AbortRestoreActor*>(this)->actor_wait_state > 0) static_cast<AbortRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<AbortRestoreActor*>(this)->ActorCallback< AbortRestoreActor, 2, bool >::remove();

	}
	void a_callback_fire(ActorCallback< AbortRestoreActor, 2, bool >*,bool const& value) 
	{
		fdb_probe_actor_enter("abortRestore", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortRestore", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< AbortRestoreActor, 2, bool >*,bool && value) 
	{
		fdb_probe_actor_enter("abortRestore", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortRestore", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< AbortRestoreActor, 2, bool >*,Error err) 
	{
		fdb_probe_actor_enter("abortRestore", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortRestore", reinterpret_cast<unsigned long>(this), 2);

	}
	int a_body1cont5(Void const& _,int loopDepth) 
	{
															#line 4779 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_4 = unlockDatabase(tr, current.get().first);
															#line 4779 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AbortRestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 40049 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1cont5when1(__when_expr_4.get(), loopDepth); };
		static_cast<AbortRestoreActor*>(this)->actor_wait_state = 5;
															#line 4779 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< AbortRestoreActor, 4, Void >*>(static_cast<AbortRestoreActor*>(this)));
															#line 40054 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont5(Void && _,int loopDepth) 
	{
															#line 4779 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_4 = unlockDatabase(tr, current.get().first);
															#line 4779 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AbortRestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 40065 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1cont5when1(__when_expr_4.get(), loopDepth); };
		static_cast<AbortRestoreActor*>(this)->actor_wait_state = 5;
															#line 4779 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< AbortRestoreActor, 4, Void >*>(static_cast<AbortRestoreActor*>(this)));
															#line 40070 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont4when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont5(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont4when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont5(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose4() 
	{
		if (static_cast<AbortRestoreActor*>(this)->actor_wait_state > 0) static_cast<AbortRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<AbortRestoreActor*>(this)->ActorCallback< AbortRestoreActor, 3, Void >::remove();

	}
	void a_callback_fire(ActorCallback< AbortRestoreActor, 3, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("abortRestore", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont4when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortRestore", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_fire(ActorCallback< AbortRestoreActor, 3, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("abortRestore", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont4when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortRestore", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_error(ActorCallback< AbortRestoreActor, 3, Void >*,Error err) 
	{
		fdb_probe_actor_enter("abortRestore", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortRestore", reinterpret_cast<unsigned long>(this), 3);

	}
	int a_body1cont7(Void const& _,int loopDepth) 
	{
															#line 4780 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<AbortRestoreActor*>(this)->SAV<ERestoreState>::futures) { (void)(ERestoreState::ABORTED); this->~AbortRestoreActorState(); static_cast<AbortRestoreActor*>(this)->destroy(); return 0; }
															#line 40142 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<AbortRestoreActor*>(this)->SAV< ERestoreState >::value()) ERestoreState(ERestoreState::ABORTED);
		this->~AbortRestoreActorState();
		static_cast<AbortRestoreActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont7(Void && _,int loopDepth) 
	{
															#line 4780 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<AbortRestoreActor*>(this)->SAV<ERestoreState>::futures) { (void)(ERestoreState::ABORTED); this->~AbortRestoreActorState(); static_cast<AbortRestoreActor*>(this)->destroy(); return 0; }
															#line 40154 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<AbortRestoreActor*>(this)->SAV< ERestoreState >::value()) ERestoreState(ERestoreState::ABORTED);
		this->~AbortRestoreActorState();
		static_cast<AbortRestoreActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont5when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont7(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont5when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont7(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose5() 
	{
		if (static_cast<AbortRestoreActor*>(this)->actor_wait_state > 0) static_cast<AbortRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<AbortRestoreActor*>(this)->ActorCallback< AbortRestoreActor, 4, Void >::remove();

	}
	void a_callback_fire(ActorCallback< AbortRestoreActor, 4, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("abortRestore", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont5when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortRestore", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_fire(ActorCallback< AbortRestoreActor, 4, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("abortRestore", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont5when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortRestore", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_error(ActorCallback< AbortRestoreActor, 4, Void >*,Error err) 
	{
		fdb_probe_actor_enter("abortRestore", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortRestore", reinterpret_cast<unsigned long>(this), 4);

	}
															#line 4754 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 4754 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key tagName;
															#line 4759 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	KeyBackedTag tag;
															#line 4760 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<UidAndAbortedFlagT> current;
															#line 4764 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	RestoreConfig restore;
															#line 4766 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	ERestoreState status;
															#line 4767 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	bool runnable;
															#line 40239 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via abortRestore()
															#line 4754 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class AbortRestoreActor final : public Actor<ERestoreState>, public ActorCallback< AbortRestoreActor, 0, Optional<UidAndAbortedFlagT> >, public ActorCallback< AbortRestoreActor, 1, ERestoreState >, public ActorCallback< AbortRestoreActor, 2, bool >, public ActorCallback< AbortRestoreActor, 3, Void >, public ActorCallback< AbortRestoreActor, 4, Void >, public FastAllocated<AbortRestoreActor>, public AbortRestoreActorState<AbortRestoreActor> {
															#line 40244 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<AbortRestoreActor>::operator new;
	using FastAllocated<AbortRestoreActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<ERestoreState>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< AbortRestoreActor, 0, Optional<UidAndAbortedFlagT> >;
friend struct ActorCallback< AbortRestoreActor, 1, ERestoreState >;
friend struct ActorCallback< AbortRestoreActor, 2, bool >;
friend struct ActorCallback< AbortRestoreActor, 3, Void >;
friend struct ActorCallback< AbortRestoreActor, 4, Void >;
															#line 4754 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	AbortRestoreActor(Reference<ReadYourWritesTransaction> const& tr,Key const& tagName) 
															#line 40259 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<ERestoreState>(),
		   AbortRestoreActorState<AbortRestoreActor>(tr, tagName)
	{
		fdb_probe_actor_enter("abortRestore", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("abortRestore");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("abortRestore", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< AbortRestoreActor, 0, Optional<UidAndAbortedFlagT> >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< AbortRestoreActor, 1, ERestoreState >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< AbortRestoreActor, 2, bool >*)0, actor_cancelled()); break;
		case 4: this->a_callback_error((ActorCallback< AbortRestoreActor, 3, Void >*)0, actor_cancelled()); break;
		case 5: this->a_callback_error((ActorCallback< AbortRestoreActor, 4, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 4754 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] Future<ERestoreState> abortRestore( Reference<ReadYourWritesTransaction> const& tr, Key const& tagName ) {
															#line 4754 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<ERestoreState>(new AbortRestoreActor(tr, tagName));
															#line 40290 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 4782 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

															#line 40295 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via abortRestore()
															#line 4783 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class AbortRestoreActor1>
															#line 4783 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class AbortRestoreActor1State {
															#line 40301 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 4783 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	AbortRestoreActor1State(Database const& cx,Key const& tagName) 
															#line 4783 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 4783 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : cx(cx),
															#line 4783 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tagName(tagName),
															#line 4784 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tr(Reference<ReadYourWritesTransaction>(new ReadYourWritesTransaction(cx)))
															#line 40312 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("abortRestore", reinterpret_cast<unsigned long>(this));

	}
	~AbortRestoreActor1State() 
	{
		fdb_probe_actor_destroy("abortRestore", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 4787 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			;
															#line 40327 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = a_body1loopHead1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~AbortRestoreActor1State();
		static_cast<AbortRestoreActor1*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 4800 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr = Reference<ReadYourWritesTransaction>(new ReadYourWritesTransaction(cx));
															#line 4804 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 40352 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont1loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1(int loopDepth) 
	{
		try {
															#line 4789 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<ERestoreState> __when_expr_0 = abortRestore(tr, tagName);
															#line 4789 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<AbortRestoreActor1*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 40371 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1loopBody1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1loopBody1when1(__when_expr_0.get(), loopDepth); };
			static_cast<AbortRestoreActor1*>(this)->actor_wait_state = 1;
															#line 4789 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< AbortRestoreActor1, 0, ERestoreState >*>(static_cast<AbortRestoreActor1*>(this)));
															#line 40376 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1break1(int loopDepth) 
	{
		try {
			return a_body1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1loopHead1(0);

		return loopDepth;
	}
	int a_body1loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 4796 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_2 = tr->onError(e);
															#line 4796 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<AbortRestoreActor1*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 40413 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), std::max(0, loopDepth - 1)); else return a_body1loopBody1Catch1when1(__when_expr_2.get(), loopDepth); };
			static_cast<AbortRestoreActor1*>(this)->actor_wait_state = 3;
															#line 4796 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< AbortRestoreActor1, 2, Void >*>(static_cast<AbortRestoreActor1*>(this)));
															#line 40418 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1loopBody1cont2(ERestoreState const& estate,int loopDepth) 
	{
															#line 4790 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (estate != ERestoreState::ABORTED)
															#line 40433 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 4791 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<AbortRestoreActor1*>(this)->SAV<ERestoreState>::futures) { (void)(estate); this->~AbortRestoreActor1State(); static_cast<AbortRestoreActor1*>(this)->destroy(); return 0; }
															#line 40437 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<AbortRestoreActor1*>(this)->SAV< ERestoreState >::value()) ERestoreState(estate);
			this->~AbortRestoreActor1State();
			static_cast<AbortRestoreActor1*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 4793 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = tr->commit();
															#line 4793 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AbortRestoreActor1*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 40447 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1loopBody1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1loopBody1cont2when1(__when_expr_1.get(), loopDepth); };
		static_cast<AbortRestoreActor1*>(this)->actor_wait_state = 2;
															#line 4793 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< AbortRestoreActor1, 1, Void >*>(static_cast<AbortRestoreActor1*>(this)));
															#line 40452 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont2(ERestoreState && estate,int loopDepth) 
	{
															#line 4790 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (estate != ERestoreState::ABORTED)
															#line 40461 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 4791 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<AbortRestoreActor1*>(this)->SAV<ERestoreState>::futures) { (void)(estate); this->~AbortRestoreActor1State(); static_cast<AbortRestoreActor1*>(this)->destroy(); return 0; }
															#line 40465 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<AbortRestoreActor1*>(this)->SAV< ERestoreState >::value()) ERestoreState(estate);
			this->~AbortRestoreActor1State();
			static_cast<AbortRestoreActor1*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 4793 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = tr->commit();
															#line 4793 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AbortRestoreActor1*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 40475 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1loopBody1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1loopBody1cont2when1(__when_expr_1.get(), loopDepth); };
		static_cast<AbortRestoreActor1*>(this)->actor_wait_state = 2;
															#line 4793 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< AbortRestoreActor1, 1, Void >*>(static_cast<AbortRestoreActor1*>(this)));
															#line 40480 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1when1(ERestoreState const& estate,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont2(estate, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1when1(ERestoreState && estate,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont2(std::move(estate), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<AbortRestoreActor1*>(this)->actor_wait_state > 0) static_cast<AbortRestoreActor1*>(this)->actor_wait_state = 0;
		static_cast<AbortRestoreActor1*>(this)->ActorCallback< AbortRestoreActor1, 0, ERestoreState >::remove();

	}
	void a_callback_fire(ActorCallback< AbortRestoreActor1, 0, ERestoreState >*,ERestoreState const& value) 
	{
		fdb_probe_actor_enter("abortRestore", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortRestore", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< AbortRestoreActor1, 0, ERestoreState >*,ERestoreState && value) 
	{
		fdb_probe_actor_enter("abortRestore", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortRestore", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< AbortRestoreActor1, 0, ERestoreState >*,Error err) 
	{
		fdb_probe_actor_enter("abortRestore", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortRestore", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1loopBody1cont3(Void const& _,int loopDepth) 
	{
		return a_body1break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1loopBody1cont3(Void && _,int loopDepth) 
	{
		return a_body1break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1loopBody1cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<AbortRestoreActor1*>(this)->actor_wait_state > 0) static_cast<AbortRestoreActor1*>(this)->actor_wait_state = 0;
		static_cast<AbortRestoreActor1*>(this)->ActorCallback< AbortRestoreActor1, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< AbortRestoreActor1, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("abortRestore", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortRestore", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< AbortRestoreActor1, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("abortRestore", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortRestore", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< AbortRestoreActor1, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("abortRestore", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortRestore", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1loopBody1Catch1cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1Catch1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1Catch1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<AbortRestoreActor1*>(this)->actor_wait_state > 0) static_cast<AbortRestoreActor1*>(this)->actor_wait_state = 0;
		static_cast<AbortRestoreActor1*>(this)->ActorCallback< AbortRestoreActor1, 2, Void >::remove();

	}
	void a_callback_fire(ActorCallback< AbortRestoreActor1, 2, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("abortRestore", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortRestore", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< AbortRestoreActor1, 2, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("abortRestore", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortRestore", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< AbortRestoreActor1, 2, Void >*,Error err) 
	{
		fdb_probe_actor_enter("abortRestore", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortRestore", reinterpret_cast<unsigned long>(this), 2);

	}
	int a_body1cont1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1(int loopDepth) 
	{
		try {
															#line 4806 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 4807 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 4808 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::COMMIT_ON_FIRST_PROXY);
															#line 4809 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->addReadConflictRange(singleKeyRange(KeyRef()));
															#line 4810 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->addWriteConflictRange(singleKeyRange(KeyRef()));
															#line 4811 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_3 = tr->commit();
															#line 4811 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<AbortRestoreActor1*>(this)->actor_wait_state < 0) return a_body1cont1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 40722 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1cont1loopBody1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1cont1loopBody1when1(__when_expr_3.get(), loopDepth); };
			static_cast<AbortRestoreActor1*>(this)->actor_wait_state = 4;
															#line 4811 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< AbortRestoreActor1, 3, Void >*>(static_cast<AbortRestoreActor1*>(this)));
															#line 40727 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1cont1loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1cont1loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont1loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1cont1loopHead1(0);

		return loopDepth;
	}
	int a_body1cont1loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 4814 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_4 = tr->onError(e);
															#line 4814 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<AbortRestoreActor1*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 40751 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1Catch1(__when_expr_4.getError(), std::max(0, loopDepth - 1)); else return a_body1cont1loopBody1Catch1when1(__when_expr_4.get(), loopDepth); };
			static_cast<AbortRestoreActor1*>(this)->actor_wait_state = 5;
															#line 4814 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< AbortRestoreActor1, 4, Void >*>(static_cast<AbortRestoreActor1*>(this)));
															#line 40756 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont1loopBody1cont2(Void const& _,int loopDepth) 
	{
															#line 4812 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<AbortRestoreActor1*>(this)->SAV<ERestoreState>::futures) { (void)(ERestoreState::ABORTED); this->~AbortRestoreActor1State(); static_cast<AbortRestoreActor1*>(this)->destroy(); return 0; }
															#line 40771 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<AbortRestoreActor1*>(this)->SAV< ERestoreState >::value()) ERestoreState(ERestoreState::ABORTED);
		this->~AbortRestoreActor1State();
		static_cast<AbortRestoreActor1*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont1loopBody1cont2(Void && _,int loopDepth) 
	{
															#line 4812 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<AbortRestoreActor1*>(this)->SAV<ERestoreState>::futures) { (void)(ERestoreState::ABORTED); this->~AbortRestoreActor1State(); static_cast<AbortRestoreActor1*>(this)->destroy(); return 0; }
															#line 40783 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<AbortRestoreActor1*>(this)->SAV< ERestoreState >::value()) ERestoreState(ERestoreState::ABORTED);
		this->~AbortRestoreActor1State();
		static_cast<AbortRestoreActor1*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont1loopBody1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose4() 
	{
		if (static_cast<AbortRestoreActor1*>(this)->actor_wait_state > 0) static_cast<AbortRestoreActor1*>(this)->actor_wait_state = 0;
		static_cast<AbortRestoreActor1*>(this)->ActorCallback< AbortRestoreActor1, 3, Void >::remove();

	}
	void a_callback_fire(ActorCallback< AbortRestoreActor1, 3, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("abortRestore", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont1loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortRestore", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_fire(ActorCallback< AbortRestoreActor1, 3, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("abortRestore", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont1loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortRestore", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_error(ActorCallback< AbortRestoreActor1, 3, Void >*,Error err) 
	{
		fdb_probe_actor_enter("abortRestore", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortRestore", reinterpret_cast<unsigned long>(this), 3);

	}
	int a_body1cont1loopBody1Catch1cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1Catch1cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1Catch1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1Catch1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose5() 
	{
		if (static_cast<AbortRestoreActor1*>(this)->actor_wait_state > 0) static_cast<AbortRestoreActor1*>(this)->actor_wait_state = 0;
		static_cast<AbortRestoreActor1*>(this)->ActorCallback< AbortRestoreActor1, 4, Void >::remove();

	}
	void a_callback_fire(ActorCallback< AbortRestoreActor1, 4, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("abortRestore", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont1loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortRestore", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_fire(ActorCallback< AbortRestoreActor1, 4, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("abortRestore", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont1loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortRestore", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_error(ActorCallback< AbortRestoreActor1, 4, Void >*,Error err) 
	{
		fdb_probe_actor_enter("abortRestore", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortRestore", reinterpret_cast<unsigned long>(this), 4);

	}
															#line 4783 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Database cx;
															#line 4783 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key tagName;
															#line 4784 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 40935 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via abortRestore()
															#line 4783 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class AbortRestoreActor1 final : public Actor<ERestoreState>, public ActorCallback< AbortRestoreActor1, 0, ERestoreState >, public ActorCallback< AbortRestoreActor1, 1, Void >, public ActorCallback< AbortRestoreActor1, 2, Void >, public ActorCallback< AbortRestoreActor1, 3, Void >, public ActorCallback< AbortRestoreActor1, 4, Void >, public FastAllocated<AbortRestoreActor1>, public AbortRestoreActor1State<AbortRestoreActor1> {
															#line 40940 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<AbortRestoreActor1>::operator new;
	using FastAllocated<AbortRestoreActor1>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<ERestoreState>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< AbortRestoreActor1, 0, ERestoreState >;
friend struct ActorCallback< AbortRestoreActor1, 1, Void >;
friend struct ActorCallback< AbortRestoreActor1, 2, Void >;
friend struct ActorCallback< AbortRestoreActor1, 3, Void >;
friend struct ActorCallback< AbortRestoreActor1, 4, Void >;
															#line 4783 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	AbortRestoreActor1(Database const& cx,Key const& tagName) 
															#line 40955 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<ERestoreState>(),
		   AbortRestoreActor1State<AbortRestoreActor1>(cx, tagName)
	{
		fdb_probe_actor_enter("abortRestore", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("abortRestore");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("abortRestore", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< AbortRestoreActor1, 0, ERestoreState >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< AbortRestoreActor1, 1, Void >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< AbortRestoreActor1, 2, Void >*)0, actor_cancelled()); break;
		case 4: this->a_callback_error((ActorCallback< AbortRestoreActor1, 3, Void >*)0, actor_cancelled()); break;
		case 5: this->a_callback_error((ActorCallback< AbortRestoreActor1, 4, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 4783 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] Future<ERestoreState> abortRestore( Database const& cx, Key const& tagName ) {
															#line 4783 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<ERestoreState>(new AbortRestoreActor1(cx, tagName));
															#line 40986 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 4818 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

struct StartFullRestoreTaskFunc : RestoreTaskFuncBase {
	static StringRef name;
	static constexpr uint32_t version = 1;

	static struct {
		static TaskParam<Version> firstVersion() { return __FUNCTION__sr; }
	} Params;

	// Find all files needed for the restore and save them in the RestoreConfig for the task.
	// Update the total number of files and blocks and change state to starting.
																#line 41001 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via _execute()
															#line 4829 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class _executeActor7>
															#line 4829 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _executeActor7State {
															#line 41007 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 4829 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_executeActor7State(Database const& cx,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 4829 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 4829 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : cx(cx),
															#line 4829 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskBucket(taskBucket),
															#line 4829 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   futureBucket(futureBucket),
															#line 4829 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   task(task),
															#line 4833 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tr(new ReadYourWritesTransaction(cx)),
															#line 4834 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   restore(task),
															#line 4835 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   restoreVersion(),
															#line 4836 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   beginVersion(),
															#line 4837 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   bc(),
															#line 4838 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   ranges(),
															#line 4839 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   logsOnly(),
															#line 4840 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   inconsistentSnapshotOnly()
															#line 41036 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("_execute", reinterpret_cast<unsigned long>(this));

	}
	~_executeActor7State() 
	{
		fdb_probe_actor_destroy("_execute", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 4842 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			;
															#line 41051 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = a_body1loopHead1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~_executeActor7State();
		static_cast<_executeActor7*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 4880 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->reset();
															#line 4881 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 41076 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont1loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1(int loopDepth) 
	{
		try {
															#line 4844 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 4845 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 4847 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_0 = checkTaskVersion(tr->getDatabase(), task, name, version);
															#line 4847 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor7*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 41099 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1loopBody1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1loopBody1when1(__when_expr_0.get(), loopDepth); };
			static_cast<_executeActor7*>(this)->actor_wait_state = 1;
															#line 4847 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< _executeActor7, 0, Void >*>(static_cast<_executeActor7*>(this)));
															#line 41104 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1break1(int loopDepth) 
	{
		try {
			return a_body1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1loopHead1(0);

		return loopDepth;
	}
	int a_body1loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 4876 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_11 = tr->onError(e);
															#line 4876 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor7*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 41141 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_11.isReady()) { if (__when_expr_11.isError()) return a_body1Catch1(__when_expr_11.getError(), std::max(0, loopDepth - 1)); else return a_body1loopBody1Catch1when1(__when_expr_11.get(), loopDepth); };
			static_cast<_executeActor7*>(this)->actor_wait_state = 12;
															#line 4876 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_11.addCallbackAndClear(static_cast<ActorCallback< _executeActor7, 11, Void >*>(static_cast<_executeActor7*>(this)));
															#line 41146 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1loopBody1cont2(Void const& _,int loopDepth) 
	{
															#line 4848 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = store(beginVersion, restore.beginVersion().getD(tr, Snapshot::False, ::invalidVersion));
															#line 4848 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor7*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 41163 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1loopBody1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1loopBody1cont2when1(__when_expr_1.get(), loopDepth); };
		static_cast<_executeActor7*>(this)->actor_wait_state = 2;
															#line 4848 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< _executeActor7, 1, Void >*>(static_cast<_executeActor7*>(this)));
															#line 41168 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont2(Void && _,int loopDepth) 
	{
															#line 4848 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = store(beginVersion, restore.beginVersion().getD(tr, Snapshot::False, ::invalidVersion));
															#line 4848 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor7*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 41179 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1loopBody1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1loopBody1cont2when1(__when_expr_1.get(), loopDepth); };
		static_cast<_executeActor7*>(this)->actor_wait_state = 2;
															#line 4848 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< _executeActor7, 1, Void >*>(static_cast<_executeActor7*>(this)));
															#line 41184 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<_executeActor7*>(this)->actor_wait_state > 0) static_cast<_executeActor7*>(this)->actor_wait_state = 0;
		static_cast<_executeActor7*>(this)->ActorCallback< _executeActor7, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor7, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< _executeActor7, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< _executeActor7, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1loopBody1cont3(Void const& _,int loopDepth) 
	{
															#line 4850 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_2 = store(restoreVersion, restore.restoreVersion().getOrThrow(tr));
															#line 4850 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor7*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 41258 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1loopBody1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1loopBody1cont3when1(__when_expr_2.get(), loopDepth); };
		static_cast<_executeActor7*>(this)->actor_wait_state = 3;
															#line 4850 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< _executeActor7, 2, Void >*>(static_cast<_executeActor7*>(this)));
															#line 41263 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont3(Void && _,int loopDepth) 
	{
															#line 4850 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_2 = store(restoreVersion, restore.restoreVersion().getOrThrow(tr));
															#line 4850 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor7*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 41274 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1loopBody1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1loopBody1cont3when1(__when_expr_2.get(), loopDepth); };
		static_cast<_executeActor7*>(this)->actor_wait_state = 3;
															#line 4850 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< _executeActor7, 2, Void >*>(static_cast<_executeActor7*>(this)));
															#line 41279 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<_executeActor7*>(this)->actor_wait_state > 0) static_cast<_executeActor7*>(this)->actor_wait_state = 0;
		static_cast<_executeActor7*>(this)->ActorCallback< _executeActor7, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor7, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< _executeActor7, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< _executeActor7, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1loopBody1cont4(Void const& _,int loopDepth) 
	{
															#line 4851 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_3 = store(ranges, restore.getRestoreRangesOrDefault(tr));
															#line 4851 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor7*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 41353 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1loopBody1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1loopBody1cont4when1(__when_expr_3.get(), loopDepth); };
		static_cast<_executeActor7*>(this)->actor_wait_state = 4;
															#line 4851 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< _executeActor7, 3, Void >*>(static_cast<_executeActor7*>(this)));
															#line 41358 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont4(Void && _,int loopDepth) 
	{
															#line 4851 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_3 = store(ranges, restore.getRestoreRangesOrDefault(tr));
															#line 4851 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor7*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 41369 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1loopBody1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1loopBody1cont4when1(__when_expr_3.get(), loopDepth); };
		static_cast<_executeActor7*>(this)->actor_wait_state = 4;
															#line 4851 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< _executeActor7, 3, Void >*>(static_cast<_executeActor7*>(this)));
															#line 41374 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont3when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont4(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont3when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont4(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<_executeActor7*>(this)->actor_wait_state > 0) static_cast<_executeActor7*>(this)->actor_wait_state = 0;
		static_cast<_executeActor7*>(this)->ActorCallback< _executeActor7, 2, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor7, 2, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1loopBody1cont3when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< _executeActor7, 2, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1loopBody1cont3when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< _executeActor7, 2, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 2);

	}
	int a_body1loopBody1cont5(Void const& _,int loopDepth) 
	{
															#line 4852 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_4 = store(logsOnly, restore.onlyApplyMutationLogs().getD(tr, Snapshot::False, false));
															#line 4852 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor7*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 41448 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1loopBody1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1loopBody1cont5when1(__when_expr_4.get(), loopDepth); };
		static_cast<_executeActor7*>(this)->actor_wait_state = 5;
															#line 4852 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< _executeActor7, 4, Void >*>(static_cast<_executeActor7*>(this)));
															#line 41453 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont5(Void && _,int loopDepth) 
	{
															#line 4852 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_4 = store(logsOnly, restore.onlyApplyMutationLogs().getD(tr, Snapshot::False, false));
															#line 4852 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor7*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 41464 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1loopBody1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1loopBody1cont5when1(__when_expr_4.get(), loopDepth); };
		static_cast<_executeActor7*>(this)->actor_wait_state = 5;
															#line 4852 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< _executeActor7, 4, Void >*>(static_cast<_executeActor7*>(this)));
															#line 41469 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont4when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont5(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont4when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont5(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose4() 
	{
		if (static_cast<_executeActor7*>(this)->actor_wait_state > 0) static_cast<_executeActor7*>(this)->actor_wait_state = 0;
		static_cast<_executeActor7*>(this)->ActorCallback< _executeActor7, 3, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor7, 3, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1loopBody1cont4when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_fire(ActorCallback< _executeActor7, 3, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1loopBody1cont4when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_error(ActorCallback< _executeActor7, 3, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 3);

	}
	int a_body1loopBody1cont6(Void const& _,int loopDepth) 
	{
															#line 4853 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_5 = store(inconsistentSnapshotOnly, restore.inconsistentSnapshotOnly().getD(tr, Snapshot::False, false));
															#line 4853 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor7*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 41543 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_5.isReady()) { if (__when_expr_5.isError()) return a_body1loopBody1Catch1(__when_expr_5.getError(), loopDepth); else return a_body1loopBody1cont6when1(__when_expr_5.get(), loopDepth); };
		static_cast<_executeActor7*>(this)->actor_wait_state = 6;
															#line 4853 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_5.addCallbackAndClear(static_cast<ActorCallback< _executeActor7, 5, Void >*>(static_cast<_executeActor7*>(this)));
															#line 41548 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont6(Void && _,int loopDepth) 
	{
															#line 4853 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_5 = store(inconsistentSnapshotOnly, restore.inconsistentSnapshotOnly().getD(tr, Snapshot::False, false));
															#line 4853 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor7*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 41559 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_5.isReady()) { if (__when_expr_5.isError()) return a_body1loopBody1Catch1(__when_expr_5.getError(), loopDepth); else return a_body1loopBody1cont6when1(__when_expr_5.get(), loopDepth); };
		static_cast<_executeActor7*>(this)->actor_wait_state = 6;
															#line 4853 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_5.addCallbackAndClear(static_cast<ActorCallback< _executeActor7, 5, Void >*>(static_cast<_executeActor7*>(this)));
															#line 41564 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont5when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont6(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont5when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont6(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose5() 
	{
		if (static_cast<_executeActor7*>(this)->actor_wait_state > 0) static_cast<_executeActor7*>(this)->actor_wait_state = 0;
		static_cast<_executeActor7*>(this)->ActorCallback< _executeActor7, 4, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor7, 4, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1loopBody1cont5when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_fire(ActorCallback< _executeActor7, 4, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1loopBody1cont5when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_error(ActorCallback< _executeActor7, 4, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 4);

	}
	int a_body1loopBody1cont7(Void const& _,int loopDepth) 
	{
															#line 4856 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_6 = taskBucket->keepRunning(tr, task);
															#line 4856 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor7*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 41638 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_6.isReady()) { if (__when_expr_6.isError()) return a_body1loopBody1Catch1(__when_expr_6.getError(), loopDepth); else return a_body1loopBody1cont7when1(__when_expr_6.get(), loopDepth); };
		static_cast<_executeActor7*>(this)->actor_wait_state = 7;
															#line 4856 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_6.addCallbackAndClear(static_cast<ActorCallback< _executeActor7, 6, Void >*>(static_cast<_executeActor7*>(this)));
															#line 41643 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont7(Void && _,int loopDepth) 
	{
															#line 4856 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_6 = taskBucket->keepRunning(tr, task);
															#line 4856 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor7*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 41654 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_6.isReady()) { if (__when_expr_6.isError()) return a_body1loopBody1Catch1(__when_expr_6.getError(), loopDepth); else return a_body1loopBody1cont7when1(__when_expr_6.get(), loopDepth); };
		static_cast<_executeActor7*>(this)->actor_wait_state = 7;
															#line 4856 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_6.addCallbackAndClear(static_cast<ActorCallback< _executeActor7, 6, Void >*>(static_cast<_executeActor7*>(this)));
															#line 41659 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont6when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont7(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont6when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont7(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose6() 
	{
		if (static_cast<_executeActor7*>(this)->actor_wait_state > 0) static_cast<_executeActor7*>(this)->actor_wait_state = 0;
		static_cast<_executeActor7*>(this)->ActorCallback< _executeActor7, 5, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor7, 5, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1loopBody1cont6when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_fire(ActorCallback< _executeActor7, 5, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1loopBody1cont6when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_error(ActorCallback< _executeActor7, 5, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 5);

	}
	int a_body1loopBody1cont8(Void const& _,int loopDepth) 
	{
															#line 4858 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<ERestoreState> __when_expr_7 = restore.stateEnum().getD(tr);
															#line 4858 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor7*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 41733 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_7.isReady()) { if (__when_expr_7.isError()) return a_body1loopBody1Catch1(__when_expr_7.getError(), loopDepth); else return a_body1loopBody1cont8when1(__when_expr_7.get(), loopDepth); };
		static_cast<_executeActor7*>(this)->actor_wait_state = 8;
															#line 4858 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_7.addCallbackAndClear(static_cast<ActorCallback< _executeActor7, 7, ERestoreState >*>(static_cast<_executeActor7*>(this)));
															#line 41738 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont8(Void && _,int loopDepth) 
	{
															#line 4858 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<ERestoreState> __when_expr_7 = restore.stateEnum().getD(tr);
															#line 4858 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor7*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 41749 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_7.isReady()) { if (__when_expr_7.isError()) return a_body1loopBody1Catch1(__when_expr_7.getError(), loopDepth); else return a_body1loopBody1cont8when1(__when_expr_7.get(), loopDepth); };
		static_cast<_executeActor7*>(this)->actor_wait_state = 8;
															#line 4858 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_7.addCallbackAndClear(static_cast<ActorCallback< _executeActor7, 7, ERestoreState >*>(static_cast<_executeActor7*>(this)));
															#line 41754 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont7when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont8(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont7when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont8(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose7() 
	{
		if (static_cast<_executeActor7*>(this)->actor_wait_state > 0) static_cast<_executeActor7*>(this)->actor_wait_state = 0;
		static_cast<_executeActor7*>(this)->ActorCallback< _executeActor7, 6, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor7, 6, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1loopBody1cont7when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 6);

	}
	void a_callback_fire(ActorCallback< _executeActor7, 6, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1loopBody1cont7when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 6);

	}
	void a_callback_error(ActorCallback< _executeActor7, 6, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 6);

	}
	int a_body1loopBody1cont9(ERestoreState const& oldState,int loopDepth) 
	{
															#line 4859 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (oldState != ERestoreState::QUEUED && oldState != ERestoreState::STARTING)
															#line 41826 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 4860 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_8 = restore.logError(cx, restore_error(), format("StartFullRestore: Encountered unexpected state(%d)", oldState), THIS);
															#line 4860 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor7*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 41832 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_8.isReady()) { if (__when_expr_8.isError()) return a_body1loopBody1Catch1(__when_expr_8.getError(), loopDepth); else return a_body1loopBody1cont9when1(__when_expr_8.get(), loopDepth); };
			static_cast<_executeActor7*>(this)->actor_wait_state = 9;
															#line 4860 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_8.addCallbackAndClear(static_cast<ActorCallback< _executeActor7, 8, Void >*>(static_cast<_executeActor7*>(this)));
															#line 41837 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1loopBody1cont10(loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1cont9(ERestoreState && oldState,int loopDepth) 
	{
															#line 4859 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (oldState != ERestoreState::QUEUED && oldState != ERestoreState::STARTING)
															#line 41851 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 4860 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_8 = restore.logError(cx, restore_error(), format("StartFullRestore: Encountered unexpected state(%d)", oldState), THIS);
															#line 4860 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor7*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 41857 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_8.isReady()) { if (__when_expr_8.isError()) return a_body1loopBody1Catch1(__when_expr_8.getError(), loopDepth); else return a_body1loopBody1cont9when1(__when_expr_8.get(), loopDepth); };
			static_cast<_executeActor7*>(this)->actor_wait_state = 9;
															#line 4860 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_8.addCallbackAndClear(static_cast<ActorCallback< _executeActor7, 8, Void >*>(static_cast<_executeActor7*>(this)));
															#line 41862 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1loopBody1cont10(loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1cont8when1(ERestoreState const& oldState,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont9(oldState, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont8when1(ERestoreState && oldState,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont9(std::move(oldState), loopDepth);

		return loopDepth;
	}
	void a_exitChoose8() 
	{
		if (static_cast<_executeActor7*>(this)->actor_wait_state > 0) static_cast<_executeActor7*>(this)->actor_wait_state = 0;
		static_cast<_executeActor7*>(this)->ActorCallback< _executeActor7, 7, ERestoreState >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor7, 7, ERestoreState >*,ERestoreState const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1loopBody1cont8when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 7);

	}
	void a_callback_fire(ActorCallback< _executeActor7, 7, ERestoreState >*,ERestoreState && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1loopBody1cont8when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 7);

	}
	void a_callback_error(ActorCallback< _executeActor7, 7, ERestoreState >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 7);

	}
	int a_body1loopBody1cont10(int loopDepth) 
	{
															#line 4866 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restore.stateEnum().set(tr, ERestoreState::STARTING);
															#line 4867 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restore.fileSet().clear(tr);
															#line 4868 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restore.fileBlockCount().clear(tr);
															#line 4869 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restore.fileCount().clear(tr);
															#line 4870 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Reference<IBackupContainer>> __when_expr_9 = restore.sourceContainer().getOrThrow(tr);
															#line 4870 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor7*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 41949 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_9.isReady()) { if (__when_expr_9.isError()) return a_body1loopBody1Catch1(__when_expr_9.getError(), loopDepth); else return a_body1loopBody1cont10when1(__when_expr_9.get(), loopDepth); };
		static_cast<_executeActor7*>(this)->actor_wait_state = 10;
															#line 4870 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_9.addCallbackAndClear(static_cast<ActorCallback< _executeActor7, 9, Reference<IBackupContainer> >*>(static_cast<_executeActor7*>(this)));
															#line 41954 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont11(Void const& _,int loopDepth) 
	{
															#line 4864 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_executeActor7*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_executeActor7State(); static_cast<_executeActor7*>(this)->destroy(); return 0; }
															#line 41963 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_executeActor7*>(this)->SAV< Void >::value()) Void(Void());
		this->~_executeActor7State();
		static_cast<_executeActor7*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1loopBody1cont11(Void && _,int loopDepth) 
	{
															#line 4864 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_executeActor7*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_executeActor7State(); static_cast<_executeActor7*>(this)->destroy(); return 0; }
															#line 41975 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_executeActor7*>(this)->SAV< Void >::value()) Void(Void());
		this->~_executeActor7State();
		static_cast<_executeActor7*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1loopBody1cont9when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont11(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont9when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont11(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose9() 
	{
		if (static_cast<_executeActor7*>(this)->actor_wait_state > 0) static_cast<_executeActor7*>(this)->actor_wait_state = 0;
		static_cast<_executeActor7*>(this)->ActorCallback< _executeActor7, 8, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor7, 8, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 8);
		a_exitChoose9();
		try {
			a_body1loopBody1cont9when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 8);

	}
	void a_callback_fire(ActorCallback< _executeActor7, 8, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 8);
		a_exitChoose9();
		try {
			a_body1loopBody1cont9when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 8);

	}
	void a_callback_error(ActorCallback< _executeActor7, 8, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 8);
		a_exitChoose9();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 8);

	}
	int a_body1loopBody1cont10cont1(Reference<IBackupContainer> const& _bc,int loopDepth) 
	{
															#line 4871 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		bc = getBackupContainerWithProxy(_bc);
															#line 4873 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_10 = tr->commit();
															#line 4873 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor7*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 42054 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_10.isReady()) { if (__when_expr_10.isError()) return a_body1loopBody1Catch1(__when_expr_10.getError(), loopDepth); else return a_body1loopBody1cont10cont1when1(__when_expr_10.get(), loopDepth); };
		static_cast<_executeActor7*>(this)->actor_wait_state = 11;
															#line 4873 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_10.addCallbackAndClear(static_cast<ActorCallback< _executeActor7, 10, Void >*>(static_cast<_executeActor7*>(this)));
															#line 42059 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont10cont1(Reference<IBackupContainer> && _bc,int loopDepth) 
	{
															#line 4871 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		bc = getBackupContainerWithProxy(_bc);
															#line 4873 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_10 = tr->commit();
															#line 4873 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor7*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 42072 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_10.isReady()) { if (__when_expr_10.isError()) return a_body1loopBody1Catch1(__when_expr_10.getError(), loopDepth); else return a_body1loopBody1cont10cont1when1(__when_expr_10.get(), loopDepth); };
		static_cast<_executeActor7*>(this)->actor_wait_state = 11;
															#line 4873 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_10.addCallbackAndClear(static_cast<ActorCallback< _executeActor7, 10, Void >*>(static_cast<_executeActor7*>(this)));
															#line 42077 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont10when1(Reference<IBackupContainer> const& _bc,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont10cont1(_bc, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont10when1(Reference<IBackupContainer> && _bc,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont10cont1(std::move(_bc), loopDepth);

		return loopDepth;
	}
	void a_exitChoose10() 
	{
		if (static_cast<_executeActor7*>(this)->actor_wait_state > 0) static_cast<_executeActor7*>(this)->actor_wait_state = 0;
		static_cast<_executeActor7*>(this)->ActorCallback< _executeActor7, 9, Reference<IBackupContainer> >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor7, 9, Reference<IBackupContainer> >*,Reference<IBackupContainer> const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 9);
		a_exitChoose10();
		try {
			a_body1loopBody1cont10when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 9);

	}
	void a_callback_fire(ActorCallback< _executeActor7, 9, Reference<IBackupContainer> >*,Reference<IBackupContainer> && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 9);
		a_exitChoose10();
		try {
			a_body1loopBody1cont10when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 9);

	}
	void a_callback_error(ActorCallback< _executeActor7, 9, Reference<IBackupContainer> >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 9);
		a_exitChoose10();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 9);

	}
	int a_body1loopBody1cont10cont2(Void const& _,int loopDepth) 
	{
		return a_body1break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1loopBody1cont10cont2(Void && _,int loopDepth) 
	{
		return a_body1break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1loopBody1cont10cont1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont10cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont10cont1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont10cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose11() 
	{
		if (static_cast<_executeActor7*>(this)->actor_wait_state > 0) static_cast<_executeActor7*>(this)->actor_wait_state = 0;
		static_cast<_executeActor7*>(this)->ActorCallback< _executeActor7, 10, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor7, 10, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 10);
		a_exitChoose11();
		try {
			a_body1loopBody1cont10cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 10);

	}
	void a_callback_fire(ActorCallback< _executeActor7, 10, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 10);
		a_exitChoose11();
		try {
			a_body1loopBody1cont10cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 10);

	}
	void a_callback_error(ActorCallback< _executeActor7, 10, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 10);
		a_exitChoose11();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 10);

	}
	int a_body1loopBody1Catch1cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1Catch1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1Catch1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose12() 
	{
		if (static_cast<_executeActor7*>(this)->actor_wait_state > 0) static_cast<_executeActor7*>(this)->actor_wait_state = 0;
		static_cast<_executeActor7*>(this)->ActorCallback< _executeActor7, 11, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor7, 11, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 11);
		a_exitChoose12();
		try {
			a_body1loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 11);

	}
	void a_callback_fire(ActorCallback< _executeActor7, 11, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 11);
		a_exitChoose12();
		try {
			a_body1loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 11);

	}
	void a_callback_error(ActorCallback< _executeActor7, 11, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 11);
		a_exitChoose12();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 11);

	}
	int a_body1cont2(int loopDepth) 
	{
															#line 4901 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		firstConsistentVersion = invalidVersion;
															#line 4902 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (beginVersion == invalidVersion)
															#line 42301 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 4903 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			beginVersion = 0;
															#line 42305 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 4905 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		keyRangesFilter = Standalone<VectorRef<KeyRangeRef>>();
															#line 4906 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		for( auto const& r : ranges ) {
															#line 4907 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			keyRangesFilter.push_back_deep(keyRangesFilter.arena(), KeyRangeRef(r));
															#line 42313 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 4909 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Optional<RestorableFileSet>> __when_expr_15 = bc->getRestoreSet(restoreVersion, keyRangesFilter, logsOnly, beginVersion);
															#line 4909 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor7*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 42319 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_15.isReady()) { if (__when_expr_15.isError()) return a_body1Catch1(__when_expr_15.getError(), loopDepth); else return a_body1cont2when1(__when_expr_15.get(), loopDepth); };
		static_cast<_executeActor7*>(this)->actor_wait_state = 16;
															#line 4909 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_15.addCallbackAndClear(static_cast<ActorCallback< _executeActor7, 15, Optional<RestorableFileSet> >*>(static_cast<_executeActor7*>(this)));
															#line 42324 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1(int loopDepth) 
	{
		try {
															#line 4883 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 4884 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 4885 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Version> __when_expr_12 = tr->getReadVersion();
															#line 4885 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor7*>(this)->actor_wait_state < 0) return a_body1cont1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 42347 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_12.isReady()) { if (__when_expr_12.isError()) return a_body1cont1loopBody1Catch1(__when_expr_12.getError(), loopDepth); else return a_body1cont1loopBody1when1(__when_expr_12.get(), loopDepth); };
			static_cast<_executeActor7*>(this)->actor_wait_state = 13;
															#line 4885 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_12.addCallbackAndClear(static_cast<ActorCallback< _executeActor7, 12, Version >*>(static_cast<_executeActor7*>(this)));
															#line 42352 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1cont1loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1cont1loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont1break1(int loopDepth) 
	{
		try {
			return a_body1cont2(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont1loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1cont1loopHead1(0);

		return loopDepth;
	}
	int a_body1cont1loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 4897 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_14 = tr->onError(e);
															#line 4897 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor7*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 42389 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_14.isReady()) { if (__when_expr_14.isError()) return a_body1Catch1(__when_expr_14.getError(), std::max(0, loopDepth - 1)); else return a_body1cont1loopBody1Catch1when1(__when_expr_14.get(), loopDepth); };
			static_cast<_executeActor7*>(this)->actor_wait_state = 15;
															#line 4897 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_14.addCallbackAndClear(static_cast<ActorCallback< _executeActor7, 14, Void >*>(static_cast<_executeActor7*>(this)));
															#line 42394 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont1loopBody1cont2(Version const& destVersion,int loopDepth) 
	{
															#line 4886 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FileRestoreVersionUpgrade") .detail("RestoreVersion", restoreVersion) .detail("Dest", destVersion);
															#line 4889 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (destVersion <= restoreVersion)
															#line 42411 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 4890 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			CODE_PROBE(true, "Forcing restored cluster to higher version");
															#line 4891 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->set(minRequiredCommitVersionKey, BinaryWriter::toValue(restoreVersion + 1, Unversioned()));
															#line 4892 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_13 = tr->commit();
															#line 4892 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor7*>(this)->actor_wait_state < 0) return a_body1cont1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 42421 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_13.isReady()) { if (__when_expr_13.isError()) return a_body1cont1loopBody1Catch1(__when_expr_13.getError(), loopDepth); else return a_body1cont1loopBody1cont2when1(__when_expr_13.get(), loopDepth); };
			static_cast<_executeActor7*>(this)->actor_wait_state = 14;
															#line 4892 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_13.addCallbackAndClear(static_cast<ActorCallback< _executeActor7, 13, Void >*>(static_cast<_executeActor7*>(this)));
															#line 42426 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			return a_body1cont1break1(loopDepth==0?0:loopDepth-1); // break
		}

		return loopDepth;
	}
	int a_body1cont1loopBody1cont2(Version && destVersion,int loopDepth) 
	{
															#line 4886 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FileRestoreVersionUpgrade") .detail("RestoreVersion", restoreVersion) .detail("Dest", destVersion);
															#line 4889 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (destVersion <= restoreVersion)
															#line 42442 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 4890 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			CODE_PROBE(true, "Forcing restored cluster to higher version");
															#line 4891 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->set(minRequiredCommitVersionKey, BinaryWriter::toValue(restoreVersion + 1, Unversioned()));
															#line 4892 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_13 = tr->commit();
															#line 4892 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor7*>(this)->actor_wait_state < 0) return a_body1cont1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 42452 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_13.isReady()) { if (__when_expr_13.isError()) return a_body1cont1loopBody1Catch1(__when_expr_13.getError(), loopDepth); else return a_body1cont1loopBody1cont2when1(__when_expr_13.get(), loopDepth); };
			static_cast<_executeActor7*>(this)->actor_wait_state = 14;
															#line 4892 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_13.addCallbackAndClear(static_cast<ActorCallback< _executeActor7, 13, Void >*>(static_cast<_executeActor7*>(this)));
															#line 42457 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			return a_body1cont1break1(loopDepth==0?0:loopDepth-1); // break
		}

		return loopDepth;
	}
	int a_body1cont1loopBody1when1(Version const& destVersion,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont2(destVersion, loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1when1(Version && destVersion,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont2(std::move(destVersion), loopDepth);

		return loopDepth;
	}
	void a_exitChoose13() 
	{
		if (static_cast<_executeActor7*>(this)->actor_wait_state > 0) static_cast<_executeActor7*>(this)->actor_wait_state = 0;
		static_cast<_executeActor7*>(this)->ActorCallback< _executeActor7, 12, Version >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor7, 12, Version >*,Version const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 12);
		a_exitChoose13();
		try {
			a_body1cont1loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 12);

	}
	void a_callback_fire(ActorCallback< _executeActor7, 12, Version >*,Version && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 12);
		a_exitChoose13();
		try {
			a_body1cont1loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 12);

	}
	void a_callback_error(ActorCallback< _executeActor7, 12, Version >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 12);
		a_exitChoose13();
		try {
			a_body1cont1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 12);

	}
	int a_body1cont1loopBody1cont3(int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont6(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1cont4(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont3(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1cont4(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont3(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont4(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont4(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose14() 
	{
		if (static_cast<_executeActor7*>(this)->actor_wait_state > 0) static_cast<_executeActor7*>(this)->actor_wait_state = 0;
		static_cast<_executeActor7*>(this)->ActorCallback< _executeActor7, 13, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor7, 13, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 13);
		a_exitChoose14();
		try {
			a_body1cont1loopBody1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 13);

	}
	void a_callback_fire(ActorCallback< _executeActor7, 13, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 13);
		a_exitChoose14();
		try {
			a_body1cont1loopBody1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 13);

	}
	void a_callback_error(ActorCallback< _executeActor7, 13, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 13);
		a_exitChoose14();
		try {
			a_body1cont1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 13);

	}
	int a_body1cont1loopBody1cont6(int loopDepth) 
	{
		try {
			loopDepth = a_body1cont1loopBody1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont1loopBody1Catch1cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1Catch1cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1Catch1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1Catch1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose15() 
	{
		if (static_cast<_executeActor7*>(this)->actor_wait_state > 0) static_cast<_executeActor7*>(this)->actor_wait_state = 0;
		static_cast<_executeActor7*>(this)->ActorCallback< _executeActor7, 14, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor7, 14, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 14);
		a_exitChoose15();
		try {
			a_body1cont1loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 14);

	}
	void a_callback_fire(ActorCallback< _executeActor7, 14, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 14);
		a_exitChoose15();
		try {
			a_body1cont1loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 14);

	}
	void a_callback_error(ActorCallback< _executeActor7, 14, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 14);
		a_exitChoose15();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 14);

	}
	int a_body1cont3(int loopDepth) 
	{
															#line 4911 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!restorable.present())
															#line 42703 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 4912 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			return a_body1Catch1(restore_missing_data(), loopDepth);
															#line 42707 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 4916 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		files = std::vector<RestoreConfig::RestoreFile>();
															#line 4917 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!logsOnly)
															#line 42713 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 4918 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			beginVersion = restorable.get().snapshot.beginVersion;
															#line 4919 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!inconsistentSnapshotOnly)
															#line 42719 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 4920 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				for( const RangeFile& f : restorable.get().ranges ) {
															#line 4921 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					files.push_back({ f.version, f.fileName, true, f.blockSize, f.fileSize });
															#line 4924 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					firstConsistentVersion = std::max(firstConsistentVersion, f.version);
															#line 42727 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				}
			}
			else
			{
															#line 4927 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				for(int i = 0;i < restorable.get().ranges.size();++i) {
															#line 4928 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					const RangeFile& f = restorable.get().ranges[i];
															#line 4929 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					files.push_back({ f.version, f.fileName, true, f.blockSize, f.fileSize });
															#line 4932 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					if (i != 0 && f.version != firstConsistentVersion)
															#line 42740 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
					{
															#line 4933 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
						firstConsistentVersion = invalidVersion;
															#line 42744 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
					}
					else
					{
															#line 4935 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
						firstConsistentVersion = f.version;
															#line 42750 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
					}
				}
			}
		}
		else
		{
															#line 4941 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			firstConsistentVersion = beginVersion;
															#line 42759 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 4943 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!inconsistentSnapshotOnly)
															#line 42763 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 4944 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			for( const LogFile& f : restorable.get().logs ) {
															#line 4945 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				files.push_back({ f.beginVersion, f.fileName, false, f.blockSize, f.fileSize, f.endVersion });
															#line 42769 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
		}
															#line 4949 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Params.firstVersion().set(task, beginVersion);
															#line 4951 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->reset();
															#line 4952 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 42778 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont3loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(Optional<RestorableFileSet> const& __restorable,int loopDepth) 
	{
															#line 4909 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restorable = __restorable;
															#line 42787 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont3(loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(Optional<RestorableFileSet> && __restorable,int loopDepth) 
	{
		restorable = std::move(__restorable);
		loopDepth = a_body1cont3(loopDepth);

		return loopDepth;
	}
	void a_exitChoose16() 
	{
		if (static_cast<_executeActor7*>(this)->actor_wait_state > 0) static_cast<_executeActor7*>(this)->actor_wait_state = 0;
		static_cast<_executeActor7*>(this)->ActorCallback< _executeActor7, 15, Optional<RestorableFileSet> >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor7, 15, Optional<RestorableFileSet> >*,Optional<RestorableFileSet> const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 15);
		a_exitChoose16();
		try {
			a_body1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 15);

	}
	void a_callback_fire(ActorCallback< _executeActor7, 15, Optional<RestorableFileSet> >*,Optional<RestorableFileSet> && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 15);
		a_exitChoose16();
		try {
			a_body1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 15);

	}
	void a_callback_error(ActorCallback< _executeActor7, 15, Optional<RestorableFileSet> >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 15);
		a_exitChoose16();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 15);

	}
	int a_body1cont6(int loopDepth) 
	{
															#line 4964 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		start = files.begin();
															#line 4965 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		end = files.end();
															#line 4967 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->reset();
															#line 4968 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 42860 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont6loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont3loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1(int loopDepth) 
	{
		try {
															#line 4954 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 4955 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 4956 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			restore.firstConsistentVersion().set(tr, firstConsistentVersion);
															#line 4957 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_16 = tr->commit();
															#line 4957 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor7*>(this)->actor_wait_state < 0) return a_body1cont3loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 42885 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_16.isReady()) { if (__when_expr_16.isError()) return a_body1cont3loopBody1Catch1(__when_expr_16.getError(), loopDepth); else return a_body1cont3loopBody1when1(__when_expr_16.get(), loopDepth); };
			static_cast<_executeActor7*>(this)->actor_wait_state = 17;
															#line 4957 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_16.addCallbackAndClear(static_cast<ActorCallback< _executeActor7, 16, Void >*>(static_cast<_executeActor7*>(this)));
															#line 42890 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1cont3loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1cont3loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont3break1(int loopDepth) 
	{
		try {
			return a_body1cont6(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont3loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1cont3loopHead1(0);

		return loopDepth;
	}
	int a_body1cont3loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 4960 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_17 = tr->onError(e);
															#line 4960 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor7*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 42927 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_17.isReady()) { if (__when_expr_17.isError()) return a_body1Catch1(__when_expr_17.getError(), std::max(0, loopDepth - 1)); else return a_body1cont3loopBody1Catch1when1(__when_expr_17.get(), loopDepth); };
			static_cast<_executeActor7*>(this)->actor_wait_state = 18;
															#line 4960 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_17.addCallbackAndClear(static_cast<ActorCallback< _executeActor7, 17, Void >*>(static_cast<_executeActor7*>(this)));
															#line 42932 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont3loopBody1cont2(Void const& _,int loopDepth) 
	{
		return a_body1cont3break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1cont3loopBody1cont2(Void && _,int loopDepth) 
	{
		return a_body1cont3break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1cont3loopBody1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose17() 
	{
		if (static_cast<_executeActor7*>(this)->actor_wait_state > 0) static_cast<_executeActor7*>(this)->actor_wait_state = 0;
		static_cast<_executeActor7*>(this)->ActorCallback< _executeActor7, 16, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor7, 16, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 16);
		a_exitChoose17();
		try {
			a_body1cont3loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont3loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont3loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 16);

	}
	void a_callback_fire(ActorCallback< _executeActor7, 16, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 16);
		a_exitChoose17();
		try {
			a_body1cont3loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont3loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont3loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 16);

	}
	void a_callback_error(ActorCallback< _executeActor7, 16, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 16);
		a_exitChoose17();
		try {
			a_body1cont3loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont3loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont3loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 16);

	}
	int a_body1cont3loopBody1Catch1cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1Catch1cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1Catch1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1Catch1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose18() 
	{
		if (static_cast<_executeActor7*>(this)->actor_wait_state > 0) static_cast<_executeActor7*>(this)->actor_wait_state = 0;
		static_cast<_executeActor7*>(this)->ActorCallback< _executeActor7, 17, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor7, 17, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 17);
		a_exitChoose18();
		try {
			a_body1cont3loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 17);

	}
	void a_callback_fire(ActorCallback< _executeActor7, 17, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 17);
		a_exitChoose18();
		try {
			a_body1cont3loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 17);

	}
	void a_callback_error(ActorCallback< _executeActor7, 17, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 17);
		a_exitChoose18();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 17);

	}
	int a_body1cont18(int loopDepth) 
	{
															#line 5006 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_executeActor7*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_executeActor7State(); static_cast<_executeActor7*>(this)->destroy(); return 0; }
															#line 43097 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_executeActor7*>(this)->SAV< Void >::value()) Void(Void());
		this->~_executeActor7State();
		static_cast<_executeActor7*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont6loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont6loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont6loopBody1(int loopDepth) 
	{
															#line 4968 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!(start != end))
															#line 43116 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
			return a_body1cont6break1(loopDepth==0?0:loopDepth-1); // break
		}
		try {
															#line 4970 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 4971 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 4973 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_18 = taskBucket->keepRunning(tr, task);
															#line 4973 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor7*>(this)->actor_wait_state < 0) return a_body1cont6loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 43129 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_18.isReady()) { if (__when_expr_18.isError()) return a_body1cont6loopBody1Catch1(__when_expr_18.getError(), loopDepth); else return a_body1cont6loopBody1when1(__when_expr_18.get(), loopDepth); };
			static_cast<_executeActor7*>(this)->actor_wait_state = 19;
															#line 4973 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_18.addCallbackAndClear(static_cast<ActorCallback< _executeActor7, 18, Void >*>(static_cast<_executeActor7*>(this)));
															#line 43134 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1cont6loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1cont6loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont6break1(int loopDepth) 
	{
		try {
			return a_body1cont18(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont6loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1cont6loopHead1(0);

		return loopDepth;
	}
	int a_body1cont6loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 5002 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_20 = tr->onError(e);
															#line 5002 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<_executeActor7*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 43171 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_20.isReady()) { if (__when_expr_20.isError()) return a_body1Catch1(__when_expr_20.getError(), std::max(0, loopDepth - 1)); else return a_body1cont6loopBody1Catch1when1(__when_expr_20.get(), loopDepth); };
			static_cast<_executeActor7*>(this)->actor_wait_state = 21;
															#line 5002 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_20.addCallbackAndClear(static_cast<ActorCallback< _executeActor7, 20, Void >*>(static_cast<_executeActor7*>(this)));
															#line 43176 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont6loopBody1cont3(Void const& _,int loopDepth) 
	{
															#line 4975 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		i = start;
															#line 4977 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		txBytes = 0;
															#line 4978 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		nFileBlocks = 0;
															#line 4979 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		nFiles = 0;
															#line 4980 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		auto fileSet = restore.fileSet();
															#line 4981 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		for(;i != end && txBytes < 1e6;++i) {
															#line 4982 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			txBytes += fileSet.insert(tr, *i);
															#line 4983 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			nFileBlocks += (i->fileSize + i->blockSize - 1) / i->blockSize;
															#line 4984 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			++nFiles;
															#line 43207 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 4987 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restore.fileCount().atomicOp(tr, nFiles, MutationRef::Type::AddValue);
															#line 4988 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restore.fileBlockCount().atomicOp(tr, nFileBlocks, MutationRef::Type::AddValue);
															#line 4990 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_19 = tr->commit();
															#line 4990 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor7*>(this)->actor_wait_state < 0) return a_body1cont6loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 43217 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_19.isReady()) { if (__when_expr_19.isError()) return a_body1cont6loopBody1Catch1(__when_expr_19.getError(), loopDepth); else return a_body1cont6loopBody1cont3when1(__when_expr_19.get(), loopDepth); };
		static_cast<_executeActor7*>(this)->actor_wait_state = 20;
															#line 4990 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_19.addCallbackAndClear(static_cast<ActorCallback< _executeActor7, 19, Void >*>(static_cast<_executeActor7*>(this)));
															#line 43222 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont6loopBody1cont3(Void && _,int loopDepth) 
	{
															#line 4975 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		i = start;
															#line 4977 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		txBytes = 0;
															#line 4978 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		nFileBlocks = 0;
															#line 4979 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		nFiles = 0;
															#line 4980 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		auto fileSet = restore.fileSet();
															#line 4981 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		for(;i != end && txBytes < 1e6;++i) {
															#line 4982 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			txBytes += fileSet.insert(tr, *i);
															#line 4983 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			nFileBlocks += (i->fileSize + i->blockSize - 1) / i->blockSize;
															#line 4984 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			++nFiles;
															#line 43247 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 4987 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restore.fileCount().atomicOp(tr, nFiles, MutationRef::Type::AddValue);
															#line 4988 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restore.fileBlockCount().atomicOp(tr, nFileBlocks, MutationRef::Type::AddValue);
															#line 4990 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_19 = tr->commit();
															#line 4990 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_executeActor7*>(this)->actor_wait_state < 0) return a_body1cont6loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 43257 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_19.isReady()) { if (__when_expr_19.isError()) return a_body1cont6loopBody1Catch1(__when_expr_19.getError(), loopDepth); else return a_body1cont6loopBody1cont3when1(__when_expr_19.get(), loopDepth); };
		static_cast<_executeActor7*>(this)->actor_wait_state = 20;
															#line 4990 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_19.addCallbackAndClear(static_cast<ActorCallback< _executeActor7, 19, Void >*>(static_cast<_executeActor7*>(this)));
															#line 43262 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont6loopBody1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont6loopBody1cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont6loopBody1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont6loopBody1cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose19() 
	{
		if (static_cast<_executeActor7*>(this)->actor_wait_state > 0) static_cast<_executeActor7*>(this)->actor_wait_state = 0;
		static_cast<_executeActor7*>(this)->ActorCallback< _executeActor7, 18, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor7, 18, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 18);
		a_exitChoose19();
		try {
			a_body1cont6loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont6loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont6loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 18);

	}
	void a_callback_fire(ActorCallback< _executeActor7, 18, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 18);
		a_exitChoose19();
		try {
			a_body1cont6loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont6loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont6loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 18);

	}
	void a_callback_error(ActorCallback< _executeActor7, 18, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 18);
		a_exitChoose19();
		try {
			a_body1cont6loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont6loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont6loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 18);

	}
	int a_body1cont6loopBody1cont4(Void const& _,int loopDepth) 
	{
															#line 4992 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FileRestoreLoadedFiles") .detail("RestoreUID", restore.getUid()) .detail("FileCount", nFiles) .detail("FileBlockCount", nFileBlocks) .detail("TransactionBytes", txBytes) .detail("TaskInstance", THIS_ADDR);
															#line 4999 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		start = i;
															#line 5000 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->reset();
															#line 43338 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont6loopBody1cont7(loopDepth);

		return loopDepth;
	}
	int a_body1cont6loopBody1cont4(Void && _,int loopDepth) 
	{
															#line 4992 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FileRestoreLoadedFiles") .detail("RestoreUID", restore.getUid()) .detail("FileCount", nFiles) .detail("FileBlockCount", nFileBlocks) .detail("TransactionBytes", txBytes) .detail("TaskInstance", THIS_ADDR);
															#line 4999 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		start = i;
															#line 5000 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->reset();
															#line 43351 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont6loopBody1cont7(loopDepth);

		return loopDepth;
	}
	int a_body1cont6loopBody1cont3when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont6loopBody1cont4(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont6loopBody1cont3when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont6loopBody1cont4(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose20() 
	{
		if (static_cast<_executeActor7*>(this)->actor_wait_state > 0) static_cast<_executeActor7*>(this)->actor_wait_state = 0;
		static_cast<_executeActor7*>(this)->ActorCallback< _executeActor7, 19, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor7, 19, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 19);
		a_exitChoose20();
		try {
			a_body1cont6loopBody1cont3when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont6loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont6loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 19);

	}
	void a_callback_fire(ActorCallback< _executeActor7, 19, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 19);
		a_exitChoose20();
		try {
			a_body1cont6loopBody1cont3when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont6loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont6loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 19);

	}
	void a_callback_error(ActorCallback< _executeActor7, 19, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 19);
		a_exitChoose20();
		try {
			a_body1cont6loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont6loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont6loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 19);

	}
	int a_body1cont6loopBody1cont7(int loopDepth) 
	{
		try {
			loopDepth = a_body1cont6loopBody1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont6loopBody1Catch1cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont6loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont6loopBody1Catch1cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont6loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont6loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont6loopBody1Catch1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont6loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont6loopBody1Catch1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose21() 
	{
		if (static_cast<_executeActor7*>(this)->actor_wait_state > 0) static_cast<_executeActor7*>(this)->actor_wait_state = 0;
		static_cast<_executeActor7*>(this)->ActorCallback< _executeActor7, 20, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _executeActor7, 20, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 20);
		a_exitChoose21();
		try {
			a_body1cont6loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 20);

	}
	void a_callback_fire(ActorCallback< _executeActor7, 20, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 20);
		a_exitChoose21();
		try {
			a_body1cont6loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 20);

	}
	void a_callback_error(ActorCallback< _executeActor7, 20, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), 20);
		a_exitChoose21();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), 20);

	}
															#line 4829 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Database cx;
															#line 4829 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskBucket> taskBucket;
															#line 4829 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<FutureBucket> futureBucket;
															#line 4829 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> task;
															#line 4833 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 4834 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	RestoreConfig restore;
															#line 4835 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version restoreVersion;
															#line 4836 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version beginVersion;
															#line 4837 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<IBackupContainer> bc;
															#line 4838 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::vector<KeyRange> ranges;
															#line 4839 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	bool logsOnly;
															#line 4840 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	bool inconsistentSnapshotOnly;
															#line 4901 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version firstConsistentVersion;
															#line 4905 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Standalone<VectorRef<KeyRangeRef>> keyRangesFilter;
															#line 4909 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<RestorableFileSet> restorable;
															#line 4916 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::vector<RestoreConfig::RestoreFile> files;
															#line 4964 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::vector<RestoreConfig::RestoreFile>::iterator start;
															#line 4965 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::vector<RestoreConfig::RestoreFile>::iterator end;
															#line 4975 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::vector<RestoreConfig::RestoreFile>::iterator i;
															#line 4977 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int txBytes;
															#line 4978 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int nFileBlocks;
															#line 4979 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int nFiles;
															#line 43551 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via _execute()
															#line 4829 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _executeActor7 final : public Actor<Void>, public ActorCallback< _executeActor7, 0, Void >, public ActorCallback< _executeActor7, 1, Void >, public ActorCallback< _executeActor7, 2, Void >, public ActorCallback< _executeActor7, 3, Void >, public ActorCallback< _executeActor7, 4, Void >, public ActorCallback< _executeActor7, 5, Void >, public ActorCallback< _executeActor7, 6, Void >, public ActorCallback< _executeActor7, 7, ERestoreState >, public ActorCallback< _executeActor7, 8, Void >, public ActorCallback< _executeActor7, 9, Reference<IBackupContainer> >, public ActorCallback< _executeActor7, 10, Void >, public ActorCallback< _executeActor7, 11, Void >, public ActorCallback< _executeActor7, 12, Version >, public ActorCallback< _executeActor7, 13, Void >, public ActorCallback< _executeActor7, 14, Void >, public ActorCallback< _executeActor7, 15, Optional<RestorableFileSet> >, public ActorCallback< _executeActor7, 16, Void >, public ActorCallback< _executeActor7, 17, Void >, public ActorCallback< _executeActor7, 18, Void >, public ActorCallback< _executeActor7, 19, Void >, public ActorCallback< _executeActor7, 20, Void >, public FastAllocated<_executeActor7>, public _executeActor7State<_executeActor7> {
															#line 43556 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<_executeActor7>::operator new;
	using FastAllocated<_executeActor7>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< _executeActor7, 0, Void >;
friend struct ActorCallback< _executeActor7, 1, Void >;
friend struct ActorCallback< _executeActor7, 2, Void >;
friend struct ActorCallback< _executeActor7, 3, Void >;
friend struct ActorCallback< _executeActor7, 4, Void >;
friend struct ActorCallback< _executeActor7, 5, Void >;
friend struct ActorCallback< _executeActor7, 6, Void >;
friend struct ActorCallback< _executeActor7, 7, ERestoreState >;
friend struct ActorCallback< _executeActor7, 8, Void >;
friend struct ActorCallback< _executeActor7, 9, Reference<IBackupContainer> >;
friend struct ActorCallback< _executeActor7, 10, Void >;
friend struct ActorCallback< _executeActor7, 11, Void >;
friend struct ActorCallback< _executeActor7, 12, Version >;
friend struct ActorCallback< _executeActor7, 13, Void >;
friend struct ActorCallback< _executeActor7, 14, Void >;
friend struct ActorCallback< _executeActor7, 15, Optional<RestorableFileSet> >;
friend struct ActorCallback< _executeActor7, 16, Void >;
friend struct ActorCallback< _executeActor7, 17, Void >;
friend struct ActorCallback< _executeActor7, 18, Void >;
friend struct ActorCallback< _executeActor7, 19, Void >;
friend struct ActorCallback< _executeActor7, 20, Void >;
															#line 4829 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_executeActor7(Database const& cx,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 43587 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   _executeActor7State<_executeActor7>(cx, taskBucket, futureBucket, task)
	{
		fdb_probe_actor_enter("_execute", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("_execute");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("_execute", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< _executeActor7, 0, Void >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< _executeActor7, 1, Void >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< _executeActor7, 2, Void >*)0, actor_cancelled()); break;
		case 4: this->a_callback_error((ActorCallback< _executeActor7, 3, Void >*)0, actor_cancelled()); break;
		case 5: this->a_callback_error((ActorCallback< _executeActor7, 4, Void >*)0, actor_cancelled()); break;
		case 6: this->a_callback_error((ActorCallback< _executeActor7, 5, Void >*)0, actor_cancelled()); break;
		case 7: this->a_callback_error((ActorCallback< _executeActor7, 6, Void >*)0, actor_cancelled()); break;
		case 8: this->a_callback_error((ActorCallback< _executeActor7, 7, ERestoreState >*)0, actor_cancelled()); break;
		case 9: this->a_callback_error((ActorCallback< _executeActor7, 8, Void >*)0, actor_cancelled()); break;
		case 10: this->a_callback_error((ActorCallback< _executeActor7, 9, Reference<IBackupContainer> >*)0, actor_cancelled()); break;
		case 11: this->a_callback_error((ActorCallback< _executeActor7, 10, Void >*)0, actor_cancelled()); break;
		case 12: this->a_callback_error((ActorCallback< _executeActor7, 11, Void >*)0, actor_cancelled()); break;
		case 13: this->a_callback_error((ActorCallback< _executeActor7, 12, Version >*)0, actor_cancelled()); break;
		case 14: this->a_callback_error((ActorCallback< _executeActor7, 13, Void >*)0, actor_cancelled()); break;
		case 15: this->a_callback_error((ActorCallback< _executeActor7, 14, Void >*)0, actor_cancelled()); break;
		case 16: this->a_callback_error((ActorCallback< _executeActor7, 15, Optional<RestorableFileSet> >*)0, actor_cancelled()); break;
		case 17: this->a_callback_error((ActorCallback< _executeActor7, 16, Void >*)0, actor_cancelled()); break;
		case 18: this->a_callback_error((ActorCallback< _executeActor7, 17, Void >*)0, actor_cancelled()); break;
		case 19: this->a_callback_error((ActorCallback< _executeActor7, 18, Void >*)0, actor_cancelled()); break;
		case 20: this->a_callback_error((ActorCallback< _executeActor7, 19, Void >*)0, actor_cancelled()); break;
		case 21: this->a_callback_error((ActorCallback< _executeActor7, 20, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 4829 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> _execute( Database const& cx, Reference<TaskBucket> const& taskBucket, Reference<FutureBucket> const& futureBucket, Reference<Task> const& task ) {
															#line 4829 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new _executeActor7(cx, taskBucket, futureBucket, task));
															#line 43634 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 5008 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

																#line 43639 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via _finish()
															#line 5009 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class _finishActor14>
															#line 5009 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _finishActor14State {
															#line 43645 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 5009 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_finishActor14State(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 5009 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 5009 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : tr(tr),
															#line 5009 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskBucket(taskBucket),
															#line 5009 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   futureBucket(futureBucket),
															#line 5009 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   task(task),
															#line 5013 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   restore(task),
															#line 5015 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   firstVersion(Params.firstVersion().getOrDefault(task, invalidVersion))
															#line 43662 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("_finish", reinterpret_cast<unsigned long>(this));

	}
	~_finishActor14State() 
	{
		fdb_probe_actor_destroy("_finish", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 5016 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (firstVersion == invalidVersion)
															#line 43677 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 5017 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				StrictFuture<Void> __when_expr_0 = restore.logError( tr->getDatabase(), restore_missing_data(), "StartFullRestore: The backup had no data.", THIS);
															#line 5017 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (static_cast<_finishActor14*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 43683 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
				static_cast<_finishActor14*>(this)->actor_wait_state = 1;
															#line 5017 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< _finishActor14, 0, Void >*>(static_cast<_finishActor14*>(this)));
															#line 43688 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				loopDepth = 0;
			}
			else
			{
				loopDepth = a_body1cont1(loopDepth);
			}
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~_finishActor14State();
		static_cast<_finishActor14*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 5024 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restore.stateEnum().set(tr, ERestoreState::RUNNING);
															#line 5028 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restore.setApplyBeginVersion(tr, firstVersion);
															#line 5029 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restore.setApplyEndVersion(tr, firstVersion);
															#line 5032 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_3 = success(RestoreDispatchTaskFunc::addTask( tr, taskBucket, task, 0, "", 0, CLIENT_KNOBS->RESTORE_DISPATCH_BATCH_SIZE));
															#line 5032 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor14*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 43724 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1cont1when1(__when_expr_3.get(), loopDepth); };
		static_cast<_finishActor14*>(this)->actor_wait_state = 4;
															#line 5032 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< _finishActor14, 3, Void >*>(static_cast<_finishActor14*>(this)));
															#line 43729 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont2(Void const& _,int loopDepth) 
	{
															#line 5019 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<std::string> __when_expr_1 = restore.tag().getD(tr);
															#line 5019 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor14*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 43740 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont2when1(__when_expr_1.get(), loopDepth); };
		static_cast<_finishActor14*>(this)->actor_wait_state = 2;
															#line 5019 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< _finishActor14, 1, std::string >*>(static_cast<_finishActor14*>(this)));
															#line 43745 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont2(Void && _,int loopDepth) 
	{
															#line 5019 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<std::string> __when_expr_1 = restore.tag().getD(tr);
															#line 5019 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor14*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 43756 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont2when1(__when_expr_1.get(), loopDepth); };
		static_cast<_finishActor14*>(this)->actor_wait_state = 2;
															#line 5019 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< _finishActor14, 1, std::string >*>(static_cast<_finishActor14*>(this)));
															#line 43761 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<_finishActor14*>(this)->actor_wait_state > 0) static_cast<_finishActor14*>(this)->actor_wait_state = 0;
		static_cast<_finishActor14*>(this)->ActorCallback< _finishActor14, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor14, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< _finishActor14, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< _finishActor14, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont3(std::string const& tag,int loopDepth) 
	{
															#line 5020 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_2 = success(abortRestore(tr, StringRef(tag)));
															#line 5020 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor14*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 43835 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont3when1(__when_expr_2.get(), loopDepth); };
		static_cast<_finishActor14*>(this)->actor_wait_state = 3;
															#line 5020 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< _finishActor14, 2, Void >*>(static_cast<_finishActor14*>(this)));
															#line 43840 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont3(std::string && tag,int loopDepth) 
	{
															#line 5020 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_2 = success(abortRestore(tr, StringRef(tag)));
															#line 5020 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor14*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 43851 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont3when1(__when_expr_2.get(), loopDepth); };
		static_cast<_finishActor14*>(this)->actor_wait_state = 3;
															#line 5020 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< _finishActor14, 2, Void >*>(static_cast<_finishActor14*>(this)));
															#line 43856 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont2when1(std::string const& tag,int loopDepth) 
	{
		loopDepth = a_body1cont3(tag, loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(std::string && tag,int loopDepth) 
	{
		loopDepth = a_body1cont3(std::move(tag), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<_finishActor14*>(this)->actor_wait_state > 0) static_cast<_finishActor14*>(this)->actor_wait_state = 0;
		static_cast<_finishActor14*>(this)->ActorCallback< _finishActor14, 1, std::string >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor14, 1, std::string >*,std::string const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< _finishActor14, 1, std::string >*,std::string && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< _finishActor14, 1, std::string >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont4(Void const& _,int loopDepth) 
	{
															#line 5021 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_finishActor14*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_finishActor14State(); static_cast<_finishActor14*>(this)->destroy(); return 0; }
															#line 43928 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_finishActor14*>(this)->SAV< Void >::value()) Void(Void());
		this->~_finishActor14State();
		static_cast<_finishActor14*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont4(Void && _,int loopDepth) 
	{
															#line 5021 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_finishActor14*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_finishActor14State(); static_cast<_finishActor14*>(this)->destroy(); return 0; }
															#line 43940 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_finishActor14*>(this)->SAV< Void >::value()) Void(Void());
		this->~_finishActor14State();
		static_cast<_finishActor14*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont3when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont4(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont3when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont4(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<_finishActor14*>(this)->actor_wait_state > 0) static_cast<_finishActor14*>(this)->actor_wait_state = 0;
		static_cast<_finishActor14*>(this)->ActorCallback< _finishActor14, 2, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor14, 2, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont3when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< _finishActor14, 2, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont3when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< _finishActor14, 2, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 2);

	}
	int a_body1cont6(Void const& _,int loopDepth) 
	{
															#line 5035 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_4 = taskBucket->finish(tr, task);
															#line 5035 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor14*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 44017 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1cont6when1(__when_expr_4.get(), loopDepth); };
		static_cast<_finishActor14*>(this)->actor_wait_state = 5;
															#line 5035 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< _finishActor14, 4, Void >*>(static_cast<_finishActor14*>(this)));
															#line 44022 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont6(Void && _,int loopDepth) 
	{
															#line 5035 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_4 = taskBucket->finish(tr, task);
															#line 5035 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<_finishActor14*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 44033 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1cont6when1(__when_expr_4.get(), loopDepth); };
		static_cast<_finishActor14*>(this)->actor_wait_state = 5;
															#line 5035 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< _finishActor14, 4, Void >*>(static_cast<_finishActor14*>(this)));
															#line 44038 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont6(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont6(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose4() 
	{
		if (static_cast<_finishActor14*>(this)->actor_wait_state > 0) static_cast<_finishActor14*>(this)->actor_wait_state = 0;
		static_cast<_finishActor14*>(this)->ActorCallback< _finishActor14, 3, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor14, 3, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_fire(ActorCallback< _finishActor14, 3, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_error(ActorCallback< _finishActor14, 3, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 3);

	}
	int a_body1cont7(Void const& _,int loopDepth) 
	{
															#line 5036 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_finishActor14*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_finishActor14State(); static_cast<_finishActor14*>(this)->destroy(); return 0; }
															#line 44110 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_finishActor14*>(this)->SAV< Void >::value()) Void(Void());
		this->~_finishActor14State();
		static_cast<_finishActor14*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont7(Void && _,int loopDepth) 
	{
															#line 5036 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<_finishActor14*>(this)->SAV<Void>::futures) { (void)(Void()); this->~_finishActor14State(); static_cast<_finishActor14*>(this)->destroy(); return 0; }
															#line 44122 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<_finishActor14*>(this)->SAV< Void >::value()) Void(Void());
		this->~_finishActor14State();
		static_cast<_finishActor14*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont6when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont7(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont6when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont7(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose5() 
	{
		if (static_cast<_finishActor14*>(this)->actor_wait_state > 0) static_cast<_finishActor14*>(this)->actor_wait_state = 0;
		static_cast<_finishActor14*>(this)->ActorCallback< _finishActor14, 4, Void >::remove();

	}
	void a_callback_fire(ActorCallback< _finishActor14, 4, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont6when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_fire(ActorCallback< _finishActor14, 4, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont6when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_error(ActorCallback< _finishActor14, 4, Void >*,Error err) 
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), 4);

	}
															#line 5009 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 5009 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskBucket> taskBucket;
															#line 5009 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<FutureBucket> futureBucket;
															#line 5009 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> task;
															#line 5013 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	RestoreConfig restore;
															#line 5015 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version firstVersion;
															#line 44205 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via _finish()
															#line 5009 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class _finishActor14 final : public Actor<Void>, public ActorCallback< _finishActor14, 0, Void >, public ActorCallback< _finishActor14, 1, std::string >, public ActorCallback< _finishActor14, 2, Void >, public ActorCallback< _finishActor14, 3, Void >, public ActorCallback< _finishActor14, 4, Void >, public FastAllocated<_finishActor14>, public _finishActor14State<_finishActor14> {
															#line 44210 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<_finishActor14>::operator new;
	using FastAllocated<_finishActor14>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< _finishActor14, 0, Void >;
friend struct ActorCallback< _finishActor14, 1, std::string >;
friend struct ActorCallback< _finishActor14, 2, Void >;
friend struct ActorCallback< _finishActor14, 3, Void >;
friend struct ActorCallback< _finishActor14, 4, Void >;
															#line 5009 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	_finishActor14(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,Reference<FutureBucket> const& futureBucket,Reference<Task> const& task) 
															#line 44225 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   _finishActor14State<_finishActor14>(tr, taskBucket, futureBucket, task)
	{
		fdb_probe_actor_enter("_finish", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("_finish");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("_finish", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< _finishActor14, 0, Void >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< _finishActor14, 1, std::string >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< _finishActor14, 2, Void >*)0, actor_cancelled()); break;
		case 4: this->a_callback_error((ActorCallback< _finishActor14, 3, Void >*)0, actor_cancelled()); break;
		case 5: this->a_callback_error((ActorCallback< _finishActor14, 4, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 5009 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> _finish( Reference<ReadYourWritesTransaction> const& tr, Reference<TaskBucket> const& taskBucket, Reference<FutureBucket> const& futureBucket, Reference<Task> const& task ) {
															#line 5009 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new _finishActor14(tr, taskBucket, futureBucket, task));
															#line 44256 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 5038 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

																#line 44261 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via addTask()
															#line 5039 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class AddTaskActor12>
															#line 5039 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class AddTaskActor12State {
															#line 44267 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 5039 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	AddTaskActor12State(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,UID const& uid,TaskCompletionKey const& completionKey,Reference<TaskFuture> const& waitFor = Reference<TaskFuture>()) 
															#line 5039 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 5039 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : tr(tr),
															#line 5039 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   taskBucket(taskBucket),
															#line 5039 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   uid(uid),
															#line 5039 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   completionKey(completionKey),
															#line 5039 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   waitFor(waitFor)
															#line 44282 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("addTask", reinterpret_cast<unsigned long>(this));

	}
	~AddTaskActor12State() 
	{
		fdb_probe_actor_destroy("addTask", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 5044 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 5045 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 5047 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Key> __when_expr_0 = completionKey.get(tr, taskBucket);
															#line 5047 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<AddTaskActor12*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 44303 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<AddTaskActor12*>(this)->actor_wait_state = 1;
															#line 5047 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< AddTaskActor12, 0, Key >*>(static_cast<AddTaskActor12*>(this)));
															#line 44308 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~AddTaskActor12State();
		static_cast<AddTaskActor12*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Key const& doneKey,int loopDepth) 
	{
															#line 5048 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		task = Reference<Task>(new Task(StartFullRestoreTaskFunc::name, StartFullRestoreTaskFunc::version, doneKey));
															#line 5051 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restore = RestoreConfig(uid);
															#line 5053 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = restore.toTask(tr, task);
															#line 5053 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AddTaskActor12*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 44337 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<AddTaskActor12*>(this)->actor_wait_state = 2;
															#line 5053 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< AddTaskActor12, 1, Void >*>(static_cast<AddTaskActor12*>(this)));
															#line 44342 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Key && doneKey,int loopDepth) 
	{
															#line 5048 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		task = Reference<Task>(new Task(StartFullRestoreTaskFunc::name, StartFullRestoreTaskFunc::version, doneKey));
															#line 5051 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restore = RestoreConfig(uid);
															#line 5053 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = restore.toTask(tr, task);
															#line 5053 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AddTaskActor12*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 44357 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<AddTaskActor12*>(this)->actor_wait_state = 2;
															#line 5053 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< AddTaskActor12, 1, Void >*>(static_cast<AddTaskActor12*>(this)));
															#line 44362 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1when1(Key const& doneKey,int loopDepth) 
	{
		loopDepth = a_body1cont1(doneKey, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Key && doneKey,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(doneKey), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<AddTaskActor12*>(this)->actor_wait_state > 0) static_cast<AddTaskActor12*>(this)->actor_wait_state = 0;
		static_cast<AddTaskActor12*>(this)->ActorCallback< AddTaskActor12, 0, Key >::remove();

	}
	void a_callback_fire(ActorCallback< AddTaskActor12, 0, Key >*,Key const& value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< AddTaskActor12, 0, Key >*,Key && value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< AddTaskActor12, 0, Key >*,Error err) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont2(Void const& _,int loopDepth) 
	{
															#line 5055 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!waitFor)
															#line 44434 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5056 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<AddTaskActor12*>(this)->SAV<Key>::futures) { (void)(taskBucket->addTask(tr, task)); this->~AddTaskActor12State(); static_cast<AddTaskActor12*>(this)->destroy(); return 0; }
															#line 44438 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<AddTaskActor12*>(this)->SAV< Key >::value()) Key(taskBucket->addTask(tr, task));
			this->~AddTaskActor12State();
			static_cast<AddTaskActor12*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 5059 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_2 = waitFor->onSetAddTask(tr, taskBucket, task);
															#line 5059 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AddTaskActor12*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 44448 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont2when1(__when_expr_2.get(), loopDepth); };
		static_cast<AddTaskActor12*>(this)->actor_wait_state = 3;
															#line 5059 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< AddTaskActor12, 2, Void >*>(static_cast<AddTaskActor12*>(this)));
															#line 44453 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont2(Void && _,int loopDepth) 
	{
															#line 5055 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!waitFor)
															#line 44462 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5056 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<AddTaskActor12*>(this)->SAV<Key>::futures) { (void)(taskBucket->addTask(tr, task)); this->~AddTaskActor12State(); static_cast<AddTaskActor12*>(this)->destroy(); return 0; }
															#line 44466 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<AddTaskActor12*>(this)->SAV< Key >::value()) Key(taskBucket->addTask(tr, task));
			this->~AddTaskActor12State();
			static_cast<AddTaskActor12*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 5059 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_2 = waitFor->onSetAddTask(tr, taskBucket, task);
															#line 5059 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AddTaskActor12*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 44476 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont2when1(__when_expr_2.get(), loopDepth); };
		static_cast<AddTaskActor12*>(this)->actor_wait_state = 3;
															#line 5059 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< AddTaskActor12, 2, Void >*>(static_cast<AddTaskActor12*>(this)));
															#line 44481 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<AddTaskActor12*>(this)->actor_wait_state > 0) static_cast<AddTaskActor12*>(this)->actor_wait_state = 0;
		static_cast<AddTaskActor12*>(this)->ActorCallback< AddTaskActor12, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< AddTaskActor12, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< AddTaskActor12, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< AddTaskActor12, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont3(Void const& _,int loopDepth) 
	{
															#line 5060 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<AddTaskActor12*>(this)->SAV<Key>::futures) { (void)("OnSetAddTask"_sr); this->~AddTaskActor12State(); static_cast<AddTaskActor12*>(this)->destroy(); return 0; }
															#line 44553 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<AddTaskActor12*>(this)->SAV< Key >::value()) Key("OnSetAddTask"_sr);
		this->~AddTaskActor12State();
		static_cast<AddTaskActor12*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont3(Void && _,int loopDepth) 
	{
															#line 5060 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<AddTaskActor12*>(this)->SAV<Key>::futures) { (void)("OnSetAddTask"_sr); this->~AddTaskActor12State(); static_cast<AddTaskActor12*>(this)->destroy(); return 0; }
															#line 44565 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<AddTaskActor12*>(this)->SAV< Key >::value()) Key("OnSetAddTask"_sr);
		this->~AddTaskActor12State();
		static_cast<AddTaskActor12*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<AddTaskActor12*>(this)->actor_wait_state > 0) static_cast<AddTaskActor12*>(this)->actor_wait_state = 0;
		static_cast<AddTaskActor12*>(this)->ActorCallback< AddTaskActor12, 2, Void >::remove();

	}
	void a_callback_fire(ActorCallback< AddTaskActor12, 2, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< AddTaskActor12, 2, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< AddTaskActor12, 2, Void >*,Error err) 
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), 2);

	}
															#line 5039 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 5039 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskBucket> taskBucket;
															#line 5039 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	UID uid;
															#line 5039 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	TaskCompletionKey completionKey;
															#line 5039 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<TaskFuture> waitFor;
															#line 5048 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<Task> task;
															#line 5051 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	RestoreConfig restore;
															#line 44650 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via addTask()
															#line 5039 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class AddTaskActor12 final : public Actor<Key>, public ActorCallback< AddTaskActor12, 0, Key >, public ActorCallback< AddTaskActor12, 1, Void >, public ActorCallback< AddTaskActor12, 2, Void >, public FastAllocated<AddTaskActor12>, public AddTaskActor12State<AddTaskActor12> {
															#line 44655 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<AddTaskActor12>::operator new;
	using FastAllocated<AddTaskActor12>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Key>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< AddTaskActor12, 0, Key >;
friend struct ActorCallback< AddTaskActor12, 1, Void >;
friend struct ActorCallback< AddTaskActor12, 2, Void >;
															#line 5039 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	AddTaskActor12(Reference<ReadYourWritesTransaction> const& tr,Reference<TaskBucket> const& taskBucket,UID const& uid,TaskCompletionKey const& completionKey,Reference<TaskFuture> const& waitFor = Reference<TaskFuture>()) 
															#line 44668 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Key>(),
		   AddTaskActor12State<AddTaskActor12>(tr, taskBucket, uid, completionKey, waitFor)
	{
		fdb_probe_actor_enter("addTask", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("addTask");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("addTask", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< AddTaskActor12, 0, Key >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< AddTaskActor12, 1, Void >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< AddTaskActor12, 2, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 5039 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Key> addTask( Reference<ReadYourWritesTransaction> const& tr, Reference<TaskBucket> const& taskBucket, UID const& uid, TaskCompletionKey const& completionKey, Reference<TaskFuture> const& waitFor = Reference<TaskFuture>() ) {
															#line 5039 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Key>(new AddTaskActor12(tr, taskBucket, uid, completionKey, waitFor));
															#line 44697 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 5062 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

	StringRef getName() const override { return name; };

	Future<Void> execute(Database cx,
	                     Reference<TaskBucket> tb,
	                     Reference<FutureBucket> fb,
	                     Reference<Task> task) override {
		return _execute(cx, tb, fb, task);
	};
	Future<Void> finish(Reference<ReadYourWritesTransaction> tr,
	                    Reference<TaskBucket> tb,
	                    Reference<FutureBucket> fb,
	                    Reference<Task> task) override {
		return _finish(tr, tb, fb, task);
	};
};
StringRef StartFullRestoreTaskFunc::name = "restore_start"_sr;
REGISTER_TASKFUNC(StartFullRestoreTaskFunc);
} // namespace fileBackup

struct LogInfo : public ReferenceCounted<LogInfo> {
	std::string fileName;
	Reference<IAsyncFile> logFile;
	Version beginVersion;
	Version endVersion;
	int64_t offset;

	LogInfo() : offset(0){};
};

class FileBackupAgentImpl {
public:
	static constexpr int MAX_RESTORABLE_FILE_METASECTION_BYTES = 1024 * 8;

	// Parallel restore
																#line 44736 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via parallelRestoreFinish()
															#line 5097 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class ParallelRestoreFinishActor>
															#line 5097 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class ParallelRestoreFinishActorState {
															#line 44742 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 5097 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	ParallelRestoreFinishActorState(Database const& cx,UID const& randomUID,UnlockDB const& unlockDB = UnlockDB::True) 
															#line 5097 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 5097 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : cx(cx),
															#line 5097 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   randomUID(randomUID),
															#line 5097 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   unlockDB(unlockDB),
															#line 5098 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tr(cx),
															#line 5099 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   restoreRequestDoneKeyValue()
															#line 44757 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("parallelRestoreFinish", reinterpret_cast<unsigned long>(this));

	}
	~ParallelRestoreFinishActorState() 
	{
		fdb_probe_actor_destroy("parallelRestoreFinish", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 5100 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent("FastRestoreToolWaitForRestoreToFinish").detail("DBLock", randomUID);
															#line 5102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			;
															#line 44774 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = a_body1loopHead1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~ParallelRestoreFinishActorState();
		static_cast<ParallelRestoreFinishActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 5122 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FastRestoreToolRestoreFinished") .detail("ClearRestoreRequestDoneKey", restoreRequestDoneKeyValue.present());
															#line 5125 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_4 = runRYWTransaction(cx, [](Reference<ReadYourWritesTransaction> tr) -> Future<Void> { tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS); tr->setOption(FDBTransactionOptions::LOCK_AWARE); tr->clear(restoreRequestDoneKey); return Void(); });
															#line 5125 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<ParallelRestoreFinishActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 44801 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1cont1when1(__when_expr_4.get(), loopDepth); };
		static_cast<ParallelRestoreFinishActor*>(this)->actor_wait_state = 5;
															#line 5125 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< ParallelRestoreFinishActor, 4, Void >*>(static_cast<ParallelRestoreFinishActor*>(this)));
															#line 44806 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1(int loopDepth) 
	{
		try {
															#line 5104 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr.setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 5105 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr.setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 5106 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Optional<Value>> __when_expr_0 = tr.get(restoreRequestDoneKey);
															#line 5106 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<ParallelRestoreFinishActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 44829 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1loopBody1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1loopBody1when1(__when_expr_0.get(), loopDepth); };
			static_cast<ParallelRestoreFinishActor*>(this)->actor_wait_state = 1;
															#line 5106 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< ParallelRestoreFinishActor, 0, Optional<Value> >*>(static_cast<ParallelRestoreFinishActor*>(this)));
															#line 44834 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1break1(int loopDepth) 
	{
		try {
			return a_body1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1loopHead1(0);

		return loopDepth;
	}
	int a_body1loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 5118 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_3 = tr.onError(e);
															#line 5118 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<ParallelRestoreFinishActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 44871 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1Catch1(__when_expr_3.getError(), std::max(0, loopDepth - 1)); else return a_body1loopBody1Catch1when1(__when_expr_3.get(), loopDepth); };
			static_cast<ParallelRestoreFinishActor*>(this)->actor_wait_state = 4;
															#line 5118 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< ParallelRestoreFinishActor, 3, Void >*>(static_cast<ParallelRestoreFinishActor*>(this)));
															#line 44876 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1loopBody1cont2(Optional<Value> const& _restoreRequestDoneKeyValue,int loopDepth) 
	{
															#line 5107 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restoreRequestDoneKeyValue = _restoreRequestDoneKeyValue;
															#line 5109 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (restoreRequestDoneKeyValue.present())
															#line 44893 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
			return a_body1break1(loopDepth==0?0:loopDepth-1); // break
		}
		else
		{
															#line 5112 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			watchForRestoreRequestDone = tr.watch(restoreRequestDoneKey);
															#line 5113 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_1 = tr.commit();
															#line 5113 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<ParallelRestoreFinishActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 44905 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1loopBody1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1loopBody1cont2when1(__when_expr_1.get(), loopDepth); };
			static_cast<ParallelRestoreFinishActor*>(this)->actor_wait_state = 2;
															#line 5113 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< ParallelRestoreFinishActor, 1, Void >*>(static_cast<ParallelRestoreFinishActor*>(this)));
															#line 44910 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}

		return loopDepth;
	}
	int a_body1loopBody1cont2(Optional<Value> && _restoreRequestDoneKeyValue,int loopDepth) 
	{
															#line 5107 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restoreRequestDoneKeyValue = _restoreRequestDoneKeyValue;
															#line 5109 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (restoreRequestDoneKeyValue.present())
															#line 44922 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
			return a_body1break1(loopDepth==0?0:loopDepth-1); // break
		}
		else
		{
															#line 5112 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			watchForRestoreRequestDone = tr.watch(restoreRequestDoneKey);
															#line 5113 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_1 = tr.commit();
															#line 5113 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<ParallelRestoreFinishActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 44934 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1loopBody1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1loopBody1cont2when1(__when_expr_1.get(), loopDepth); };
			static_cast<ParallelRestoreFinishActor*>(this)->actor_wait_state = 2;
															#line 5113 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< ParallelRestoreFinishActor, 1, Void >*>(static_cast<ParallelRestoreFinishActor*>(this)));
															#line 44939 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}

		return loopDepth;
	}
	int a_body1loopBody1when1(Optional<Value> const& _restoreRequestDoneKeyValue,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont2(_restoreRequestDoneKeyValue, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1when1(Optional<Value> && _restoreRequestDoneKeyValue,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont2(std::move(_restoreRequestDoneKeyValue), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<ParallelRestoreFinishActor*>(this)->actor_wait_state > 0) static_cast<ParallelRestoreFinishActor*>(this)->actor_wait_state = 0;
		static_cast<ParallelRestoreFinishActor*>(this)->ActorCallback< ParallelRestoreFinishActor, 0, Optional<Value> >::remove();

	}
	void a_callback_fire(ActorCallback< ParallelRestoreFinishActor, 0, Optional<Value> >*,Optional<Value> const& value) 
	{
		fdb_probe_actor_enter("parallelRestoreFinish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("parallelRestoreFinish", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< ParallelRestoreFinishActor, 0, Optional<Value> >*,Optional<Value> && value) 
	{
		fdb_probe_actor_enter("parallelRestoreFinish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("parallelRestoreFinish", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< ParallelRestoreFinishActor, 0, Optional<Value> >*,Error err) 
	{
		fdb_probe_actor_enter("parallelRestoreFinish", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("parallelRestoreFinish", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1loopBody1cont5(Void const& _,int loopDepth) 
	{
															#line 5114 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_2 = watchForRestoreRequestDone;
															#line 5114 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<ParallelRestoreFinishActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 45014 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1loopBody1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1loopBody1cont5when1(__when_expr_2.get(), loopDepth); };
		static_cast<ParallelRestoreFinishActor*>(this)->actor_wait_state = 3;
															#line 5114 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< ParallelRestoreFinishActor, 2, Void >*>(static_cast<ParallelRestoreFinishActor*>(this)));
															#line 45019 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont5(Void && _,int loopDepth) 
	{
															#line 5114 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_2 = watchForRestoreRequestDone;
															#line 5114 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<ParallelRestoreFinishActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 45030 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1loopBody1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1loopBody1cont5when1(__when_expr_2.get(), loopDepth); };
		static_cast<ParallelRestoreFinishActor*>(this)->actor_wait_state = 3;
															#line 5114 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< ParallelRestoreFinishActor, 2, Void >*>(static_cast<ParallelRestoreFinishActor*>(this)));
															#line 45035 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont5(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont5(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<ParallelRestoreFinishActor*>(this)->actor_wait_state > 0) static_cast<ParallelRestoreFinishActor*>(this)->actor_wait_state = 0;
		static_cast<ParallelRestoreFinishActor*>(this)->ActorCallback< ParallelRestoreFinishActor, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< ParallelRestoreFinishActor, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("parallelRestoreFinish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("parallelRestoreFinish", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< ParallelRestoreFinishActor, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("parallelRestoreFinish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("parallelRestoreFinish", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< ParallelRestoreFinishActor, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("parallelRestoreFinish", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("parallelRestoreFinish", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1loopBody1cont6(Void const& _,int loopDepth) 
	{
		return a_body1break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1loopBody1cont6(Void && _,int loopDepth) 
	{
		return a_body1break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1loopBody1cont5when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont6(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont5when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont6(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<ParallelRestoreFinishActor*>(this)->actor_wait_state > 0) static_cast<ParallelRestoreFinishActor*>(this)->actor_wait_state = 0;
		static_cast<ParallelRestoreFinishActor*>(this)->ActorCallback< ParallelRestoreFinishActor, 2, Void >::remove();

	}
	void a_callback_fire(ActorCallback< ParallelRestoreFinishActor, 2, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("parallelRestoreFinish", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1loopBody1cont5when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("parallelRestoreFinish", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< ParallelRestoreFinishActor, 2, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("parallelRestoreFinish", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1loopBody1cont5when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("parallelRestoreFinish", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< ParallelRestoreFinishActor, 2, Void >*,Error err) 
	{
		fdb_probe_actor_enter("parallelRestoreFinish", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("parallelRestoreFinish", reinterpret_cast<unsigned long>(this), 2);

	}
	int a_body1loopBody1Catch1cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1Catch1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1Catch1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose4() 
	{
		if (static_cast<ParallelRestoreFinishActor*>(this)->actor_wait_state > 0) static_cast<ParallelRestoreFinishActor*>(this)->actor_wait_state = 0;
		static_cast<ParallelRestoreFinishActor*>(this)->ActorCallback< ParallelRestoreFinishActor, 3, Void >::remove();

	}
	void a_callback_fire(ActorCallback< ParallelRestoreFinishActor, 3, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("parallelRestoreFinish", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("parallelRestoreFinish", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_fire(ActorCallback< ParallelRestoreFinishActor, 3, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("parallelRestoreFinish", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("parallelRestoreFinish", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_error(ActorCallback< ParallelRestoreFinishActor, 3, Void >*,Error err) 
	{
		fdb_probe_actor_enter("parallelRestoreFinish", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("parallelRestoreFinish", reinterpret_cast<unsigned long>(this), 3);

	}
	int a_body1cont2(Void const& _,int loopDepth) 
	{
															#line 5132 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (unlockDB)
															#line 45257 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5133 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent("FastRestoreToolRestoreFinished").detail("UnlockDBStart", randomUID);
															#line 5134 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_5 = unlockDatabase(cx, randomUID);
															#line 5134 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<ParallelRestoreFinishActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 45265 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_5.isReady()) { if (__when_expr_5.isError()) return a_body1Catch1(__when_expr_5.getError(), loopDepth); else return a_body1cont2when1(__when_expr_5.get(), loopDepth); };
			static_cast<ParallelRestoreFinishActor*>(this)->actor_wait_state = 6;
															#line 5134 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_5.addCallbackAndClear(static_cast<ActorCallback< ParallelRestoreFinishActor, 5, Void >*>(static_cast<ParallelRestoreFinishActor*>(this)));
															#line 45270 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
															#line 5137 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent("FastRestoreToolRestoreFinished").detail("DBLeftLockedAfterRestore", randomUID);
															#line 45277 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = a_body1cont3(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont2(Void && _,int loopDepth) 
	{
															#line 5132 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (unlockDB)
															#line 45287 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5133 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent("FastRestoreToolRestoreFinished").detail("UnlockDBStart", randomUID);
															#line 5134 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_5 = unlockDatabase(cx, randomUID);
															#line 5134 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<ParallelRestoreFinishActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 45295 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_5.isReady()) { if (__when_expr_5.isError()) return a_body1Catch1(__when_expr_5.getError(), loopDepth); else return a_body1cont2when1(__when_expr_5.get(), loopDepth); };
			static_cast<ParallelRestoreFinishActor*>(this)->actor_wait_state = 6;
															#line 5134 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_5.addCallbackAndClear(static_cast<ActorCallback< ParallelRestoreFinishActor, 5, Void >*>(static_cast<ParallelRestoreFinishActor*>(this)));
															#line 45300 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
															#line 5137 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent("FastRestoreToolRestoreFinished").detail("DBLeftLockedAfterRestore", randomUID);
															#line 45307 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = a_body1cont3(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose5() 
	{
		if (static_cast<ParallelRestoreFinishActor*>(this)->actor_wait_state > 0) static_cast<ParallelRestoreFinishActor*>(this)->actor_wait_state = 0;
		static_cast<ParallelRestoreFinishActor*>(this)->ActorCallback< ParallelRestoreFinishActor, 4, Void >::remove();

	}
	void a_callback_fire(ActorCallback< ParallelRestoreFinishActor, 4, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("parallelRestoreFinish", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("parallelRestoreFinish", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_fire(ActorCallback< ParallelRestoreFinishActor, 4, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("parallelRestoreFinish", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("parallelRestoreFinish", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_error(ActorCallback< ParallelRestoreFinishActor, 4, Void >*,Error err) 
	{
		fdb_probe_actor_enter("parallelRestoreFinish", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("parallelRestoreFinish", reinterpret_cast<unsigned long>(this), 4);

	}
	int a_body1cont3(int loopDepth) 
	{
															#line 5140 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<ParallelRestoreFinishActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~ParallelRestoreFinishActorState(); static_cast<ParallelRestoreFinishActor*>(this)->destroy(); return 0; }
															#line 45380 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<ParallelRestoreFinishActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~ParallelRestoreFinishActorState();
		static_cast<ParallelRestoreFinishActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont4(Void const& _,int loopDepth) 
	{
															#line 5135 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FastRestoreToolRestoreFinished").detail("UnlockDBFinish", randomUID);
															#line 45392 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont3(loopDepth);

		return loopDepth;
	}
	int a_body1cont4(Void && _,int loopDepth) 
	{
															#line 5135 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FastRestoreToolRestoreFinished").detail("UnlockDBFinish", randomUID);
															#line 45401 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont3(loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont4(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont4(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose6() 
	{
		if (static_cast<ParallelRestoreFinishActor*>(this)->actor_wait_state > 0) static_cast<ParallelRestoreFinishActor*>(this)->actor_wait_state = 0;
		static_cast<ParallelRestoreFinishActor*>(this)->ActorCallback< ParallelRestoreFinishActor, 5, Void >::remove();

	}
	void a_callback_fire(ActorCallback< ParallelRestoreFinishActor, 5, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("parallelRestoreFinish", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("parallelRestoreFinish", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_fire(ActorCallback< ParallelRestoreFinishActor, 5, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("parallelRestoreFinish", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("parallelRestoreFinish", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_error(ActorCallback< ParallelRestoreFinishActor, 5, Void >*,Error err) 
	{
		fdb_probe_actor_enter("parallelRestoreFinish", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("parallelRestoreFinish", reinterpret_cast<unsigned long>(this), 5);

	}
															#line 5097 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Database cx;
															#line 5097 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	UID randomUID;
															#line 5097 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	UnlockDB unlockDB;
															#line 5098 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	ReadYourWritesTransaction tr;
															#line 5099 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<Value> restoreRequestDoneKeyValue;
															#line 5112 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<Void> watchForRestoreRequestDone;
															#line 45481 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via parallelRestoreFinish()
															#line 5097 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class ParallelRestoreFinishActor final : public Actor<Void>, public ActorCallback< ParallelRestoreFinishActor, 0, Optional<Value> >, public ActorCallback< ParallelRestoreFinishActor, 1, Void >, public ActorCallback< ParallelRestoreFinishActor, 2, Void >, public ActorCallback< ParallelRestoreFinishActor, 3, Void >, public ActorCallback< ParallelRestoreFinishActor, 4, Void >, public ActorCallback< ParallelRestoreFinishActor, 5, Void >, public FastAllocated<ParallelRestoreFinishActor>, public ParallelRestoreFinishActorState<ParallelRestoreFinishActor> {
															#line 45486 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<ParallelRestoreFinishActor>::operator new;
	using FastAllocated<ParallelRestoreFinishActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< ParallelRestoreFinishActor, 0, Optional<Value> >;
friend struct ActorCallback< ParallelRestoreFinishActor, 1, Void >;
friend struct ActorCallback< ParallelRestoreFinishActor, 2, Void >;
friend struct ActorCallback< ParallelRestoreFinishActor, 3, Void >;
friend struct ActorCallback< ParallelRestoreFinishActor, 4, Void >;
friend struct ActorCallback< ParallelRestoreFinishActor, 5, Void >;
															#line 5097 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	ParallelRestoreFinishActor(Database const& cx,UID const& randomUID,UnlockDB const& unlockDB = UnlockDB::True) 
															#line 45502 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   ParallelRestoreFinishActorState<ParallelRestoreFinishActor>(cx, randomUID, unlockDB)
	{
		fdb_probe_actor_enter("parallelRestoreFinish", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("parallelRestoreFinish");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("parallelRestoreFinish", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< ParallelRestoreFinishActor, 0, Optional<Value> >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< ParallelRestoreFinishActor, 1, Void >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< ParallelRestoreFinishActor, 2, Void >*)0, actor_cancelled()); break;
		case 4: this->a_callback_error((ActorCallback< ParallelRestoreFinishActor, 3, Void >*)0, actor_cancelled()); break;
		case 5: this->a_callback_error((ActorCallback< ParallelRestoreFinishActor, 4, Void >*)0, actor_cancelled()); break;
		case 6: this->a_callback_error((ActorCallback< ParallelRestoreFinishActor, 5, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 5097 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> parallelRestoreFinish( Database const& cx, UID const& randomUID, UnlockDB const& unlockDB = UnlockDB::True ) {
															#line 5097 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new ParallelRestoreFinishActor(cx, randomUID, unlockDB));
															#line 45534 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 5142 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

																#line 45539 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via submitParallelRestore()
															#line 5143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class SubmitParallelRestoreActor>
															#line 5143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class SubmitParallelRestoreActorState {
															#line 45545 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 5143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	SubmitParallelRestoreActorState(Database const& cx,Key const& backupTag,Standalone<VectorRef<KeyRangeRef>> const& backupRanges,Key const& bcUrl,Optional<std::string> const& proxy,Version const& targetVersion,LockDB const& lockDB,UID const& randomUID,Key const& addPrefix,Key const& removePrefix) 
															#line 5143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 5143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : cx(cx),
															#line 5143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   backupTag(backupTag),
															#line 5143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   backupRanges(backupRanges),
															#line 5143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   bcUrl(bcUrl),
															#line 5143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   proxy(proxy),
															#line 5143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   targetVersion(targetVersion),
															#line 5143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   lockDB(lockDB),
															#line 5143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   randomUID(randomUID),
															#line 5143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   addPrefix(addPrefix),
															#line 5143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   removePrefix(removePrefix),
															#line 5154 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   bc(IBackupContainer::openContainer(bcUrl.toString(), proxy, {}))
															#line 45572 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("submitParallelRestore", reinterpret_cast<unsigned long>(this));

	}
	~SubmitParallelRestoreActorState() 
	{
		fdb_probe_actor_destroy("submitParallelRestore", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 5155 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<BackupDescription> __when_expr_0 = bc->describeBackup();
															#line 5155 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<SubmitParallelRestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 45589 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<SubmitParallelRestoreActor*>(this)->actor_wait_state = 1;
															#line 5155 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< SubmitParallelRestoreActor, 0, BackupDescription >*>(static_cast<SubmitParallelRestoreActor*>(this)));
															#line 45594 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~SubmitParallelRestoreActorState();
		static_cast<SubmitParallelRestoreActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 5156 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = desc.resolveVersionTimes(cx);
															#line 5156 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<SubmitParallelRestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 45619 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<SubmitParallelRestoreActor*>(this)->actor_wait_state = 2;
															#line 5156 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< SubmitParallelRestoreActor, 1, Void >*>(static_cast<SubmitParallelRestoreActor*>(this)));
															#line 45624 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1when1(BackupDescription const& __desc,int loopDepth) 
	{
															#line 5155 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		desc = __desc;
															#line 45633 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1when1(BackupDescription && __desc,int loopDepth) 
	{
		desc = std::move(__desc);
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<SubmitParallelRestoreActor*>(this)->actor_wait_state > 0) static_cast<SubmitParallelRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<SubmitParallelRestoreActor*>(this)->ActorCallback< SubmitParallelRestoreActor, 0, BackupDescription >::remove();

	}
	void a_callback_fire(ActorCallback< SubmitParallelRestoreActor, 0, BackupDescription >*,BackupDescription const& value) 
	{
		fdb_probe_actor_enter("submitParallelRestore", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitParallelRestore", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< SubmitParallelRestoreActor, 0, BackupDescription >*,BackupDescription && value) 
	{
		fdb_probe_actor_enter("submitParallelRestore", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitParallelRestore", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< SubmitParallelRestoreActor, 0, BackupDescription >*,Error err) 
	{
		fdb_probe_actor_enter("submitParallelRestore", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitParallelRestore", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont2(Void const& _,int loopDepth) 
	{
															#line 5158 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (targetVersion == invalidVersion && desc.maxRestorableVersion.present())
															#line 45700 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5159 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			targetVersion = desc.maxRestorableVersion.get();
															#line 5160 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent(SevWarn, "FastRestoreSubmitRestoreRequestWithInvalidTargetVersion") .detail("OverrideTargetVersion", targetVersion);
															#line 45706 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 5164 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Optional<RestorableFileSet>> __when_expr_2 = bc->getRestoreSet(targetVersion);
															#line 5164 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<SubmitParallelRestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 45712 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont2when1(__when_expr_2.get(), loopDepth); };
		static_cast<SubmitParallelRestoreActor*>(this)->actor_wait_state = 3;
															#line 5164 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< SubmitParallelRestoreActor, 2, Optional<RestorableFileSet> >*>(static_cast<SubmitParallelRestoreActor*>(this)));
															#line 45717 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont2(Void && _,int loopDepth) 
	{
															#line 5158 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (targetVersion == invalidVersion && desc.maxRestorableVersion.present())
															#line 45726 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5159 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			targetVersion = desc.maxRestorableVersion.get();
															#line 5160 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent(SevWarn, "FastRestoreSubmitRestoreRequestWithInvalidTargetVersion") .detail("OverrideTargetVersion", targetVersion);
															#line 45732 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 5164 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Optional<RestorableFileSet>> __when_expr_2 = bc->getRestoreSet(targetVersion);
															#line 5164 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<SubmitParallelRestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 45738 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont2when1(__when_expr_2.get(), loopDepth); };
		static_cast<SubmitParallelRestoreActor*>(this)->actor_wait_state = 3;
															#line 5164 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< SubmitParallelRestoreActor, 2, Optional<RestorableFileSet> >*>(static_cast<SubmitParallelRestoreActor*>(this)));
															#line 45743 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<SubmitParallelRestoreActor*>(this)->actor_wait_state > 0) static_cast<SubmitParallelRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<SubmitParallelRestoreActor*>(this)->ActorCallback< SubmitParallelRestoreActor, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< SubmitParallelRestoreActor, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("submitParallelRestore", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitParallelRestore", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< SubmitParallelRestoreActor, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("submitParallelRestore", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitParallelRestore", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< SubmitParallelRestoreActor, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("submitParallelRestore", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitParallelRestore", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont3(Optional<RestorableFileSet> const& restoreSet,int loopDepth) 
	{
															#line 5166 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!restoreSet.present())
															#line 45815 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5167 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent(SevWarn, "FileBackupAgentRestoreNotPossible") .detail("BackupContainer", bc->getURL()) .detail("TargetVersion", targetVersion);
															#line 5170 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			return a_body1Catch1(restore_invalid_version(), loopDepth);
															#line 45821 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 5173 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FastRestoreSubmitRestoreRequest") .detail("BackupDesc", desc.toString()) .detail("TargetVersion", targetVersion);
															#line 5177 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr = Reference<ReadYourWritesTransaction>(new ReadYourWritesTransaction(cx));
															#line 5178 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restoreIndex = 0;
															#line 5179 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		numTries = 0;
															#line 5181 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 45833 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont3loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1cont3(Optional<RestorableFileSet> && restoreSet,int loopDepth) 
	{
															#line 5166 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!restoreSet.present())
															#line 45842 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5167 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent(SevWarn, "FileBackupAgentRestoreNotPossible") .detail("BackupContainer", bc->getURL()) .detail("TargetVersion", targetVersion);
															#line 5170 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			return a_body1Catch1(restore_invalid_version(), loopDepth);
															#line 45848 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 5173 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FastRestoreSubmitRestoreRequest") .detail("BackupDesc", desc.toString()) .detail("TargetVersion", targetVersion);
															#line 5177 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr = Reference<ReadYourWritesTransaction>(new ReadYourWritesTransaction(cx));
															#line 5178 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restoreIndex = 0;
															#line 5179 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		numTries = 0;
															#line 5181 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 45860 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont3loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(Optional<RestorableFileSet> const& restoreSet,int loopDepth) 
	{
		loopDepth = a_body1cont3(restoreSet, loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(Optional<RestorableFileSet> && restoreSet,int loopDepth) 
	{
		loopDepth = a_body1cont3(std::move(restoreSet), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<SubmitParallelRestoreActor*>(this)->actor_wait_state > 0) static_cast<SubmitParallelRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<SubmitParallelRestoreActor*>(this)->ActorCallback< SubmitParallelRestoreActor, 2, Optional<RestorableFileSet> >::remove();

	}
	void a_callback_fire(ActorCallback< SubmitParallelRestoreActor, 2, Optional<RestorableFileSet> >*,Optional<RestorableFileSet> const& value) 
	{
		fdb_probe_actor_enter("submitParallelRestore", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitParallelRestore", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< SubmitParallelRestoreActor, 2, Optional<RestorableFileSet> >*,Optional<RestorableFileSet> && value) 
	{
		fdb_probe_actor_enter("submitParallelRestore", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitParallelRestore", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< SubmitParallelRestoreActor, 2, Optional<RestorableFileSet> >*,Error err) 
	{
		fdb_probe_actor_enter("submitParallelRestore", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitParallelRestore", reinterpret_cast<unsigned long>(this), 2);

	}
	int a_body1cont5(int loopDepth) 
	{
															#line 5201 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->reset();
															#line 5202 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		numTries = 0;
															#line 5203 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 45936 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont5loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont3loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1(int loopDepth) 
	{
		try {
															#line 5183 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (lockDB)
															#line 45953 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 5184 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				StrictFuture<Void> __when_expr_3 = lockDatabase(cx, randomUID);
															#line 5184 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (static_cast<SubmitParallelRestoreActor*>(this)->actor_wait_state < 0) return a_body1cont3loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 45959 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1cont3loopBody1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1cont3loopBody1when1(__when_expr_3.get(), loopDepth); };
				static_cast<SubmitParallelRestoreActor*>(this)->actor_wait_state = 4;
															#line 5184 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< SubmitParallelRestoreActor, 3, Void >*>(static_cast<SubmitParallelRestoreActor*>(this)));
															#line 45964 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				loopDepth = 0;
			}
			else
			{
				loopDepth = a_body1cont3loopBody1cont2(loopDepth);
			}
		}
		catch (Error& error) {
			loopDepth = a_body1cont3loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1cont3loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont3break1(int loopDepth) 
	{
		try {
			return a_body1cont5(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont3loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1cont3loopHead1(0);

		return loopDepth;
	}
	int a_body1cont3loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 5191 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent(numTries > 50 ? SevError : SevInfo, "FastRestoreToolSubmitRestoreRequestsMayFail") .error(e) .detail("Reason", "DB is not properly locked") .detail("ExpectedLockID", randomUID);
															#line 5195 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			numTries++;
															#line 5196 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_5 = tr->onError(e);
															#line 5196 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<SubmitParallelRestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 46010 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_5.isReady()) { if (__when_expr_5.isError()) return a_body1Catch1(__when_expr_5.getError(), std::max(0, loopDepth - 1)); else return a_body1cont3loopBody1Catch1when1(__when_expr_5.get(), loopDepth); };
			static_cast<SubmitParallelRestoreActor*>(this)->actor_wait_state = 6;
															#line 5196 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_5.addCallbackAndClear(static_cast<ActorCallback< SubmitParallelRestoreActor, 5, Void >*>(static_cast<SubmitParallelRestoreActor*>(this)));
															#line 46015 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont3loopBody1cont2(int loopDepth) 
	{
															#line 5186 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_4 = checkDatabaseLock(tr, randomUID);
															#line 5186 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<SubmitParallelRestoreActor*>(this)->actor_wait_state < 0) return a_body1cont3loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 46032 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1cont3loopBody1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1cont3loopBody1cont2when1(__when_expr_4.get(), loopDepth); };
		static_cast<SubmitParallelRestoreActor*>(this)->actor_wait_state = 5;
															#line 5186 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< SubmitParallelRestoreActor, 4, Void >*>(static_cast<SubmitParallelRestoreActor*>(this)));
															#line 46037 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont3loopBody1cont3(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1cont2(loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1cont3(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1cont2(loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose4() 
	{
		if (static_cast<SubmitParallelRestoreActor*>(this)->actor_wait_state > 0) static_cast<SubmitParallelRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<SubmitParallelRestoreActor*>(this)->ActorCallback< SubmitParallelRestoreActor, 3, Void >::remove();

	}
	void a_callback_fire(ActorCallback< SubmitParallelRestoreActor, 3, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("submitParallelRestore", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont3loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont3loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont3loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitParallelRestore", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_fire(ActorCallback< SubmitParallelRestoreActor, 3, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("submitParallelRestore", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont3loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont3loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont3loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitParallelRestore", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_error(ActorCallback< SubmitParallelRestoreActor, 3, Void >*,Error err) 
	{
		fdb_probe_actor_enter("submitParallelRestore", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont3loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont3loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont3loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitParallelRestore", reinterpret_cast<unsigned long>(this), 3);

	}
	int a_body1cont3loopBody1cont4(Void const& _,int loopDepth) 
	{
															#line 5188 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FastRestoreToolSubmitRestoreRequests").detail("DBIsLocked", randomUID);
															#line 46121 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		return a_body1cont3break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1cont3loopBody1cont4(Void && _,int loopDepth) 
	{
															#line 5188 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FastRestoreToolSubmitRestoreRequests").detail("DBIsLocked", randomUID);
															#line 46130 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		return a_body1cont3break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1cont3loopBody1cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1cont4(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1cont4(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose5() 
	{
		if (static_cast<SubmitParallelRestoreActor*>(this)->actor_wait_state > 0) static_cast<SubmitParallelRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<SubmitParallelRestoreActor*>(this)->ActorCallback< SubmitParallelRestoreActor, 4, Void >::remove();

	}
	void a_callback_fire(ActorCallback< SubmitParallelRestoreActor, 4, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("submitParallelRestore", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont3loopBody1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont3loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont3loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitParallelRestore", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_fire(ActorCallback< SubmitParallelRestoreActor, 4, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("submitParallelRestore", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont3loopBody1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont3loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont3loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitParallelRestore", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_error(ActorCallback< SubmitParallelRestoreActor, 4, Void >*,Error err) 
	{
		fdb_probe_actor_enter("submitParallelRestore", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont3loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont3loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont3loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitParallelRestore", reinterpret_cast<unsigned long>(this), 4);

	}
	int a_body1cont3loopBody1Catch1cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1Catch1cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1Catch1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1Catch1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose6() 
	{
		if (static_cast<SubmitParallelRestoreActor*>(this)->actor_wait_state > 0) static_cast<SubmitParallelRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<SubmitParallelRestoreActor*>(this)->ActorCallback< SubmitParallelRestoreActor, 5, Void >::remove();

	}
	void a_callback_fire(ActorCallback< SubmitParallelRestoreActor, 5, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("submitParallelRestore", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont3loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitParallelRestore", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_fire(ActorCallback< SubmitParallelRestoreActor, 5, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("submitParallelRestore", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont3loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitParallelRestore", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_error(ActorCallback< SubmitParallelRestoreActor, 5, Void >*,Error err) 
	{
		fdb_probe_actor_enter("submitParallelRestore", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitParallelRestore", reinterpret_cast<unsigned long>(this), 5);

	}
	int a_body1cont7(int loopDepth) 
	{
															#line 5235 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<SubmitParallelRestoreActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~SubmitParallelRestoreActorState(); static_cast<SubmitParallelRestoreActor*>(this)->destroy(); return 0; }
															#line 46277 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<SubmitParallelRestoreActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~SubmitParallelRestoreActorState();
		static_cast<SubmitParallelRestoreActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont5loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont5loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont5loopBody1(int loopDepth) 
	{
															#line 5204 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 5205 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 46298 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		try {
															#line 5208 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			for(restoreIndex = 0;restoreIndex < backupRanges.size();restoreIndex++) {
															#line 5209 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				auto range = backupRanges[restoreIndex];
															#line 5210 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				Standalone<StringRef> restoreTag(backupTag.toString() + "_" + std::to_string(restoreIndex));
															#line 5212 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				struct RestoreRequest restoreRequest(restoreIndex, restoreTag, bcUrl, proxy, targetVersion, range, deterministicRandom()->randomUniqueID(), addPrefix, removePrefix);
															#line 5221 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				tr->set(restoreRequestKeyFor(restoreRequest.index), restoreRequestValue(restoreRequest));
															#line 46310 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
															#line 5223 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->set(restoreRequestTriggerKey, restoreRequestTriggerValue(deterministicRandom()->randomUniqueID(), backupRanges.size()));
															#line 5225 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_6 = tr->commit();
															#line 5225 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<SubmitParallelRestoreActor*>(this)->actor_wait_state < 0) return a_body1cont5loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 46318 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_6.isReady()) { if (__when_expr_6.isError()) return a_body1cont5loopBody1Catch1(__when_expr_6.getError(), loopDepth); else return a_body1cont5loopBody1when1(__when_expr_6.get(), loopDepth); };
			static_cast<SubmitParallelRestoreActor*>(this)->actor_wait_state = 7;
															#line 5225 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_6.addCallbackAndClear(static_cast<ActorCallback< SubmitParallelRestoreActor, 6, Void >*>(static_cast<SubmitParallelRestoreActor*>(this)));
															#line 46323 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1cont5loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1cont5loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont5break1(int loopDepth) 
	{
		try {
			return a_body1cont7(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont5loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1cont5loopHead1(0);

		return loopDepth;
	}
	int a_body1cont5loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 5228 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent(numTries > 50 ? SevError : SevInfo, "FastRestoreToolSubmitRestoreRequestsRetry") .error(e) .detail("RestoreIndex", restoreIndex);
															#line 5231 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			numTries++;
															#line 5232 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_7 = tr->onError(e);
															#line 5232 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<SubmitParallelRestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 46364 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_7.isReady()) { if (__when_expr_7.isError()) return a_body1Catch1(__when_expr_7.getError(), std::max(0, loopDepth - 1)); else return a_body1cont5loopBody1Catch1when1(__when_expr_7.get(), loopDepth); };
			static_cast<SubmitParallelRestoreActor*>(this)->actor_wait_state = 8;
															#line 5232 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_7.addCallbackAndClear(static_cast<ActorCallback< SubmitParallelRestoreActor, 7, Void >*>(static_cast<SubmitParallelRestoreActor*>(this)));
															#line 46369 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont5loopBody1cont2(Void const& _,int loopDepth) 
	{
		return a_body1cont5break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1cont5loopBody1cont2(Void && _,int loopDepth) 
	{
		return a_body1cont5break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1cont5loopBody1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont5loopBody1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont5loopBody1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont5loopBody1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose7() 
	{
		if (static_cast<SubmitParallelRestoreActor*>(this)->actor_wait_state > 0) static_cast<SubmitParallelRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<SubmitParallelRestoreActor*>(this)->ActorCallback< SubmitParallelRestoreActor, 6, Void >::remove();

	}
	void a_callback_fire(ActorCallback< SubmitParallelRestoreActor, 6, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("submitParallelRestore", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1cont5loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont5loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont5loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitParallelRestore", reinterpret_cast<unsigned long>(this), 6);

	}
	void a_callback_fire(ActorCallback< SubmitParallelRestoreActor, 6, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("submitParallelRestore", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1cont5loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont5loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont5loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitParallelRestore", reinterpret_cast<unsigned long>(this), 6);

	}
	void a_callback_error(ActorCallback< SubmitParallelRestoreActor, 6, Void >*,Error err) 
	{
		fdb_probe_actor_enter("submitParallelRestore", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1cont5loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont5loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont5loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitParallelRestore", reinterpret_cast<unsigned long>(this), 6);

	}
	int a_body1cont5loopBody1Catch1cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont5loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont5loopBody1Catch1cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont5loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont5loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont5loopBody1Catch1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont5loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont5loopBody1Catch1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose8() 
	{
		if (static_cast<SubmitParallelRestoreActor*>(this)->actor_wait_state > 0) static_cast<SubmitParallelRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<SubmitParallelRestoreActor*>(this)->ActorCallback< SubmitParallelRestoreActor, 7, Void >::remove();

	}
	void a_callback_fire(ActorCallback< SubmitParallelRestoreActor, 7, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("submitParallelRestore", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1cont5loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitParallelRestore", reinterpret_cast<unsigned long>(this), 7);

	}
	void a_callback_fire(ActorCallback< SubmitParallelRestoreActor, 7, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("submitParallelRestore", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1cont5loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitParallelRestore", reinterpret_cast<unsigned long>(this), 7);

	}
	void a_callback_error(ActorCallback< SubmitParallelRestoreActor, 7, Void >*,Error err) 
	{
		fdb_probe_actor_enter("submitParallelRestore", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitParallelRestore", reinterpret_cast<unsigned long>(this), 7);

	}
															#line 5143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Database cx;
															#line 5143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key backupTag;
															#line 5143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Standalone<VectorRef<KeyRangeRef>> backupRanges;
															#line 5143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key bcUrl;
															#line 5143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<std::string> proxy;
															#line 5143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version targetVersion;
															#line 5143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	LockDB lockDB;
															#line 5143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	UID randomUID;
															#line 5143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key addPrefix;
															#line 5143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key removePrefix;
															#line 5154 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<IBackupContainer> bc;
															#line 5155 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	BackupDescription desc;
															#line 5177 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 5178 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int restoreIndex;
															#line 5179 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int numTries;
															#line 46560 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via submitParallelRestore()
															#line 5143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class SubmitParallelRestoreActor final : public Actor<Void>, public ActorCallback< SubmitParallelRestoreActor, 0, BackupDescription >, public ActorCallback< SubmitParallelRestoreActor, 1, Void >, public ActorCallback< SubmitParallelRestoreActor, 2, Optional<RestorableFileSet> >, public ActorCallback< SubmitParallelRestoreActor, 3, Void >, public ActorCallback< SubmitParallelRestoreActor, 4, Void >, public ActorCallback< SubmitParallelRestoreActor, 5, Void >, public ActorCallback< SubmitParallelRestoreActor, 6, Void >, public ActorCallback< SubmitParallelRestoreActor, 7, Void >, public FastAllocated<SubmitParallelRestoreActor>, public SubmitParallelRestoreActorState<SubmitParallelRestoreActor> {
															#line 46565 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<SubmitParallelRestoreActor>::operator new;
	using FastAllocated<SubmitParallelRestoreActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< SubmitParallelRestoreActor, 0, BackupDescription >;
friend struct ActorCallback< SubmitParallelRestoreActor, 1, Void >;
friend struct ActorCallback< SubmitParallelRestoreActor, 2, Optional<RestorableFileSet> >;
friend struct ActorCallback< SubmitParallelRestoreActor, 3, Void >;
friend struct ActorCallback< SubmitParallelRestoreActor, 4, Void >;
friend struct ActorCallback< SubmitParallelRestoreActor, 5, Void >;
friend struct ActorCallback< SubmitParallelRestoreActor, 6, Void >;
friend struct ActorCallback< SubmitParallelRestoreActor, 7, Void >;
															#line 5143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	SubmitParallelRestoreActor(Database const& cx,Key const& backupTag,Standalone<VectorRef<KeyRangeRef>> const& backupRanges,Key const& bcUrl,Optional<std::string> const& proxy,Version const& targetVersion,LockDB const& lockDB,UID const& randomUID,Key const& addPrefix,Key const& removePrefix) 
															#line 46583 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   SubmitParallelRestoreActorState<SubmitParallelRestoreActor>(cx, backupTag, backupRanges, bcUrl, proxy, targetVersion, lockDB, randomUID, addPrefix, removePrefix)
	{
		fdb_probe_actor_enter("submitParallelRestore", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("submitParallelRestore");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("submitParallelRestore", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< SubmitParallelRestoreActor, 0, BackupDescription >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< SubmitParallelRestoreActor, 1, Void >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< SubmitParallelRestoreActor, 2, Optional<RestorableFileSet> >*)0, actor_cancelled()); break;
		case 4: this->a_callback_error((ActorCallback< SubmitParallelRestoreActor, 3, Void >*)0, actor_cancelled()); break;
		case 5: this->a_callback_error((ActorCallback< SubmitParallelRestoreActor, 4, Void >*)0, actor_cancelled()); break;
		case 6: this->a_callback_error((ActorCallback< SubmitParallelRestoreActor, 5, Void >*)0, actor_cancelled()); break;
		case 7: this->a_callback_error((ActorCallback< SubmitParallelRestoreActor, 6, Void >*)0, actor_cancelled()); break;
		case 8: this->a_callback_error((ActorCallback< SubmitParallelRestoreActor, 7, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 5143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> submitParallelRestore( Database const& cx, Key const& backupTag, Standalone<VectorRef<KeyRangeRef>> const& backupRanges, Key const& bcUrl, Optional<std::string> const& proxy, Version const& targetVersion, LockDB const& lockDB, UID const& randomUID, Key const& addPrefix, Key const& removePrefix ) {
															#line 5143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new SubmitParallelRestoreActor(cx, backupTag, backupRanges, bcUrl, proxy, targetVersion, lockDB, randomUID, addPrefix, removePrefix));
															#line 46617 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 5237 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

	// This method will return the final status of the backup at tag, and return the URL that was used on the tag
	// when that status value was read.
																#line 46624 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via waitBackup()
															#line 5240 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class WaitBackupActor>
															#line 5240 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class WaitBackupActorState {
															#line 46630 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 5240 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	WaitBackupActorState(FileBackupAgent* const& backupAgent,Database const& cx,std::string const& tagName,StopWhenDone const& stopWhenDone,Reference<IBackupContainer>* const& pContainer = nullptr,UID* const& pUID = nullptr) 
															#line 5240 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 5240 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : backupAgent(backupAgent),
															#line 5240 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   cx(cx),
															#line 5240 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tagName(tagName),
															#line 5240 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   stopWhenDone(stopWhenDone),
															#line 5240 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   pContainer(pContainer),
															#line 5240 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   pUID(pUID),
															#line 5246 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   backTrace(),
															#line 5247 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tag(makeBackupTag(tagName))
															#line 46651 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("waitBackup", reinterpret_cast<unsigned long>(this));

	}
	~WaitBackupActorState() 
	{
		fdb_probe_actor_destroy("waitBackup", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 5249 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			;
															#line 46666 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = a_body1loopHead1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~WaitBackupActorState();
		static_cast<WaitBackupActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1(int loopDepth) 
	{
															#line 5250 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr = Reference<ReadYourWritesTransaction>(new ReadYourWritesTransaction(cx));
															#line 5251 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 5252 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 46700 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		try {
															#line 5255 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Optional<UidAndAbortedFlagT>> __when_expr_0 = tag.get(tr);
															#line 5255 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<WaitBackupActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 46706 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1loopBody1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1loopBody1when1(__when_expr_0.get(), loopDepth); };
			static_cast<WaitBackupActor*>(this)->actor_wait_state = 1;
															#line 5255 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< WaitBackupActor, 0, Optional<UidAndAbortedFlagT> >*>(static_cast<WaitBackupActor*>(this)));
															#line 46711 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1loopHead1(0);

		return loopDepth;
	}
	int a_body1loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 5287 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_5 = tr->onError(e);
															#line 5287 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<WaitBackupActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 46735 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_5.isReady()) { if (__when_expr_5.isError()) return a_body1Catch1(__when_expr_5.getError(), std::max(0, loopDepth - 1)); else return a_body1loopBody1Catch1when1(__when_expr_5.get(), loopDepth); };
			static_cast<WaitBackupActor*>(this)->actor_wait_state = 6;
															#line 5287 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_5.addCallbackAndClear(static_cast<ActorCallback< WaitBackupActor, 5, Void >*>(static_cast<WaitBackupActor*>(this)));
															#line 46740 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1loopBody1cont2(int loopDepth) 
	{
															#line 5256 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!oldUidAndAborted.present())
															#line 46755 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5257 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<WaitBackupActor*>(this)->SAV<EBackupState>::futures) { (void)(EBackupState::STATE_NEVERRAN); this->~WaitBackupActorState(); static_cast<WaitBackupActor*>(this)->destroy(); return 0; }
															#line 46759 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<WaitBackupActor*>(this)->SAV< EBackupState >::value()) EBackupState(EBackupState::STATE_NEVERRAN);
			this->~WaitBackupActorState();
			static_cast<WaitBackupActor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 5260 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config = BackupConfig(oldUidAndAborted.get().first);
															#line 5261 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<EBackupState> __when_expr_1 = config.stateEnum().getD(tr, Snapshot::False, EBackupState::STATE_NEVERRAN);
															#line 5261 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<WaitBackupActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 46771 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1loopBody1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1loopBody1cont2when1(__when_expr_1.get(), loopDepth); };
		static_cast<WaitBackupActor*>(this)->actor_wait_state = 2;
															#line 5261 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< WaitBackupActor, 1, EBackupState >*>(static_cast<WaitBackupActor*>(this)));
															#line 46776 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1when1(Optional<UidAndAbortedFlagT> const& __oldUidAndAborted,int loopDepth) 
	{
															#line 5255 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		oldUidAndAborted = __oldUidAndAborted;
															#line 46785 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1loopBody1cont2(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1when1(Optional<UidAndAbortedFlagT> && __oldUidAndAborted,int loopDepth) 
	{
		oldUidAndAborted = std::move(__oldUidAndAborted);
		loopDepth = a_body1loopBody1cont2(loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<WaitBackupActor*>(this)->actor_wait_state > 0) static_cast<WaitBackupActor*>(this)->actor_wait_state = 0;
		static_cast<WaitBackupActor*>(this)->ActorCallback< WaitBackupActor, 0, Optional<UidAndAbortedFlagT> >::remove();

	}
	void a_callback_fire(ActorCallback< WaitBackupActor, 0, Optional<UidAndAbortedFlagT> >*,Optional<UidAndAbortedFlagT> const& value) 
	{
		fdb_probe_actor_enter("waitBackup", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitBackup", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< WaitBackupActor, 0, Optional<UidAndAbortedFlagT> >*,Optional<UidAndAbortedFlagT> && value) 
	{
		fdb_probe_actor_enter("waitBackup", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitBackup", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< WaitBackupActor, 0, Optional<UidAndAbortedFlagT> >*,Error err) 
	{
		fdb_probe_actor_enter("waitBackup", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitBackup", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1loopBody1cont3(int loopDepth) 
	{
															#line 5267 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!FileBackupAgent::isRunnable(status) || ((!stopWhenDone) && (EBackupState::STATE_RUNNING_DIFFERENTIAL == status)))
															#line 46852 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5270 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (pContainer != nullptr)
															#line 46856 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 5271 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				StrictFuture<Reference<IBackupContainer>> __when_expr_2 = config.backupContainer().getOrThrow(tr, Snapshot::False, backup_invalid_info());
															#line 5271 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (static_cast<WaitBackupActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 46862 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1loopBody1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1loopBody1cont3when1(__when_expr_2.get(), loopDepth); };
				static_cast<WaitBackupActor*>(this)->actor_wait_state = 3;
															#line 5271 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< WaitBackupActor, 2, Reference<IBackupContainer> >*>(static_cast<WaitBackupActor*>(this)));
															#line 46867 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				loopDepth = 0;
			}
			else
			{
				loopDepth = a_body1loopBody1cont6(loopDepth);
			}
		}
		else
		{
			loopDepth = a_body1loopBody1cont5(loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1cont2when1(EBackupState const& __status,int loopDepth) 
	{
															#line 5261 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		status = __status;
															#line 46886 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1loopBody1cont3(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont2when1(EBackupState && __status,int loopDepth) 
	{
		status = std::move(__status);
		loopDepth = a_body1loopBody1cont3(loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<WaitBackupActor*>(this)->actor_wait_state > 0) static_cast<WaitBackupActor*>(this)->actor_wait_state = 0;
		static_cast<WaitBackupActor*>(this)->ActorCallback< WaitBackupActor, 1, EBackupState >::remove();

	}
	void a_callback_fire(ActorCallback< WaitBackupActor, 1, EBackupState >*,EBackupState const& value) 
	{
		fdb_probe_actor_enter("waitBackup", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitBackup", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< WaitBackupActor, 1, EBackupState >*,EBackupState && value) 
	{
		fdb_probe_actor_enter("waitBackup", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitBackup", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< WaitBackupActor, 1, EBackupState >*,Error err) 
	{
		fdb_probe_actor_enter("waitBackup", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitBackup", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1loopBody1cont5(int loopDepth) 
	{
															#line 5283 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		watchFuture = tr->watch(config.stateEnum().key);
															#line 5284 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_3 = tr->commit();
															#line 5284 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<WaitBackupActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 46957 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1loopBody1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1loopBody1cont5when1(__when_expr_3.get(), loopDepth); };
		static_cast<WaitBackupActor*>(this)->actor_wait_state = 4;
															#line 5284 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< WaitBackupActor, 3, Void >*>(static_cast<WaitBackupActor*>(this)));
															#line 46962 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont6(int loopDepth) 
	{
															#line 5276 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (pUID != nullptr)
															#line 46971 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5277 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			*pUID = oldUidAndAborted.get().first;
															#line 46975 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 5280 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<WaitBackupActor*>(this)->SAV<EBackupState>::futures) { (void)(status); this->~WaitBackupActorState(); static_cast<WaitBackupActor*>(this)->destroy(); return 0; }
															#line 46979 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<WaitBackupActor*>(this)->SAV< EBackupState >::value()) EBackupState(std::move(status)); // state_var_RVO
		this->~WaitBackupActorState();
		static_cast<WaitBackupActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1loopBody1cont7(Reference<IBackupContainer> const& c,int loopDepth) 
	{
															#line 5273 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		*pContainer = fileBackup::getBackupContainerWithProxy(c);
															#line 46991 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1loopBody1cont6(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont7(Reference<IBackupContainer> && c,int loopDepth) 
	{
															#line 5273 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		*pContainer = fileBackup::getBackupContainerWithProxy(c);
															#line 47000 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1loopBody1cont6(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont3when1(Reference<IBackupContainer> const& c,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont7(c, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont3when1(Reference<IBackupContainer> && c,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont7(std::move(c), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<WaitBackupActor*>(this)->actor_wait_state > 0) static_cast<WaitBackupActor*>(this)->actor_wait_state = 0;
		static_cast<WaitBackupActor*>(this)->ActorCallback< WaitBackupActor, 2, Reference<IBackupContainer> >::remove();

	}
	void a_callback_fire(ActorCallback< WaitBackupActor, 2, Reference<IBackupContainer> >*,Reference<IBackupContainer> const& value) 
	{
		fdb_probe_actor_enter("waitBackup", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1loopBody1cont3when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitBackup", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< WaitBackupActor, 2, Reference<IBackupContainer> >*,Reference<IBackupContainer> && value) 
	{
		fdb_probe_actor_enter("waitBackup", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1loopBody1cont3when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitBackup", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< WaitBackupActor, 2, Reference<IBackupContainer> >*,Error err) 
	{
		fdb_probe_actor_enter("waitBackup", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitBackup", reinterpret_cast<unsigned long>(this), 2);

	}
	int a_body1loopBody1cont11(Void const& _,int loopDepth) 
	{
															#line 5285 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_4 = watchFuture;
															#line 5285 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<WaitBackupActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 47074 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1loopBody1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1loopBody1cont11when1(__when_expr_4.get(), loopDepth); };
		static_cast<WaitBackupActor*>(this)->actor_wait_state = 5;
															#line 5285 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< WaitBackupActor, 4, Void >*>(static_cast<WaitBackupActor*>(this)));
															#line 47079 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont11(Void && _,int loopDepth) 
	{
															#line 5285 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_4 = watchFuture;
															#line 5285 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<WaitBackupActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 47090 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1loopBody1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1loopBody1cont11when1(__when_expr_4.get(), loopDepth); };
		static_cast<WaitBackupActor*>(this)->actor_wait_state = 5;
															#line 5285 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< WaitBackupActor, 4, Void >*>(static_cast<WaitBackupActor*>(this)));
															#line 47095 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont5when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont11(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont5when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont11(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose4() 
	{
		if (static_cast<WaitBackupActor*>(this)->actor_wait_state > 0) static_cast<WaitBackupActor*>(this)->actor_wait_state = 0;
		static_cast<WaitBackupActor*>(this)->ActorCallback< WaitBackupActor, 3, Void >::remove();

	}
	void a_callback_fire(ActorCallback< WaitBackupActor, 3, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("waitBackup", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1loopBody1cont5when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitBackup", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_fire(ActorCallback< WaitBackupActor, 3, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("waitBackup", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1loopBody1cont5when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitBackup", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_error(ActorCallback< WaitBackupActor, 3, Void >*,Error err) 
	{
		fdb_probe_actor_enter("waitBackup", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitBackup", reinterpret_cast<unsigned long>(this), 3);

	}
	int a_body1loopBody1cont11cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont11cont2(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont11cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont11cont2(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont11when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont11cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont11when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont11cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose5() 
	{
		if (static_cast<WaitBackupActor*>(this)->actor_wait_state > 0) static_cast<WaitBackupActor*>(this)->actor_wait_state = 0;
		static_cast<WaitBackupActor*>(this)->ActorCallback< WaitBackupActor, 4, Void >::remove();

	}
	void a_callback_fire(ActorCallback< WaitBackupActor, 4, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("waitBackup", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1loopBody1cont11when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitBackup", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_fire(ActorCallback< WaitBackupActor, 4, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("waitBackup", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1loopBody1cont11when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitBackup", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_error(ActorCallback< WaitBackupActor, 4, Void >*,Error err) 
	{
		fdb_probe_actor_enter("waitBackup", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitBackup", reinterpret_cast<unsigned long>(this), 4);

	}
	int a_body1loopBody1cont11cont2(int loopDepth) 
	{
		try {
			loopDepth = a_body1loopBody1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1loopBody1Catch1cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1Catch1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1Catch1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose6() 
	{
		if (static_cast<WaitBackupActor*>(this)->actor_wait_state > 0) static_cast<WaitBackupActor*>(this)->actor_wait_state = 0;
		static_cast<WaitBackupActor*>(this)->ActorCallback< WaitBackupActor, 5, Void >::remove();

	}
	void a_callback_fire(ActorCallback< WaitBackupActor, 5, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("waitBackup", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitBackup", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_fire(ActorCallback< WaitBackupActor, 5, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("waitBackup", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitBackup", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_error(ActorCallback< WaitBackupActor, 5, Void >*,Error err) 
	{
		fdb_probe_actor_enter("waitBackup", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitBackup", reinterpret_cast<unsigned long>(this), 5);

	}
															#line 5240 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	FileBackupAgent* backupAgent;
															#line 5240 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Database cx;
															#line 5240 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::string tagName;
															#line 5240 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	StopWhenDone stopWhenDone;
															#line 5240 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<IBackupContainer>* pContainer;
															#line 5240 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	UID* pUID;
															#line 5246 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::string backTrace;
															#line 5247 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	KeyBackedTag tag;
															#line 5250 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 5255 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<UidAndAbortedFlagT> oldUidAndAborted;
															#line 5260 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	BackupConfig config;
															#line 5261 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	EBackupState status;
															#line 5283 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<Void> watchFuture;
															#line 47352 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via waitBackup()
															#line 5240 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class WaitBackupActor final : public Actor<EBackupState>, public ActorCallback< WaitBackupActor, 0, Optional<UidAndAbortedFlagT> >, public ActorCallback< WaitBackupActor, 1, EBackupState >, public ActorCallback< WaitBackupActor, 2, Reference<IBackupContainer> >, public ActorCallback< WaitBackupActor, 3, Void >, public ActorCallback< WaitBackupActor, 4, Void >, public ActorCallback< WaitBackupActor, 5, Void >, public FastAllocated<WaitBackupActor>, public WaitBackupActorState<WaitBackupActor> {
															#line 47357 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<WaitBackupActor>::operator new;
	using FastAllocated<WaitBackupActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<EBackupState>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< WaitBackupActor, 0, Optional<UidAndAbortedFlagT> >;
friend struct ActorCallback< WaitBackupActor, 1, EBackupState >;
friend struct ActorCallback< WaitBackupActor, 2, Reference<IBackupContainer> >;
friend struct ActorCallback< WaitBackupActor, 3, Void >;
friend struct ActorCallback< WaitBackupActor, 4, Void >;
friend struct ActorCallback< WaitBackupActor, 5, Void >;
															#line 5240 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	WaitBackupActor(FileBackupAgent* const& backupAgent,Database const& cx,std::string const& tagName,StopWhenDone const& stopWhenDone,Reference<IBackupContainer>* const& pContainer = nullptr,UID* const& pUID = nullptr) 
															#line 47373 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<EBackupState>(),
		   WaitBackupActorState<WaitBackupActor>(backupAgent, cx, tagName, stopWhenDone, pContainer, pUID)
	{
		fdb_probe_actor_enter("waitBackup", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("waitBackup");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("waitBackup", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< WaitBackupActor, 0, Optional<UidAndAbortedFlagT> >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< WaitBackupActor, 1, EBackupState >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< WaitBackupActor, 2, Reference<IBackupContainer> >*)0, actor_cancelled()); break;
		case 4: this->a_callback_error((ActorCallback< WaitBackupActor, 3, Void >*)0, actor_cancelled()); break;
		case 5: this->a_callback_error((ActorCallback< WaitBackupActor, 4, Void >*)0, actor_cancelled()); break;
		case 6: this->a_callback_error((ActorCallback< WaitBackupActor, 5, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 5240 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<EBackupState> waitBackup( FileBackupAgent* const& backupAgent, Database const& cx, std::string const& tagName, StopWhenDone const& stopWhenDone, Reference<IBackupContainer>* const& pContainer = nullptr, UID* const& pUID = nullptr ) {
															#line 5240 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<EBackupState>(new WaitBackupActor(backupAgent, cx, tagName, stopWhenDone, pContainer, pUID));
															#line 47405 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 5291 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

	// TODO: Get rid of all of these confusing boolean flags
																#line 47411 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via submitBackup()
															#line 5293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class SubmitBackupActor>
															#line 5293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class SubmitBackupActorState {
															#line 47417 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 5293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	SubmitBackupActorState(FileBackupAgent* const& backupAgent,Reference<ReadYourWritesTransaction> const& tr,Key const& outContainer,Optional<std::string> const& proxy,int const& initialSnapshotIntervalSeconds,int const& snapshotIntervalSeconds,std::string const& tagName,Standalone<VectorRef<KeyRangeRef>> const& backupRanges,bool const& encryptionEnabled,StopWhenDone const& stopWhenDone,UsePartitionedLog const& partitionedLog,IncrementalBackupOnly const& incrementalBackupOnly,Optional<std::string> const& encryptionKeyFileName) 
															#line 5293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 5293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : backupAgent(backupAgent),
															#line 5293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tr(tr),
															#line 5293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   outContainer(outContainer),
															#line 5293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   proxy(proxy),
															#line 5293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   initialSnapshotIntervalSeconds(initialSnapshotIntervalSeconds),
															#line 5293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   snapshotIntervalSeconds(snapshotIntervalSeconds),
															#line 5293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tagName(tagName),
															#line 5293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   backupRanges(backupRanges),
															#line 5293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   encryptionEnabled(encryptionEnabled),
															#line 5293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   stopWhenDone(stopWhenDone),
															#line 5293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   partitionedLog(partitionedLog),
															#line 5293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   incrementalBackupOnly(incrementalBackupOnly),
															#line 5293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   encryptionKeyFileName(encryptionKeyFileName)
															#line 47448 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("submitBackup", reinterpret_cast<unsigned long>(this));

	}
	~SubmitBackupActorState() 
	{
		fdb_probe_actor_destroy("submitBackup", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 5306 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 5307 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 5308 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::COMMIT_ON_FIRST_PROXY);
															#line 5310 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent(SevInfo, "FBA_SubmitBackup") .detail("TagName", tagName.c_str()) .detail("StopWhenDone", stopWhenDone) .detail("UsePartitionedLog", partitionedLog) .detail("OutContainer", outContainer.toString());
															#line 5316 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tag = makeBackupTag(tagName);
															#line 5317 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Optional<UidAndAbortedFlagT>> __when_expr_0 = tag.get(tr);
															#line 5317 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<SubmitBackupActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 47475 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<SubmitBackupActor*>(this)->actor_wait_state = 1;
															#line 5317 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< SubmitBackupActor, 0, Optional<UidAndAbortedFlagT> >*>(static_cast<SubmitBackupActor*>(this)));
															#line 47480 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~SubmitBackupActorState();
		static_cast<SubmitBackupActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Optional<UidAndAbortedFlagT> const& uidAndAbortedFlag,int loopDepth) 
	{
															#line 5318 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (uidAndAbortedFlag.present())
															#line 47503 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5319 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			prevConfig = BackupConfig(uidAndAbortedFlag.get().first);
															#line 5320 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<EBackupState> __when_expr_1 = prevConfig.stateEnum().getD(tr, Snapshot::False, EBackupState::STATE_NEVERRAN);
															#line 5320 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<SubmitBackupActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 47511 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
			static_cast<SubmitBackupActor*>(this)->actor_wait_state = 2;
															#line 5320 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< SubmitBackupActor, 1, EBackupState >*>(static_cast<SubmitBackupActor*>(this)));
															#line 47516 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont2(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont1(Optional<UidAndAbortedFlagT> && uidAndAbortedFlag,int loopDepth) 
	{
															#line 5318 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (uidAndAbortedFlag.present())
															#line 47530 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5319 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			prevConfig = BackupConfig(uidAndAbortedFlag.get().first);
															#line 5320 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<EBackupState> __when_expr_1 = prevConfig.stateEnum().getD(tr, Snapshot::False, EBackupState::STATE_NEVERRAN);
															#line 5320 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<SubmitBackupActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 47538 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
			static_cast<SubmitBackupActor*>(this)->actor_wait_state = 2;
															#line 5320 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< SubmitBackupActor, 1, EBackupState >*>(static_cast<SubmitBackupActor*>(this)));
															#line 47543 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont2(loopDepth);
		}

		return loopDepth;
	}
	int a_body1when1(Optional<UidAndAbortedFlagT> const& uidAndAbortedFlag,int loopDepth) 
	{
		loopDepth = a_body1cont1(uidAndAbortedFlag, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Optional<UidAndAbortedFlagT> && uidAndAbortedFlag,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(uidAndAbortedFlag), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<SubmitBackupActor*>(this)->actor_wait_state > 0) static_cast<SubmitBackupActor*>(this)->actor_wait_state = 0;
		static_cast<SubmitBackupActor*>(this)->ActorCallback< SubmitBackupActor, 0, Optional<UidAndAbortedFlagT> >::remove();

	}
	void a_callback_fire(ActorCallback< SubmitBackupActor, 0, Optional<UidAndAbortedFlagT> >*,Optional<UidAndAbortedFlagT> const& value) 
	{
		fdb_probe_actor_enter("submitBackup", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitBackup", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< SubmitBackupActor, 0, Optional<UidAndAbortedFlagT> >*,Optional<UidAndAbortedFlagT> && value) 
	{
		fdb_probe_actor_enter("submitBackup", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitBackup", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< SubmitBackupActor, 0, Optional<UidAndAbortedFlagT> >*,Error err) 
	{
		fdb_probe_actor_enter("submitBackup", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitBackup", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont2(int loopDepth) 
	{
															#line 5330 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config = BackupConfig(deterministicRandom()->randomUniqueID());
															#line 5331 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		uid = config.getUid();
															#line 5334 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		nowStr = BackupAgentBase::getCurrentTime();
															#line 5335 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		backupContainer = outContainer.toString();
															#line 5339 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (backupContainer.find("file://") == 0)
															#line 47628 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5340 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			backupContainer = joinPath(backupContainer, std::string("backup-") + nowStr.toString());
															#line 47632 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 5343 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		bc = IBackupContainer::openContainer(backupContainer, proxy, encryptionKeyFileName);
															#line 47636 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		try {
															#line 5346 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_2 = timeoutError(bc->create(), 30);
															#line 5346 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<SubmitBackupActor*>(this)->actor_wait_state < 0) return a_body1cont2Catch1(actor_cancelled(), loopDepth);
															#line 47642 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1cont2Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont2when1(__when_expr_2.get(), loopDepth); };
			static_cast<SubmitBackupActor*>(this)->actor_wait_state = 3;
															#line 5346 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< SubmitBackupActor, 2, Void >*>(static_cast<SubmitBackupActor*>(this)));
															#line 47647 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1cont2Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1cont2Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont3(int loopDepth) 
	{
															#line 5322 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (FileBackupAgent::isRunnable(prevBackupStatus))
															#line 47662 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5323 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			return a_body1Catch1(backup_duplicate(), loopDepth);
															#line 47666 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 5327 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		prevConfig.clear(tr);
															#line 47670 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont2(loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(EBackupState const& __prevBackupStatus,int loopDepth) 
	{
															#line 5320 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		prevBackupStatus = __prevBackupStatus;
															#line 47679 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont3(loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(EBackupState && __prevBackupStatus,int loopDepth) 
	{
		prevBackupStatus = std::move(__prevBackupStatus);
		loopDepth = a_body1cont3(loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<SubmitBackupActor*>(this)->actor_wait_state > 0) static_cast<SubmitBackupActor*>(this)->actor_wait_state = 0;
		static_cast<SubmitBackupActor*>(this)->ActorCallback< SubmitBackupActor, 1, EBackupState >::remove();

	}
	void a_callback_fire(ActorCallback< SubmitBackupActor, 1, EBackupState >*,EBackupState const& value) 
	{
		fdb_probe_actor_enter("submitBackup", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitBackup", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< SubmitBackupActor, 1, EBackupState >*,EBackupState && value) 
	{
		fdb_probe_actor_enter("submitBackup", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitBackup", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< SubmitBackupActor, 1, EBackupState >*,Error err) 
	{
		fdb_probe_actor_enter("submitBackup", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitBackup", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont6(int loopDepth) 
	{
															#line 5354 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Optional<Value>> __when_expr_3 = backupAgent->lastBackupTimestamp().get(tr);
															#line 5354 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<SubmitBackupActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 47748 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1cont6when1(__when_expr_3.get(), loopDepth); };
		static_cast<SubmitBackupActor*>(this)->actor_wait_state = 4;
															#line 5354 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< SubmitBackupActor, 3, Optional<Value> >*>(static_cast<SubmitBackupActor*>(this)));
															#line 47753 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont2Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 5348 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (e.code() == error_code_actor_cancelled)
															#line 47763 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 5349 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				return a_body1Catch1(e, loopDepth);
															#line 47767 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
															#line 5350 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			fprintf(stderr, "ERROR: Could not create backup container: %s\n", e.what());
															#line 5351 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			return a_body1Catch1(backup_error(), loopDepth);
															#line 47773 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont8(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont9(loopDepth);

		return loopDepth;
	}
	int a_body1cont8(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont9(loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont8(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont8(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<SubmitBackupActor*>(this)->actor_wait_state > 0) static_cast<SubmitBackupActor*>(this)->actor_wait_state = 0;
		static_cast<SubmitBackupActor*>(this)->ActorCallback< SubmitBackupActor, 2, Void >::remove();

	}
	void a_callback_fire(ActorCallback< SubmitBackupActor, 2, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("submitBackup", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont2Catch1(error, 0);
		} catch (...) {
			a_body1cont2Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitBackup", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< SubmitBackupActor, 2, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("submitBackup", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont2Catch1(error, 0);
		} catch (...) {
			a_body1cont2Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitBackup", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< SubmitBackupActor, 2, Void >*,Error err) 
	{
		fdb_probe_actor_enter("submitBackup", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont2Catch1(error, 0);
		} catch (...) {
			a_body1cont2Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitBackup", reinterpret_cast<unsigned long>(this), 2);

	}
	int a_body1cont9(int loopDepth) 
	{
		try {
			loopDepth = a_body1cont6(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont10(Optional<Value> const& lastBackupTimestamp,int loopDepth) 
	{
															#line 5356 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if ((lastBackupTimestamp.present()) && (lastBackupTimestamp.get() >= nowStr))
															#line 47875 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5357 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			fprintf(stderr, "ERROR: The last backup `%s' happened in the future.\n", printable(lastBackupTimestamp.get()).c_str());
															#line 5360 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			return a_body1Catch1(backup_error(), loopDepth);
															#line 47881 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 5363 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		KeyRangeMap<int> backupRangeSet;
															#line 5364 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		for( auto& backupRange : backupRanges ) {
															#line 5365 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			backupRangeSet.insert(backupRange, 1);
															#line 47889 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 5368 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		backupRangeSet.coalesce(allKeys);
															#line 5369 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		normalizedRanges = std::vector<KeyRange>();
															#line 5371 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		for( auto& backupRange : backupRangeSet.ranges() ) {
															#line 5372 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (backupRange.value())
															#line 47899 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 5373 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				normalizedRanges.push_back(KeyRange(KeyRangeRef(backupRange.range().begin, backupRange.range().end)));
															#line 47903 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
		}
															#line 5377 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config.clear(tr);
															#line 5379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		destUidValue = Key(BinaryWriter::toValue(uid, Unversioned()));
															#line 5380 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (normalizedRanges.size() == 1 || isDefaultBackup(normalizedRanges))
															#line 47912 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5381 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<RangeResult> __when_expr_4 = tr->getRange(KeyRangeRef(destUidLookupPrefix, strinc(destUidLookupPrefix)), CLIENT_KNOBS->TOO_MANY);
															#line 5381 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<SubmitBackupActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 47918 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1cont10when1(__when_expr_4.get(), loopDepth); };
			static_cast<SubmitBackupActor*>(this)->actor_wait_state = 5;
															#line 5381 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< SubmitBackupActor, 4, RangeResult >*>(static_cast<SubmitBackupActor*>(this)));
															#line 47923 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont10cont1(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont10(Optional<Value> && lastBackupTimestamp,int loopDepth) 
	{
															#line 5356 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if ((lastBackupTimestamp.present()) && (lastBackupTimestamp.get() >= nowStr))
															#line 47937 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5357 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			fprintf(stderr, "ERROR: The last backup `%s' happened in the future.\n", printable(lastBackupTimestamp.get()).c_str());
															#line 5360 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			return a_body1Catch1(backup_error(), loopDepth);
															#line 47943 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 5363 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		KeyRangeMap<int> backupRangeSet;
															#line 5364 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		for( auto& backupRange : backupRanges ) {
															#line 5365 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			backupRangeSet.insert(backupRange, 1);
															#line 47951 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 5368 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		backupRangeSet.coalesce(allKeys);
															#line 5369 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		normalizedRanges = std::vector<KeyRange>();
															#line 5371 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		for( auto& backupRange : backupRangeSet.ranges() ) {
															#line 5372 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (backupRange.value())
															#line 47961 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 5373 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				normalizedRanges.push_back(KeyRange(KeyRangeRef(backupRange.range().begin, backupRange.range().end)));
															#line 47965 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
		}
															#line 5377 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config.clear(tr);
															#line 5379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		destUidValue = Key(BinaryWriter::toValue(uid, Unversioned()));
															#line 5380 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (normalizedRanges.size() == 1 || isDefaultBackup(normalizedRanges))
															#line 47974 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5381 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<RangeResult> __when_expr_4 = tr->getRange(KeyRangeRef(destUidLookupPrefix, strinc(destUidLookupPrefix)), CLIENT_KNOBS->TOO_MANY);
															#line 5381 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<SubmitBackupActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 47980 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1cont10when1(__when_expr_4.get(), loopDepth); };
			static_cast<SubmitBackupActor*>(this)->actor_wait_state = 5;
															#line 5381 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< SubmitBackupActor, 4, RangeResult >*>(static_cast<SubmitBackupActor*>(this)));
															#line 47985 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont10cont1(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont6when1(Optional<Value> const& lastBackupTimestamp,int loopDepth) 
	{
		loopDepth = a_body1cont10(lastBackupTimestamp, loopDepth);

		return loopDepth;
	}
	int a_body1cont6when1(Optional<Value> && lastBackupTimestamp,int loopDepth) 
	{
		loopDepth = a_body1cont10(std::move(lastBackupTimestamp), loopDepth);

		return loopDepth;
	}
	void a_exitChoose4() 
	{
		if (static_cast<SubmitBackupActor*>(this)->actor_wait_state > 0) static_cast<SubmitBackupActor*>(this)->actor_wait_state = 0;
		static_cast<SubmitBackupActor*>(this)->ActorCallback< SubmitBackupActor, 3, Optional<Value> >::remove();

	}
	void a_callback_fire(ActorCallback< SubmitBackupActor, 3, Optional<Value> >*,Optional<Value> const& value) 
	{
		fdb_probe_actor_enter("submitBackup", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont6when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitBackup", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_fire(ActorCallback< SubmitBackupActor, 3, Optional<Value> >*,Optional<Value> && value) 
	{
		fdb_probe_actor_enter("submitBackup", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont6when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitBackup", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_error(ActorCallback< SubmitBackupActor, 3, Optional<Value> >*,Error err) 
	{
		fdb_probe_actor_enter("submitBackup", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitBackup", reinterpret_cast<unsigned long>(this), 3);

	}
	int a_body1cont10cont1(int loopDepth) 
	{
															#line 5405 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->set(config.getUidAsKey().withPrefix(destUidValue).withPrefix(backupLatestVersionsPrefix), BinaryWriter::toValue<Version>(tr->getReadVersion().get(), Unversioned()));
															#line 5407 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config.destUidValue().set(tr, destUidValue);
															#line 5410 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tag.set(tr, { uid, false });
															#line 5412 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		backupAgent->lastBackupTimestamp().set(tr, nowStr);
															#line 5415 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config.tag().set(tr, tagName);
															#line 5416 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config.stateEnum().set(tr, EBackupState::STATE_SUBMITTED);
															#line 5417 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config.backupContainer().set(tr, bc);
															#line 5418 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config.stopWhenDone().set(tr, stopWhenDone);
															#line 5419 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config.backupRanges().set(tr, normalizedRanges);
															#line 5420 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config.initialSnapshotIntervalSeconds().set(tr, initialSnapshotIntervalSeconds);
															#line 5421 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config.snapshotIntervalSeconds().set(tr, snapshotIntervalSeconds);
															#line 5422 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config.partitionedLogEnabled().set(tr, partitionedLog);
															#line 5423 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config.incrementalBackupOnly().set(tr, incrementalBackupOnly);
															#line 5424 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config.enableSnapshotBackupEncryption().set(tr, encryptionEnabled);
															#line 5426 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Key> __when_expr_5 = fileBackup::StartFullBackupTaskFunc::addTask( tr, backupAgent->taskBucket, uid, TaskCompletionKey::noSignal());
															#line 5426 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<SubmitBackupActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 48092 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_5.isReady()) { if (__when_expr_5.isError()) return a_body1Catch1(__when_expr_5.getError(), loopDepth); else return a_body1cont10cont1when1(__when_expr_5.get(), loopDepth); };
		static_cast<SubmitBackupActor*>(this)->actor_wait_state = 6;
															#line 5426 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_5.addCallbackAndClear(static_cast<ActorCallback< SubmitBackupActor, 5, Key >*>(static_cast<SubmitBackupActor*>(this)));
															#line 48097 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont10cont6(RangeResult const& existingDestUidValues,int loopDepth) 
	{
															#line 5383 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		bool found = false;
															#line 5384 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		KeyRangeRef targetRange = normalizedRanges.size() == 1 ? normalizedRanges[0] : getDefaultBackupSharedRange();
															#line 5386 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		for( auto it : existingDestUidValues ) {
															#line 5387 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			KeyRange uidRange = BinaryReader::fromStringRef<KeyRange>(it.key.removePrefix(destUidLookupPrefix), IncludeVersion());
															#line 5389 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (uidRange == targetRange)
															#line 48114 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 5390 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				destUidValue = it.value;
															#line 5391 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				found = true;
															#line 5392 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				CODE_PROBE(targetRange == getDefaultBackupSharedRange(), "Backup mutation sharing with default backup");
															#line 48122 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				break;
			}
		}
															#line 5397 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!found)
															#line 48128 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5398 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			destUidValue = BinaryWriter::toValue(deterministicRandom()->randomUniqueID(), Unversioned());
															#line 5399 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->set(BinaryWriter::toValue(targetRange, IncludeVersion(ProtocolVersion::withSharedMutations())) .withPrefix(destUidLookupPrefix), destUidValue);
															#line 48134 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		loopDepth = a_body1cont10cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont10cont6(RangeResult && existingDestUidValues,int loopDepth) 
	{
															#line 5383 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		bool found = false;
															#line 5384 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		KeyRangeRef targetRange = normalizedRanges.size() == 1 ? normalizedRanges[0] : getDefaultBackupSharedRange();
															#line 5386 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		for( auto it : existingDestUidValues ) {
															#line 5387 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			KeyRange uidRange = BinaryReader::fromStringRef<KeyRange>(it.key.removePrefix(destUidLookupPrefix), IncludeVersion());
															#line 5389 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (uidRange == targetRange)
															#line 48152 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 5390 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				destUidValue = it.value;
															#line 5391 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				found = true;
															#line 5392 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				CODE_PROBE(targetRange == getDefaultBackupSharedRange(), "Backup mutation sharing with default backup");
															#line 48160 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				break;
			}
		}
															#line 5397 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!found)
															#line 48166 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5398 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			destUidValue = BinaryWriter::toValue(deterministicRandom()->randomUniqueID(), Unversioned());
															#line 5399 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->set(BinaryWriter::toValue(targetRange, IncludeVersion(ProtocolVersion::withSharedMutations())) .withPrefix(destUidLookupPrefix), destUidValue);
															#line 48172 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		loopDepth = a_body1cont10cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont10when1(RangeResult const& existingDestUidValues,int loopDepth) 
	{
		loopDepth = a_body1cont10cont6(existingDestUidValues, loopDepth);

		return loopDepth;
	}
	int a_body1cont10when1(RangeResult && existingDestUidValues,int loopDepth) 
	{
		loopDepth = a_body1cont10cont6(std::move(existingDestUidValues), loopDepth);

		return loopDepth;
	}
	void a_exitChoose5() 
	{
		if (static_cast<SubmitBackupActor*>(this)->actor_wait_state > 0) static_cast<SubmitBackupActor*>(this)->actor_wait_state = 0;
		static_cast<SubmitBackupActor*>(this)->ActorCallback< SubmitBackupActor, 4, RangeResult >::remove();

	}
	void a_callback_fire(ActorCallback< SubmitBackupActor, 4, RangeResult >*,RangeResult const& value) 
	{
		fdb_probe_actor_enter("submitBackup", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont10when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitBackup", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_fire(ActorCallback< SubmitBackupActor, 4, RangeResult >*,RangeResult && value) 
	{
		fdb_probe_actor_enter("submitBackup", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont10when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitBackup", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_error(ActorCallback< SubmitBackupActor, 4, RangeResult >*,Error err) 
	{
		fdb_probe_actor_enter("submitBackup", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitBackup", reinterpret_cast<unsigned long>(this), 4);

	}
	int a_body1cont10cont11(Key const& taskKey,int loopDepth) 
	{
															#line 5429 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<SubmitBackupActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~SubmitBackupActorState(); static_cast<SubmitBackupActor*>(this)->destroy(); return 0; }
															#line 48245 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<SubmitBackupActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~SubmitBackupActorState();
		static_cast<SubmitBackupActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont10cont11(Key && taskKey,int loopDepth) 
	{
															#line 5429 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<SubmitBackupActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~SubmitBackupActorState(); static_cast<SubmitBackupActor*>(this)->destroy(); return 0; }
															#line 48257 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<SubmitBackupActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~SubmitBackupActorState();
		static_cast<SubmitBackupActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont10cont1when1(Key const& taskKey,int loopDepth) 
	{
		loopDepth = a_body1cont10cont11(taskKey, loopDepth);

		return loopDepth;
	}
	int a_body1cont10cont1when1(Key && taskKey,int loopDepth) 
	{
		loopDepth = a_body1cont10cont11(std::move(taskKey), loopDepth);

		return loopDepth;
	}
	void a_exitChoose6() 
	{
		if (static_cast<SubmitBackupActor*>(this)->actor_wait_state > 0) static_cast<SubmitBackupActor*>(this)->actor_wait_state = 0;
		static_cast<SubmitBackupActor*>(this)->ActorCallback< SubmitBackupActor, 5, Key >::remove();

	}
	void a_callback_fire(ActorCallback< SubmitBackupActor, 5, Key >*,Key const& value) 
	{
		fdb_probe_actor_enter("submitBackup", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont10cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitBackup", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_fire(ActorCallback< SubmitBackupActor, 5, Key >*,Key && value) 
	{
		fdb_probe_actor_enter("submitBackup", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont10cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitBackup", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_error(ActorCallback< SubmitBackupActor, 5, Key >*,Error err) 
	{
		fdb_probe_actor_enter("submitBackup", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitBackup", reinterpret_cast<unsigned long>(this), 5);

	}
															#line 5293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	FileBackupAgent* backupAgent;
															#line 5293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 5293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key outContainer;
															#line 5293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<std::string> proxy;
															#line 5293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int initialSnapshotIntervalSeconds;
															#line 5293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int snapshotIntervalSeconds;
															#line 5293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::string tagName;
															#line 5293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Standalone<VectorRef<KeyRangeRef>> backupRanges;
															#line 5293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	bool encryptionEnabled;
															#line 5293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	StopWhenDone stopWhenDone;
															#line 5293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	UsePartitionedLog partitionedLog;
															#line 5293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	IncrementalBackupOnly incrementalBackupOnly;
															#line 5293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<std::string> encryptionKeyFileName;
															#line 5316 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	KeyBackedTag tag;
															#line 5319 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	BackupConfig prevConfig;
															#line 5320 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	EBackupState prevBackupStatus;
															#line 5330 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	BackupConfig config;
															#line 5331 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	UID uid;
															#line 5334 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Standalone<StringRef> nowStr;
															#line 5335 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::string backupContainer;
															#line 5343 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<IBackupContainer> bc;
															#line 5369 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::vector<KeyRange> normalizedRanges;
															#line 5379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key destUidValue;
															#line 48374 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via submitBackup()
															#line 5293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class SubmitBackupActor final : public Actor<Void>, public ActorCallback< SubmitBackupActor, 0, Optional<UidAndAbortedFlagT> >, public ActorCallback< SubmitBackupActor, 1, EBackupState >, public ActorCallback< SubmitBackupActor, 2, Void >, public ActorCallback< SubmitBackupActor, 3, Optional<Value> >, public ActorCallback< SubmitBackupActor, 4, RangeResult >, public ActorCallback< SubmitBackupActor, 5, Key >, public FastAllocated<SubmitBackupActor>, public SubmitBackupActorState<SubmitBackupActor> {
															#line 48379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<SubmitBackupActor>::operator new;
	using FastAllocated<SubmitBackupActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< SubmitBackupActor, 0, Optional<UidAndAbortedFlagT> >;
friend struct ActorCallback< SubmitBackupActor, 1, EBackupState >;
friend struct ActorCallback< SubmitBackupActor, 2, Void >;
friend struct ActorCallback< SubmitBackupActor, 3, Optional<Value> >;
friend struct ActorCallback< SubmitBackupActor, 4, RangeResult >;
friend struct ActorCallback< SubmitBackupActor, 5, Key >;
															#line 5293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	SubmitBackupActor(FileBackupAgent* const& backupAgent,Reference<ReadYourWritesTransaction> const& tr,Key const& outContainer,Optional<std::string> const& proxy,int const& initialSnapshotIntervalSeconds,int const& snapshotIntervalSeconds,std::string const& tagName,Standalone<VectorRef<KeyRangeRef>> const& backupRanges,bool const& encryptionEnabled,StopWhenDone const& stopWhenDone,UsePartitionedLog const& partitionedLog,IncrementalBackupOnly const& incrementalBackupOnly,Optional<std::string> const& encryptionKeyFileName) 
															#line 48395 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   SubmitBackupActorState<SubmitBackupActor>(backupAgent, tr, outContainer, proxy, initialSnapshotIntervalSeconds, snapshotIntervalSeconds, tagName, backupRanges, encryptionEnabled, stopWhenDone, partitionedLog, incrementalBackupOnly, encryptionKeyFileName)
	{
		fdb_probe_actor_enter("submitBackup", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("submitBackup");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("submitBackup", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< SubmitBackupActor, 0, Optional<UidAndAbortedFlagT> >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< SubmitBackupActor, 1, EBackupState >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< SubmitBackupActor, 2, Void >*)0, actor_cancelled()); break;
		case 4: this->a_callback_error((ActorCallback< SubmitBackupActor, 3, Optional<Value> >*)0, actor_cancelled()); break;
		case 5: this->a_callback_error((ActorCallback< SubmitBackupActor, 4, RangeResult >*)0, actor_cancelled()); break;
		case 6: this->a_callback_error((ActorCallback< SubmitBackupActor, 5, Key >*)0, actor_cancelled()); break;
		}

	}
};
															#line 5293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> submitBackup( FileBackupAgent* const& backupAgent, Reference<ReadYourWritesTransaction> const& tr, Key const& outContainer, Optional<std::string> const& proxy, int const& initialSnapshotIntervalSeconds, int const& snapshotIntervalSeconds, std::string const& tagName, Standalone<VectorRef<KeyRangeRef>> const& backupRanges, bool const& encryptionEnabled, StopWhenDone const& stopWhenDone, UsePartitionedLog const& partitionedLog, IncrementalBackupOnly const& incrementalBackupOnly, Optional<std::string> const& encryptionKeyFileName ) {
															#line 5293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new SubmitBackupActor(backupAgent, tr, outContainer, proxy, initialSnapshotIntervalSeconds, snapshotIntervalSeconds, tagName, backupRanges, encryptionEnabled, stopWhenDone, partitionedLog, incrementalBackupOnly, encryptionKeyFileName));
															#line 48427 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 5431 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

																#line 48432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via submitRestore()
															#line 5432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class SubmitRestoreActor>
															#line 5432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class SubmitRestoreActorState {
															#line 48438 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 5432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	SubmitRestoreActorState(FileBackupAgent* const& backupAgent,Reference<ReadYourWritesTransaction> const& tr,Key const& tagName,Key const& backupURL,Optional<std::string> const& proxy,Standalone<VectorRef<KeyRangeRef>> const& ranges,Version const& restoreVersion,Key const& addPrefix,Key const& removePrefix,LockDB const& lockDB,UnlockDB const& unlockDB,OnlyApplyMutationLogs const& onlyApplyMutationLogs,InconsistentSnapshotOnly const& inconsistentSnapshotOnly,Version const& beginVersion,UID const& uid) 
															#line 5432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 5432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : backupAgent(backupAgent),
															#line 5432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tr(tr),
															#line 5432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tagName(tagName),
															#line 5432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   backupURL(backupURL),
															#line 5432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   proxy(proxy),
															#line 5432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   ranges(ranges),
															#line 5432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   restoreVersion(restoreVersion),
															#line 5432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   addPrefix(addPrefix),
															#line 5432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   removePrefix(removePrefix),
															#line 5432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   lockDB(lockDB),
															#line 5432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   unlockDB(unlockDB),
															#line 5432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   onlyApplyMutationLogs(onlyApplyMutationLogs),
															#line 5432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   inconsistentSnapshotOnly(inconsistentSnapshotOnly),
															#line 5432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   beginVersion(beginVersion),
															#line 5432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   uid(uid)
															#line 48473 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("submitRestore", reinterpret_cast<unsigned long>(this));

	}
	~SubmitRestoreActorState() 
	{
		fdb_probe_actor_destroy("submitRestore", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 5447 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			KeyRangeMap<int> restoreRangeSet;
															#line 5448 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			for( auto& range : ranges ) {
															#line 5449 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				restoreRangeSet.insert(range, 1);
															#line 48492 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
															#line 5451 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			restoreRangeSet.coalesce(allKeys);
															#line 5452 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			restoreRanges = std::vector<KeyRange>();
															#line 5453 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			for( auto& restoreRange : restoreRangeSet.ranges() ) {
															#line 5454 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (restoreRange.value())
															#line 48502 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				{
															#line 5455 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					restoreRanges.push_back(KeyRange(KeyRangeRef(restoreRange.range().begin, restoreRange.range().end)));
															#line 48506 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				}
			}
															#line 5458 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			for( auto& restoreRange : restoreRanges ) {
															#line 5459 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				ASSERT(restoreRange.begin.startsWith(removePrefix) && restoreRange.end.startsWith(removePrefix));
															#line 48513 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
															#line 5462 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 5463 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 5466 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tag = makeRestoreTag(tagName.toString());
															#line 5467 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Optional<UidAndAbortedFlagT>> __when_expr_0 = tag.get(tr);
															#line 5467 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<SubmitRestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 48525 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<SubmitRestoreActor*>(this)->actor_wait_state = 1;
															#line 5467 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< SubmitRestoreActor, 0, Optional<UidAndAbortedFlagT> >*>(static_cast<SubmitRestoreActor*>(this)));
															#line 48530 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~SubmitRestoreActorState();
		static_cast<SubmitRestoreActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 5468 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (oldUidAndAborted.present())
															#line 48553 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5469 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (oldUidAndAborted.get().first == uid)
															#line 48557 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 5470 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (oldUidAndAborted.get().second)
															#line 48561 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				{
															#line 5471 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					return a_body1Catch1(restore_duplicate_uid(), loopDepth);
															#line 48565 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				}
				else
				{
															#line 5473 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					if (!static_cast<SubmitRestoreActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~SubmitRestoreActorState(); static_cast<SubmitRestoreActor*>(this)->destroy(); return 0; }
															#line 48571 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
					new (&static_cast<SubmitRestoreActor*>(this)->SAV< Void >::value()) Void(Void());
					this->~SubmitRestoreActorState();
					static_cast<SubmitRestoreActor*>(this)->finishSendAndDelPromiseRef();
					return 0;
				}
			}
															#line 5477 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			oldRestore = RestoreConfig(oldUidAndAborted.get().first);
															#line 5480 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<bool> __when_expr_1 = oldRestore.isRunnable(tr);
															#line 5480 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<SubmitRestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 48584 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
			static_cast<SubmitRestoreActor*>(this)->actor_wait_state = 2;
															#line 5480 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< SubmitRestoreActor, 1, bool >*>(static_cast<SubmitRestoreActor*>(this)));
															#line 48589 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont6(loopDepth);
		}

		return loopDepth;
	}
	int a_body1when1(Optional<UidAndAbortedFlagT> const& __oldUidAndAborted,int loopDepth) 
	{
															#line 5467 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		oldUidAndAborted = __oldUidAndAborted;
															#line 48603 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1when1(Optional<UidAndAbortedFlagT> && __oldUidAndAborted,int loopDepth) 
	{
		oldUidAndAborted = std::move(__oldUidAndAborted);
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<SubmitRestoreActor*>(this)->actor_wait_state > 0) static_cast<SubmitRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<SubmitRestoreActor*>(this)->ActorCallback< SubmitRestoreActor, 0, Optional<UidAndAbortedFlagT> >::remove();

	}
	void a_callback_fire(ActorCallback< SubmitRestoreActor, 0, Optional<UidAndAbortedFlagT> >*,Optional<UidAndAbortedFlagT> const& value) 
	{
		fdb_probe_actor_enter("submitRestore", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitRestore", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< SubmitRestoreActor, 0, Optional<UidAndAbortedFlagT> >*,Optional<UidAndAbortedFlagT> && value) 
	{
		fdb_probe_actor_enter("submitRestore", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitRestore", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< SubmitRestoreActor, 0, Optional<UidAndAbortedFlagT> >*,Error err) 
	{
		fdb_probe_actor_enter("submitRestore", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitRestore", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont6(int loopDepth) 
	{
															#line 5490 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!onlyApplyMutationLogs)
															#line 48670 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5491 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			index = int();
															#line 5492 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			index = 0;
															#line 48676 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = a_body1cont6loopHead1(loopDepth);
		}
		else
		{
			loopDepth = a_body1cont13(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont7(bool const& runnable,int loopDepth) 
	{
															#line 5482 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (runnable)
															#line 48690 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5483 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			return a_body1Catch1(restore_duplicate_tag(), loopDepth);
															#line 48694 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 5487 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		oldRestore.clear(tr);
															#line 48698 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont6(loopDepth);

		return loopDepth;
	}
	int a_body1cont7(bool && runnable,int loopDepth) 
	{
															#line 5482 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (runnable)
															#line 48707 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5483 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			return a_body1Catch1(restore_duplicate_tag(), loopDepth);
															#line 48711 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 5487 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		oldRestore.clear(tr);
															#line 48715 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont6(loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(bool const& runnable,int loopDepth) 
	{
		loopDepth = a_body1cont7(runnable, loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(bool && runnable,int loopDepth) 
	{
		loopDepth = a_body1cont7(std::move(runnable), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<SubmitRestoreActor*>(this)->actor_wait_state > 0) static_cast<SubmitRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<SubmitRestoreActor*>(this)->ActorCallback< SubmitRestoreActor, 1, bool >::remove();

	}
	void a_callback_fire(ActorCallback< SubmitRestoreActor, 1, bool >*,bool const& value) 
	{
		fdb_probe_actor_enter("submitRestore", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitRestore", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< SubmitRestoreActor, 1, bool >*,bool && value) 
	{
		fdb_probe_actor_enter("submitRestore", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitRestore", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< SubmitRestoreActor, 1, bool >*,Error err) 
	{
		fdb_probe_actor_enter("submitRestore", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitRestore", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont13(int loopDepth) 
	{
															#line 5503 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restore = RestoreConfig(uid);
															#line 5506 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tag.set(tr, { uid, false });
															#line 5508 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Reference<IBackupContainer> bc = IBackupContainer::openContainer(backupURL.toString(), proxy, {});
															#line 5511 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restore.tag().set(tr, tagName.toString());
															#line 5512 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restore.sourceContainer().set(tr, bc);
															#line 5513 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restore.stateEnum().set(tr, ERestoreState::QUEUED);
															#line 5514 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restore.restoreVersion().set(tr, restoreVersion);
															#line 5515 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restore.onlyApplyMutationLogs().set(tr, onlyApplyMutationLogs);
															#line 5516 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restore.inconsistentSnapshotOnly().set(tr, inconsistentSnapshotOnly);
															#line 5517 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restore.beginVersion().set(tr, beginVersion);
															#line 5518 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restore.unlockDBAfterRestore().set(tr, unlockDB);
															#line 5519 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (BUGGIFY && restoreRanges.size() == 1)
															#line 48809 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5520 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			restore.restoreRange().set(tr, restoreRanges[0]);
															#line 48813 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		else
		{
															#line 5522 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			for( auto& range : restoreRanges ) {
															#line 5523 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				restore.restoreRangeSet().insert(tr, range);
															#line 48821 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
		}
															#line 5528 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restore.initApplyMutations(tr, addPrefix, removePrefix, onlyApplyMutationLogs);
															#line 5530 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Key> __when_expr_3 = fileBackup::StartFullRestoreTaskFunc::addTask( tr, backupAgent->taskBucket, uid, TaskCompletionKey::noSignal());
															#line 5530 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<SubmitRestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 48830 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1cont13when1(__when_expr_3.get(), loopDepth); };
		static_cast<SubmitRestoreActor*>(this)->actor_wait_state = 4;
															#line 5530 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< SubmitRestoreActor, 3, Key >*>(static_cast<SubmitRestoreActor*>(this)));
															#line 48835 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont14(int loopDepth) 
	{
		loopDepth = a_body1cont13(loopDepth);

		return loopDepth;
	}
	int a_body1cont6loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont6loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont6loopBody1(int loopDepth) 
	{
															#line 5492 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!(index < restoreRanges.size()))
															#line 48857 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
			return a_body1cont6break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 5493 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		KeyRange restoreIntoRange = KeyRangeRef(restoreRanges[index].begin, restoreRanges[index].end) .removePrefix(removePrefix) .withPrefix(addPrefix);
															#line 5496 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<RangeResult> __when_expr_2 = tr->getRange(restoreIntoRange, 1);
															#line 5496 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<SubmitRestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 48867 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), std::max(0, loopDepth - 1)); else return a_body1cont6loopBody1when1(__when_expr_2.get(), loopDepth); };
		static_cast<SubmitRestoreActor*>(this)->actor_wait_state = 3;
															#line 5496 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< SubmitRestoreActor, 2, RangeResult >*>(static_cast<SubmitRestoreActor*>(this)));
															#line 48872 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont6break1(int loopDepth) 
	{
		try {
			return a_body1cont14(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont6loopBody1cont1(RangeResult const& existingRows,int loopDepth) 
	{
															#line 5497 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (existingRows.size() > 0)
															#line 48894 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5498 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			return a_body1Catch1(restore_destination_not_empty(), std::max(0, loopDepth - 1));
															#line 48898 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 5492 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		index++;
															#line 48902 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (loopDepth == 0) return a_body1cont6loopHead1(0);

		return loopDepth;
	}
	int a_body1cont6loopBody1cont1(RangeResult && existingRows,int loopDepth) 
	{
															#line 5497 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (existingRows.size() > 0)
															#line 48911 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5498 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			return a_body1Catch1(restore_destination_not_empty(), std::max(0, loopDepth - 1));
															#line 48915 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 5492 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		index++;
															#line 48919 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (loopDepth == 0) return a_body1cont6loopHead1(0);

		return loopDepth;
	}
	int a_body1cont6loopBody1when1(RangeResult const& existingRows,int loopDepth) 
	{
		loopDepth = a_body1cont6loopBody1cont1(existingRows, loopDepth);

		return loopDepth;
	}
	int a_body1cont6loopBody1when1(RangeResult && existingRows,int loopDepth) 
	{
		loopDepth = a_body1cont6loopBody1cont1(std::move(existingRows), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<SubmitRestoreActor*>(this)->actor_wait_state > 0) static_cast<SubmitRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<SubmitRestoreActor*>(this)->ActorCallback< SubmitRestoreActor, 2, RangeResult >::remove();

	}
	void a_callback_fire(ActorCallback< SubmitRestoreActor, 2, RangeResult >*,RangeResult const& value) 
	{
		fdb_probe_actor_enter("submitRestore", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont6loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitRestore", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< SubmitRestoreActor, 2, RangeResult >*,RangeResult && value) 
	{
		fdb_probe_actor_enter("submitRestore", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont6loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitRestore", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< SubmitRestoreActor, 2, RangeResult >*,Error err) 
	{
		fdb_probe_actor_enter("submitRestore", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitRestore", reinterpret_cast<unsigned long>(this), 2);

	}
	int a_body1cont13cont1(Key const& taskKey,int loopDepth) 
	{
															#line 5533 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (lockDB)
															#line 48991 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5534 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_4 = lockDatabase(tr, uid);
															#line 5534 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<SubmitRestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 48997 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1cont13cont1when1(__when_expr_4.get(), loopDepth); };
			static_cast<SubmitRestoreActor*>(this)->actor_wait_state = 5;
															#line 5534 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< SubmitRestoreActor, 4, Void >*>(static_cast<SubmitRestoreActor*>(this)));
															#line 49002 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
															#line 5536 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_5 = checkDatabaseLock(tr, uid);
															#line 5536 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<SubmitRestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 49011 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_5.isReady()) { if (__when_expr_5.isError()) return a_body1Catch1(__when_expr_5.getError(), loopDepth); else return a_body1cont13cont1when2(__when_expr_5.get(), loopDepth); };
			static_cast<SubmitRestoreActor*>(this)->actor_wait_state = 6;
															#line 5536 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_5.addCallbackAndClear(static_cast<ActorCallback< SubmitRestoreActor, 5, Void >*>(static_cast<SubmitRestoreActor*>(this)));
															#line 49016 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}

		return loopDepth;
	}
	int a_body1cont13cont1(Key && taskKey,int loopDepth) 
	{
															#line 5533 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (lockDB)
															#line 49026 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5534 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_4 = lockDatabase(tr, uid);
															#line 5534 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<SubmitRestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 49032 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1cont13cont1when1(__when_expr_4.get(), loopDepth); };
			static_cast<SubmitRestoreActor*>(this)->actor_wait_state = 5;
															#line 5534 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< SubmitRestoreActor, 4, Void >*>(static_cast<SubmitRestoreActor*>(this)));
															#line 49037 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
															#line 5536 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_5 = checkDatabaseLock(tr, uid);
															#line 5536 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<SubmitRestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 49046 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_5.isReady()) { if (__when_expr_5.isError()) return a_body1Catch1(__when_expr_5.getError(), loopDepth); else return a_body1cont13cont1when2(__when_expr_5.get(), loopDepth); };
			static_cast<SubmitRestoreActor*>(this)->actor_wait_state = 6;
															#line 5536 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_5.addCallbackAndClear(static_cast<ActorCallback< SubmitRestoreActor, 5, Void >*>(static_cast<SubmitRestoreActor*>(this)));
															#line 49051 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}

		return loopDepth;
	}
	int a_body1cont13when1(Key const& taskKey,int loopDepth) 
	{
		loopDepth = a_body1cont13cont1(taskKey, loopDepth);

		return loopDepth;
	}
	int a_body1cont13when1(Key && taskKey,int loopDepth) 
	{
		loopDepth = a_body1cont13cont1(std::move(taskKey), loopDepth);

		return loopDepth;
	}
	void a_exitChoose4() 
	{
		if (static_cast<SubmitRestoreActor*>(this)->actor_wait_state > 0) static_cast<SubmitRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<SubmitRestoreActor*>(this)->ActorCallback< SubmitRestoreActor, 3, Key >::remove();

	}
	void a_callback_fire(ActorCallback< SubmitRestoreActor, 3, Key >*,Key const& value) 
	{
		fdb_probe_actor_enter("submitRestore", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont13when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitRestore", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_fire(ActorCallback< SubmitRestoreActor, 3, Key >*,Key && value) 
	{
		fdb_probe_actor_enter("submitRestore", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont13when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitRestore", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_error(ActorCallback< SubmitRestoreActor, 3, Key >*,Error err) 
	{
		fdb_probe_actor_enter("submitRestore", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitRestore", reinterpret_cast<unsigned long>(this), 3);

	}
	int a_body1cont13cont5(int loopDepth) 
	{
															#line 5538 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<SubmitRestoreActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~SubmitRestoreActorState(); static_cast<SubmitRestoreActor*>(this)->destroy(); return 0; }
															#line 49124 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<SubmitRestoreActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~SubmitRestoreActorState();
		static_cast<SubmitRestoreActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont13cont6(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont13cont5(loopDepth);

		return loopDepth;
	}
	int a_body1cont13cont6(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont13cont5(loopDepth);

		return loopDepth;
	}
	int a_body1cont13cont1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont13cont6(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont13cont1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont13cont6(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose5() 
	{
		if (static_cast<SubmitRestoreActor*>(this)->actor_wait_state > 0) static_cast<SubmitRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<SubmitRestoreActor*>(this)->ActorCallback< SubmitRestoreActor, 4, Void >::remove();

	}
	void a_callback_fire(ActorCallback< SubmitRestoreActor, 4, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("submitRestore", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont13cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitRestore", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_fire(ActorCallback< SubmitRestoreActor, 4, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("submitRestore", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont13cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitRestore", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_error(ActorCallback< SubmitRestoreActor, 4, Void >*,Error err) 
	{
		fdb_probe_actor_enter("submitRestore", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitRestore", reinterpret_cast<unsigned long>(this), 4);

	}
	int a_body1cont13cont7(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont13cont5(loopDepth);

		return loopDepth;
	}
	int a_body1cont13cont7(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont13cont5(loopDepth);

		return loopDepth;
	}
	int a_body1cont13cont1when2(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont13cont7(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont13cont1when2(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont13cont7(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose6() 
	{
		if (static_cast<SubmitRestoreActor*>(this)->actor_wait_state > 0) static_cast<SubmitRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<SubmitRestoreActor*>(this)->ActorCallback< SubmitRestoreActor, 5, Void >::remove();

	}
	void a_callback_fire(ActorCallback< SubmitRestoreActor, 5, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("submitRestore", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont13cont1when2(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitRestore", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_fire(ActorCallback< SubmitRestoreActor, 5, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("submitRestore", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont13cont1when2(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitRestore", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_error(ActorCallback< SubmitRestoreActor, 5, Void >*,Error err) 
	{
		fdb_probe_actor_enter("submitRestore", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("submitRestore", reinterpret_cast<unsigned long>(this), 5);

	}
															#line 5432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	FileBackupAgent* backupAgent;
															#line 5432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 5432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key tagName;
															#line 5432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key backupURL;
															#line 5432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<std::string> proxy;
															#line 5432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Standalone<VectorRef<KeyRangeRef>> ranges;
															#line 5432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version restoreVersion;
															#line 5432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key addPrefix;
															#line 5432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key removePrefix;
															#line 5432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	LockDB lockDB;
															#line 5432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	UnlockDB unlockDB;
															#line 5432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	OnlyApplyMutationLogs onlyApplyMutationLogs;
															#line 5432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	InconsistentSnapshotOnly inconsistentSnapshotOnly;
															#line 5432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version beginVersion;
															#line 5432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	UID uid;
															#line 5452 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::vector<KeyRange> restoreRanges;
															#line 5466 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	KeyBackedTag tag;
															#line 5467 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<UidAndAbortedFlagT> oldUidAndAborted;
															#line 5477 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	RestoreConfig oldRestore;
															#line 5491 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int index;
															#line 5503 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	RestoreConfig restore;
															#line 49324 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via submitRestore()
															#line 5432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class SubmitRestoreActor final : public Actor<Void>, public ActorCallback< SubmitRestoreActor, 0, Optional<UidAndAbortedFlagT> >, public ActorCallback< SubmitRestoreActor, 1, bool >, public ActorCallback< SubmitRestoreActor, 2, RangeResult >, public ActorCallback< SubmitRestoreActor, 3, Key >, public ActorCallback< SubmitRestoreActor, 4, Void >, public ActorCallback< SubmitRestoreActor, 5, Void >, public FastAllocated<SubmitRestoreActor>, public SubmitRestoreActorState<SubmitRestoreActor> {
															#line 49329 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<SubmitRestoreActor>::operator new;
	using FastAllocated<SubmitRestoreActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< SubmitRestoreActor, 0, Optional<UidAndAbortedFlagT> >;
friend struct ActorCallback< SubmitRestoreActor, 1, bool >;
friend struct ActorCallback< SubmitRestoreActor, 2, RangeResult >;
friend struct ActorCallback< SubmitRestoreActor, 3, Key >;
friend struct ActorCallback< SubmitRestoreActor, 4, Void >;
friend struct ActorCallback< SubmitRestoreActor, 5, Void >;
															#line 5432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	SubmitRestoreActor(FileBackupAgent* const& backupAgent,Reference<ReadYourWritesTransaction> const& tr,Key const& tagName,Key const& backupURL,Optional<std::string> const& proxy,Standalone<VectorRef<KeyRangeRef>> const& ranges,Version const& restoreVersion,Key const& addPrefix,Key const& removePrefix,LockDB const& lockDB,UnlockDB const& unlockDB,OnlyApplyMutationLogs const& onlyApplyMutationLogs,InconsistentSnapshotOnly const& inconsistentSnapshotOnly,Version const& beginVersion,UID const& uid) 
															#line 49345 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   SubmitRestoreActorState<SubmitRestoreActor>(backupAgent, tr, tagName, backupURL, proxy, ranges, restoreVersion, addPrefix, removePrefix, lockDB, unlockDB, onlyApplyMutationLogs, inconsistentSnapshotOnly, beginVersion, uid)
	{
		fdb_probe_actor_enter("submitRestore", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("submitRestore");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("submitRestore", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< SubmitRestoreActor, 0, Optional<UidAndAbortedFlagT> >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< SubmitRestoreActor, 1, bool >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< SubmitRestoreActor, 2, RangeResult >*)0, actor_cancelled()); break;
		case 4: this->a_callback_error((ActorCallback< SubmitRestoreActor, 3, Key >*)0, actor_cancelled()); break;
		case 5: this->a_callback_error((ActorCallback< SubmitRestoreActor, 4, Void >*)0, actor_cancelled()); break;
		case 6: this->a_callback_error((ActorCallback< SubmitRestoreActor, 5, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 5432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> submitRestore( FileBackupAgent* const& backupAgent, Reference<ReadYourWritesTransaction> const& tr, Key const& tagName, Key const& backupURL, Optional<std::string> const& proxy, Standalone<VectorRef<KeyRangeRef>> const& ranges, Version const& restoreVersion, Key const& addPrefix, Key const& removePrefix, LockDB const& lockDB, UnlockDB const& unlockDB, OnlyApplyMutationLogs const& onlyApplyMutationLogs, InconsistentSnapshotOnly const& inconsistentSnapshotOnly, Version const& beginVersion, UID const& uid ) {
															#line 5432 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new SubmitRestoreActor(backupAgent, tr, tagName, backupURL, proxy, ranges, restoreVersion, addPrefix, removePrefix, lockDB, unlockDB, onlyApplyMutationLogs, inconsistentSnapshotOnly, beginVersion, uid));
															#line 49377 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 5540 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

	// This method will return the final status of the backup
																#line 49383 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via waitRestore()
															#line 5542 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class WaitRestoreActor>
															#line 5542 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class WaitRestoreActorState {
															#line 49389 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 5542 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	WaitRestoreActorState(Database const& cx,Key const& tagName,Verbose const& verbose) 
															#line 5542 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 5542 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : cx(cx),
															#line 5542 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tagName(tagName),
															#line 5542 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   verbose(verbose),
															#line 5543 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   status()
															#line 49402 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("waitRestore", reinterpret_cast<unsigned long>(this));

	}
	~WaitRestoreActorState() 
	{
		fdb_probe_actor_destroy("waitRestore", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 5544 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			;
															#line 49417 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = a_body1loopHead1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~WaitRestoreActorState();
		static_cast<WaitRestoreActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 5588 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<WaitRestoreActor*>(this)->SAV<ERestoreState>::futures) { (void)(status); this->~WaitRestoreActorState(); static_cast<WaitRestoreActor*>(this)->destroy(); return 0; }
															#line 49440 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<WaitRestoreActor*>(this)->SAV< ERestoreState >::value()) ERestoreState(std::move(status)); // state_var_RVO
		this->~WaitRestoreActorState();
		static_cast<WaitRestoreActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1(int loopDepth) 
	{
															#line 5545 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr = Reference<ReadYourWritesTransaction>(new ReadYourWritesTransaction(cx));
															#line 49459 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		try {
															#line 5547 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::PRIORITY_SYSTEM_IMMEDIATE);
															#line 5548 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 5549 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 5551 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tag = makeRestoreTag(tagName.toString());
															#line 5552 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Optional<UidAndAbortedFlagT>> __when_expr_0 = tag.get(tr);
															#line 5552 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<WaitRestoreActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 49473 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1loopBody1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1loopBody1when1(__when_expr_0.get(), loopDepth); };
			static_cast<WaitRestoreActor*>(this)->actor_wait_state = 1;
															#line 5552 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< WaitRestoreActor, 0, Optional<UidAndAbortedFlagT> >*>(static_cast<WaitRestoreActor*>(this)));
															#line 49478 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1break1(int loopDepth) 
	{
		try {
			return a_body1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1loopHead1(0);

		return loopDepth;
	}
	int a_body1loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 5584 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_7 = tr->onError(e);
															#line 5584 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<WaitRestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 49515 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_7.isReady()) { if (__when_expr_7.isError()) return a_body1Catch1(__when_expr_7.getError(), std::max(0, loopDepth - 1)); else return a_body1loopBody1Catch1when1(__when_expr_7.get(), loopDepth); };
			static_cast<WaitRestoreActor*>(this)->actor_wait_state = 8;
															#line 5584 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_7.addCallbackAndClear(static_cast<ActorCallback< WaitRestoreActor, 7, Void >*>(static_cast<WaitRestoreActor*>(this)));
															#line 49520 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1loopBody1cont2(Optional<UidAndAbortedFlagT> const& current,int loopDepth) 
	{
															#line 5553 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!current.present())
															#line 49535 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5554 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (verbose)
															#line 49539 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 5555 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				printf("waitRestore: Tag: %s  State: %s\n", tagName.toString().c_str(), FileBackupAgent::restoreStateText(ERestoreState::UNITIALIZED).toString().c_str());
															#line 49543 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
															#line 5558 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<WaitRestoreActor*>(this)->SAV<ERestoreState>::futures) { (void)(ERestoreState::UNITIALIZED); this->~WaitRestoreActorState(); static_cast<WaitRestoreActor*>(this)->destroy(); return 0; }
															#line 49547 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<WaitRestoreActor*>(this)->SAV< ERestoreState >::value()) ERestoreState(ERestoreState::UNITIALIZED);
			this->~WaitRestoreActorState();
			static_cast<WaitRestoreActor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 5561 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restore = RestoreConfig(current.get().first);
															#line 5563 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (verbose)
															#line 49557 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5564 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<std::string> __when_expr_1 = restore.getProgress(tr);
															#line 5564 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<WaitRestoreActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 49563 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1loopBody1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1loopBody1cont2when1(__when_expr_1.get(), loopDepth); };
			static_cast<WaitRestoreActor*>(this)->actor_wait_state = 2;
															#line 5564 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< WaitRestoreActor, 1, std::string >*>(static_cast<WaitRestoreActor*>(this)));
															#line 49568 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1loopBody1cont3(loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1cont2(Optional<UidAndAbortedFlagT> && current,int loopDepth) 
	{
															#line 5553 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!current.present())
															#line 49582 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5554 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (verbose)
															#line 49586 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 5555 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				printf("waitRestore: Tag: %s  State: %s\n", tagName.toString().c_str(), FileBackupAgent::restoreStateText(ERestoreState::UNITIALIZED).toString().c_str());
															#line 49590 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
															#line 5558 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!static_cast<WaitRestoreActor*>(this)->SAV<ERestoreState>::futures) { (void)(ERestoreState::UNITIALIZED); this->~WaitRestoreActorState(); static_cast<WaitRestoreActor*>(this)->destroy(); return 0; }
															#line 49594 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			new (&static_cast<WaitRestoreActor*>(this)->SAV< ERestoreState >::value()) ERestoreState(ERestoreState::UNITIALIZED);
			this->~WaitRestoreActorState();
			static_cast<WaitRestoreActor*>(this)->finishSendAndDelPromiseRef();
			return 0;
		}
															#line 5561 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		restore = RestoreConfig(current.get().first);
															#line 5563 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (verbose)
															#line 49604 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5564 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<std::string> __when_expr_1 = restore.getProgress(tr);
															#line 5564 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<WaitRestoreActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 49610 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1loopBody1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1loopBody1cont2when1(__when_expr_1.get(), loopDepth); };
			static_cast<WaitRestoreActor*>(this)->actor_wait_state = 2;
															#line 5564 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< WaitRestoreActor, 1, std::string >*>(static_cast<WaitRestoreActor*>(this)));
															#line 49615 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1loopBody1cont3(loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1when1(Optional<UidAndAbortedFlagT> const& current,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont2(current, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1when1(Optional<UidAndAbortedFlagT> && current,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont2(std::move(current), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<WaitRestoreActor*>(this)->actor_wait_state > 0) static_cast<WaitRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<WaitRestoreActor*>(this)->ActorCallback< WaitRestoreActor, 0, Optional<UidAndAbortedFlagT> >::remove();

	}
	void a_callback_fire(ActorCallback< WaitRestoreActor, 0, Optional<UidAndAbortedFlagT> >*,Optional<UidAndAbortedFlagT> const& value) 
	{
		fdb_probe_actor_enter("waitRestore", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitRestore", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< WaitRestoreActor, 0, Optional<UidAndAbortedFlagT> >*,Optional<UidAndAbortedFlagT> && value) 
	{
		fdb_probe_actor_enter("waitRestore", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitRestore", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< WaitRestoreActor, 0, Optional<UidAndAbortedFlagT> >*,Error err) 
	{
		fdb_probe_actor_enter("waitRestore", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitRestore", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1loopBody1cont3(int loopDepth) 
	{
															#line 5568 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<ERestoreState> __when_expr_2 = restore.stateEnum().getD(tr);
															#line 5568 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<WaitRestoreActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 49694 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1loopBody1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1loopBody1cont3when1(__when_expr_2.get(), loopDepth); };
		static_cast<WaitRestoreActor*>(this)->actor_wait_state = 3;
															#line 5568 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< WaitRestoreActor, 2, ERestoreState >*>(static_cast<WaitRestoreActor*>(this)));
															#line 49699 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont6(int loopDepth) 
	{
															#line 5565 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		printf("%s\n", details.c_str());
															#line 49708 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1loopBody1cont3(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont2when1(std::string const& __details,int loopDepth) 
	{
															#line 5564 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		details = __details;
															#line 49717 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1loopBody1cont6(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont2when1(std::string && __details,int loopDepth) 
	{
		details = std::move(__details);
		loopDepth = a_body1loopBody1cont6(loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<WaitRestoreActor*>(this)->actor_wait_state > 0) static_cast<WaitRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<WaitRestoreActor*>(this)->ActorCallback< WaitRestoreActor, 1, std::string >::remove();

	}
	void a_callback_fire(ActorCallback< WaitRestoreActor, 1, std::string >*,std::string const& value) 
	{
		fdb_probe_actor_enter("waitRestore", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitRestore", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< WaitRestoreActor, 1, std::string >*,std::string && value) 
	{
		fdb_probe_actor_enter("waitRestore", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitRestore", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< WaitRestoreActor, 1, std::string >*,Error err) 
	{
		fdb_probe_actor_enter("waitRestore", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitRestore", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1loopBody1cont8(ERestoreState const& status_,int loopDepth) 
	{
															#line 5569 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		status = status_;
															#line 5570 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<bool> __when_expr_3 = restore.isRunnable(tr);
															#line 5570 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<WaitRestoreActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 49788 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1loopBody1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1loopBody1cont8when1(__when_expr_3.get(), loopDepth); };
		static_cast<WaitRestoreActor*>(this)->actor_wait_state = 4;
															#line 5570 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< WaitRestoreActor, 3, bool >*>(static_cast<WaitRestoreActor*>(this)));
															#line 49793 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont8(ERestoreState && status_,int loopDepth) 
	{
															#line 5569 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		status = status_;
															#line 5570 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<bool> __when_expr_3 = restore.isRunnable(tr);
															#line 5570 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<WaitRestoreActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 49806 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1loopBody1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1loopBody1cont8when1(__when_expr_3.get(), loopDepth); };
		static_cast<WaitRestoreActor*>(this)->actor_wait_state = 4;
															#line 5570 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< WaitRestoreActor, 3, bool >*>(static_cast<WaitRestoreActor*>(this)));
															#line 49811 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont3when1(ERestoreState const& status_,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont8(status_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont3when1(ERestoreState && status_,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont8(std::move(status_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<WaitRestoreActor*>(this)->actor_wait_state > 0) static_cast<WaitRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<WaitRestoreActor*>(this)->ActorCallback< WaitRestoreActor, 2, ERestoreState >::remove();

	}
	void a_callback_fire(ActorCallback< WaitRestoreActor, 2, ERestoreState >*,ERestoreState const& value) 
	{
		fdb_probe_actor_enter("waitRestore", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1loopBody1cont3when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitRestore", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< WaitRestoreActor, 2, ERestoreState >*,ERestoreState && value) 
	{
		fdb_probe_actor_enter("waitRestore", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1loopBody1cont3when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitRestore", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< WaitRestoreActor, 2, ERestoreState >*,Error err) 
	{
		fdb_probe_actor_enter("waitRestore", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitRestore", reinterpret_cast<unsigned long>(this), 2);

	}
	int a_body1loopBody1cont9(int loopDepth) 
	{
															#line 5573 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!runnable)
															#line 49883 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
			return a_body1break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 5577 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		watchFuture = tr->watch(restore.stateEnum().key);
															#line 5578 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_4 = tr->commit();
															#line 5578 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<WaitRestoreActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 49893 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1loopBody1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1loopBody1cont9when1(__when_expr_4.get(), loopDepth); };
		static_cast<WaitRestoreActor*>(this)->actor_wait_state = 5;
															#line 5578 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< WaitRestoreActor, 4, Void >*>(static_cast<WaitRestoreActor*>(this)));
															#line 49898 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont8when1(bool const& __runnable,int loopDepth) 
	{
															#line 5570 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		runnable = __runnable;
															#line 49907 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1loopBody1cont9(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont8when1(bool && __runnable,int loopDepth) 
	{
		runnable = std::move(__runnable);
		loopDepth = a_body1loopBody1cont9(loopDepth);

		return loopDepth;
	}
	void a_exitChoose4() 
	{
		if (static_cast<WaitRestoreActor*>(this)->actor_wait_state > 0) static_cast<WaitRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<WaitRestoreActor*>(this)->ActorCallback< WaitRestoreActor, 3, bool >::remove();

	}
	void a_callback_fire(ActorCallback< WaitRestoreActor, 3, bool >*,bool const& value) 
	{
		fdb_probe_actor_enter("waitRestore", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1loopBody1cont8when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitRestore", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_fire(ActorCallback< WaitRestoreActor, 3, bool >*,bool && value) 
	{
		fdb_probe_actor_enter("waitRestore", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1loopBody1cont8when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitRestore", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_error(ActorCallback< WaitRestoreActor, 3, bool >*,Error err) 
	{
		fdb_probe_actor_enter("waitRestore", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitRestore", reinterpret_cast<unsigned long>(this), 3);

	}
	int a_body1loopBody1cont10(Void const& _,int loopDepth) 
	{
															#line 5579 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (verbose)
															#line 49974 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5580 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_5 = watchFuture || delay(1);
															#line 5580 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<WaitRestoreActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 49980 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_5.isReady()) { if (__when_expr_5.isError()) return a_body1loopBody1Catch1(__when_expr_5.getError(), loopDepth); else return a_body1loopBody1cont10when1(__when_expr_5.get(), loopDepth); };
			static_cast<WaitRestoreActor*>(this)->actor_wait_state = 6;
															#line 5580 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_5.addCallbackAndClear(static_cast<ActorCallback< WaitRestoreActor, 5, Void >*>(static_cast<WaitRestoreActor*>(this)));
															#line 49985 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
															#line 5582 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_6 = watchFuture;
															#line 5582 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<WaitRestoreActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 49994 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_6.isReady()) { if (__when_expr_6.isError()) return a_body1loopBody1Catch1(__when_expr_6.getError(), loopDepth); else return a_body1loopBody1cont10when2(__when_expr_6.get(), loopDepth); };
			static_cast<WaitRestoreActor*>(this)->actor_wait_state = 7;
															#line 5582 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_6.addCallbackAndClear(static_cast<ActorCallback< WaitRestoreActor, 6, Void >*>(static_cast<WaitRestoreActor*>(this)));
															#line 49999 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}

		return loopDepth;
	}
	int a_body1loopBody1cont10(Void && _,int loopDepth) 
	{
															#line 5579 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (verbose)
															#line 50009 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5580 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_5 = watchFuture || delay(1);
															#line 5580 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<WaitRestoreActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 50015 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_5.isReady()) { if (__when_expr_5.isError()) return a_body1loopBody1Catch1(__when_expr_5.getError(), loopDepth); else return a_body1loopBody1cont10when1(__when_expr_5.get(), loopDepth); };
			static_cast<WaitRestoreActor*>(this)->actor_wait_state = 6;
															#line 5580 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_5.addCallbackAndClear(static_cast<ActorCallback< WaitRestoreActor, 5, Void >*>(static_cast<WaitRestoreActor*>(this)));
															#line 50020 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
															#line 5582 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_6 = watchFuture;
															#line 5582 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<WaitRestoreActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 50029 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_6.isReady()) { if (__when_expr_6.isError()) return a_body1loopBody1Catch1(__when_expr_6.getError(), loopDepth); else return a_body1loopBody1cont10when2(__when_expr_6.get(), loopDepth); };
			static_cast<WaitRestoreActor*>(this)->actor_wait_state = 7;
															#line 5582 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_6.addCallbackAndClear(static_cast<ActorCallback< WaitRestoreActor, 6, Void >*>(static_cast<WaitRestoreActor*>(this)));
															#line 50034 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}

		return loopDepth;
	}
	int a_body1loopBody1cont9when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont10(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont9when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont10(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose5() 
	{
		if (static_cast<WaitRestoreActor*>(this)->actor_wait_state > 0) static_cast<WaitRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<WaitRestoreActor*>(this)->ActorCallback< WaitRestoreActor, 4, Void >::remove();

	}
	void a_callback_fire(ActorCallback< WaitRestoreActor, 4, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("waitRestore", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1loopBody1cont9when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitRestore", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_fire(ActorCallback< WaitRestoreActor, 4, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("waitRestore", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1loopBody1cont9when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitRestore", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_error(ActorCallback< WaitRestoreActor, 4, Void >*,Error err) 
	{
		fdb_probe_actor_enter("waitRestore", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitRestore", reinterpret_cast<unsigned long>(this), 4);

	}
	int a_body1loopBody1cont10cont1(int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont10cont4(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont10cont2(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont10cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont10cont2(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont10cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont10when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont10cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont10when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont10cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose6() 
	{
		if (static_cast<WaitRestoreActor*>(this)->actor_wait_state > 0) static_cast<WaitRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<WaitRestoreActor*>(this)->ActorCallback< WaitRestoreActor, 5, Void >::remove();

	}
	void a_callback_fire(ActorCallback< WaitRestoreActor, 5, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("waitRestore", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1loopBody1cont10when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitRestore", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_fire(ActorCallback< WaitRestoreActor, 5, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("waitRestore", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1loopBody1cont10when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitRestore", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_error(ActorCallback< WaitRestoreActor, 5, Void >*,Error err) 
	{
		fdb_probe_actor_enter("waitRestore", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitRestore", reinterpret_cast<unsigned long>(this), 5);

	}
	int a_body1loopBody1cont10cont3(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont10cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont10cont3(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont10cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont10when2(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont10cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont10when2(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont10cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose7() 
	{
		if (static_cast<WaitRestoreActor*>(this)->actor_wait_state > 0) static_cast<WaitRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<WaitRestoreActor*>(this)->ActorCallback< WaitRestoreActor, 6, Void >::remove();

	}
	void a_callback_fire(ActorCallback< WaitRestoreActor, 6, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("waitRestore", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1loopBody1cont10when2(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitRestore", reinterpret_cast<unsigned long>(this), 6);

	}
	void a_callback_fire(ActorCallback< WaitRestoreActor, 6, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("waitRestore", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1loopBody1cont10when2(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitRestore", reinterpret_cast<unsigned long>(this), 6);

	}
	void a_callback_error(ActorCallback< WaitRestoreActor, 6, Void >*,Error err) 
	{
		fdb_probe_actor_enter("waitRestore", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitRestore", reinterpret_cast<unsigned long>(this), 6);

	}
	int a_body1loopBody1cont10cont4(int loopDepth) 
	{
		try {
			loopDepth = a_body1loopBody1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1loopBody1Catch1cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1Catch1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1Catch1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose8() 
	{
		if (static_cast<WaitRestoreActor*>(this)->actor_wait_state > 0) static_cast<WaitRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<WaitRestoreActor*>(this)->ActorCallback< WaitRestoreActor, 7, Void >::remove();

	}
	void a_callback_fire(ActorCallback< WaitRestoreActor, 7, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("waitRestore", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitRestore", reinterpret_cast<unsigned long>(this), 7);

	}
	void a_callback_fire(ActorCallback< WaitRestoreActor, 7, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("waitRestore", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitRestore", reinterpret_cast<unsigned long>(this), 7);

	}
	void a_callback_error(ActorCallback< WaitRestoreActor, 7, Void >*,Error err) 
	{
		fdb_probe_actor_enter("waitRestore", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("waitRestore", reinterpret_cast<unsigned long>(this), 7);

	}
															#line 5542 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Database cx;
															#line 5542 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key tagName;
															#line 5542 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Verbose verbose;
															#line 5543 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	ERestoreState status;
															#line 5545 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 5551 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	KeyBackedTag tag;
															#line 5561 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	RestoreConfig restore;
															#line 5564 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::string details;
															#line 5570 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	bool runnable;
															#line 5577 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<Void> watchFuture;
															#line 50367 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via waitRestore()
															#line 5542 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class WaitRestoreActor final : public Actor<ERestoreState>, public ActorCallback< WaitRestoreActor, 0, Optional<UidAndAbortedFlagT> >, public ActorCallback< WaitRestoreActor, 1, std::string >, public ActorCallback< WaitRestoreActor, 2, ERestoreState >, public ActorCallback< WaitRestoreActor, 3, bool >, public ActorCallback< WaitRestoreActor, 4, Void >, public ActorCallback< WaitRestoreActor, 5, Void >, public ActorCallback< WaitRestoreActor, 6, Void >, public ActorCallback< WaitRestoreActor, 7, Void >, public FastAllocated<WaitRestoreActor>, public WaitRestoreActorState<WaitRestoreActor> {
															#line 50372 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<WaitRestoreActor>::operator new;
	using FastAllocated<WaitRestoreActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<ERestoreState>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< WaitRestoreActor, 0, Optional<UidAndAbortedFlagT> >;
friend struct ActorCallback< WaitRestoreActor, 1, std::string >;
friend struct ActorCallback< WaitRestoreActor, 2, ERestoreState >;
friend struct ActorCallback< WaitRestoreActor, 3, bool >;
friend struct ActorCallback< WaitRestoreActor, 4, Void >;
friend struct ActorCallback< WaitRestoreActor, 5, Void >;
friend struct ActorCallback< WaitRestoreActor, 6, Void >;
friend struct ActorCallback< WaitRestoreActor, 7, Void >;
															#line 5542 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	WaitRestoreActor(Database const& cx,Key const& tagName,Verbose const& verbose) 
															#line 50390 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<ERestoreState>(),
		   WaitRestoreActorState<WaitRestoreActor>(cx, tagName, verbose)
	{
		fdb_probe_actor_enter("waitRestore", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("waitRestore");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("waitRestore", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< WaitRestoreActor, 0, Optional<UidAndAbortedFlagT> >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< WaitRestoreActor, 1, std::string >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< WaitRestoreActor, 2, ERestoreState >*)0, actor_cancelled()); break;
		case 4: this->a_callback_error((ActorCallback< WaitRestoreActor, 3, bool >*)0, actor_cancelled()); break;
		case 5: this->a_callback_error((ActorCallback< WaitRestoreActor, 4, Void >*)0, actor_cancelled()); break;
		case 6: this->a_callback_error((ActorCallback< WaitRestoreActor, 5, Void >*)0, actor_cancelled()); break;
		case 7: this->a_callback_error((ActorCallback< WaitRestoreActor, 6, Void >*)0, actor_cancelled()); break;
		case 8: this->a_callback_error((ActorCallback< WaitRestoreActor, 7, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 5542 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<ERestoreState> waitRestore( Database const& cx, Key const& tagName, Verbose const& verbose ) {
															#line 5542 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<ERestoreState>(new WaitRestoreActor(cx, tagName, verbose));
															#line 50424 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 5590 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

																#line 50429 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via discontinueBackup()
															#line 5591 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class DiscontinueBackupActor>
															#line 5591 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class DiscontinueBackupActorState {
															#line 50435 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 5591 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	DiscontinueBackupActorState(FileBackupAgent* const& backupAgent,Reference<ReadYourWritesTransaction> const& tr,Key const& tagName) 
															#line 5591 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 5591 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : backupAgent(backupAgent),
															#line 5591 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tr(tr),
															#line 5591 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tagName(tagName)
															#line 50446 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("discontinueBackup", reinterpret_cast<unsigned long>(this));

	}
	~DiscontinueBackupActorState() 
	{
		fdb_probe_actor_destroy("discontinueBackup", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 5594 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 5595 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 5597 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tag = makeBackupTag(tagName.toString());
															#line 5598 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<UidAndAbortedFlagT> __when_expr_0 = tag.getOrThrow(tr, Snapshot::False, backup_unneeded());
															#line 5598 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<DiscontinueBackupActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 50469 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<DiscontinueBackupActor*>(this)->actor_wait_state = 1;
															#line 5598 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< DiscontinueBackupActor, 0, UidAndAbortedFlagT >*>(static_cast<DiscontinueBackupActor*>(this)));
															#line 50474 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~DiscontinueBackupActorState();
		static_cast<DiscontinueBackupActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 5599 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config = BackupConfig(current.first);
															#line 5600 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<EBackupState> __when_expr_1 = config.stateEnum().getD(tr, Snapshot::False, EBackupState::STATE_NEVERRAN);
															#line 5600 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<DiscontinueBackupActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 50501 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<DiscontinueBackupActor*>(this)->actor_wait_state = 2;
															#line 5600 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< DiscontinueBackupActor, 1, EBackupState >*>(static_cast<DiscontinueBackupActor*>(this)));
															#line 50506 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1when1(UidAndAbortedFlagT const& __current,int loopDepth) 
	{
															#line 5598 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		current = __current;
															#line 50515 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1when1(UidAndAbortedFlagT && __current,int loopDepth) 
	{
		current = std::move(__current);
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<DiscontinueBackupActor*>(this)->actor_wait_state > 0) static_cast<DiscontinueBackupActor*>(this)->actor_wait_state = 0;
		static_cast<DiscontinueBackupActor*>(this)->ActorCallback< DiscontinueBackupActor, 0, UidAndAbortedFlagT >::remove();

	}
	void a_callback_fire(ActorCallback< DiscontinueBackupActor, 0, UidAndAbortedFlagT >*,UidAndAbortedFlagT const& value) 
	{
		fdb_probe_actor_enter("discontinueBackup", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("discontinueBackup", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< DiscontinueBackupActor, 0, UidAndAbortedFlagT >*,UidAndAbortedFlagT && value) 
	{
		fdb_probe_actor_enter("discontinueBackup", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("discontinueBackup", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< DiscontinueBackupActor, 0, UidAndAbortedFlagT >*,Error err) 
	{
		fdb_probe_actor_enter("discontinueBackup", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("discontinueBackup", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont2(int loopDepth) 
	{
															#line 5602 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!FileBackupAgent::isRunnable(status))
															#line 50582 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5603 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			return a_body1Catch1(backup_unneeded(), loopDepth);
															#line 50586 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 5608 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Optional<Version>> __when_expr_2 = config.getLatestRestorableVersion(tr);
															#line 5608 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<DiscontinueBackupActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 50592 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont2when1(__when_expr_2.get(), loopDepth); };
		static_cast<DiscontinueBackupActor*>(this)->actor_wait_state = 3;
															#line 5608 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< DiscontinueBackupActor, 2, Optional<Version> >*>(static_cast<DiscontinueBackupActor*>(this)));
															#line 50597 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1when1(EBackupState const& __status,int loopDepth) 
	{
															#line 5600 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		status = __status;
															#line 50606 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont2(loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(EBackupState && __status,int loopDepth) 
	{
		status = std::move(__status);
		loopDepth = a_body1cont2(loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<DiscontinueBackupActor*>(this)->actor_wait_state > 0) static_cast<DiscontinueBackupActor*>(this)->actor_wait_state = 0;
		static_cast<DiscontinueBackupActor*>(this)->ActorCallback< DiscontinueBackupActor, 1, EBackupState >::remove();

	}
	void a_callback_fire(ActorCallback< DiscontinueBackupActor, 1, EBackupState >*,EBackupState const& value) 
	{
		fdb_probe_actor_enter("discontinueBackup", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("discontinueBackup", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< DiscontinueBackupActor, 1, EBackupState >*,EBackupState && value) 
	{
		fdb_probe_actor_enter("discontinueBackup", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("discontinueBackup", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< DiscontinueBackupActor, 1, EBackupState >*,Error err) 
	{
		fdb_probe_actor_enter("discontinueBackup", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("discontinueBackup", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont3(int loopDepth) 
	{
															#line 5610 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent(SevInfo, "FBA_DiscontinueBackup") .detail("AlreadyRestorable", latestRestorableVersion.present() ? "Yes" : "No") .detail("TagName", tag.tagName.c_str()) .detail("Status", BackupAgentBase::getStateText(status));
															#line 5615 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (latestRestorableVersion.present())
															#line 50675 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5617 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_3 = tag.cancel(tr);
															#line 5617 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<DiscontinueBackupActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 50681 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1cont3when1(__when_expr_3.get(), loopDepth); };
			static_cast<DiscontinueBackupActor*>(this)->actor_wait_state = 4;
															#line 5617 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< DiscontinueBackupActor, 3, Void >*>(static_cast<DiscontinueBackupActor*>(this)));
															#line 50686 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont5(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont2when1(Optional<Version> const& __latestRestorableVersion,int loopDepth) 
	{
															#line 5608 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		latestRestorableVersion = __latestRestorableVersion;
															#line 50700 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont3(loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(Optional<Version> && __latestRestorableVersion,int loopDepth) 
	{
		latestRestorableVersion = std::move(__latestRestorableVersion);
		loopDepth = a_body1cont3(loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<DiscontinueBackupActor*>(this)->actor_wait_state > 0) static_cast<DiscontinueBackupActor*>(this)->actor_wait_state = 0;
		static_cast<DiscontinueBackupActor*>(this)->ActorCallback< DiscontinueBackupActor, 2, Optional<Version> >::remove();

	}
	void a_callback_fire(ActorCallback< DiscontinueBackupActor, 2, Optional<Version> >*,Optional<Version> const& value) 
	{
		fdb_probe_actor_enter("discontinueBackup", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("discontinueBackup", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< DiscontinueBackupActor, 2, Optional<Version> >*,Optional<Version> && value) 
	{
		fdb_probe_actor_enter("discontinueBackup", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("discontinueBackup", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< DiscontinueBackupActor, 2, Optional<Version> >*,Error err) 
	{
		fdb_probe_actor_enter("discontinueBackup", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("discontinueBackup", reinterpret_cast<unsigned long>(this), 2);

	}
	int a_body1cont5(int loopDepth) 
	{
															#line 5631 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<bool> __when_expr_7 = config.stopWhenDone().getOrThrow(tr);
															#line 5631 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<DiscontinueBackupActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 50769 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_7.isReady()) { if (__when_expr_7.isError()) return a_body1Catch1(__when_expr_7.getError(), loopDepth); else return a_body1cont5when1(__when_expr_7.get(), loopDepth); };
		static_cast<DiscontinueBackupActor*>(this)->actor_wait_state = 8;
															#line 5631 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_7.addCallbackAndClear(static_cast<ActorCallback< DiscontinueBackupActor, 7, bool >*>(static_cast<DiscontinueBackupActor*>(this)));
															#line 50774 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont6(Void const& _,int loopDepth) 
	{
															#line 5619 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->setOption(FDBTransactionOptions::COMMIT_ON_FIRST_PROXY);
															#line 5621 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Key> __when_expr_4 = config.destUidValue().getOrThrow(tr);
															#line 5621 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<DiscontinueBackupActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 50787 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1cont6when1(__when_expr_4.get(), loopDepth); };
		static_cast<DiscontinueBackupActor*>(this)->actor_wait_state = 5;
															#line 5621 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< DiscontinueBackupActor, 4, Key >*>(static_cast<DiscontinueBackupActor*>(this)));
															#line 50792 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont6(Void && _,int loopDepth) 
	{
															#line 5619 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->setOption(FDBTransactionOptions::COMMIT_ON_FIRST_PROXY);
															#line 5621 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Key> __when_expr_4 = config.destUidValue().getOrThrow(tr);
															#line 5621 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<DiscontinueBackupActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 50805 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1cont6when1(__when_expr_4.get(), loopDepth); };
		static_cast<DiscontinueBackupActor*>(this)->actor_wait_state = 5;
															#line 5621 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< DiscontinueBackupActor, 4, Key >*>(static_cast<DiscontinueBackupActor*>(this)));
															#line 50810 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont3when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont6(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont3when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont6(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose4() 
	{
		if (static_cast<DiscontinueBackupActor*>(this)->actor_wait_state > 0) static_cast<DiscontinueBackupActor*>(this)->actor_wait_state = 0;
		static_cast<DiscontinueBackupActor*>(this)->ActorCallback< DiscontinueBackupActor, 3, Void >::remove();

	}
	void a_callback_fire(ActorCallback< DiscontinueBackupActor, 3, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("discontinueBackup", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont3when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("discontinueBackup", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_fire(ActorCallback< DiscontinueBackupActor, 3, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("discontinueBackup", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont3when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("discontinueBackup", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_error(ActorCallback< DiscontinueBackupActor, 3, Void >*,Error err) 
	{
		fdb_probe_actor_enter("discontinueBackup", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("discontinueBackup", reinterpret_cast<unsigned long>(this), 3);

	}
	int a_body1cont7(int loopDepth) 
	{
															#line 5622 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_5 = success(tr->getReadVersion());
															#line 5622 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<DiscontinueBackupActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 50884 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_5.isReady()) { if (__when_expr_5.isError()) return a_body1Catch1(__when_expr_5.getError(), loopDepth); else return a_body1cont7when1(__when_expr_5.get(), loopDepth); };
		static_cast<DiscontinueBackupActor*>(this)->actor_wait_state = 6;
															#line 5622 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_5.addCallbackAndClear(static_cast<ActorCallback< DiscontinueBackupActor, 5, Void >*>(static_cast<DiscontinueBackupActor*>(this)));
															#line 50889 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont6when1(Key const& __destUidValue,int loopDepth) 
	{
															#line 5621 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		destUidValue = __destUidValue;
															#line 50898 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont7(loopDepth);

		return loopDepth;
	}
	int a_body1cont6when1(Key && __destUidValue,int loopDepth) 
	{
		destUidValue = std::move(__destUidValue);
		loopDepth = a_body1cont7(loopDepth);

		return loopDepth;
	}
	void a_exitChoose5() 
	{
		if (static_cast<DiscontinueBackupActor*>(this)->actor_wait_state > 0) static_cast<DiscontinueBackupActor*>(this)->actor_wait_state = 0;
		static_cast<DiscontinueBackupActor*>(this)->ActorCallback< DiscontinueBackupActor, 4, Key >::remove();

	}
	void a_callback_fire(ActorCallback< DiscontinueBackupActor, 4, Key >*,Key const& value) 
	{
		fdb_probe_actor_enter("discontinueBackup", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont6when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("discontinueBackup", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_fire(ActorCallback< DiscontinueBackupActor, 4, Key >*,Key && value) 
	{
		fdb_probe_actor_enter("discontinueBackup", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont6when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("discontinueBackup", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_error(ActorCallback< DiscontinueBackupActor, 4, Key >*,Error err) 
	{
		fdb_probe_actor_enter("discontinueBackup", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("discontinueBackup", reinterpret_cast<unsigned long>(this), 4);

	}
	int a_body1cont8(Void const& _,int loopDepth) 
	{
															#line 5623 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_6 = eraseLogData(tr, config.getUidAsKey(), destUidValue) && fileBackup::clearBackupStartID(tr, config.getUid());
															#line 5623 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<DiscontinueBackupActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 50967 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_6.isReady()) { if (__when_expr_6.isError()) return a_body1Catch1(__when_expr_6.getError(), loopDepth); else return a_body1cont8when1(__when_expr_6.get(), loopDepth); };
		static_cast<DiscontinueBackupActor*>(this)->actor_wait_state = 7;
															#line 5623 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_6.addCallbackAndClear(static_cast<ActorCallback< DiscontinueBackupActor, 6, Void >*>(static_cast<DiscontinueBackupActor*>(this)));
															#line 50972 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont8(Void && _,int loopDepth) 
	{
															#line 5623 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_6 = eraseLogData(tr, config.getUidAsKey(), destUidValue) && fileBackup::clearBackupStartID(tr, config.getUid());
															#line 5623 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<DiscontinueBackupActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 50983 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_6.isReady()) { if (__when_expr_6.isError()) return a_body1Catch1(__when_expr_6.getError(), loopDepth); else return a_body1cont8when1(__when_expr_6.get(), loopDepth); };
		static_cast<DiscontinueBackupActor*>(this)->actor_wait_state = 7;
															#line 5623 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_6.addCallbackAndClear(static_cast<ActorCallback< DiscontinueBackupActor, 6, Void >*>(static_cast<DiscontinueBackupActor*>(this)));
															#line 50988 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont7when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont8(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont7when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont8(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose6() 
	{
		if (static_cast<DiscontinueBackupActor*>(this)->actor_wait_state > 0) static_cast<DiscontinueBackupActor*>(this)->actor_wait_state = 0;
		static_cast<DiscontinueBackupActor*>(this)->ActorCallback< DiscontinueBackupActor, 5, Void >::remove();

	}
	void a_callback_fire(ActorCallback< DiscontinueBackupActor, 5, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("discontinueBackup", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont7when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("discontinueBackup", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_fire(ActorCallback< DiscontinueBackupActor, 5, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("discontinueBackup", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont7when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("discontinueBackup", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_error(ActorCallback< DiscontinueBackupActor, 5, Void >*,Error err) 
	{
		fdb_probe_actor_enter("discontinueBackup", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("discontinueBackup", reinterpret_cast<unsigned long>(this), 5);

	}
	int a_body1cont9(Void const& _,int loopDepth) 
	{
															#line 5626 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config.stateEnum().set(tr, EBackupState::STATE_COMPLETED);
															#line 5628 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<DiscontinueBackupActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~DiscontinueBackupActorState(); static_cast<DiscontinueBackupActor*>(this)->destroy(); return 0; }
															#line 51062 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<DiscontinueBackupActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~DiscontinueBackupActorState();
		static_cast<DiscontinueBackupActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont9(Void && _,int loopDepth) 
	{
															#line 5626 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config.stateEnum().set(tr, EBackupState::STATE_COMPLETED);
															#line 5628 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<DiscontinueBackupActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~DiscontinueBackupActorState(); static_cast<DiscontinueBackupActor*>(this)->destroy(); return 0; }
															#line 51076 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<DiscontinueBackupActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~DiscontinueBackupActorState();
		static_cast<DiscontinueBackupActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont8when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont9(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont8when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont9(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose7() 
	{
		if (static_cast<DiscontinueBackupActor*>(this)->actor_wait_state > 0) static_cast<DiscontinueBackupActor*>(this)->actor_wait_state = 0;
		static_cast<DiscontinueBackupActor*>(this)->ActorCallback< DiscontinueBackupActor, 6, Void >::remove();

	}
	void a_callback_fire(ActorCallback< DiscontinueBackupActor, 6, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("discontinueBackup", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1cont8when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("discontinueBackup", reinterpret_cast<unsigned long>(this), 6);

	}
	void a_callback_fire(ActorCallback< DiscontinueBackupActor, 6, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("discontinueBackup", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1cont8when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("discontinueBackup", reinterpret_cast<unsigned long>(this), 6);

	}
	void a_callback_error(ActorCallback< DiscontinueBackupActor, 6, Void >*,Error err) 
	{
		fdb_probe_actor_enter("discontinueBackup", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("discontinueBackup", reinterpret_cast<unsigned long>(this), 6);

	}
	int a_body1cont11(int loopDepth) 
	{
															#line 5633 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (stopWhenDone)
															#line 51151 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5634 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			return a_body1Catch1(backup_duplicate(), loopDepth);
															#line 51155 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 5637 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config.stopWhenDone().set(tr, true);
															#line 5639 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<DiscontinueBackupActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~DiscontinueBackupActorState(); static_cast<DiscontinueBackupActor*>(this)->destroy(); return 0; }
															#line 51161 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<DiscontinueBackupActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~DiscontinueBackupActorState();
		static_cast<DiscontinueBackupActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont5when1(bool const& __stopWhenDone,int loopDepth) 
	{
															#line 5631 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		stopWhenDone = __stopWhenDone;
															#line 51173 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont11(loopDepth);

		return loopDepth;
	}
	int a_body1cont5when1(bool && __stopWhenDone,int loopDepth) 
	{
		stopWhenDone = std::move(__stopWhenDone);
		loopDepth = a_body1cont11(loopDepth);

		return loopDepth;
	}
	void a_exitChoose8() 
	{
		if (static_cast<DiscontinueBackupActor*>(this)->actor_wait_state > 0) static_cast<DiscontinueBackupActor*>(this)->actor_wait_state = 0;
		static_cast<DiscontinueBackupActor*>(this)->ActorCallback< DiscontinueBackupActor, 7, bool >::remove();

	}
	void a_callback_fire(ActorCallback< DiscontinueBackupActor, 7, bool >*,bool const& value) 
	{
		fdb_probe_actor_enter("discontinueBackup", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1cont5when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("discontinueBackup", reinterpret_cast<unsigned long>(this), 7);

	}
	void a_callback_fire(ActorCallback< DiscontinueBackupActor, 7, bool >*,bool && value) 
	{
		fdb_probe_actor_enter("discontinueBackup", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1cont5when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("discontinueBackup", reinterpret_cast<unsigned long>(this), 7);

	}
	void a_callback_error(ActorCallback< DiscontinueBackupActor, 7, bool >*,Error err) 
	{
		fdb_probe_actor_enter("discontinueBackup", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("discontinueBackup", reinterpret_cast<unsigned long>(this), 7);

	}
															#line 5591 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	FileBackupAgent* backupAgent;
															#line 5591 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 5591 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key tagName;
															#line 5597 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	KeyBackedTag tag;
															#line 5598 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	UidAndAbortedFlagT current;
															#line 5599 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	BackupConfig config;
															#line 5600 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	EBackupState status;
															#line 5608 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<Version> latestRestorableVersion;
															#line 5621 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key destUidValue;
															#line 5631 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	bool stopWhenDone;
															#line 51256 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via discontinueBackup()
															#line 5591 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class DiscontinueBackupActor final : public Actor<Void>, public ActorCallback< DiscontinueBackupActor, 0, UidAndAbortedFlagT >, public ActorCallback< DiscontinueBackupActor, 1, EBackupState >, public ActorCallback< DiscontinueBackupActor, 2, Optional<Version> >, public ActorCallback< DiscontinueBackupActor, 3, Void >, public ActorCallback< DiscontinueBackupActor, 4, Key >, public ActorCallback< DiscontinueBackupActor, 5, Void >, public ActorCallback< DiscontinueBackupActor, 6, Void >, public ActorCallback< DiscontinueBackupActor, 7, bool >, public FastAllocated<DiscontinueBackupActor>, public DiscontinueBackupActorState<DiscontinueBackupActor> {
															#line 51261 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<DiscontinueBackupActor>::operator new;
	using FastAllocated<DiscontinueBackupActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< DiscontinueBackupActor, 0, UidAndAbortedFlagT >;
friend struct ActorCallback< DiscontinueBackupActor, 1, EBackupState >;
friend struct ActorCallback< DiscontinueBackupActor, 2, Optional<Version> >;
friend struct ActorCallback< DiscontinueBackupActor, 3, Void >;
friend struct ActorCallback< DiscontinueBackupActor, 4, Key >;
friend struct ActorCallback< DiscontinueBackupActor, 5, Void >;
friend struct ActorCallback< DiscontinueBackupActor, 6, Void >;
friend struct ActorCallback< DiscontinueBackupActor, 7, bool >;
															#line 5591 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	DiscontinueBackupActor(FileBackupAgent* const& backupAgent,Reference<ReadYourWritesTransaction> const& tr,Key const& tagName) 
															#line 51279 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   DiscontinueBackupActorState<DiscontinueBackupActor>(backupAgent, tr, tagName)
	{
		fdb_probe_actor_enter("discontinueBackup", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("discontinueBackup");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("discontinueBackup", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< DiscontinueBackupActor, 0, UidAndAbortedFlagT >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< DiscontinueBackupActor, 1, EBackupState >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< DiscontinueBackupActor, 2, Optional<Version> >*)0, actor_cancelled()); break;
		case 4: this->a_callback_error((ActorCallback< DiscontinueBackupActor, 3, Void >*)0, actor_cancelled()); break;
		case 5: this->a_callback_error((ActorCallback< DiscontinueBackupActor, 4, Key >*)0, actor_cancelled()); break;
		case 6: this->a_callback_error((ActorCallback< DiscontinueBackupActor, 5, Void >*)0, actor_cancelled()); break;
		case 7: this->a_callback_error((ActorCallback< DiscontinueBackupActor, 6, Void >*)0, actor_cancelled()); break;
		case 8: this->a_callback_error((ActorCallback< DiscontinueBackupActor, 7, bool >*)0, actor_cancelled()); break;
		}

	}
};
															#line 5591 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> discontinueBackup( FileBackupAgent* const& backupAgent, Reference<ReadYourWritesTransaction> const& tr, Key const& tagName ) {
															#line 5591 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new DiscontinueBackupActor(backupAgent, tr, tagName));
															#line 51313 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 5641 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

																#line 51318 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via abortBackup()
															#line 5642 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class AbortBackupActor>
															#line 5642 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class AbortBackupActorState {
															#line 51324 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 5642 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	AbortBackupActorState(FileBackupAgent* const& backupAgent,Reference<ReadYourWritesTransaction> const& tr,std::string const& tagName) 
															#line 5642 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 5642 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : backupAgent(backupAgent),
															#line 5642 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tr(tr),
															#line 5642 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tagName(tagName)
															#line 51335 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("abortBackup", reinterpret_cast<unsigned long>(this));

	}
	~AbortBackupActorState() 
	{
		fdb_probe_actor_destroy("abortBackup", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 5645 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 5646 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 5648 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tag = makeBackupTag(tagName);
															#line 5649 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<UidAndAbortedFlagT> __when_expr_0 = tag.getOrThrow(tr, Snapshot::False, backup_unneeded());
															#line 5649 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<AbortBackupActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 51358 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<AbortBackupActor*>(this)->actor_wait_state = 1;
															#line 5649 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< AbortBackupActor, 0, UidAndAbortedFlagT >*>(static_cast<AbortBackupActor*>(this)));
															#line 51363 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~AbortBackupActorState();
		static_cast<AbortBackupActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 5651 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config = BackupConfig(current.first);
															#line 5652 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Key> __when_expr_1 = config.destUidValue().getOrThrow(tr);
															#line 5652 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AbortBackupActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 51390 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
		static_cast<AbortBackupActor*>(this)->actor_wait_state = 2;
															#line 5652 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< AbortBackupActor, 1, Key >*>(static_cast<AbortBackupActor*>(this)));
															#line 51395 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1when1(UidAndAbortedFlagT const& __current,int loopDepth) 
	{
															#line 5649 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		current = __current;
															#line 51404 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1when1(UidAndAbortedFlagT && __current,int loopDepth) 
	{
		current = std::move(__current);
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<AbortBackupActor*>(this)->actor_wait_state > 0) static_cast<AbortBackupActor*>(this)->actor_wait_state = 0;
		static_cast<AbortBackupActor*>(this)->ActorCallback< AbortBackupActor, 0, UidAndAbortedFlagT >::remove();

	}
	void a_callback_fire(ActorCallback< AbortBackupActor, 0, UidAndAbortedFlagT >*,UidAndAbortedFlagT const& value) 
	{
		fdb_probe_actor_enter("abortBackup", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortBackup", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< AbortBackupActor, 0, UidAndAbortedFlagT >*,UidAndAbortedFlagT && value) 
	{
		fdb_probe_actor_enter("abortBackup", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortBackup", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< AbortBackupActor, 0, UidAndAbortedFlagT >*,Error err) 
	{
		fdb_probe_actor_enter("abortBackup", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortBackup", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont2(int loopDepth) 
	{
															#line 5653 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<EBackupState> __when_expr_2 = config.stateEnum().getD(tr, Snapshot::False, EBackupState::STATE_NEVERRAN);
															#line 5653 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AbortBackupActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 51473 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont2when1(__when_expr_2.get(), loopDepth); };
		static_cast<AbortBackupActor*>(this)->actor_wait_state = 3;
															#line 5653 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< AbortBackupActor, 2, EBackupState >*>(static_cast<AbortBackupActor*>(this)));
															#line 51478 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1when1(Key const& __destUidValue,int loopDepth) 
	{
															#line 5652 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		destUidValue = __destUidValue;
															#line 51487 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont2(loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Key && __destUidValue,int loopDepth) 
	{
		destUidValue = std::move(__destUidValue);
		loopDepth = a_body1cont2(loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<AbortBackupActor*>(this)->actor_wait_state > 0) static_cast<AbortBackupActor*>(this)->actor_wait_state = 0;
		static_cast<AbortBackupActor*>(this)->ActorCallback< AbortBackupActor, 1, Key >::remove();

	}
	void a_callback_fire(ActorCallback< AbortBackupActor, 1, Key >*,Key const& value) 
	{
		fdb_probe_actor_enter("abortBackup", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortBackup", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< AbortBackupActor, 1, Key >*,Key && value) 
	{
		fdb_probe_actor_enter("abortBackup", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortBackup", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< AbortBackupActor, 1, Key >*,Error err) 
	{
		fdb_probe_actor_enter("abortBackup", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortBackup", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont3(EBackupState const& status,int loopDepth) 
	{
															#line 5655 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!backupAgent->isRunnable(status))
															#line 51554 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5656 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			return a_body1Catch1(backup_unneeded(), loopDepth);
															#line 51558 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 5659 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent(SevInfo, "FBA_AbortBackup") .detail("TagName", tagName.c_str()) .detail("Status", BackupAgentBase::getStateText(status));
															#line 5664 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_3 = tag.cancel(tr);
															#line 5664 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AbortBackupActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 51566 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1cont3when1(__when_expr_3.get(), loopDepth); };
		static_cast<AbortBackupActor*>(this)->actor_wait_state = 4;
															#line 5664 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< AbortBackupActor, 3, Void >*>(static_cast<AbortBackupActor*>(this)));
															#line 51571 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont3(EBackupState && status,int loopDepth) 
	{
															#line 5655 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!backupAgent->isRunnable(status))
															#line 51580 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5656 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			return a_body1Catch1(backup_unneeded(), loopDepth);
															#line 51584 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 5659 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent(SevInfo, "FBA_AbortBackup") .detail("TagName", tagName.c_str()) .detail("Status", BackupAgentBase::getStateText(status));
															#line 5664 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_3 = tag.cancel(tr);
															#line 5664 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AbortBackupActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 51592 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1cont3when1(__when_expr_3.get(), loopDepth); };
		static_cast<AbortBackupActor*>(this)->actor_wait_state = 4;
															#line 5664 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< AbortBackupActor, 3, Void >*>(static_cast<AbortBackupActor*>(this)));
															#line 51597 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont2when1(EBackupState const& status,int loopDepth) 
	{
		loopDepth = a_body1cont3(status, loopDepth);

		return loopDepth;
	}
	int a_body1cont2when1(EBackupState && status,int loopDepth) 
	{
		loopDepth = a_body1cont3(std::move(status), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<AbortBackupActor*>(this)->actor_wait_state > 0) static_cast<AbortBackupActor*>(this)->actor_wait_state = 0;
		static_cast<AbortBackupActor*>(this)->ActorCallback< AbortBackupActor, 2, EBackupState >::remove();

	}
	void a_callback_fire(ActorCallback< AbortBackupActor, 2, EBackupState >*,EBackupState const& value) 
	{
		fdb_probe_actor_enter("abortBackup", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortBackup", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< AbortBackupActor, 2, EBackupState >*,EBackupState && value) 
	{
		fdb_probe_actor_enter("abortBackup", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortBackup", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< AbortBackupActor, 2, EBackupState >*,Error err) 
	{
		fdb_probe_actor_enter("abortBackup", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortBackup", reinterpret_cast<unsigned long>(this), 2);

	}
	int a_body1cont4(Void const& _,int loopDepth) 
	{
															#line 5666 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_4 = eraseLogData(tr, config.getUidAsKey(), destUidValue) && fileBackup::clearBackupStartID(tr, config.getUid());
															#line 5666 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AbortBackupActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 51671 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1cont4when1(__when_expr_4.get(), loopDepth); };
		static_cast<AbortBackupActor*>(this)->actor_wait_state = 5;
															#line 5666 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< AbortBackupActor, 4, Void >*>(static_cast<AbortBackupActor*>(this)));
															#line 51676 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont4(Void && _,int loopDepth) 
	{
															#line 5666 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_4 = eraseLogData(tr, config.getUidAsKey(), destUidValue) && fileBackup::clearBackupStartID(tr, config.getUid());
															#line 5666 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AbortBackupActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 51687 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1cont4when1(__when_expr_4.get(), loopDepth); };
		static_cast<AbortBackupActor*>(this)->actor_wait_state = 5;
															#line 5666 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< AbortBackupActor, 4, Void >*>(static_cast<AbortBackupActor*>(this)));
															#line 51692 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont3when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont4(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont3when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont4(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose4() 
	{
		if (static_cast<AbortBackupActor*>(this)->actor_wait_state > 0) static_cast<AbortBackupActor*>(this)->actor_wait_state = 0;
		static_cast<AbortBackupActor*>(this)->ActorCallback< AbortBackupActor, 3, Void >::remove();

	}
	void a_callback_fire(ActorCallback< AbortBackupActor, 3, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("abortBackup", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont3when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortBackup", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_fire(ActorCallback< AbortBackupActor, 3, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("abortBackup", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont3when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortBackup", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_error(ActorCallback< AbortBackupActor, 3, Void >*,Error err) 
	{
		fdb_probe_actor_enter("abortBackup", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortBackup", reinterpret_cast<unsigned long>(this), 3);

	}
	int a_body1cont6(Void const& _,int loopDepth) 
	{
															#line 5669 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config.stateEnum().set(tr, EBackupState::STATE_ABORTED);
															#line 5671 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<AbortBackupActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~AbortBackupActorState(); static_cast<AbortBackupActor*>(this)->destroy(); return 0; }
															#line 51766 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<AbortBackupActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~AbortBackupActorState();
		static_cast<AbortBackupActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont6(Void && _,int loopDepth) 
	{
															#line 5669 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config.stateEnum().set(tr, EBackupState::STATE_ABORTED);
															#line 5671 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<AbortBackupActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~AbortBackupActorState(); static_cast<AbortBackupActor*>(this)->destroy(); return 0; }
															#line 51780 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<AbortBackupActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~AbortBackupActorState();
		static_cast<AbortBackupActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont4when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont6(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont4when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont6(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose5() 
	{
		if (static_cast<AbortBackupActor*>(this)->actor_wait_state > 0) static_cast<AbortBackupActor*>(this)->actor_wait_state = 0;
		static_cast<AbortBackupActor*>(this)->ActorCallback< AbortBackupActor, 4, Void >::remove();

	}
	void a_callback_fire(ActorCallback< AbortBackupActor, 4, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("abortBackup", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont4when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortBackup", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_fire(ActorCallback< AbortBackupActor, 4, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("abortBackup", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont4when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortBackup", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_error(ActorCallback< AbortBackupActor, 4, Void >*,Error err) 
	{
		fdb_probe_actor_enter("abortBackup", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("abortBackup", reinterpret_cast<unsigned long>(this), 4);

	}
															#line 5642 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	FileBackupAgent* backupAgent;
															#line 5642 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 5642 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::string tagName;
															#line 5648 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	KeyBackedTag tag;
															#line 5649 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	UidAndAbortedFlagT current;
															#line 5651 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	BackupConfig config;
															#line 5652 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key destUidValue;
															#line 51865 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via abortBackup()
															#line 5642 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class AbortBackupActor final : public Actor<Void>, public ActorCallback< AbortBackupActor, 0, UidAndAbortedFlagT >, public ActorCallback< AbortBackupActor, 1, Key >, public ActorCallback< AbortBackupActor, 2, EBackupState >, public ActorCallback< AbortBackupActor, 3, Void >, public ActorCallback< AbortBackupActor, 4, Void >, public FastAllocated<AbortBackupActor>, public AbortBackupActorState<AbortBackupActor> {
															#line 51870 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<AbortBackupActor>::operator new;
	using FastAllocated<AbortBackupActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< AbortBackupActor, 0, UidAndAbortedFlagT >;
friend struct ActorCallback< AbortBackupActor, 1, Key >;
friend struct ActorCallback< AbortBackupActor, 2, EBackupState >;
friend struct ActorCallback< AbortBackupActor, 3, Void >;
friend struct ActorCallback< AbortBackupActor, 4, Void >;
															#line 5642 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	AbortBackupActor(FileBackupAgent* const& backupAgent,Reference<ReadYourWritesTransaction> const& tr,std::string const& tagName) 
															#line 51885 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   AbortBackupActorState<AbortBackupActor>(backupAgent, tr, tagName)
	{
		fdb_probe_actor_enter("abortBackup", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("abortBackup");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("abortBackup", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< AbortBackupActor, 0, UidAndAbortedFlagT >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< AbortBackupActor, 1, Key >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< AbortBackupActor, 2, EBackupState >*)0, actor_cancelled()); break;
		case 4: this->a_callback_error((ActorCallback< AbortBackupActor, 3, Void >*)0, actor_cancelled()); break;
		case 5: this->a_callback_error((ActorCallback< AbortBackupActor, 4, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 5642 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> abortBackup( FileBackupAgent* const& backupAgent, Reference<ReadYourWritesTransaction> const& tr, std::string const& tagName ) {
															#line 5642 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new AbortBackupActor(backupAgent, tr, tagName));
															#line 51916 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 5673 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

																#line 51921 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via changePause()
															#line 5674 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class ChangePauseActor>
															#line 5674 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class ChangePauseActorState {
															#line 51927 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 5674 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	ChangePauseActorState(FileBackupAgent* const& backupAgent,Database const& db,bool const& pause) 
															#line 5674 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 5674 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : backupAgent(backupAgent),
															#line 5674 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   db(db),
															#line 5674 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   pause(pause),
															#line 5675 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tr(new ReadYourWritesTransaction(db)),
															#line 5676 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   change(backupAgent->taskBucket->changePause(db, pause))
															#line 51942 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("changePause", reinterpret_cast<unsigned long>(this));

	}
	~ChangePauseActorState() 
	{
		fdb_probe_actor_destroy("changePause", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 5678 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			;
															#line 51957 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = a_body1loopHead1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~ChangePauseActorState();
		static_cast<ChangePauseActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 5691 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_2 = change;
															#line 5691 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<ChangePauseActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 51982 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont1when1(__when_expr_2.get(), loopDepth); };
		static_cast<ChangePauseActor*>(this)->actor_wait_state = 3;
															#line 5691 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< ChangePauseActor, 2, Void >*>(static_cast<ChangePauseActor*>(this)));
															#line 51987 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1(int loopDepth) 
	{
															#line 5679 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 5680 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 5681 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr->setOption(FDBTransactionOptions::PRIORITY_SYSTEM_IMMEDIATE);
															#line 52007 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		try {
															#line 5684 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->set(backupPausedKey, pause ? "1"_sr : "0"_sr);
															#line 5685 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_0 = tr->commit();
															#line 5685 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<ChangePauseActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 52015 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1loopBody1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1loopBody1when1(__when_expr_0.get(), loopDepth); };
			static_cast<ChangePauseActor*>(this)->actor_wait_state = 1;
															#line 5685 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< ChangePauseActor, 0, Void >*>(static_cast<ChangePauseActor*>(this)));
															#line 52020 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1break1(int loopDepth) 
	{
		try {
			return a_body1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1loopHead1(0);

		return loopDepth;
	}
	int a_body1loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 5688 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_1 = tr->onError(e);
															#line 5688 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<ChangePauseActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 52057 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), std::max(0, loopDepth - 1)); else return a_body1loopBody1Catch1when1(__when_expr_1.get(), loopDepth); };
			static_cast<ChangePauseActor*>(this)->actor_wait_state = 2;
															#line 5688 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< ChangePauseActor, 1, Void >*>(static_cast<ChangePauseActor*>(this)));
															#line 52062 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1loopBody1cont2(Void const& _,int loopDepth) 
	{
		return a_body1break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1loopBody1cont2(Void && _,int loopDepth) 
	{
		return a_body1break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1loopBody1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<ChangePauseActor*>(this)->actor_wait_state > 0) static_cast<ChangePauseActor*>(this)->actor_wait_state = 0;
		static_cast<ChangePauseActor*>(this)->ActorCallback< ChangePauseActor, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< ChangePauseActor, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("changePause", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("changePause", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< ChangePauseActor, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("changePause", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("changePause", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< ChangePauseActor, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("changePause", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("changePause", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1loopBody1Catch1cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1Catch1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1Catch1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<ChangePauseActor*>(this)->actor_wait_state > 0) static_cast<ChangePauseActor*>(this)->actor_wait_state = 0;
		static_cast<ChangePauseActor*>(this)->ActorCallback< ChangePauseActor, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< ChangePauseActor, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("changePause", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("changePause", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< ChangePauseActor, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("changePause", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("changePause", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< ChangePauseActor, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("changePause", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("changePause", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont2(Void const& _,int loopDepth) 
	{
															#line 5692 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FileBackupAgentChangePaused").detail("Action", pause ? "Paused" : "Resumed");
															#line 5693 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<ChangePauseActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~ChangePauseActorState(); static_cast<ChangePauseActor*>(this)->destroy(); return 0; }
															#line 52229 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<ChangePauseActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~ChangePauseActorState();
		static_cast<ChangePauseActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont2(Void && _,int loopDepth) 
	{
															#line 5692 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FileBackupAgentChangePaused").detail("Action", pause ? "Paused" : "Resumed");
															#line 5693 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<ChangePauseActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~ChangePauseActorState(); static_cast<ChangePauseActor*>(this)->destroy(); return 0; }
															#line 52243 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<ChangePauseActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~ChangePauseActorState();
		static_cast<ChangePauseActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<ChangePauseActor*>(this)->actor_wait_state > 0) static_cast<ChangePauseActor*>(this)->actor_wait_state = 0;
		static_cast<ChangePauseActor*>(this)->ActorCallback< ChangePauseActor, 2, Void >::remove();

	}
	void a_callback_fire(ActorCallback< ChangePauseActor, 2, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("changePause", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("changePause", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< ChangePauseActor, 2, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("changePause", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("changePause", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< ChangePauseActor, 2, Void >*,Error err) 
	{
		fdb_probe_actor_enter("changePause", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("changePause", reinterpret_cast<unsigned long>(this), 2);

	}
															#line 5674 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	FileBackupAgent* backupAgent;
															#line 5674 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Database db;
															#line 5674 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	bool pause;
															#line 5675 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 5676 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<Void> change;
															#line 52324 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via changePause()
															#line 5674 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class ChangePauseActor final : public Actor<Void>, public ActorCallback< ChangePauseActor, 0, Void >, public ActorCallback< ChangePauseActor, 1, Void >, public ActorCallback< ChangePauseActor, 2, Void >, public FastAllocated<ChangePauseActor>, public ChangePauseActorState<ChangePauseActor> {
															#line 52329 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<ChangePauseActor>::operator new;
	using FastAllocated<ChangePauseActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< ChangePauseActor, 0, Void >;
friend struct ActorCallback< ChangePauseActor, 1, Void >;
friend struct ActorCallback< ChangePauseActor, 2, Void >;
															#line 5674 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	ChangePauseActor(FileBackupAgent* const& backupAgent,Database const& db,bool const& pause) 
															#line 52342 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   ChangePauseActorState<ChangePauseActor>(backupAgent, db, pause)
	{
		fdb_probe_actor_enter("changePause", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("changePause");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("changePause", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< ChangePauseActor, 0, Void >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< ChangePauseActor, 1, Void >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< ChangePauseActor, 2, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 5674 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> changePause( FileBackupAgent* const& backupAgent, Database const& db, bool const& pause ) {
															#line 5674 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new ChangePauseActor(backupAgent, db, pause));
															#line 52371 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 5695 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

	struct TimestampedVersion {
		Optional<Version> version;
		Optional<int64_t> epochs;

		bool present() const { return version.present(); }

		JsonBuilderObject toJSON() const {
			JsonBuilderObject doc;
			if (version.present()) {
				doc.setKey("Version", version.get());
				if (epochs.present()) {
					doc.setKey("EpochSeconds", epochs.get());
					doc.setKey("Timestamp", timeStampToString(epochs));
				}
			}
			return doc;
		}
	};

	// Helper actor for generating status
	// If f is present, lookup epochs using timekeeper and tr, return TimestampedVersion
																#line 52397 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via getTimestampedVersion()
															#line 5717 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class GetTimestampedVersionActor>
															#line 5717 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class GetTimestampedVersionActorState {
															#line 52403 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 5717 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	GetTimestampedVersionActorState(Reference<ReadYourWritesTransaction> const& tr,Future<Optional<Version>> const& f) 
															#line 5717 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 5717 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : tr(tr),
															#line 5717 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   f(f),
															#line 5719 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tv()
															#line 52414 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("getTimestampedVersion", reinterpret_cast<unsigned long>(this));

	}
	~GetTimestampedVersionActorState() 
	{
		fdb_probe_actor_destroy("getTimestampedVersion", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 5720 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_0 = store(tv.version, f);
															#line 5720 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<GetTimestampedVersionActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 52431 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<GetTimestampedVersionActor*>(this)->actor_wait_state = 1;
															#line 5720 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< GetTimestampedVersionActor, 0, Void >*>(static_cast<GetTimestampedVersionActor*>(this)));
															#line 52436 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~GetTimestampedVersionActorState();
		static_cast<GetTimestampedVersionActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Void const& _,int loopDepth) 
	{
															#line 5721 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (tv.version.present())
															#line 52459 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5722 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_1 = store(tv.epochs, timeKeeperEpochsFromVersion(tv.version.get(), tr));
															#line 5722 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<GetTimestampedVersionActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 52465 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
			static_cast<GetTimestampedVersionActor*>(this)->actor_wait_state = 2;
															#line 5722 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< GetTimestampedVersionActor, 1, Void >*>(static_cast<GetTimestampedVersionActor*>(this)));
															#line 52470 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont2(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont1(Void && _,int loopDepth) 
	{
															#line 5721 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (tv.version.present())
															#line 52484 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5722 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_1 = store(tv.epochs, timeKeeperEpochsFromVersion(tv.version.get(), tr));
															#line 5722 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<GetTimestampedVersionActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 52490 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
			static_cast<GetTimestampedVersionActor*>(this)->actor_wait_state = 2;
															#line 5722 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< GetTimestampedVersionActor, 1, Void >*>(static_cast<GetTimestampedVersionActor*>(this)));
															#line 52495 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont2(loopDepth);
		}

		return loopDepth;
	}
	int a_body1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<GetTimestampedVersionActor*>(this)->actor_wait_state > 0) static_cast<GetTimestampedVersionActor*>(this)->actor_wait_state = 0;
		static_cast<GetTimestampedVersionActor*>(this)->ActorCallback< GetTimestampedVersionActor, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< GetTimestampedVersionActor, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("getTimestampedVersion", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getTimestampedVersion", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< GetTimestampedVersionActor, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("getTimestampedVersion", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getTimestampedVersion", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< GetTimestampedVersionActor, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("getTimestampedVersion", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getTimestampedVersion", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont2(int loopDepth) 
	{
															#line 5724 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<GetTimestampedVersionActor*>(this)->SAV<TimestampedVersion>::futures) { (void)(tv); this->~GetTimestampedVersionActorState(); static_cast<GetTimestampedVersionActor*>(this)->destroy(); return 0; }
															#line 52572 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<GetTimestampedVersionActor*>(this)->SAV< TimestampedVersion >::value()) TimestampedVersion(std::move(tv)); // state_var_RVO
		this->~GetTimestampedVersionActorState();
		static_cast<GetTimestampedVersionActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont3(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2(loopDepth);

		return loopDepth;
	}
	int a_body1cont3(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2(loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<GetTimestampedVersionActor*>(this)->actor_wait_state > 0) static_cast<GetTimestampedVersionActor*>(this)->actor_wait_state = 0;
		static_cast<GetTimestampedVersionActor*>(this)->ActorCallback< GetTimestampedVersionActor, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< GetTimestampedVersionActor, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("getTimestampedVersion", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getTimestampedVersion", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< GetTimestampedVersionActor, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("getTimestampedVersion", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getTimestampedVersion", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< GetTimestampedVersionActor, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("getTimestampedVersion", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getTimestampedVersion", reinterpret_cast<unsigned long>(this), 1);

	}
															#line 5717 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 5717 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<Optional<Version>> f;
															#line 5719 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	TimestampedVersion tv;
															#line 52661 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via getTimestampedVersion()
															#line 5717 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class GetTimestampedVersionActor final : public Actor<TimestampedVersion>, public ActorCallback< GetTimestampedVersionActor, 0, Void >, public ActorCallback< GetTimestampedVersionActor, 1, Void >, public FastAllocated<GetTimestampedVersionActor>, public GetTimestampedVersionActorState<GetTimestampedVersionActor> {
															#line 52666 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<GetTimestampedVersionActor>::operator new;
	using FastAllocated<GetTimestampedVersionActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<TimestampedVersion>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< GetTimestampedVersionActor, 0, Void >;
friend struct ActorCallback< GetTimestampedVersionActor, 1, Void >;
															#line 5717 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	GetTimestampedVersionActor(Reference<ReadYourWritesTransaction> const& tr,Future<Optional<Version>> const& f) 
															#line 52678 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<TimestampedVersion>(),
		   GetTimestampedVersionActorState<GetTimestampedVersionActor>(tr, f)
	{
		fdb_probe_actor_enter("getTimestampedVersion", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("getTimestampedVersion");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("getTimestampedVersion", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< GetTimestampedVersionActor, 0, Void >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< GetTimestampedVersionActor, 1, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 5717 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<TimestampedVersion> getTimestampedVersion( Reference<ReadYourWritesTransaction> const& tr, Future<Optional<Version>> const& f ) {
															#line 5717 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<TimestampedVersion>(new GetTimestampedVersionActor(tr, f));
															#line 52706 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 5726 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

																#line 52711 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via getStatusJSON()
															#line 5727 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class GetStatusJSONActor>
															#line 5727 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class GetStatusJSONActorState {
															#line 52717 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 5727 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	GetStatusJSONActorState(FileBackupAgent* const& backupAgent,Database const& cx,std::string const& tagName) 
															#line 5727 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 5727 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : backupAgent(backupAgent),
															#line 5727 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   cx(cx),
															#line 5727 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tagName(tagName),
															#line 5728 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tr(new ReadYourWritesTransaction(cx))
															#line 52730 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("getStatusJSON", reinterpret_cast<unsigned long>(this));

	}
	~GetStatusJSONActorState() 
	{
		fdb_probe_actor_destroy("getStatusJSON", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 5730 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			;
															#line 52745 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = a_body1loopHead1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~GetStatusJSONActorState();
		static_cast<GetStatusJSONActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1(int loopDepth) 
	{
		try {
															#line 5732 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			doc = JsonBuilderObject();
															#line 5733 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			doc.setKey("SchemaVersion", "1.0.0");
															#line 5735 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 5736 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 5738 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tag = makeBackupTag(tagName);
															#line 5739 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			uidAndAbortedFlag = Optional<UidAndAbortedFlagT>();
															#line 5740 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			paused = Optional<Value>();
															#line 5741 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			recentReadVersion = Version();
															#line 5743 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_0 = store(paused, tr->get(backupAgent->taskBucket->getPauseKey())) && store(uidAndAbortedFlag, tag.get(tr)) && store(recentReadVersion, tr->getReadVersion());
															#line 5743 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<GetStatusJSONActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 52794 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1loopBody1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1loopBody1when1(__when_expr_0.get(), loopDepth); };
			static_cast<GetStatusJSONActor*>(this)->actor_wait_state = 1;
															#line 5743 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< GetStatusJSONActor, 0, Void >*>(static_cast<GetStatusJSONActor*>(this)));
															#line 52799 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1loopHead1(0);

		return loopDepth;
	}
	int a_body1loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 5873 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_5 = tr->onError(e);
															#line 5873 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<GetStatusJSONActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 52823 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_5.isReady()) { if (__when_expr_5.isError()) return a_body1Catch1(__when_expr_5.getError(), std::max(0, loopDepth - 1)); else return a_body1loopBody1Catch1when1(__when_expr_5.get(), loopDepth); };
			static_cast<GetStatusJSONActor*>(this)->actor_wait_state = 6;
															#line 5873 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_5.addCallbackAndClear(static_cast<ActorCallback< GetStatusJSONActor, 5, Void >*>(static_cast<GetStatusJSONActor*>(this)));
															#line 52828 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1loopBody1cont2(Void const& _,int loopDepth) 
	{
															#line 5746 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		doc.setKey("BackupAgentsPaused", paused.present());
															#line 5747 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		doc.setKey("Tag", tag.tagName);
															#line 5749 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (uidAndAbortedFlag.present())
															#line 52847 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5750 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			doc.setKey("UID", uidAndAbortedFlag.get().first.toString());
															#line 5752 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			config = BackupConfig(uidAndAbortedFlag.get().first);
															#line 5754 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<EBackupState> __when_expr_1 = config.stateEnum().getD(tr, Snapshot::False, EBackupState::STATE_NEVERRAN);
															#line 5754 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<GetStatusJSONActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 52857 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1loopBody1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1loopBody1cont2when1(__when_expr_1.get(), loopDepth); };
			static_cast<GetStatusJSONActor*>(this)->actor_wait_state = 2;
															#line 5754 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< GetStatusJSONActor, 1, EBackupState >*>(static_cast<GetStatusJSONActor*>(this)));
															#line 52862 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1loopBody1cont3(loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1cont2(Void && _,int loopDepth) 
	{
															#line 5746 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		doc.setKey("BackupAgentsPaused", paused.present());
															#line 5747 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		doc.setKey("Tag", tag.tagName);
															#line 5749 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (uidAndAbortedFlag.present())
															#line 52880 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5750 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			doc.setKey("UID", uidAndAbortedFlag.get().first.toString());
															#line 5752 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			config = BackupConfig(uidAndAbortedFlag.get().first);
															#line 5754 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<EBackupState> __when_expr_1 = config.stateEnum().getD(tr, Snapshot::False, EBackupState::STATE_NEVERRAN);
															#line 5754 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<GetStatusJSONActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 52890 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1loopBody1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1loopBody1cont2when1(__when_expr_1.get(), loopDepth); };
			static_cast<GetStatusJSONActor*>(this)->actor_wait_state = 2;
															#line 5754 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< GetStatusJSONActor, 1, EBackupState >*>(static_cast<GetStatusJSONActor*>(this)));
															#line 52895 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1loopBody1cont3(loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<GetStatusJSONActor*>(this)->actor_wait_state > 0) static_cast<GetStatusJSONActor*>(this)->actor_wait_state = 0;
		static_cast<GetStatusJSONActor*>(this)->ActorCallback< GetStatusJSONActor, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< GetStatusJSONActor, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("getStatusJSON", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatusJSON", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< GetStatusJSONActor, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("getStatusJSON", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatusJSON", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< GetStatusJSONActor, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("getStatusJSON", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatusJSON", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1loopBody1cont3(int loopDepth) 
	{
															#line 5871 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<GetStatusJSONActor*>(this)->SAV<std::string>::futures) { (void)(doc.getJson()); this->~GetStatusJSONActorState(); static_cast<GetStatusJSONActor*>(this)->destroy(); return 0; }
															#line 52972 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<GetStatusJSONActor*>(this)->SAV< std::string >::value()) std::string(doc.getJson());
		this->~GetStatusJSONActorState();
		static_cast<GetStatusJSONActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1loopBody1cont4(int loopDepth) 
	{
															#line 5756 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		JsonBuilderObject statusDoc;
															#line 5757 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		statusDoc.setKey("Name", BackupAgentBase::getStateName(backupState));
															#line 5758 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		statusDoc.setKey("Description", BackupAgentBase::getStateText(backupState));
															#line 5759 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		statusDoc.setKey("Completed", backupState == EBackupState::STATE_COMPLETED);
															#line 5760 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		statusDoc.setKey("Running", BackupAgentBase::isRunnable(backupState));
															#line 5761 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		doc.setKey("Status", statusDoc);
															#line 5763 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		done = Void();
															#line 5765 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (backupState != EBackupState::STATE_NEVERRAN)
															#line 52998 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5766 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			bc = Reference<IBackupContainer>();
															#line 5767 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			latestRestorable = TimestampedVersion();
															#line 5769 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_2 = store(latestRestorable, getTimestampedVersion(tr, config.getLatestRestorableVersion(tr))) && store(bc, config.backupContainer().getOrThrow(tr));
															#line 5769 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<GetStatusJSONActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 53008 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1loopBody1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1loopBody1cont4when1(__when_expr_2.get(), loopDepth); };
			static_cast<GetStatusJSONActor*>(this)->actor_wait_state = 3;
															#line 5769 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< GetStatusJSONActor, 2, Void >*>(static_cast<GetStatusJSONActor*>(this)));
															#line 53013 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1loopBody1cont5(loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1cont2when1(EBackupState const& __backupState,int loopDepth) 
	{
															#line 5754 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		backupState = __backupState;
															#line 53027 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1loopBody1cont4(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont2when1(EBackupState && __backupState,int loopDepth) 
	{
		backupState = std::move(__backupState);
		loopDepth = a_body1loopBody1cont4(loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<GetStatusJSONActor*>(this)->actor_wait_state > 0) static_cast<GetStatusJSONActor*>(this)->actor_wait_state = 0;
		static_cast<GetStatusJSONActor*>(this)->ActorCallback< GetStatusJSONActor, 1, EBackupState >::remove();

	}
	void a_callback_fire(ActorCallback< GetStatusJSONActor, 1, EBackupState >*,EBackupState const& value) 
	{
		fdb_probe_actor_enter("getStatusJSON", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatusJSON", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< GetStatusJSONActor, 1, EBackupState >*,EBackupState && value) 
	{
		fdb_probe_actor_enter("getStatusJSON", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatusJSON", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< GetStatusJSONActor, 1, EBackupState >*,Error err) 
	{
		fdb_probe_actor_enter("getStatusJSON", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatusJSON", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1loopBody1cont5(int loopDepth) 
	{
															#line 5788 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (backupState == EBackupState::STATE_RUNNING_DIFFERENTIAL || backupState == EBackupState::STATE_RUNNING)
															#line 53094 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5790 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			snapshotInterval = int64_t();
															#line 5791 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			logBytesWritten = int64_t();
															#line 5792 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			rangeBytesWritten = int64_t();
															#line 5793 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			stopWhenDone = bool();
															#line 5794 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			snapshotBegin = TimestampedVersion();
															#line 5795 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			snapshotTargetEnd = TimestampedVersion();
															#line 5796 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			latestLogEnd = TimestampedVersion();
															#line 5797 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			latestSnapshotEnd = TimestampedVersion();
															#line 5798 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			snapshotLastDispatch = TimestampedVersion();
															#line 5799 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			snapshotLastDispatchShardsBehind = Optional<int64_t>();
															#line 5801 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_3 = store(snapshotInterval, config.snapshotIntervalSeconds().getOrThrow(tr)) && store(logBytesWritten, config.logBytesWritten().getD(tr)) && store(rangeBytesWritten, config.rangeBytesWritten().getD(tr)) && store(stopWhenDone, config.stopWhenDone().getOrThrow(tr)) && store(snapshotBegin, getTimestampedVersion(tr, config.snapshotBeginVersion().get(tr))) && store(snapshotTargetEnd, getTimestampedVersion(tr, config.snapshotTargetEndVersion().get(tr))) && store(latestLogEnd, getTimestampedVersion(tr, config.latestLogEndVersion().get(tr))) && store(latestSnapshotEnd, getTimestampedVersion(tr, config.latestSnapshotEndVersion().get(tr))) && store(snapshotLastDispatch, getTimestampedVersion(tr, config.snapshotDispatchLastVersion().get(tr))) && store(snapshotLastDispatchShardsBehind, config.snapshotDispatchLastShardsBehind().get(tr));
															#line 5801 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<GetStatusJSONActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 53120 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1loopBody1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1loopBody1cont5when1(__when_expr_3.get(), loopDepth); };
			static_cast<GetStatusJSONActor*>(this)->actor_wait_state = 4;
															#line 5801 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< GetStatusJSONActor, 3, Void >*>(static_cast<GetStatusJSONActor*>(this)));
															#line 53125 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1loopBody1cont10(loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1cont6(Void const& _,int loopDepth) 
	{
															#line 5772 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		bc = fileBackup::getBackupContainerWithProxy(bc);
															#line 5774 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		doc.setKey("Restorable", latestRestorable.present());
															#line 5776 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (latestRestorable.present())
															#line 53143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5777 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			JsonBuilderObject o = latestRestorable.toJSON();
															#line 5778 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (backupState != EBackupState::STATE_COMPLETED)
															#line 53149 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 5779 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				o.setKey("LagSeconds", (recentReadVersion - latestRestorable.version.get()) / CLIENT_KNOBS->CORE_VERSIONSPERSECOND);
															#line 53153 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
															#line 5783 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			doc.setKey("LatestRestorablePoint", o);
															#line 53157 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 5785 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		doc.setKey("DestinationURL", bc->getURL());
															#line 53161 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1loopBody1cont5(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont6(Void && _,int loopDepth) 
	{
															#line 5772 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		bc = fileBackup::getBackupContainerWithProxy(bc);
															#line 5774 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		doc.setKey("Restorable", latestRestorable.present());
															#line 5776 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (latestRestorable.present())
															#line 53174 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5777 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			JsonBuilderObject o = latestRestorable.toJSON();
															#line 5778 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (backupState != EBackupState::STATE_COMPLETED)
															#line 53180 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 5779 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				o.setKey("LagSeconds", (recentReadVersion - latestRestorable.version.get()) / CLIENT_KNOBS->CORE_VERSIONSPERSECOND);
															#line 53184 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
															#line 5783 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			doc.setKey("LatestRestorablePoint", o);
															#line 53188 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 5785 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		doc.setKey("DestinationURL", bc->getURL());
															#line 53192 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1loopBody1cont5(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont4when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont6(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont4when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont6(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<GetStatusJSONActor*>(this)->actor_wait_state > 0) static_cast<GetStatusJSONActor*>(this)->actor_wait_state = 0;
		static_cast<GetStatusJSONActor*>(this)->ActorCallback< GetStatusJSONActor, 2, Void >::remove();

	}
	void a_callback_fire(ActorCallback< GetStatusJSONActor, 2, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("getStatusJSON", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1loopBody1cont4when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatusJSON", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< GetStatusJSONActor, 2, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("getStatusJSON", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1loopBody1cont4when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatusJSON", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< GetStatusJSONActor, 2, Void >*,Error err) 
	{
		fdb_probe_actor_enter("getStatusJSON", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatusJSON", reinterpret_cast<unsigned long>(this), 2);

	}
	int a_body1loopBody1cont10(int loopDepth) 
	{
															#line 5855 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<KeyBackedMap<int64_t, std::pair<std::string, Version>>::RangeResultType> __when_expr_4 = config.lastErrorPerType().getRange( tr, 0, std::numeric_limits<int>::max(), CLIENT_KNOBS->TOO_MANY);
															#line 5855 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<GetStatusJSONActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 53266 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1loopBody1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1loopBody1cont10when1(__when_expr_4.get(), loopDepth); };
		static_cast<GetStatusJSONActor*>(this)->actor_wait_state = 5;
															#line 5855 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< GetStatusJSONActor, 4, KeyBackedMap<int64_t, std::pair<std::string, Version>>::RangeResultType >*>(static_cast<GetStatusJSONActor*>(this)));
															#line 53271 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont11(Void const& _,int loopDepth) 
	{
															#line 5816 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		doc.setKey("StopAfterSnapshot", stopWhenDone);
															#line 5817 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		doc.setKey("SnapshotIntervalSeconds", snapshotInterval);
															#line 5818 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		doc.setKey("LogBytesWritten", logBytesWritten);
															#line 5819 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		doc.setKey("RangeBytesWritten", rangeBytesWritten);
															#line 5821 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (latestLogEnd.present())
															#line 53288 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5822 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			doc.setKey("LatestLogEnd", latestLogEnd.toJSON());
															#line 53292 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 5825 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (latestSnapshotEnd.present())
															#line 53296 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5826 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			doc.setKey("LatestSnapshotEnd", latestSnapshotEnd.toJSON());
															#line 53300 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 5829 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		JsonBuilderObject snapshot;
															#line 5831 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (snapshotBegin.present())
															#line 53306 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5832 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			snapshot.setKey("Begin", snapshotBegin.toJSON());
															#line 5834 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (snapshotTargetEnd.present())
															#line 53312 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 5835 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				snapshot.setKey("EndTarget", snapshotTargetEnd.toJSON());
															#line 5837 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				Version interval = snapshotTargetEnd.version.get() - snapshotBegin.version.get();
															#line 5838 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				snapshot.setKey("IntervalSeconds", interval / CLIENT_KNOBS->CORE_VERSIONSPERSECOND);
															#line 5840 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				Version elapsed = recentReadVersion - snapshotBegin.version.get();
															#line 5841 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				double progress = (interval > 0) ? (100.0 * elapsed / interval) : 100;
															#line 5842 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				snapshot.setKey("ExpectedProgress", progress);
															#line 53326 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
															#line 5845 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			JsonBuilderObject dispatchDoc = snapshotLastDispatch.toJSON();
															#line 5846 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (snapshotLastDispatchShardsBehind.present())
															#line 53332 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 5847 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				dispatchDoc.setKey("ShardsBehind", snapshotLastDispatchShardsBehind.get());
															#line 53336 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
															#line 5849 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			snapshot.setKey("LastDispatch", dispatchDoc);
															#line 53340 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 5852 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		doc.setKey("CurrentSnapshot", snapshot);
															#line 53344 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1loopBody1cont10(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont11(Void && _,int loopDepth) 
	{
															#line 5816 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		doc.setKey("StopAfterSnapshot", stopWhenDone);
															#line 5817 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		doc.setKey("SnapshotIntervalSeconds", snapshotInterval);
															#line 5818 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		doc.setKey("LogBytesWritten", logBytesWritten);
															#line 5819 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		doc.setKey("RangeBytesWritten", rangeBytesWritten);
															#line 5821 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (latestLogEnd.present())
															#line 53361 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5822 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			doc.setKey("LatestLogEnd", latestLogEnd.toJSON());
															#line 53365 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 5825 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (latestSnapshotEnd.present())
															#line 53369 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5826 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			doc.setKey("LatestSnapshotEnd", latestSnapshotEnd.toJSON());
															#line 53373 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 5829 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		JsonBuilderObject snapshot;
															#line 5831 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (snapshotBegin.present())
															#line 53379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5832 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			snapshot.setKey("Begin", snapshotBegin.toJSON());
															#line 5834 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (snapshotTargetEnd.present())
															#line 53385 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 5835 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				snapshot.setKey("EndTarget", snapshotTargetEnd.toJSON());
															#line 5837 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				Version interval = snapshotTargetEnd.version.get() - snapshotBegin.version.get();
															#line 5838 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				snapshot.setKey("IntervalSeconds", interval / CLIENT_KNOBS->CORE_VERSIONSPERSECOND);
															#line 5840 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				Version elapsed = recentReadVersion - snapshotBegin.version.get();
															#line 5841 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				double progress = (interval > 0) ? (100.0 * elapsed / interval) : 100;
															#line 5842 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				snapshot.setKey("ExpectedProgress", progress);
															#line 53399 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
															#line 5845 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			JsonBuilderObject dispatchDoc = snapshotLastDispatch.toJSON();
															#line 5846 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (snapshotLastDispatchShardsBehind.present())
															#line 53405 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 5847 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				dispatchDoc.setKey("ShardsBehind", snapshotLastDispatchShardsBehind.get());
															#line 53409 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
															#line 5849 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			snapshot.setKey("LastDispatch", dispatchDoc);
															#line 53413 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 5852 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		doc.setKey("CurrentSnapshot", snapshot);
															#line 53417 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1loopBody1cont10(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont5when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont11(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont5when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont11(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose4() 
	{
		if (static_cast<GetStatusJSONActor*>(this)->actor_wait_state > 0) static_cast<GetStatusJSONActor*>(this)->actor_wait_state = 0;
		static_cast<GetStatusJSONActor*>(this)->ActorCallback< GetStatusJSONActor, 3, Void >::remove();

	}
	void a_callback_fire(ActorCallback< GetStatusJSONActor, 3, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("getStatusJSON", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1loopBody1cont5when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatusJSON", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_fire(ActorCallback< GetStatusJSONActor, 3, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("getStatusJSON", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1loopBody1cont5when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatusJSON", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_error(ActorCallback< GetStatusJSONActor, 3, Void >*,Error err) 
	{
		fdb_probe_actor_enter("getStatusJSON", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatusJSON", reinterpret_cast<unsigned long>(this), 3);

	}
	int a_body1loopBody1cont10cont1(KeyBackedMap<int64_t, std::pair<std::string, Version>>::RangeResultType const& errors,int loopDepth) 
	{
															#line 5858 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		JsonBuilderArray errorList;
															#line 5859 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		for( auto& e : errors.results ) {
															#line 5860 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			std::string msg = e.second.first;
															#line 5861 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			Version ver = e.second.second;
															#line 5863 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			JsonBuilderObject errDoc;
															#line 5864 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			errDoc.setKey("Message", msg.c_str());
															#line 5865 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			errDoc.setKey("RelativeSeconds", (ver - recentReadVersion) / CLIENT_KNOBS->CORE_VERSIONSPERSECOND);
															#line 53501 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 5868 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		doc.setKey("Errors", errorList);
															#line 53505 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1loopBody1cont3(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont10cont1(KeyBackedMap<int64_t, std::pair<std::string, Version>>::RangeResultType && errors,int loopDepth) 
	{
															#line 5858 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		JsonBuilderArray errorList;
															#line 5859 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		for( auto& e : errors.results ) {
															#line 5860 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			std::string msg = e.second.first;
															#line 5861 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			Version ver = e.second.second;
															#line 5863 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			JsonBuilderObject errDoc;
															#line 5864 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			errDoc.setKey("Message", msg.c_str());
															#line 5865 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			errDoc.setKey("RelativeSeconds", (ver - recentReadVersion) / CLIENT_KNOBS->CORE_VERSIONSPERSECOND);
															#line 53526 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 5868 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		doc.setKey("Errors", errorList);
															#line 53530 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1loopBody1cont3(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont10when1(KeyBackedMap<int64_t, std::pair<std::string, Version>>::RangeResultType const& errors,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont10cont1(errors, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont10when1(KeyBackedMap<int64_t, std::pair<std::string, Version>>::RangeResultType && errors,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont10cont1(std::move(errors), loopDepth);

		return loopDepth;
	}
	void a_exitChoose5() 
	{
		if (static_cast<GetStatusJSONActor*>(this)->actor_wait_state > 0) static_cast<GetStatusJSONActor*>(this)->actor_wait_state = 0;
		static_cast<GetStatusJSONActor*>(this)->ActorCallback< GetStatusJSONActor, 4, KeyBackedMap<int64_t, std::pair<std::string, Version>>::RangeResultType >::remove();

	}
	void a_callback_fire(ActorCallback< GetStatusJSONActor, 4, KeyBackedMap<int64_t, std::pair<std::string, Version>>::RangeResultType >*,KeyBackedMap<int64_t, std::pair<std::string, Version>>::RangeResultType const& value) 
	{
		fdb_probe_actor_enter("getStatusJSON", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1loopBody1cont10when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatusJSON", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_fire(ActorCallback< GetStatusJSONActor, 4, KeyBackedMap<int64_t, std::pair<std::string, Version>>::RangeResultType >*,KeyBackedMap<int64_t, std::pair<std::string, Version>>::RangeResultType && value) 
	{
		fdb_probe_actor_enter("getStatusJSON", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1loopBody1cont10when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatusJSON", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_error(ActorCallback< GetStatusJSONActor, 4, KeyBackedMap<int64_t, std::pair<std::string, Version>>::RangeResultType >*,Error err) 
	{
		fdb_probe_actor_enter("getStatusJSON", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatusJSON", reinterpret_cast<unsigned long>(this), 4);

	}
	int a_body1loopBody1Catch1cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1Catch1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1Catch1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose6() 
	{
		if (static_cast<GetStatusJSONActor*>(this)->actor_wait_state > 0) static_cast<GetStatusJSONActor*>(this)->actor_wait_state = 0;
		static_cast<GetStatusJSONActor*>(this)->ActorCallback< GetStatusJSONActor, 5, Void >::remove();

	}
	void a_callback_fire(ActorCallback< GetStatusJSONActor, 5, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("getStatusJSON", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatusJSON", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_fire(ActorCallback< GetStatusJSONActor, 5, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("getStatusJSON", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatusJSON", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_error(ActorCallback< GetStatusJSONActor, 5, Void >*,Error err) 
	{
		fdb_probe_actor_enter("getStatusJSON", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatusJSON", reinterpret_cast<unsigned long>(this), 5);

	}
															#line 5727 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	FileBackupAgent* backupAgent;
															#line 5727 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Database cx;
															#line 5727 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::string tagName;
															#line 5728 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 5732 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	JsonBuilderObject doc;
															#line 5738 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	KeyBackedTag tag;
															#line 5739 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<UidAndAbortedFlagT> uidAndAbortedFlag;
															#line 5740 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<Value> paused;
															#line 5741 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version recentReadVersion;
															#line 5752 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	BackupConfig config;
															#line 5754 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	EBackupState backupState;
															#line 5763 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<Void> done;
															#line 5766 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<IBackupContainer> bc;
															#line 5767 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	TimestampedVersion latestRestorable;
															#line 5790 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int64_t snapshotInterval;
															#line 5791 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int64_t logBytesWritten;
															#line 5792 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int64_t rangeBytesWritten;
															#line 5793 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	bool stopWhenDone;
															#line 5794 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	TimestampedVersion snapshotBegin;
															#line 5795 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	TimestampedVersion snapshotTargetEnd;
															#line 5796 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	TimestampedVersion latestLogEnd;
															#line 5797 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	TimestampedVersion latestSnapshotEnd;
															#line 5798 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	TimestampedVersion snapshotLastDispatch;
															#line 5799 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<int64_t> snapshotLastDispatchShardsBehind;
															#line 53721 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via getStatusJSON()
															#line 5727 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class GetStatusJSONActor final : public Actor<std::string>, public ActorCallback< GetStatusJSONActor, 0, Void >, public ActorCallback< GetStatusJSONActor, 1, EBackupState >, public ActorCallback< GetStatusJSONActor, 2, Void >, public ActorCallback< GetStatusJSONActor, 3, Void >, public ActorCallback< GetStatusJSONActor, 4, KeyBackedMap<int64_t, std::pair<std::string, Version>>::RangeResultType >, public ActorCallback< GetStatusJSONActor, 5, Void >, public FastAllocated<GetStatusJSONActor>, public GetStatusJSONActorState<GetStatusJSONActor> {
															#line 53726 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<GetStatusJSONActor>::operator new;
	using FastAllocated<GetStatusJSONActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<std::string>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< GetStatusJSONActor, 0, Void >;
friend struct ActorCallback< GetStatusJSONActor, 1, EBackupState >;
friend struct ActorCallback< GetStatusJSONActor, 2, Void >;
friend struct ActorCallback< GetStatusJSONActor, 3, Void >;
friend struct ActorCallback< GetStatusJSONActor, 4, KeyBackedMap<int64_t, std::pair<std::string, Version>>::RangeResultType >;
friend struct ActorCallback< GetStatusJSONActor, 5, Void >;
															#line 5727 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	GetStatusJSONActor(FileBackupAgent* const& backupAgent,Database const& cx,std::string const& tagName) 
															#line 53742 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<std::string>(),
		   GetStatusJSONActorState<GetStatusJSONActor>(backupAgent, cx, tagName)
	{
		fdb_probe_actor_enter("getStatusJSON", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("getStatusJSON");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("getStatusJSON", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< GetStatusJSONActor, 0, Void >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< GetStatusJSONActor, 1, EBackupState >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< GetStatusJSONActor, 2, Void >*)0, actor_cancelled()); break;
		case 4: this->a_callback_error((ActorCallback< GetStatusJSONActor, 3, Void >*)0, actor_cancelled()); break;
		case 5: this->a_callback_error((ActorCallback< GetStatusJSONActor, 4, KeyBackedMap<int64_t, std::pair<std::string, Version>>::RangeResultType >*)0, actor_cancelled()); break;
		case 6: this->a_callback_error((ActorCallback< GetStatusJSONActor, 5, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 5727 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<std::string> getStatusJSON( FileBackupAgent* const& backupAgent, Database const& cx, std::string const& tagName ) {
															#line 5727 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<std::string>(new GetStatusJSONActor(backupAgent, cx, tagName));
															#line 53774 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 5877 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

																#line 53779 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via getStatus()
															#line 5878 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class GetStatusActor>
															#line 5878 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class GetStatusActorState {
															#line 53785 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 5878 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	GetStatusActorState(FileBackupAgent* const& backupAgent,Database const& cx,ShowErrors const& showErrors,std::string const& tagName) 
															#line 5878 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 5878 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : backupAgent(backupAgent),
															#line 5878 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   cx(cx),
															#line 5878 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   showErrors(showErrors),
															#line 5878 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tagName(tagName),
															#line 5882 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tr(new ReadYourWritesTransaction(cx)),
															#line 5883 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   statusText()
															#line 53802 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("getStatus", reinterpret_cast<unsigned long>(this));

	}
	~GetStatusActorState() 
	{
		fdb_probe_actor_destroy("getStatus", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 5885 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			;
															#line 53817 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = a_body1loopHead1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~GetStatusActorState();
		static_cast<GetStatusActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 6058 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<GetStatusActor*>(this)->SAV<std::string>::futures) { (void)(statusText); this->~GetStatusActorState(); static_cast<GetStatusActor*>(this)->destroy(); return 0; }
															#line 53840 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<GetStatusActor*>(this)->SAV< std::string >::value()) std::string(std::move(statusText)); // state_var_RVO
		this->~GetStatusActorState();
		static_cast<GetStatusActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1(int loopDepth) 
	{
		try {
															#line 5887 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 5888 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 5890 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tag = KeyBackedTag();
															#line 5891 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			config = BackupConfig();
															#line 5892 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			backupState = EBackupState();
															#line 5894 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			statusText = "";
															#line 5895 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tag = makeBackupTag(tagName);
															#line 5896 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Optional<UidAndAbortedFlagT>> __when_expr_0 = tag.get(tr);
															#line 5896 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<GetStatusActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 53876 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1loopBody1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1loopBody1when1(__when_expr_0.get(), loopDepth); };
			static_cast<GetStatusActor*>(this)->actor_wait_state = 1;
															#line 5896 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< GetStatusActor, 0, Optional<UidAndAbortedFlagT> >*>(static_cast<GetStatusActor*>(this)));
															#line 53881 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1break1(int loopDepth) 
	{
		try {
			return a_body1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1loopHead1(0);

		return loopDepth;
	}
	int a_body1loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 6054 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_7 = tr->onError(e);
															#line 6054 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<GetStatusActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 53918 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_7.isReady()) { if (__when_expr_7.isError()) return a_body1Catch1(__when_expr_7.getError(), std::max(0, loopDepth - 1)); else return a_body1loopBody1Catch1when1(__when_expr_7.get(), loopDepth); };
			static_cast<GetStatusActor*>(this)->actor_wait_state = 8;
															#line 6054 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_7.addCallbackAndClear(static_cast<ActorCallback< GetStatusActor, 7, Void >*>(static_cast<GetStatusActor*>(this)));
															#line 53923 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1loopBody1cont2(int loopDepth) 
	{
															#line 5897 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		fPaused = tr->get(backupAgent->taskBucket->getPauseKey());
															#line 5898 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (uidAndAbortedFlag.present())
															#line 53940 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5899 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			config = BackupConfig(uidAndAbortedFlag.get().first);
															#line 5900 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<EBackupState> __when_expr_1 = config.stateEnum().getD(tr, Snapshot::False, EBackupState::STATE_NEVERRAN);
															#line 5900 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<GetStatusActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 53948 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1loopBody1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1loopBody1cont2when1(__when_expr_1.get(), loopDepth); };
			static_cast<GetStatusActor*>(this)->actor_wait_state = 2;
															#line 5900 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< GetStatusActor, 1, EBackupState >*>(static_cast<GetStatusActor*>(this)));
															#line 53953 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1loopBody1cont3(loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1when1(Optional<UidAndAbortedFlagT> const& __uidAndAbortedFlag,int loopDepth) 
	{
															#line 5896 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		uidAndAbortedFlag = __uidAndAbortedFlag;
															#line 53967 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1loopBody1cont2(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1when1(Optional<UidAndAbortedFlagT> && __uidAndAbortedFlag,int loopDepth) 
	{
		uidAndAbortedFlag = std::move(__uidAndAbortedFlag);
		loopDepth = a_body1loopBody1cont2(loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<GetStatusActor*>(this)->actor_wait_state > 0) static_cast<GetStatusActor*>(this)->actor_wait_state = 0;
		static_cast<GetStatusActor*>(this)->ActorCallback< GetStatusActor, 0, Optional<UidAndAbortedFlagT> >::remove();

	}
	void a_callback_fire(ActorCallback< GetStatusActor, 0, Optional<UidAndAbortedFlagT> >*,Optional<UidAndAbortedFlagT> const& value) 
	{
		fdb_probe_actor_enter("getStatus", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatus", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< GetStatusActor, 0, Optional<UidAndAbortedFlagT> >*,Optional<UidAndAbortedFlagT> && value) 
	{
		fdb_probe_actor_enter("getStatus", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatus", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< GetStatusActor, 0, Optional<UidAndAbortedFlagT> >*,Error err) 
	{
		fdb_probe_actor_enter("getStatus", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatus", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1loopBody1cont3(int loopDepth) 
	{
															#line 5905 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!uidAndAbortedFlag.present() || backupState == EBackupState::STATE_NEVERRAN)
															#line 54034 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5906 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			statusText += "No previous backups found.\n";
															#line 54038 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = a_body1loopBody1cont6(loopDepth);
		}
		else
		{
															#line 5908 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			backupStatus = std::string(BackupAgentBase::getStateText(backupState));
															#line 5909 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			bc = Reference<IBackupContainer>();
															#line 5910 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			latestRestorableVersion = Optional<Version>();
															#line 5911 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			recentReadVersion = Version();
															#line 5913 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_2 = store(latestRestorableVersion, config.getLatestRestorableVersion(tr)) && store(bc, config.backupContainer().getOrThrow(tr)) && store(recentReadVersion, tr->getReadVersion());
															#line 5913 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<GetStatusActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 54055 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1loopBody1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1loopBody1cont3when1(__when_expr_2.get(), loopDepth); };
			static_cast<GetStatusActor*>(this)->actor_wait_state = 3;
															#line 5913 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< GetStatusActor, 2, Void >*>(static_cast<GetStatusActor*>(this)));
															#line 54060 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}

		return loopDepth;
	}
	int a_body1loopBody1cont4(EBackupState const& status,int loopDepth) 
	{
															#line 5902 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		backupState = status;
															#line 54070 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1loopBody1cont3(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont4(EBackupState && status,int loopDepth) 
	{
															#line 5902 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		backupState = status;
															#line 54079 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1loopBody1cont3(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont2when1(EBackupState const& status,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont4(status, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont2when1(EBackupState && status,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont4(std::move(status), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<GetStatusActor*>(this)->actor_wait_state > 0) static_cast<GetStatusActor*>(this)->actor_wait_state = 0;
		static_cast<GetStatusActor*>(this)->ActorCallback< GetStatusActor, 1, EBackupState >::remove();

	}
	void a_callback_fire(ActorCallback< GetStatusActor, 1, EBackupState >*,EBackupState const& value) 
	{
		fdb_probe_actor_enter("getStatus", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatus", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< GetStatusActor, 1, EBackupState >*,EBackupState && value) 
	{
		fdb_probe_actor_enter("getStatus", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatus", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< GetStatusActor, 1, EBackupState >*,Error err) 
	{
		fdb_probe_actor_enter("getStatus", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatus", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1loopBody1cont6(int loopDepth) 
	{
															#line 6047 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Optional<Value>> __when_expr_6 = fPaused;
															#line 6047 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<GetStatusActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 54153 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_6.isReady()) { if (__when_expr_6.isError()) return a_body1loopBody1Catch1(__when_expr_6.getError(), loopDepth); else return a_body1loopBody1cont6when1(__when_expr_6.get(), loopDepth); };
		static_cast<GetStatusActor*>(this)->actor_wait_state = 7;
															#line 6047 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_6.addCallbackAndClear(static_cast<ActorCallback< GetStatusActor, 6, Optional<Value> >*>(static_cast<GetStatusActor*>(this)));
															#line 54158 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont8(Void const& _,int loopDepth) 
	{
															#line 5916 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		bc = fileBackup::getBackupContainerWithProxy(bc);
															#line 5918 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		bool snapshotProgress = false;
															#line 5920 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		switch (backupState) { case EBackupState::STATE_SUBMITTED: statusText += "The backup on tag `" + tagName + "' is in progress (just started) to " + bc->getURL() + ".\n"; break; case EBackupState::STATE_RUNNING: statusText += "The backup on tag `" + tagName + "' is in progress to " + bc->getURL() + ".\n"; snapshotProgress = true; break; case EBackupState::STATE_RUNNING_DIFFERENTIAL: statusText += "The backup on tag `" + tagName + "' is restorable but continuing to " + bc->getURL() + ".\n"; snapshotProgress = true; break; case EBackupState::STATE_COMPLETED: statusText += "The previous backup on tag `" + tagName + "' at " + bc->getURL() + " completed at version " + format("%lld", latestRestorableVersion.orDefault(-1)) + ".\n"; break; default: statusText += "The previous backup on tag `" + tagName + "' at " + bc->getURL() + " " + backupStatus + ".\n"; break; };
															#line 5944 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		statusText += format("BackupUID: %s\n", uidAndAbortedFlag.get().first.toString().c_str());
															#line 5945 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		statusText += format("BackupURL: %s\n", bc->getURL().c_str());
															#line 5947 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (snapshotProgress)
															#line 54177 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5948 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			snapshotInterval = int64_t();
															#line 5949 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			snapshotBeginVersion = Version();
															#line 5950 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			snapshotTargetEndVersion = Version();
															#line 5951 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			latestSnapshotEndVersion = Optional<Version>();
															#line 5952 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			latestLogEndVersion = Optional<Version>();
															#line 5953 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			logBytesWritten = Optional<int64_t>();
															#line 5954 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			rangeBytesWritten = Optional<int64_t>();
															#line 5955 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			latestSnapshotEndVersionTimestamp = Optional<int64_t>();
															#line 5956 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			latestLogEndVersionTimestamp = Optional<int64_t>();
															#line 5957 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			snapshotBeginVersionTimestamp = Optional<int64_t>();
															#line 5958 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			snapshotTargetEndVersionTimestamp = Optional<int64_t>();
															#line 5959 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			stopWhenDone = bool();
															#line 5961 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_3 = store(snapshotBeginVersion, config.snapshotBeginVersion().getOrThrow(tr)) && store(snapshotTargetEndVersion, config.snapshotTargetEndVersion().getOrThrow(tr)) && store(snapshotInterval, config.snapshotIntervalSeconds().getOrThrow(tr)) && store(logBytesWritten, config.logBytesWritten().get(tr)) && store(rangeBytesWritten, config.rangeBytesWritten().get(tr)) && store(latestLogEndVersion, config.latestLogEndVersion().get(tr)) && store(latestSnapshotEndVersion, config.latestSnapshotEndVersion().get(tr)) && store(stopWhenDone, config.stopWhenDone().getOrThrow(tr));
															#line 5961 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<GetStatusActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 54207 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1loopBody1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1loopBody1cont8when1(__when_expr_3.get(), loopDepth); };
			static_cast<GetStatusActor*>(this)->actor_wait_state = 4;
															#line 5961 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< GetStatusActor, 3, Void >*>(static_cast<GetStatusActor*>(this)));
															#line 54212 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1loopBody1cont9(loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1cont8(Void && _,int loopDepth) 
	{
															#line 5916 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		bc = fileBackup::getBackupContainerWithProxy(bc);
															#line 5918 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		bool snapshotProgress = false;
															#line 5920 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		switch (backupState) { case EBackupState::STATE_SUBMITTED: statusText += "The backup on tag `" + tagName + "' is in progress (just started) to " + bc->getURL() + ".\n"; break; case EBackupState::STATE_RUNNING: statusText += "The backup on tag `" + tagName + "' is in progress to " + bc->getURL() + ".\n"; snapshotProgress = true; break; case EBackupState::STATE_RUNNING_DIFFERENTIAL: statusText += "The backup on tag `" + tagName + "' is restorable but continuing to " + bc->getURL() + ".\n"; snapshotProgress = true; break; case EBackupState::STATE_COMPLETED: statusText += "The previous backup on tag `" + tagName + "' at " + bc->getURL() + " completed at version " + format("%lld", latestRestorableVersion.orDefault(-1)) + ".\n"; break; default: statusText += "The previous backup on tag `" + tagName + "' at " + bc->getURL() + " " + backupStatus + ".\n"; break; };
															#line 5944 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		statusText += format("BackupUID: %s\n", uidAndAbortedFlag.get().first.toString().c_str());
															#line 5945 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		statusText += format("BackupURL: %s\n", bc->getURL().c_str());
															#line 5947 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (snapshotProgress)
															#line 54236 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5948 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			snapshotInterval = int64_t();
															#line 5949 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			snapshotBeginVersion = Version();
															#line 5950 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			snapshotTargetEndVersion = Version();
															#line 5951 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			latestSnapshotEndVersion = Optional<Version>();
															#line 5952 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			latestLogEndVersion = Optional<Version>();
															#line 5953 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			logBytesWritten = Optional<int64_t>();
															#line 5954 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			rangeBytesWritten = Optional<int64_t>();
															#line 5955 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			latestSnapshotEndVersionTimestamp = Optional<int64_t>();
															#line 5956 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			latestLogEndVersionTimestamp = Optional<int64_t>();
															#line 5957 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			snapshotBeginVersionTimestamp = Optional<int64_t>();
															#line 5958 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			snapshotTargetEndVersionTimestamp = Optional<int64_t>();
															#line 5959 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			stopWhenDone = bool();
															#line 5961 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_3 = store(snapshotBeginVersion, config.snapshotBeginVersion().getOrThrow(tr)) && store(snapshotTargetEndVersion, config.snapshotTargetEndVersion().getOrThrow(tr)) && store(snapshotInterval, config.snapshotIntervalSeconds().getOrThrow(tr)) && store(logBytesWritten, config.logBytesWritten().get(tr)) && store(rangeBytesWritten, config.rangeBytesWritten().get(tr)) && store(latestLogEndVersion, config.latestLogEndVersion().get(tr)) && store(latestSnapshotEndVersion, config.latestSnapshotEndVersion().get(tr)) && store(stopWhenDone, config.stopWhenDone().getOrThrow(tr));
															#line 5961 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<GetStatusActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 54266 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1loopBody1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1loopBody1cont8when1(__when_expr_3.get(), loopDepth); };
			static_cast<GetStatusActor*>(this)->actor_wait_state = 4;
															#line 5961 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< GetStatusActor, 3, Void >*>(static_cast<GetStatusActor*>(this)));
															#line 54271 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1loopBody1cont9(loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1cont3when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont8(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont3when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont8(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<GetStatusActor*>(this)->actor_wait_state > 0) static_cast<GetStatusActor*>(this)->actor_wait_state = 0;
		static_cast<GetStatusActor*>(this)->ActorCallback< GetStatusActor, 2, Void >::remove();

	}
	void a_callback_fire(ActorCallback< GetStatusActor, 2, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("getStatus", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1loopBody1cont3when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatus", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< GetStatusActor, 2, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("getStatus", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1loopBody1cont3when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatus", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< GetStatusActor, 2, Void >*,Error err) 
	{
		fdb_probe_actor_enter("getStatus", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatus", reinterpret_cast<unsigned long>(this), 2);

	}
	int a_body1loopBody1cont9(int loopDepth) 
	{
															#line 6007 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (showErrors)
															#line 54348 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 6008 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<KeyBackedMap<int64_t, std::pair<std::string, Version>>::RangeResultType> __when_expr_5 = config.lastErrorPerType().getRange( tr, 0, std::numeric_limits<int>::max(), CLIENT_KNOBS->TOO_MANY);
															#line 6008 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<GetStatusActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 54354 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_5.isReady()) { if (__when_expr_5.isError()) return a_body1loopBody1Catch1(__when_expr_5.getError(), loopDepth); else return a_body1loopBody1cont9when1(__when_expr_5.get(), loopDepth); };
			static_cast<GetStatusActor*>(this)->actor_wait_state = 6;
															#line 6008 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_5.addCallbackAndClear(static_cast<ActorCallback< GetStatusActor, 5, KeyBackedMap<int64_t, std::pair<std::string, Version>>::RangeResultType >*>(static_cast<GetStatusActor*>(this)));
															#line 54359 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1loopBody1cont11(loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1cont10(Void const& _,int loopDepth) 
	{
															#line 5970 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_4 = store(latestSnapshotEndVersionTimestamp, getTimestampFromVersion(latestSnapshotEndVersion, tr)) && store(latestLogEndVersionTimestamp, getTimestampFromVersion(latestLogEndVersion, tr)) && store(snapshotBeginVersionTimestamp, timeKeeperEpochsFromVersion(snapshotBeginVersion, tr)) && store(snapshotTargetEndVersionTimestamp, timeKeeperEpochsFromVersion(snapshotTargetEndVersion, tr));
															#line 5970 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<GetStatusActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 54375 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1loopBody1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1loopBody1cont10when1(__when_expr_4.get(), loopDepth); };
		static_cast<GetStatusActor*>(this)->actor_wait_state = 5;
															#line 5970 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< GetStatusActor, 4, Void >*>(static_cast<GetStatusActor*>(this)));
															#line 54380 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont10(Void && _,int loopDepth) 
	{
															#line 5970 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_4 = store(latestSnapshotEndVersionTimestamp, getTimestampFromVersion(latestSnapshotEndVersion, tr)) && store(latestLogEndVersionTimestamp, getTimestampFromVersion(latestLogEndVersion, tr)) && store(snapshotBeginVersionTimestamp, timeKeeperEpochsFromVersion(snapshotBeginVersion, tr)) && store(snapshotTargetEndVersionTimestamp, timeKeeperEpochsFromVersion(snapshotTargetEndVersion, tr));
															#line 5970 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<GetStatusActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 54391 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1loopBody1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1loopBody1cont10when1(__when_expr_4.get(), loopDepth); };
		static_cast<GetStatusActor*>(this)->actor_wait_state = 5;
															#line 5970 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< GetStatusActor, 4, Void >*>(static_cast<GetStatusActor*>(this)));
															#line 54396 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont8when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont10(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont8when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont10(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose4() 
	{
		if (static_cast<GetStatusActor*>(this)->actor_wait_state > 0) static_cast<GetStatusActor*>(this)->actor_wait_state = 0;
		static_cast<GetStatusActor*>(this)->ActorCallback< GetStatusActor, 3, Void >::remove();

	}
	void a_callback_fire(ActorCallback< GetStatusActor, 3, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("getStatus", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1loopBody1cont8when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatus", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_fire(ActorCallback< GetStatusActor, 3, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("getStatus", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1loopBody1cont8when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatus", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_error(ActorCallback< GetStatusActor, 3, Void >*,Error err) 
	{
		fdb_probe_actor_enter("getStatus", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatus", reinterpret_cast<unsigned long>(this), 3);

	}
	int a_body1loopBody1cont10cont1(Void const& _,int loopDepth) 
	{
															#line 5978 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		statusText += format("Snapshot interval is %lld seconds.  ", snapshotInterval);
															#line 5979 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (backupState == EBackupState::STATE_RUNNING_DIFFERENTIAL)
															#line 54470 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5980 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			statusText += format("Current snapshot progress target is %3.2f%% (>100%% means the " "snapshot is supposed to be done)\n", 100.0 * (recentReadVersion - snapshotBeginVersion) / (snapshotTargetEndVersion - snapshotBeginVersion));
															#line 54474 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		else
		{
															#line 5985 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			statusText += "The initial snapshot is still running.\n";
															#line 54480 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 5987 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		statusText += format("\nDetails:\n LogBytes written - %lld\n RangeBytes written - %lld\n " "Last complete log version and timestamp        - %s, %s\n " "Last complete snapshot version and timestamp   - %s, %s\n " "Current Snapshot start version and timestamp   - %s, %s\n " "Expected snapshot end version and timestamp    - %s, %s\n " "Backup supposed to stop at next snapshot completion - %s\n", logBytesWritten.orDefault(0), rangeBytesWritten.orDefault(0), versionToString(latestLogEndVersion).c_str(), timeStampToString(latestLogEndVersionTimestamp).c_str(), versionToString(latestSnapshotEndVersion).c_str(), timeStampToString(latestSnapshotEndVersionTimestamp).c_str(), versionToString(snapshotBeginVersion).c_str(), timeStampToString(snapshotBeginVersionTimestamp).c_str(), versionToString(snapshotTargetEndVersion).c_str(), timeStampToString(snapshotTargetEndVersionTimestamp).c_str(), boolToYesOrNo(stopWhenDone).c_str());
															#line 54484 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1loopBody1cont9(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont10cont1(Void && _,int loopDepth) 
	{
															#line 5978 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		statusText += format("Snapshot interval is %lld seconds.  ", snapshotInterval);
															#line 5979 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (backupState == EBackupState::STATE_RUNNING_DIFFERENTIAL)
															#line 54495 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 5980 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			statusText += format("Current snapshot progress target is %3.2f%% (>100%% means the " "snapshot is supposed to be done)\n", 100.0 * (recentReadVersion - snapshotBeginVersion) / (snapshotTargetEndVersion - snapshotBeginVersion));
															#line 54499 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		else
		{
															#line 5985 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			statusText += "The initial snapshot is still running.\n";
															#line 54505 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 5987 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		statusText += format("\nDetails:\n LogBytes written - %lld\n RangeBytes written - %lld\n " "Last complete log version and timestamp        - %s, %s\n " "Last complete snapshot version and timestamp   - %s, %s\n " "Current Snapshot start version and timestamp   - %s, %s\n " "Expected snapshot end version and timestamp    - %s, %s\n " "Backup supposed to stop at next snapshot completion - %s\n", logBytesWritten.orDefault(0), rangeBytesWritten.orDefault(0), versionToString(latestLogEndVersion).c_str(), timeStampToString(latestLogEndVersionTimestamp).c_str(), versionToString(latestSnapshotEndVersion).c_str(), timeStampToString(latestSnapshotEndVersionTimestamp).c_str(), versionToString(snapshotBeginVersion).c_str(), timeStampToString(snapshotBeginVersionTimestamp).c_str(), versionToString(snapshotTargetEndVersion).c_str(), timeStampToString(snapshotTargetEndVersionTimestamp).c_str(), boolToYesOrNo(stopWhenDone).c_str());
															#line 54509 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1loopBody1cont9(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont10when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont10cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont10when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont10cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose5() 
	{
		if (static_cast<GetStatusActor*>(this)->actor_wait_state > 0) static_cast<GetStatusActor*>(this)->actor_wait_state = 0;
		static_cast<GetStatusActor*>(this)->ActorCallback< GetStatusActor, 4, Void >::remove();

	}
	void a_callback_fire(ActorCallback< GetStatusActor, 4, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("getStatus", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1loopBody1cont10when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatus", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_fire(ActorCallback< GetStatusActor, 4, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("getStatus", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1loopBody1cont10when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatus", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_error(ActorCallback< GetStatusActor, 4, Void >*,Error err) 
	{
		fdb_probe_actor_enter("getStatus", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatus", reinterpret_cast<unsigned long>(this), 4);

	}
	int a_body1loopBody1cont11(int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont6(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont12(KeyBackedMap<int64_t, std::pair<std::string, Version>>::RangeResultType const& errors,int loopDepth) 
	{
															#line 6011 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		std::string recentErrors;
															#line 6012 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		std::string pastErrors;
															#line 6014 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		for( auto& e : errors.results ) {
															#line 6015 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			Version v = e.second.second;
															#line 6016 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			std::string msg = format( "%s ago : %s\n", secondsToTimeFormat((recentReadVersion - v) / CLIENT_KNOBS->CORE_VERSIONSPERSECOND) .c_str(), e.second.first.c_str());
															#line 6024 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (v >= latestRestorableVersion.orDefault(0))
															#line 54597 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 6025 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				recentErrors += msg;
															#line 54601 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
			else
			{
															#line 6027 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				pastErrors += msg;
															#line 54607 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
		}
															#line 6031 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!recentErrors.empty())
															#line 54612 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 6032 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (latestRestorableVersion.present())
															#line 54616 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 6033 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				statusText += format("Recent Errors (since latest restorable point %s ago)\n", secondsToTimeFormat((recentReadVersion - latestRestorableVersion.get()) / CLIENT_KNOBS->CORE_VERSIONSPERSECOND) .c_str()) + recentErrors;
															#line 54620 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
			else
			{
															#line 6040 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				statusText += "Recent Errors (since initialization)\n" + recentErrors;
															#line 54626 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
		}
															#line 6042 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!pastErrors.empty())
															#line 54631 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 6043 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			statusText += "Older Errors\n" + pastErrors;
															#line 54635 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		loopDepth = a_body1loopBody1cont11(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont12(KeyBackedMap<int64_t, std::pair<std::string, Version>>::RangeResultType && errors,int loopDepth) 
	{
															#line 6011 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		std::string recentErrors;
															#line 6012 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		std::string pastErrors;
															#line 6014 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		for( auto& e : errors.results ) {
															#line 6015 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			Version v = e.second.second;
															#line 6016 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			std::string msg = format( "%s ago : %s\n", secondsToTimeFormat((recentReadVersion - v) / CLIENT_KNOBS->CORE_VERSIONSPERSECOND) .c_str(), e.second.first.c_str());
															#line 6024 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (v >= latestRestorableVersion.orDefault(0))
															#line 54655 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 6025 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				recentErrors += msg;
															#line 54659 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
			else
			{
															#line 6027 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				pastErrors += msg;
															#line 54665 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
		}
															#line 6031 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!recentErrors.empty())
															#line 54670 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 6032 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (latestRestorableVersion.present())
															#line 54674 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 6033 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				statusText += format("Recent Errors (since latest restorable point %s ago)\n", secondsToTimeFormat((recentReadVersion - latestRestorableVersion.get()) / CLIENT_KNOBS->CORE_VERSIONSPERSECOND) .c_str()) + recentErrors;
															#line 54678 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
			else
			{
															#line 6040 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				statusText += "Recent Errors (since initialization)\n" + recentErrors;
															#line 54684 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
		}
															#line 6042 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!pastErrors.empty())
															#line 54689 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 6043 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			statusText += "Older Errors\n" + pastErrors;
															#line 54693 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		loopDepth = a_body1loopBody1cont11(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont9when1(KeyBackedMap<int64_t, std::pair<std::string, Version>>::RangeResultType const& errors,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont12(errors, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont9when1(KeyBackedMap<int64_t, std::pair<std::string, Version>>::RangeResultType && errors,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont12(std::move(errors), loopDepth);

		return loopDepth;
	}
	void a_exitChoose6() 
	{
		if (static_cast<GetStatusActor*>(this)->actor_wait_state > 0) static_cast<GetStatusActor*>(this)->actor_wait_state = 0;
		static_cast<GetStatusActor*>(this)->ActorCallback< GetStatusActor, 5, KeyBackedMap<int64_t, std::pair<std::string, Version>>::RangeResultType >::remove();

	}
	void a_callback_fire(ActorCallback< GetStatusActor, 5, KeyBackedMap<int64_t, std::pair<std::string, Version>>::RangeResultType >*,KeyBackedMap<int64_t, std::pair<std::string, Version>>::RangeResultType const& value) 
	{
		fdb_probe_actor_enter("getStatus", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1loopBody1cont9when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatus", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_fire(ActorCallback< GetStatusActor, 5, KeyBackedMap<int64_t, std::pair<std::string, Version>>::RangeResultType >*,KeyBackedMap<int64_t, std::pair<std::string, Version>>::RangeResultType && value) 
	{
		fdb_probe_actor_enter("getStatus", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1loopBody1cont9when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatus", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_error(ActorCallback< GetStatusActor, 5, KeyBackedMap<int64_t, std::pair<std::string, Version>>::RangeResultType >*,Error err) 
	{
		fdb_probe_actor_enter("getStatus", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatus", reinterpret_cast<unsigned long>(this), 5);

	}
	int a_body1loopBody1cont13(Optional<Value> const& paused,int loopDepth) 
	{
															#line 6048 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (paused.present())
															#line 54766 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 6049 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			statusText += format("\nAll backup agents have been paused.\n");
															#line 54770 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		return a_body1break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1loopBody1cont13(Optional<Value> && paused,int loopDepth) 
	{
															#line 6048 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (paused.present())
															#line 54780 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 6049 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			statusText += format("\nAll backup agents have been paused.\n");
															#line 54784 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		return a_body1break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1loopBody1cont6when1(Optional<Value> const& paused,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont13(paused, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont6when1(Optional<Value> && paused,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont13(std::move(paused), loopDepth);

		return loopDepth;
	}
	void a_exitChoose7() 
	{
		if (static_cast<GetStatusActor*>(this)->actor_wait_state > 0) static_cast<GetStatusActor*>(this)->actor_wait_state = 0;
		static_cast<GetStatusActor*>(this)->ActorCallback< GetStatusActor, 6, Optional<Value> >::remove();

	}
	void a_callback_fire(ActorCallback< GetStatusActor, 6, Optional<Value> >*,Optional<Value> const& value) 
	{
		fdb_probe_actor_enter("getStatus", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1loopBody1cont6when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatus", reinterpret_cast<unsigned long>(this), 6);

	}
	void a_callback_fire(ActorCallback< GetStatusActor, 6, Optional<Value> >*,Optional<Value> && value) 
	{
		fdb_probe_actor_enter("getStatus", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1loopBody1cont6when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatus", reinterpret_cast<unsigned long>(this), 6);

	}
	void a_callback_error(ActorCallback< GetStatusActor, 6, Optional<Value> >*,Error err) 
	{
		fdb_probe_actor_enter("getStatus", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatus", reinterpret_cast<unsigned long>(this), 6);

	}
	int a_body1loopBody1Catch1cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1Catch1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1Catch1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose8() 
	{
		if (static_cast<GetStatusActor*>(this)->actor_wait_state > 0) static_cast<GetStatusActor*>(this)->actor_wait_state = 0;
		static_cast<GetStatusActor*>(this)->ActorCallback< GetStatusActor, 7, Void >::remove();

	}
	void a_callback_fire(ActorCallback< GetStatusActor, 7, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("getStatus", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatus", reinterpret_cast<unsigned long>(this), 7);

	}
	void a_callback_fire(ActorCallback< GetStatusActor, 7, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("getStatus", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatus", reinterpret_cast<unsigned long>(this), 7);

	}
	void a_callback_error(ActorCallback< GetStatusActor, 7, Void >*,Error err) 
	{
		fdb_probe_actor_enter("getStatus", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getStatus", reinterpret_cast<unsigned long>(this), 7);

	}
															#line 5878 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	FileBackupAgent* backupAgent;
															#line 5878 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Database cx;
															#line 5878 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	ShowErrors showErrors;
															#line 5878 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::string tagName;
															#line 5882 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 5883 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::string statusText;
															#line 5890 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	KeyBackedTag tag;
															#line 5891 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	BackupConfig config;
															#line 5892 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	EBackupState backupState;
															#line 5896 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<UidAndAbortedFlagT> uidAndAbortedFlag;
															#line 5897 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Future<Optional<Value>> fPaused;
															#line 5908 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::string backupStatus;
															#line 5909 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<IBackupContainer> bc;
															#line 5910 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<Version> latestRestorableVersion;
															#line 5911 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version recentReadVersion;
															#line 5948 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int64_t snapshotInterval;
															#line 5949 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version snapshotBeginVersion;
															#line 5950 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version snapshotTargetEndVersion;
															#line 5951 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<Version> latestSnapshotEndVersion;
															#line 5952 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<Version> latestLogEndVersion;
															#line 5953 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<int64_t> logBytesWritten;
															#line 5954 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<int64_t> rangeBytesWritten;
															#line 5955 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<int64_t> latestSnapshotEndVersionTimestamp;
															#line 5956 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<int64_t> latestLogEndVersionTimestamp;
															#line 5957 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<int64_t> snapshotBeginVersionTimestamp;
															#line 5958 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<int64_t> snapshotTargetEndVersionTimestamp;
															#line 5959 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	bool stopWhenDone;
															#line 54982 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via getStatus()
															#line 5878 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class GetStatusActor final : public Actor<std::string>, public ActorCallback< GetStatusActor, 0, Optional<UidAndAbortedFlagT> >, public ActorCallback< GetStatusActor, 1, EBackupState >, public ActorCallback< GetStatusActor, 2, Void >, public ActorCallback< GetStatusActor, 3, Void >, public ActorCallback< GetStatusActor, 4, Void >, public ActorCallback< GetStatusActor, 5, KeyBackedMap<int64_t, std::pair<std::string, Version>>::RangeResultType >, public ActorCallback< GetStatusActor, 6, Optional<Value> >, public ActorCallback< GetStatusActor, 7, Void >, public FastAllocated<GetStatusActor>, public GetStatusActorState<GetStatusActor> {
															#line 54987 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<GetStatusActor>::operator new;
	using FastAllocated<GetStatusActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<std::string>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< GetStatusActor, 0, Optional<UidAndAbortedFlagT> >;
friend struct ActorCallback< GetStatusActor, 1, EBackupState >;
friend struct ActorCallback< GetStatusActor, 2, Void >;
friend struct ActorCallback< GetStatusActor, 3, Void >;
friend struct ActorCallback< GetStatusActor, 4, Void >;
friend struct ActorCallback< GetStatusActor, 5, KeyBackedMap<int64_t, std::pair<std::string, Version>>::RangeResultType >;
friend struct ActorCallback< GetStatusActor, 6, Optional<Value> >;
friend struct ActorCallback< GetStatusActor, 7, Void >;
															#line 5878 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	GetStatusActor(FileBackupAgent* const& backupAgent,Database const& cx,ShowErrors const& showErrors,std::string const& tagName) 
															#line 55005 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<std::string>(),
		   GetStatusActorState<GetStatusActor>(backupAgent, cx, showErrors, tagName)
	{
		fdb_probe_actor_enter("getStatus", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("getStatus");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("getStatus", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< GetStatusActor, 0, Optional<UidAndAbortedFlagT> >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< GetStatusActor, 1, EBackupState >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< GetStatusActor, 2, Void >*)0, actor_cancelled()); break;
		case 4: this->a_callback_error((ActorCallback< GetStatusActor, 3, Void >*)0, actor_cancelled()); break;
		case 5: this->a_callback_error((ActorCallback< GetStatusActor, 4, Void >*)0, actor_cancelled()); break;
		case 6: this->a_callback_error((ActorCallback< GetStatusActor, 5, KeyBackedMap<int64_t, std::pair<std::string, Version>>::RangeResultType >*)0, actor_cancelled()); break;
		case 7: this->a_callback_error((ActorCallback< GetStatusActor, 6, Optional<Value> >*)0, actor_cancelled()); break;
		case 8: this->a_callback_error((ActorCallback< GetStatusActor, 7, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 5878 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<std::string> getStatus( FileBackupAgent* const& backupAgent, Database const& cx, ShowErrors const& showErrors, std::string const& tagName ) {
															#line 5878 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<std::string>(new GetStatusActor(backupAgent, cx, showErrors, tagName));
															#line 55039 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 6060 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

																#line 55044 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via getLastRestorable()
															#line 6061 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class GetLastRestorableActor>
															#line 6061 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class GetLastRestorableActorState {
															#line 55050 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 6061 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	GetLastRestorableActorState(FileBackupAgent* const& backupAgent,Reference<ReadYourWritesTransaction> const& tr,Key const& tagName,Snapshot const& snapshot) 
															#line 6061 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 6061 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : backupAgent(backupAgent),
															#line 6061 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tr(tr),
															#line 6061 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tagName(tagName),
															#line 6061 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   snapshot(snapshot)
															#line 55063 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("getLastRestorable", reinterpret_cast<unsigned long>(this));

	}
	~GetLastRestorableActorState() 
	{
		fdb_probe_actor_destroy("getLastRestorable", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 6065 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 6066 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 6067 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Optional<Value>> __when_expr_0 = tr->get(backupAgent->lastRestorable.pack(tagName), snapshot);
															#line 6067 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<GetLastRestorableActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 55084 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<GetLastRestorableActor*>(this)->actor_wait_state = 1;
															#line 6067 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< GetLastRestorableActor, 0, Optional<Value> >*>(static_cast<GetLastRestorableActor*>(this)));
															#line 55089 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~GetLastRestorableActorState();
		static_cast<GetLastRestorableActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 6069 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<GetLastRestorableActor*>(this)->SAV<Optional<Version>>::futures) { (void)((version.present()) ? Optional<Version>(BinaryReader::fromStringRef<Version>(version.get(), Unversioned())) : Optional<Version>()); this->~GetLastRestorableActorState(); static_cast<GetLastRestorableActor*>(this)->destroy(); return 0; }
															#line 55112 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<GetLastRestorableActor*>(this)->SAV< Optional<Version> >::value()) Optional<Version>((version.present()) ? Optional<Version>(BinaryReader::fromStringRef<Version>(version.get(), Unversioned())) : Optional<Version>());
		this->~GetLastRestorableActorState();
		static_cast<GetLastRestorableActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1when1(Optional<Value> const& __version,int loopDepth) 
	{
															#line 6067 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		version = __version;
															#line 55124 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1when1(Optional<Value> && __version,int loopDepth) 
	{
		version = std::move(__version);
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<GetLastRestorableActor*>(this)->actor_wait_state > 0) static_cast<GetLastRestorableActor*>(this)->actor_wait_state = 0;
		static_cast<GetLastRestorableActor*>(this)->ActorCallback< GetLastRestorableActor, 0, Optional<Value> >::remove();

	}
	void a_callback_fire(ActorCallback< GetLastRestorableActor, 0, Optional<Value> >*,Optional<Value> const& value) 
	{
		fdb_probe_actor_enter("getLastRestorable", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getLastRestorable", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< GetLastRestorableActor, 0, Optional<Value> >*,Optional<Value> && value) 
	{
		fdb_probe_actor_enter("getLastRestorable", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getLastRestorable", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< GetLastRestorableActor, 0, Optional<Value> >*,Error err) 
	{
		fdb_probe_actor_enter("getLastRestorable", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("getLastRestorable", reinterpret_cast<unsigned long>(this), 0);

	}
															#line 6061 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	FileBackupAgent* backupAgent;
															#line 6061 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 6061 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key tagName;
															#line 6061 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Snapshot snapshot;
															#line 6067 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<Value> version;
															#line 55197 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via getLastRestorable()
															#line 6061 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class GetLastRestorableActor final : public Actor<Optional<Version>>, public ActorCallback< GetLastRestorableActor, 0, Optional<Value> >, public FastAllocated<GetLastRestorableActor>, public GetLastRestorableActorState<GetLastRestorableActor> {
															#line 55202 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<GetLastRestorableActor>::operator new;
	using FastAllocated<GetLastRestorableActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Optional<Version>>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< GetLastRestorableActor, 0, Optional<Value> >;
															#line 6061 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	GetLastRestorableActor(FileBackupAgent* const& backupAgent,Reference<ReadYourWritesTransaction> const& tr,Key const& tagName,Snapshot const& snapshot) 
															#line 55213 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Optional<Version>>(),
		   GetLastRestorableActorState<GetLastRestorableActor>(backupAgent, tr, tagName, snapshot)
	{
		fdb_probe_actor_enter("getLastRestorable", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("getLastRestorable");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("getLastRestorable", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< GetLastRestorableActor, 0, Optional<Value> >*)0, actor_cancelled()); break;
		}

	}
};
															#line 6061 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Optional<Version>> getLastRestorable( FileBackupAgent* const& backupAgent, Reference<ReadYourWritesTransaction> const& tr, Key const& tagName, Snapshot const& snapshot ) {
															#line 6061 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Optional<Version>>(new GetLastRestorableActor(backupAgent, tr, tagName, snapshot));
															#line 55240 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 6073 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

	static StringRef read(StringRef& data, int bytes) {
		if (bytes > data.size())
			throw restore_error();
		StringRef r = data.substr(0, bytes);
		data = data.substr(bytes);
		return r;
	}

	// Submits the restore request to the database and throws "restore_invalid_version" error if
	// restore is not possible. Parameters:
	//   cx: the database to be restored to
	//   cxOrig: if present, is used to resolve the restore timestamp into a version.
	//   tagName: restore tag
	//   url: the backup container's URL that contains all backup files
	//   ranges: the restored key ranges; if empty, restore all key ranges in the backup
	//   waitForComplete: if set, wait until the restore is completed before returning; otherwise,
	//                    return when the request is submitted to the database.
	//   targetVersion: the version to be restored.
	//   verbose: print verbose information.
	//   addPrefix: each key is added this prefix during restore.
	//   removePrefix: for each key to be restored, remove this prefix first.
	//   lockDB: if set lock the database with randomUid before performing restore;
	//           otherwise, check database is locked with the randomUid
	//   onlyApplyMutationLogs: only perform incremental restore, by only applying mutation logs
	//   inconsistentSnapshotOnly: Ignore mutation log files during the restore to speedup the process.
	//                             When set to true, gives an inconsistent snapshot, thus not recommended
	//   beginVersions: restore's begin version for each range
	//   randomUid: the UID for lock the database
																#line 55273 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via restore()
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class RestoreActor>
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class RestoreActorState {
															#line 55279 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	RestoreActorState(FileBackupAgent* const& backupAgent,Database const& cx,Optional<Database> const& cxOrig,Key const& tagName,Key const& url,Optional<std::string> const& proxy,Standalone<VectorRef<KeyRangeRef>> const& ranges,Standalone<VectorRef<Version>> const& beginVersions,WaitForComplete const& waitForComplete,Version const& targetVersion,Verbose const& verbose,Key const& addPrefix,Key const& removePrefix,LockDB const& lockDB,UnlockDB const& unlockDB,OnlyApplyMutationLogs const& onlyApplyMutationLogs,InconsistentSnapshotOnly const& inconsistentSnapshotOnly,Optional<std::string> const& encryptionKeyFileName,UID const& randomUid) 
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : backupAgent(backupAgent),
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   cx(cx),
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   cxOrig(cxOrig),
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tagName(tagName),
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   url(url),
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   proxy(proxy),
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   ranges(ranges),
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   beginVersions(beginVersions),
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   waitForComplete(waitForComplete),
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   targetVersion(targetVersion),
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   verbose(verbose),
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   addPrefix(addPrefix),
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   removePrefix(removePrefix),
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   lockDB(lockDB),
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   unlockDB(unlockDB),
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   onlyApplyMutationLogs(onlyApplyMutationLogs),
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   inconsistentSnapshotOnly(inconsistentSnapshotOnly),
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   encryptionKeyFileName(encryptionKeyFileName),
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   randomUid(randomUid)
															#line 55322 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("restore", reinterpret_cast<unsigned long>(this));

	}
	~RestoreActorState() 
	{
		fdb_probe_actor_destroy("restore", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 6122 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (ranges.empty())
															#line 55337 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 6123 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				return a_body1Catch1(restore_error(), loopDepth);
															#line 55341 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
															#line 6126 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			bc = IBackupContainer::openContainer(url.toString(), proxy, {});
															#line 6128 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<BackupDescription> __when_expr_0 = bc->describeBackup(true);
															#line 6128 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<RestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 55349 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<RestoreActor*>(this)->actor_wait_state = 1;
															#line 6128 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< RestoreActor, 0, BackupDescription >*>(static_cast<RestoreActor*>(this)));
															#line 55354 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~RestoreActorState();
		static_cast<RestoreActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 6129 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (cxOrig.present())
															#line 55377 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 6130 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_1 = desc.resolveVersionTimes(cxOrig.get());
															#line 6130 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<RestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 55383 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1when1(__when_expr_1.get(), loopDepth); };
			static_cast<RestoreActor*>(this)->actor_wait_state = 2;
															#line 6130 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< RestoreActor, 1, Void >*>(static_cast<RestoreActor*>(this)));
															#line 55388 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont3(loopDepth);
		}

		return loopDepth;
	}
	int a_body1when1(BackupDescription const& __desc,int loopDepth) 
	{
															#line 6128 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		desc = __desc;
															#line 55402 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1when1(BackupDescription && __desc,int loopDepth) 
	{
		desc = std::move(__desc);
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<RestoreActor*>(this)->actor_wait_state > 0) static_cast<RestoreActor*>(this)->actor_wait_state = 0;
		static_cast<RestoreActor*>(this)->ActorCallback< RestoreActor, 0, BackupDescription >::remove();

	}
	void a_callback_fire(ActorCallback< RestoreActor, 0, BackupDescription >*,BackupDescription const& value) 
	{
		fdb_probe_actor_enter("restore", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("restore", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< RestoreActor, 0, BackupDescription >*,BackupDescription && value) 
	{
		fdb_probe_actor_enter("restore", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("restore", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< RestoreActor, 0, BackupDescription >*,Error err) 
	{
		fdb_probe_actor_enter("restore", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("restore", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont3(int loopDepth) 
	{
															#line 6133 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		printf("Backup Description\n%s", desc.toString().c_str());
															#line 6134 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (targetVersion == invalidVersion && desc.maxRestorableVersion.present())
															#line 55471 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 6135 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			targetVersion = desc.maxRestorableVersion.get();
															#line 55475 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 6137 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (targetVersion == invalidVersion && onlyApplyMutationLogs && desc.contiguousLogEnd.present())
															#line 55479 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 6138 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			targetVersion = desc.contiguousLogEnd.get() - 1;
															#line 55483 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 6141 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		beginVersion = invalidVersion;
															#line 6142 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!beginVersions.empty())
															#line 55489 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 6143 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			beginVersion = *std::min_element(beginVersions.begin(), beginVersions.end());
															#line 55493 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 6145 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Optional<RestorableFileSet>> __when_expr_2 = bc->getRestoreSet(targetVersion, ranges, onlyApplyMutationLogs, beginVersion);
															#line 6145 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<RestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 55499 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont3when1(__when_expr_2.get(), loopDepth); };
		static_cast<RestoreActor*>(this)->actor_wait_state = 3;
															#line 6145 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< RestoreActor, 2, Optional<RestorableFileSet> >*>(static_cast<RestoreActor*>(this)));
															#line 55504 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont4(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3(loopDepth);

		return loopDepth;
	}
	int a_body1cont4(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3(loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont4(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont4(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<RestoreActor*>(this)->actor_wait_state > 0) static_cast<RestoreActor*>(this)->actor_wait_state = 0;
		static_cast<RestoreActor*>(this)->ActorCallback< RestoreActor, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< RestoreActor, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("restore", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("restore", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< RestoreActor, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("restore", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("restore", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< RestoreActor, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("restore", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("restore", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont5(Optional<RestorableFileSet> const& restoreSet,int loopDepth) 
	{
															#line 6148 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!restoreSet.present())
															#line 55588 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 6149 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent(SevWarn, "FileBackupAgentRestoreNotPossible") .detail("BackupContainer", bc->getURL()) .detail("BeginVersion", beginVersion) .detail("TargetVersion", targetVersion);
															#line 6153 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			fmt::print(stderr, "ERROR: Restore version {0} is not possible from {1}\n", targetVersion, bc->getURL());
															#line 6154 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			return a_body1Catch1(restore_invalid_version(), loopDepth);
															#line 55596 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 6157 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (verbose)
															#line 55600 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 6158 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			printf("Restoring backup to version: %lld\n", (long long)targetVersion);
															#line 55604 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 6163 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (onlyApplyMutationLogs)
															#line 55608 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 6164 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_3 = preloadApplyMutationsKeyVersionMap(cx, randomUid, ranges, beginVersions);
															#line 6164 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<RestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 55614 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1cont5when1(__when_expr_3.get(), loopDepth); };
			static_cast<RestoreActor*>(this)->actor_wait_state = 4;
															#line 6164 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< RestoreActor, 3, Void >*>(static_cast<RestoreActor*>(this)));
															#line 55619 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont9(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont5(Optional<RestorableFileSet> && restoreSet,int loopDepth) 
	{
															#line 6148 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!restoreSet.present())
															#line 55633 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 6149 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent(SevWarn, "FileBackupAgentRestoreNotPossible") .detail("BackupContainer", bc->getURL()) .detail("BeginVersion", beginVersion) .detail("TargetVersion", targetVersion);
															#line 6153 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			fmt::print(stderr, "ERROR: Restore version {0} is not possible from {1}\n", targetVersion, bc->getURL());
															#line 6154 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			return a_body1Catch1(restore_invalid_version(), loopDepth);
															#line 55641 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 6157 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (verbose)
															#line 55645 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 6158 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			printf("Restoring backup to version: %lld\n", (long long)targetVersion);
															#line 55649 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 6163 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (onlyApplyMutationLogs)
															#line 55653 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 6164 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_3 = preloadApplyMutationsKeyVersionMap(cx, randomUid, ranges, beginVersions);
															#line 6164 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<RestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 55659 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1cont5when1(__when_expr_3.get(), loopDepth); };
			static_cast<RestoreActor*>(this)->actor_wait_state = 4;
															#line 6164 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< RestoreActor, 3, Void >*>(static_cast<RestoreActor*>(this)));
															#line 55664 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont9(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont3when1(Optional<RestorableFileSet> const& restoreSet,int loopDepth) 
	{
		loopDepth = a_body1cont5(restoreSet, loopDepth);

		return loopDepth;
	}
	int a_body1cont3when1(Optional<RestorableFileSet> && restoreSet,int loopDepth) 
	{
		loopDepth = a_body1cont5(std::move(restoreSet), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<RestoreActor*>(this)->actor_wait_state > 0) static_cast<RestoreActor*>(this)->actor_wait_state = 0;
		static_cast<RestoreActor*>(this)->ActorCallback< RestoreActor, 2, Optional<RestorableFileSet> >::remove();

	}
	void a_callback_fire(ActorCallback< RestoreActor, 2, Optional<RestorableFileSet> >*,Optional<RestorableFileSet> const& value) 
	{
		fdb_probe_actor_enter("restore", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont3when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("restore", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< RestoreActor, 2, Optional<RestorableFileSet> >*,Optional<RestorableFileSet> && value) 
	{
		fdb_probe_actor_enter("restore", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont3when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("restore", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< RestoreActor, 2, Optional<RestorableFileSet> >*,Error err) 
	{
		fdb_probe_actor_enter("restore", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("restore", reinterpret_cast<unsigned long>(this), 2);

	}
	int a_body1cont9(int loopDepth) 
	{
															#line 6167 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr = Reference<ReadYourWritesTransaction>(new ReadYourWritesTransaction(cx));
															#line 6168 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 55743 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont9loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1cont12(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont9(loopDepth);

		return loopDepth;
	}
	int a_body1cont12(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont9(loopDepth);

		return loopDepth;
	}
	int a_body1cont5when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont12(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont5when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont12(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose4() 
	{
		if (static_cast<RestoreActor*>(this)->actor_wait_state > 0) static_cast<RestoreActor*>(this)->actor_wait_state = 0;
		static_cast<RestoreActor*>(this)->ActorCallback< RestoreActor, 3, Void >::remove();

	}
	void a_callback_fire(ActorCallback< RestoreActor, 3, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("restore", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont5when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("restore", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_fire(ActorCallback< RestoreActor, 3, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("restore", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont5when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("restore", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_error(ActorCallback< RestoreActor, 3, Void >*,Error err) 
	{
		fdb_probe_actor_enter("restore", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("restore", reinterpret_cast<unsigned long>(this), 3);

	}
	int a_body1cont13(int loopDepth) 
	{
															#line 6197 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (waitForComplete)
															#line 55827 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 6198 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<ERestoreState> __when_expr_7 = waitRestore(cx, tagName, verbose);
															#line 6198 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<RestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 55833 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_7.isReady()) { if (__when_expr_7.isError()) return a_body1Catch1(__when_expr_7.getError(), loopDepth); else return a_body1cont13when1(__when_expr_7.get(), loopDepth); };
			static_cast<RestoreActor*>(this)->actor_wait_state = 8;
															#line 6198 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_7.addCallbackAndClear(static_cast<ActorCallback< RestoreActor, 7, ERestoreState >*>(static_cast<RestoreActor*>(this)));
															#line 55838 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont13cont1(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont9loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont9loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont9loopBody1(int loopDepth) 
	{
		try {
															#line 6170 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 6171 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 6172 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_4 = submitRestore(backupAgent, tr, tagName, url, proxy, ranges, targetVersion, addPrefix, removePrefix, lockDB, unlockDB, onlyApplyMutationLogs, inconsistentSnapshotOnly, beginVersion, randomUid);
															#line 6172 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<RestoreActor*>(this)->actor_wait_state < 0) return a_body1cont9loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 55866 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1cont9loopBody1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1cont9loopBody1when1(__when_expr_4.get(), loopDepth); };
			static_cast<RestoreActor*>(this)->actor_wait_state = 5;
															#line 6172 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< RestoreActor, 4, Void >*>(static_cast<RestoreActor*>(this)));
															#line 55871 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1cont9loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1cont9loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont9break1(int loopDepth) 
	{
		try {
			return a_body1cont13(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont9loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1cont9loopHead1(0);

		return loopDepth;
	}
	int a_body1cont9loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 6190 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (e.code() == error_code_restore_duplicate_tag)
															#line 55906 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 6191 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				return a_body1Catch1(e, std::max(0, loopDepth - 1));
															#line 55910 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
															#line 6193 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_6 = tr->onError(e);
															#line 6193 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<RestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 55916 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_6.isReady()) { if (__when_expr_6.isError()) return a_body1Catch1(__when_expr_6.getError(), std::max(0, loopDepth - 1)); else return a_body1cont9loopBody1Catch1when1(__when_expr_6.get(), loopDepth); };
			static_cast<RestoreActor*>(this)->actor_wait_state = 7;
															#line 6193 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_6.addCallbackAndClear(static_cast<ActorCallback< RestoreActor, 6, Void >*>(static_cast<RestoreActor*>(this)));
															#line 55921 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont9loopBody1cont2(Void const& _,int loopDepth) 
	{
															#line 6187 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_5 = tr->commit();
															#line 6187 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<RestoreActor*>(this)->actor_wait_state < 0) return a_body1cont9loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 55938 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_5.isReady()) { if (__when_expr_5.isError()) return a_body1cont9loopBody1Catch1(__when_expr_5.getError(), loopDepth); else return a_body1cont9loopBody1cont2when1(__when_expr_5.get(), loopDepth); };
		static_cast<RestoreActor*>(this)->actor_wait_state = 6;
															#line 6187 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_5.addCallbackAndClear(static_cast<ActorCallback< RestoreActor, 5, Void >*>(static_cast<RestoreActor*>(this)));
															#line 55943 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont9loopBody1cont2(Void && _,int loopDepth) 
	{
															#line 6187 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_5 = tr->commit();
															#line 6187 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<RestoreActor*>(this)->actor_wait_state < 0) return a_body1cont9loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 55954 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_5.isReady()) { if (__when_expr_5.isError()) return a_body1cont9loopBody1Catch1(__when_expr_5.getError(), loopDepth); else return a_body1cont9loopBody1cont2when1(__when_expr_5.get(), loopDepth); };
		static_cast<RestoreActor*>(this)->actor_wait_state = 6;
															#line 6187 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_5.addCallbackAndClear(static_cast<ActorCallback< RestoreActor, 5, Void >*>(static_cast<RestoreActor*>(this)));
															#line 55959 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont9loopBody1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont9loopBody1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont9loopBody1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont9loopBody1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose5() 
	{
		if (static_cast<RestoreActor*>(this)->actor_wait_state > 0) static_cast<RestoreActor*>(this)->actor_wait_state = 0;
		static_cast<RestoreActor*>(this)->ActorCallback< RestoreActor, 4, Void >::remove();

	}
	void a_callback_fire(ActorCallback< RestoreActor, 4, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("restore", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont9loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont9loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont9loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("restore", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_fire(ActorCallback< RestoreActor, 4, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("restore", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont9loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont9loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont9loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("restore", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_error(ActorCallback< RestoreActor, 4, Void >*,Error err) 
	{
		fdb_probe_actor_enter("restore", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont9loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont9loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont9loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("restore", reinterpret_cast<unsigned long>(this), 4);

	}
	int a_body1cont9loopBody1cont3(Void const& _,int loopDepth) 
	{
		return a_body1cont9break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1cont9loopBody1cont3(Void && _,int loopDepth) 
	{
		return a_body1cont9break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1cont9loopBody1cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont9loopBody1cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont9loopBody1cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont9loopBody1cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose6() 
	{
		if (static_cast<RestoreActor*>(this)->actor_wait_state > 0) static_cast<RestoreActor*>(this)->actor_wait_state = 0;
		static_cast<RestoreActor*>(this)->ActorCallback< RestoreActor, 5, Void >::remove();

	}
	void a_callback_fire(ActorCallback< RestoreActor, 5, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("restore", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont9loopBody1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont9loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont9loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("restore", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_fire(ActorCallback< RestoreActor, 5, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("restore", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont9loopBody1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont9loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont9loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("restore", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_error(ActorCallback< RestoreActor, 5, Void >*,Error err) 
	{
		fdb_probe_actor_enter("restore", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont9loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont9loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont9loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("restore", reinterpret_cast<unsigned long>(this), 5);

	}
	int a_body1cont9loopBody1Catch1cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont9loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont9loopBody1Catch1cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont9loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont9loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont9loopBody1Catch1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont9loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont9loopBody1Catch1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose7() 
	{
		if (static_cast<RestoreActor*>(this)->actor_wait_state > 0) static_cast<RestoreActor*>(this)->actor_wait_state = 0;
		static_cast<RestoreActor*>(this)->ActorCallback< RestoreActor, 6, Void >::remove();

	}
	void a_callback_fire(ActorCallback< RestoreActor, 6, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("restore", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1cont9loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("restore", reinterpret_cast<unsigned long>(this), 6);

	}
	void a_callback_fire(ActorCallback< RestoreActor, 6, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("restore", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1cont9loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("restore", reinterpret_cast<unsigned long>(this), 6);

	}
	void a_callback_error(ActorCallback< RestoreActor, 6, Void >*,Error err) 
	{
		fdb_probe_actor_enter("restore", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("restore", reinterpret_cast<unsigned long>(this), 6);

	}
	int a_body1cont13cont1(int loopDepth) 
	{
															#line 6203 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<RestoreActor*>(this)->SAV<Version>::futures) { (void)(targetVersion); this->~RestoreActorState(); static_cast<RestoreActor*>(this)->destroy(); return 0; }
															#line 56181 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<RestoreActor*>(this)->SAV< Version >::value()) Version(std::move(targetVersion)); // state_var_RVO
		this->~RestoreActorState();
		static_cast<RestoreActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont13cont2(ERestoreState const& finalState,int loopDepth) 
	{
															#line 6199 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (finalState != ERestoreState::COMPLETED)
															#line 56193 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 6200 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			return a_body1Catch1(restore_error(), loopDepth);
															#line 56197 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		loopDepth = a_body1cont13cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont13cont2(ERestoreState && finalState,int loopDepth) 
	{
															#line 6199 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (finalState != ERestoreState::COMPLETED)
															#line 56207 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 6200 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			return a_body1Catch1(restore_error(), loopDepth);
															#line 56211 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		loopDepth = a_body1cont13cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont13when1(ERestoreState const& finalState,int loopDepth) 
	{
		loopDepth = a_body1cont13cont2(finalState, loopDepth);

		return loopDepth;
	}
	int a_body1cont13when1(ERestoreState && finalState,int loopDepth) 
	{
		loopDepth = a_body1cont13cont2(std::move(finalState), loopDepth);

		return loopDepth;
	}
	void a_exitChoose8() 
	{
		if (static_cast<RestoreActor*>(this)->actor_wait_state > 0) static_cast<RestoreActor*>(this)->actor_wait_state = 0;
		static_cast<RestoreActor*>(this)->ActorCallback< RestoreActor, 7, ERestoreState >::remove();

	}
	void a_callback_fire(ActorCallback< RestoreActor, 7, ERestoreState >*,ERestoreState const& value) 
	{
		fdb_probe_actor_enter("restore", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1cont13when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("restore", reinterpret_cast<unsigned long>(this), 7);

	}
	void a_callback_fire(ActorCallback< RestoreActor, 7, ERestoreState >*,ERestoreState && value) 
	{
		fdb_probe_actor_enter("restore", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1cont13when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("restore", reinterpret_cast<unsigned long>(this), 7);

	}
	void a_callback_error(ActorCallback< RestoreActor, 7, ERestoreState >*,Error err) 
	{
		fdb_probe_actor_enter("restore", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("restore", reinterpret_cast<unsigned long>(this), 7);

	}
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	FileBackupAgent* backupAgent;
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Database cx;
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<Database> cxOrig;
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key tagName;
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key url;
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<std::string> proxy;
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Standalone<VectorRef<KeyRangeRef>> ranges;
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Standalone<VectorRef<Version>> beginVersions;
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	WaitForComplete waitForComplete;
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version targetVersion;
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Verbose verbose;
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key addPrefix;
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key removePrefix;
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	LockDB lockDB;
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	UnlockDB unlockDB;
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	OnlyApplyMutationLogs onlyApplyMutationLogs;
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	InconsistentSnapshotOnly inconsistentSnapshotOnly;
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Optional<std::string> encryptionKeyFileName;
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	UID randomUid;
															#line 6126 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<IBackupContainer> bc;
															#line 6128 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	BackupDescription desc;
															#line 6141 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version beginVersion;
															#line 6167 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 56326 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via restore()
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class RestoreActor final : public Actor<Version>, public ActorCallback< RestoreActor, 0, BackupDescription >, public ActorCallback< RestoreActor, 1, Void >, public ActorCallback< RestoreActor, 2, Optional<RestorableFileSet> >, public ActorCallback< RestoreActor, 3, Void >, public ActorCallback< RestoreActor, 4, Void >, public ActorCallback< RestoreActor, 5, Void >, public ActorCallback< RestoreActor, 6, Void >, public ActorCallback< RestoreActor, 7, ERestoreState >, public FastAllocated<RestoreActor>, public RestoreActorState<RestoreActor> {
															#line 56331 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<RestoreActor>::operator new;
	using FastAllocated<RestoreActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Version>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< RestoreActor, 0, BackupDescription >;
friend struct ActorCallback< RestoreActor, 1, Void >;
friend struct ActorCallback< RestoreActor, 2, Optional<RestorableFileSet> >;
friend struct ActorCallback< RestoreActor, 3, Void >;
friend struct ActorCallback< RestoreActor, 4, Void >;
friend struct ActorCallback< RestoreActor, 5, Void >;
friend struct ActorCallback< RestoreActor, 6, Void >;
friend struct ActorCallback< RestoreActor, 7, ERestoreState >;
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	RestoreActor(FileBackupAgent* const& backupAgent,Database const& cx,Optional<Database> const& cxOrig,Key const& tagName,Key const& url,Optional<std::string> const& proxy,Standalone<VectorRef<KeyRangeRef>> const& ranges,Standalone<VectorRef<Version>> const& beginVersions,WaitForComplete const& waitForComplete,Version const& targetVersion,Verbose const& verbose,Key const& addPrefix,Key const& removePrefix,LockDB const& lockDB,UnlockDB const& unlockDB,OnlyApplyMutationLogs const& onlyApplyMutationLogs,InconsistentSnapshotOnly const& inconsistentSnapshotOnly,Optional<std::string> const& encryptionKeyFileName,UID const& randomUid) 
															#line 56349 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Version>(),
		   RestoreActorState<RestoreActor>(backupAgent, cx, cxOrig, tagName, url, proxy, ranges, beginVersions, waitForComplete, targetVersion, verbose, addPrefix, removePrefix, lockDB, unlockDB, onlyApplyMutationLogs, inconsistentSnapshotOnly, encryptionKeyFileName, randomUid)
	{
		fdb_probe_actor_enter("restore", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("restore");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("restore", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< RestoreActor, 0, BackupDescription >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< RestoreActor, 1, Void >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< RestoreActor, 2, Optional<RestorableFileSet> >*)0, actor_cancelled()); break;
		case 4: this->a_callback_error((ActorCallback< RestoreActor, 3, Void >*)0, actor_cancelled()); break;
		case 5: this->a_callback_error((ActorCallback< RestoreActor, 4, Void >*)0, actor_cancelled()); break;
		case 6: this->a_callback_error((ActorCallback< RestoreActor, 5, Void >*)0, actor_cancelled()); break;
		case 7: this->a_callback_error((ActorCallback< RestoreActor, 6, Void >*)0, actor_cancelled()); break;
		case 8: this->a_callback_error((ActorCallback< RestoreActor, 7, ERestoreState >*)0, actor_cancelled()); break;
		}

	}
};
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Version> restore( FileBackupAgent* const& backupAgent, Database const& cx, Optional<Database> const& cxOrig, Key const& tagName, Key const& url, Optional<std::string> const& proxy, Standalone<VectorRef<KeyRangeRef>> const& ranges, Standalone<VectorRef<Version>> const& beginVersions, WaitForComplete const& waitForComplete, Version const& targetVersion, Verbose const& verbose, Key const& addPrefix, Key const& removePrefix, LockDB const& lockDB, UnlockDB const& unlockDB, OnlyApplyMutationLogs const& onlyApplyMutationLogs, InconsistentSnapshotOnly const& inconsistentSnapshotOnly, Optional<std::string> const& encryptionKeyFileName, UID const& randomUid ) {
															#line 6102 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Version>(new RestoreActor(backupAgent, cx, cxOrig, tagName, url, proxy, ranges, beginVersions, waitForComplete, targetVersion, verbose, addPrefix, removePrefix, lockDB, unlockDB, onlyApplyMutationLogs, inconsistentSnapshotOnly, encryptionKeyFileName, randomUid));
															#line 56383 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 6205 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

																#line 56388 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via preloadApplyMutationsKeyVersionMap()
															#line 6206 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class PreloadApplyMutationsKeyVersionMapActor>
															#line 6206 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class PreloadApplyMutationsKeyVersionMapActorState {
															#line 56394 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 6206 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	PreloadApplyMutationsKeyVersionMapActorState(Database const& cx,UID const& uid,Standalone<VectorRef<KeyRangeRef>> const& ranges,Standalone<VectorRef<Version>> const& versions) 
															#line 6206 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 6206 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : cx(cx),
															#line 6206 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   uid(uid),
															#line 6206 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   ranges(ranges),
															#line 6206 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   versions(versions),
															#line 6210 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tr(new ReadYourWritesTransaction(cx))
															#line 56409 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this));

	}
	~PreloadApplyMutationsKeyVersionMapActorState() 
	{
		fdb_probe_actor_destroy("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 6213 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			;
															#line 56424 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = a_body1loopHead1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~PreloadApplyMutationsKeyVersionMapActorState();
		static_cast<PreloadApplyMutationsKeyVersionMapActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 6243 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		i = int();
															#line 6244 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		stepSize = 1000;
															#line 6245 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		i = 0;
															#line 56451 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont1loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1(int loopDepth) 
	{
		try {
															#line 6215 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 6216 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 6218 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			Key mapStart = uidPrefixKey(applyMutationsKeyVersionMapRange.begin, uid);
															#line 6219 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->clear(KeyRangeRef(mapStart, strinc(mapStart)));
															#line 6220 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			int64_t startCount = 0;
															#line 6221 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->set(uidPrefixKey(applyMutationsKeyVersionCountRange.begin, uid), StringRef((uint8_t*)&startCount, 8));
															#line 6223 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->set(mapStart, BinaryWriter::toValue<Version>(invalidVersion, Unversioned()));
															#line 6225 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->clear(uidPrefixKey(applyMutationsEndRange.begin, uid));
															#line 6226 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->clear(uidPrefixKey(applyMutationsBeginRange.begin, uid));
															#line 6230 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			Version beginVersion = *std::min_element(versions.begin(), versions.end());
															#line 6231 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			Value versionEncoded = BinaryWriter::toValue(beginVersion, Unversioned());
															#line 6232 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			Key prefix = uidPrefixKey(applyMutationsKeyVersionMapRange.begin, uid);
															#line 6233 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_0 = krmSetRange(tr, prefix, allKeys, versionEncoded);
															#line 6233 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<PreloadApplyMutationsKeyVersionMapActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 56494 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1loopBody1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1loopBody1when1(__when_expr_0.get(), loopDepth); };
			static_cast<PreloadApplyMutationsKeyVersionMapActor*>(this)->actor_wait_state = 1;
															#line 6233 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< PreloadApplyMutationsKeyVersionMapActor, 0, Void >*>(static_cast<PreloadApplyMutationsKeyVersionMapActor*>(this)));
															#line 56499 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1break1(int loopDepth) 
	{
		try {
			return a_body1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1loopHead1(0);

		return loopDepth;
	}
	int a_body1loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 6238 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_2 = tr->onError(e);
															#line 6238 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<PreloadApplyMutationsKeyVersionMapActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 56536 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), std::max(0, loopDepth - 1)); else return a_body1loopBody1Catch1when1(__when_expr_2.get(), loopDepth); };
			static_cast<PreloadApplyMutationsKeyVersionMapActor*>(this)->actor_wait_state = 3;
															#line 6238 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< PreloadApplyMutationsKeyVersionMapActor, 2, Void >*>(static_cast<PreloadApplyMutationsKeyVersionMapActor*>(this)));
															#line 56541 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1loopBody1cont2(Void const& _,int loopDepth) 
	{
															#line 6235 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = tr->commit();
															#line 6235 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<PreloadApplyMutationsKeyVersionMapActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 56558 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1loopBody1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1loopBody1cont2when1(__when_expr_1.get(), loopDepth); };
		static_cast<PreloadApplyMutationsKeyVersionMapActor*>(this)->actor_wait_state = 2;
															#line 6235 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< PreloadApplyMutationsKeyVersionMapActor, 1, Void >*>(static_cast<PreloadApplyMutationsKeyVersionMapActor*>(this)));
															#line 56563 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1cont2(Void && _,int loopDepth) 
	{
															#line 6235 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = tr->commit();
															#line 6235 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<PreloadApplyMutationsKeyVersionMapActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 56574 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1loopBody1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1loopBody1cont2when1(__when_expr_1.get(), loopDepth); };
		static_cast<PreloadApplyMutationsKeyVersionMapActor*>(this)->actor_wait_state = 2;
															#line 6235 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< PreloadApplyMutationsKeyVersionMapActor, 1, Void >*>(static_cast<PreloadApplyMutationsKeyVersionMapActor*>(this)));
															#line 56579 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<PreloadApplyMutationsKeyVersionMapActor*>(this)->actor_wait_state > 0) static_cast<PreloadApplyMutationsKeyVersionMapActor*>(this)->actor_wait_state = 0;
		static_cast<PreloadApplyMutationsKeyVersionMapActor*>(this)->ActorCallback< PreloadApplyMutationsKeyVersionMapActor, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< PreloadApplyMutationsKeyVersionMapActor, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< PreloadApplyMutationsKeyVersionMapActor, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< PreloadApplyMutationsKeyVersionMapActor, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1loopBody1cont3(Void const& _,int loopDepth) 
	{
		return a_body1break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1loopBody1cont3(Void && _,int loopDepth) 
	{
		return a_body1break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1loopBody1cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<PreloadApplyMutationsKeyVersionMapActor*>(this)->actor_wait_state > 0) static_cast<PreloadApplyMutationsKeyVersionMapActor*>(this)->actor_wait_state = 0;
		static_cast<PreloadApplyMutationsKeyVersionMapActor*>(this)->ActorCallback< PreloadApplyMutationsKeyVersionMapActor, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< PreloadApplyMutationsKeyVersionMapActor, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< PreloadApplyMutationsKeyVersionMapActor, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< PreloadApplyMutationsKeyVersionMapActor, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1loopBody1Catch1cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1Catch1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1Catch1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<PreloadApplyMutationsKeyVersionMapActor*>(this)->actor_wait_state > 0) static_cast<PreloadApplyMutationsKeyVersionMapActor*>(this)->actor_wait_state = 0;
		static_cast<PreloadApplyMutationsKeyVersionMapActor*>(this)->ActorCallback< PreloadApplyMutationsKeyVersionMapActor, 2, Void >::remove();

	}
	void a_callback_fire(ActorCallback< PreloadApplyMutationsKeyVersionMapActor, 2, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< PreloadApplyMutationsKeyVersionMapActor, 2, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< PreloadApplyMutationsKeyVersionMapActor, 2, Void >*,Error err) 
	{
		fdb_probe_actor_enter("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 2);

	}
	int a_body1cont2(int loopDepth) 
	{
															#line 6249 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("PreloadApplyMutationsKeyVersionMap", uid).detail("Size", ranges.size());
															#line 6250 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<PreloadApplyMutationsKeyVersionMapActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~PreloadApplyMutationsKeyVersionMapActorState(); static_cast<PreloadApplyMutationsKeyVersionMapActor*>(this)->destroy(); return 0; }
															#line 56803 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<PreloadApplyMutationsKeyVersionMapActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~PreloadApplyMutationsKeyVersionMapActorState();
		static_cast<PreloadApplyMutationsKeyVersionMapActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1(int loopDepth) 
	{
															#line 6245 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!(i < ranges.size()))
															#line 56822 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
			return a_body1cont1break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 6246 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		int end = std::min(i + stepSize, ranges.size());
															#line 6247 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_3 = preloadApplyMutationsKeyVersionMap(cx, uid, ranges, versions, i, end);
															#line 6247 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<PreloadApplyMutationsKeyVersionMapActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 56832 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1Catch1(__when_expr_3.getError(), std::max(0, loopDepth - 1)); else return a_body1cont1loopBody1when1(__when_expr_3.get(), loopDepth); };
		static_cast<PreloadApplyMutationsKeyVersionMapActor*>(this)->actor_wait_state = 4;
															#line 6247 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< PreloadApplyMutationsKeyVersionMapActor, 3, Void >*>(static_cast<PreloadApplyMutationsKeyVersionMapActor*>(this)));
															#line 56837 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1break1(int loopDepth) 
	{
		try {
			return a_body1cont2(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont1loopBody1cont1(Void const& _,int loopDepth) 
	{
															#line 6245 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		i += stepSize;
															#line 56859 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (loopDepth == 0) return a_body1cont1loopHead1(0);

		return loopDepth;
	}
	int a_body1cont1loopBody1cont1(Void && _,int loopDepth) 
	{
															#line 6245 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		i += stepSize;
															#line 56868 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (loopDepth == 0) return a_body1cont1loopHead1(0);

		return loopDepth;
	}
	int a_body1cont1loopBody1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose4() 
	{
		if (static_cast<PreloadApplyMutationsKeyVersionMapActor*>(this)->actor_wait_state > 0) static_cast<PreloadApplyMutationsKeyVersionMapActor*>(this)->actor_wait_state = 0;
		static_cast<PreloadApplyMutationsKeyVersionMapActor*>(this)->ActorCallback< PreloadApplyMutationsKeyVersionMapActor, 3, Void >::remove();

	}
	void a_callback_fire(ActorCallback< PreloadApplyMutationsKeyVersionMapActor, 3, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont1loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_fire(ActorCallback< PreloadApplyMutationsKeyVersionMapActor, 3, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont1loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_error(ActorCallback< PreloadApplyMutationsKeyVersionMapActor, 3, Void >*,Error err) 
	{
		fdb_probe_actor_enter("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 3);

	}
															#line 6206 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Database cx;
															#line 6206 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	UID uid;
															#line 6206 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Standalone<VectorRef<KeyRangeRef>> ranges;
															#line 6206 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Standalone<VectorRef<Version>> versions;
															#line 6210 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 6243 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int i;
															#line 6244 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int stepSize;
															#line 56950 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via preloadApplyMutationsKeyVersionMap()
															#line 6206 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class PreloadApplyMutationsKeyVersionMapActor final : public Actor<Void>, public ActorCallback< PreloadApplyMutationsKeyVersionMapActor, 0, Void >, public ActorCallback< PreloadApplyMutationsKeyVersionMapActor, 1, Void >, public ActorCallback< PreloadApplyMutationsKeyVersionMapActor, 2, Void >, public ActorCallback< PreloadApplyMutationsKeyVersionMapActor, 3, Void >, public FastAllocated<PreloadApplyMutationsKeyVersionMapActor>, public PreloadApplyMutationsKeyVersionMapActorState<PreloadApplyMutationsKeyVersionMapActor> {
															#line 56955 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<PreloadApplyMutationsKeyVersionMapActor>::operator new;
	using FastAllocated<PreloadApplyMutationsKeyVersionMapActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< PreloadApplyMutationsKeyVersionMapActor, 0, Void >;
friend struct ActorCallback< PreloadApplyMutationsKeyVersionMapActor, 1, Void >;
friend struct ActorCallback< PreloadApplyMutationsKeyVersionMapActor, 2, Void >;
friend struct ActorCallback< PreloadApplyMutationsKeyVersionMapActor, 3, Void >;
															#line 6206 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	PreloadApplyMutationsKeyVersionMapActor(Database const& cx,UID const& uid,Standalone<VectorRef<KeyRangeRef>> const& ranges,Standalone<VectorRef<Version>> const& versions) 
															#line 56969 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   PreloadApplyMutationsKeyVersionMapActorState<PreloadApplyMutationsKeyVersionMapActor>(cx, uid, ranges, versions)
	{
		fdb_probe_actor_enter("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("preloadApplyMutationsKeyVersionMap");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< PreloadApplyMutationsKeyVersionMapActor, 0, Void >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< PreloadApplyMutationsKeyVersionMapActor, 1, Void >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< PreloadApplyMutationsKeyVersionMapActor, 2, Void >*)0, actor_cancelled()); break;
		case 4: this->a_callback_error((ActorCallback< PreloadApplyMutationsKeyVersionMapActor, 3, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 6206 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> preloadApplyMutationsKeyVersionMap( Database const& cx, UID const& uid, Standalone<VectorRef<KeyRangeRef>> const& ranges, Standalone<VectorRef<Version>> const& versions ) {
															#line 6206 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new PreloadApplyMutationsKeyVersionMapActor(cx, uid, ranges, versions));
															#line 56999 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 6252 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

																#line 57004 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via preloadApplyMutationsKeyVersionMap()
															#line 6253 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class PreloadApplyMutationsKeyVersionMapActor1>
															#line 6253 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class PreloadApplyMutationsKeyVersionMapActor1State {
															#line 57010 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 6253 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	PreloadApplyMutationsKeyVersionMapActor1State(Database const& cx,UID const& uid,Standalone<VectorRef<KeyRangeRef>> const& ranges,Standalone<VectorRef<Version>> const& versions,int const& start,int const& end) 
															#line 6253 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 6253 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : cx(cx),
															#line 6253 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   uid(uid),
															#line 6253 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   ranges(ranges),
															#line 6253 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   versions(versions),
															#line 6253 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   start(start),
															#line 6253 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   end(end),
															#line 6259 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tr(new ReadYourWritesTransaction(cx))
															#line 57029 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this));

	}
	~PreloadApplyMutationsKeyVersionMapActor1State() 
	{
		fdb_probe_actor_destroy("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 6260 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			;
															#line 57044 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = a_body1loopHead1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~PreloadApplyMutationsKeyVersionMapActor1State();
		static_cast<PreloadApplyMutationsKeyVersionMapActor1*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1(int loopDepth) 
	{
		try {
															#line 6262 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 6263 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 6264 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			i = int();
															#line 6265 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			i = start;
															#line 57081 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = a_body1loopBody1loopHead1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1loopHead1(0);

		return loopDepth;
	}
	int a_body1loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 6277 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_2 = tr->onError(e);
															#line 6277 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<PreloadApplyMutationsKeyVersionMapActor1*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 57105 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), std::max(0, loopDepth - 1)); else return a_body1loopBody1Catch1when1(__when_expr_2.get(), loopDepth); };
			static_cast<PreloadApplyMutationsKeyVersionMapActor1*>(this)->actor_wait_state = 3;
															#line 6277 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< PreloadApplyMutationsKeyVersionMapActor1, 2, Void >*>(static_cast<PreloadApplyMutationsKeyVersionMapActor1*>(this)));
															#line 57110 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1loopBody1cont2(int loopDepth) 
	{
															#line 6274 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_1 = tr->commit();
															#line 6274 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<PreloadApplyMutationsKeyVersionMapActor1*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 57127 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1loopBody1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1loopBody1cont2when1(__when_expr_1.get(), loopDepth); };
		static_cast<PreloadApplyMutationsKeyVersionMapActor1*>(this)->actor_wait_state = 2;
															#line 6274 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< PreloadApplyMutationsKeyVersionMapActor1, 1, Void >*>(static_cast<PreloadApplyMutationsKeyVersionMapActor1*>(this)));
															#line 57132 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1loopBody1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1loopBody1(int loopDepth) 
	{
															#line 6265 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!(i < end))
															#line 57148 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
			return a_body1loopBody1break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 6266 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Version version = versions[i];
															#line 6267 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (version == invalidVersion)
															#line 57156 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 6268 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			version = 0;
															#line 57160 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 6270 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Value versionEncoded = BinaryWriter::toValue(version, Unversioned());
															#line 6271 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		Key prefix = uidPrefixKey(applyMutationsKeyVersionMapRange.begin, uid);
															#line 6272 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_0 = krmSetRangeCoalescing(tr, prefix, ranges[i], allKeys, versionEncoded);
															#line 6272 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<PreloadApplyMutationsKeyVersionMapActor1*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 57170 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1loopBody1Catch1(__when_expr_0.getError(), std::max(0, loopDepth - 1)); else return a_body1loopBody1loopBody1when1(__when_expr_0.get(), loopDepth); };
		static_cast<PreloadApplyMutationsKeyVersionMapActor1*>(this)->actor_wait_state = 1;
															#line 6272 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< PreloadApplyMutationsKeyVersionMapActor1, 0, Void >*>(static_cast<PreloadApplyMutationsKeyVersionMapActor1*>(this)));
															#line 57175 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1break1(int loopDepth) 
	{
		try {
			return a_body1loopBody1cont2(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1loopBody1cont1(Void const& _,int loopDepth) 
	{
															#line 6265 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		++i;
															#line 57197 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (loopDepth == 0) return a_body1loopBody1loopHead1(0);

		return loopDepth;
	}
	int a_body1loopBody1loopBody1cont1(Void && _,int loopDepth) 
	{
															#line 6265 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		++i;
															#line 57206 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (loopDepth == 0) return a_body1loopBody1loopHead1(0);

		return loopDepth;
	}
	int a_body1loopBody1loopBody1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1loopBody1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1loopBody1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1loopBody1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<PreloadApplyMutationsKeyVersionMapActor1*>(this)->actor_wait_state > 0) static_cast<PreloadApplyMutationsKeyVersionMapActor1*>(this)->actor_wait_state = 0;
		static_cast<PreloadApplyMutationsKeyVersionMapActor1*>(this)->ActorCallback< PreloadApplyMutationsKeyVersionMapActor1, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< PreloadApplyMutationsKeyVersionMapActor1, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< PreloadApplyMutationsKeyVersionMapActor1, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< PreloadApplyMutationsKeyVersionMapActor1, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1loopBody1cont3(Void const& _,int loopDepth) 
	{
															#line 6275 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<PreloadApplyMutationsKeyVersionMapActor1*>(this)->SAV<Void>::futures) { (void)(Void()); this->~PreloadApplyMutationsKeyVersionMapActor1State(); static_cast<PreloadApplyMutationsKeyVersionMapActor1*>(this)->destroy(); return 0; }
															#line 57278 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<PreloadApplyMutationsKeyVersionMapActor1*>(this)->SAV< Void >::value()) Void(Void());
		this->~PreloadApplyMutationsKeyVersionMapActor1State();
		static_cast<PreloadApplyMutationsKeyVersionMapActor1*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1loopBody1cont3(Void && _,int loopDepth) 
	{
															#line 6275 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<PreloadApplyMutationsKeyVersionMapActor1*>(this)->SAV<Void>::futures) { (void)(Void()); this->~PreloadApplyMutationsKeyVersionMapActor1State(); static_cast<PreloadApplyMutationsKeyVersionMapActor1*>(this)->destroy(); return 0; }
															#line 57290 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<PreloadApplyMutationsKeyVersionMapActor1*>(this)->SAV< Void >::value()) Void(Void());
		this->~PreloadApplyMutationsKeyVersionMapActor1State();
		static_cast<PreloadApplyMutationsKeyVersionMapActor1*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1loopBody1cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<PreloadApplyMutationsKeyVersionMapActor1*>(this)->actor_wait_state > 0) static_cast<PreloadApplyMutationsKeyVersionMapActor1*>(this)->actor_wait_state = 0;
		static_cast<PreloadApplyMutationsKeyVersionMapActor1*>(this)->ActorCallback< PreloadApplyMutationsKeyVersionMapActor1, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< PreloadApplyMutationsKeyVersionMapActor1, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< PreloadApplyMutationsKeyVersionMapActor1, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< PreloadApplyMutationsKeyVersionMapActor1, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1loopBody1Catch1cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1Catch1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1Catch1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<PreloadApplyMutationsKeyVersionMapActor1*>(this)->actor_wait_state > 0) static_cast<PreloadApplyMutationsKeyVersionMapActor1*>(this)->actor_wait_state = 0;
		static_cast<PreloadApplyMutationsKeyVersionMapActor1*>(this)->ActorCallback< PreloadApplyMutationsKeyVersionMapActor1, 2, Void >::remove();

	}
	void a_callback_fire(ActorCallback< PreloadApplyMutationsKeyVersionMapActor1, 2, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< PreloadApplyMutationsKeyVersionMapActor1, 2, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< PreloadApplyMutationsKeyVersionMapActor1, 2, Void >*,Error err) 
	{
		fdb_probe_actor_enter("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), 2);

	}
															#line 6253 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Database cx;
															#line 6253 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	UID uid;
															#line 6253 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Standalone<VectorRef<KeyRangeRef>> ranges;
															#line 6253 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Standalone<VectorRef<Version>> versions;
															#line 6253 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int start;
															#line 6253 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int end;
															#line 6259 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> tr;
															#line 6264 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int i;
															#line 57452 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via preloadApplyMutationsKeyVersionMap()
															#line 6253 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class PreloadApplyMutationsKeyVersionMapActor1 final : public Actor<Void>, public ActorCallback< PreloadApplyMutationsKeyVersionMapActor1, 0, Void >, public ActorCallback< PreloadApplyMutationsKeyVersionMapActor1, 1, Void >, public ActorCallback< PreloadApplyMutationsKeyVersionMapActor1, 2, Void >, public FastAllocated<PreloadApplyMutationsKeyVersionMapActor1>, public PreloadApplyMutationsKeyVersionMapActor1State<PreloadApplyMutationsKeyVersionMapActor1> {
															#line 57457 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<PreloadApplyMutationsKeyVersionMapActor1>::operator new;
	using FastAllocated<PreloadApplyMutationsKeyVersionMapActor1>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< PreloadApplyMutationsKeyVersionMapActor1, 0, Void >;
friend struct ActorCallback< PreloadApplyMutationsKeyVersionMapActor1, 1, Void >;
friend struct ActorCallback< PreloadApplyMutationsKeyVersionMapActor1, 2, Void >;
															#line 6253 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	PreloadApplyMutationsKeyVersionMapActor1(Database const& cx,UID const& uid,Standalone<VectorRef<KeyRangeRef>> const& ranges,Standalone<VectorRef<Version>> const& versions,int const& start,int const& end) 
															#line 57470 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   PreloadApplyMutationsKeyVersionMapActor1State<PreloadApplyMutationsKeyVersionMapActor1>(cx, uid, ranges, versions, start, end)
	{
		fdb_probe_actor_enter("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("preloadApplyMutationsKeyVersionMap");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("preloadApplyMutationsKeyVersionMap", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< PreloadApplyMutationsKeyVersionMapActor1, 0, Void >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< PreloadApplyMutationsKeyVersionMapActor1, 1, Void >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< PreloadApplyMutationsKeyVersionMapActor1, 2, Void >*)0, actor_cancelled()); break;
		}

	}
};
															#line 6253 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> preloadApplyMutationsKeyVersionMap( Database const& cx, UID const& uid, Standalone<VectorRef<KeyRangeRef>> const& ranges, Standalone<VectorRef<Version>> const& versions, int const& start, int const& end ) {
															#line 6253 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new PreloadApplyMutationsKeyVersionMapActor1(cx, uid, ranges, versions, start, end));
															#line 57499 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 6281 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

	// used for correctness only, locks the database before discontinuing the backup and that same lock is then used
	// while doing the restore. the tagname of the backup must be the same as the restore.
																#line 57506 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
// This generated class is to be used only via atomicRestore()
															#line 6284 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class AtomicRestoreActor>
															#line 6284 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class AtomicRestoreActorState {
															#line 57512 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 6284 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	AtomicRestoreActorState(FileBackupAgent* const& backupAgent,Database const& cx,Key const& tagName,Standalone<VectorRef<KeyRangeRef>> const& ranges,Key const& addPrefix,Key const& removePrefix,UsePartitionedLog const& fastRestore) 
															#line 6284 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 6284 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : backupAgent(backupAgent),
															#line 6284 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   cx(cx),
															#line 6284 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tagName(tagName),
															#line 6284 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   ranges(ranges),
															#line 6284 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   addPrefix(addPrefix),
															#line 6284 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   removePrefix(removePrefix),
															#line 6284 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   fastRestore(fastRestore),
															#line 6291 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   ryw_tr(Reference<ReadYourWritesTransaction>(new ReadYourWritesTransaction(cx))),
															#line 6293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   backupConfig()
															#line 57535 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("atomicRestore", reinterpret_cast<unsigned long>(this));

	}
	~AtomicRestoreActorState() 
	{
		fdb_probe_actor_destroy("atomicRestore", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 6294 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<DatabaseConfiguration> __when_expr_0 = getDatabaseConfiguration(cx);
															#line 6294 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 57552 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 1;
															#line 6294 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< AtomicRestoreActor, 0, DatabaseConfiguration >*>(static_cast<AtomicRestoreActor*>(this)));
															#line 57557 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~AtomicRestoreActorState();
		static_cast<AtomicRestoreActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 6295 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 57580 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont1loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1when1(DatabaseConfiguration const& __config,int loopDepth) 
	{
															#line 6294 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		config = __config;
															#line 57589 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1when1(DatabaseConfiguration && __config,int loopDepth) 
	{
		config = std::move(__config);
		loopDepth = a_body1cont1(loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state > 0) static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<AtomicRestoreActor*>(this)->ActorCallback< AtomicRestoreActor, 0, DatabaseConfiguration >::remove();

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 0, DatabaseConfiguration >*,DatabaseConfiguration const& value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 0, DatabaseConfiguration >*,DatabaseConfiguration && value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< AtomicRestoreActor, 0, DatabaseConfiguration >*,Error err) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont2(int loopDepth) 
	{
															#line 6315 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr = Transaction(cx);
															#line 6316 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		commitVersion = Version();
															#line 6317 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		randomUid = deterministicRandom()->randomUniqueID();
															#line 6318 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 57662 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont2loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1(int loopDepth) 
	{
		try {
															#line 6297 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			ryw_tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 6298 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			ryw_tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 6299 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tag = makeBackupTag(tagName.toString());
															#line 6300 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<UidAndAbortedFlagT> __when_expr_1 = tag.getOrThrow(ryw_tr);
															#line 6300 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state < 0) return a_body1cont1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 57687 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1cont1loopBody1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1loopBody1when1(__when_expr_1.get(), loopDepth); };
			static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 2;
															#line 6300 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< AtomicRestoreActor, 1, UidAndAbortedFlagT >*>(static_cast<AtomicRestoreActor*>(this)));
															#line 57692 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1cont1loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1cont1loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont1break1(int loopDepth) 
	{
		try {
			return a_body1cont2(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont1loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1cont1loopHead1(0);

		return loopDepth;
	}
	int a_body1cont1loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 6310 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_3 = ryw_tr->onError(e);
															#line 6310 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 57729 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1Catch1(__when_expr_3.getError(), std::max(0, loopDepth - 1)); else return a_body1cont1loopBody1Catch1when1(__when_expr_3.get(), loopDepth); };
			static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 4;
															#line 6310 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< AtomicRestoreActor, 3, Void >*>(static_cast<AtomicRestoreActor*>(this)));
															#line 57734 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont1loopBody1cont2(UidAndAbortedFlagT const& uidFlag,int loopDepth) 
	{
															#line 6301 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		backupConfig = BackupConfig(uidFlag.first);
															#line 6302 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<EBackupState> __when_expr_2 = backupConfig.stateEnum().getOrThrow(ryw_tr);
															#line 6302 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state < 0) return a_body1cont1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 57753 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1cont1loopBody1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont1loopBody1cont2when1(__when_expr_2.get(), loopDepth); };
		static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 3;
															#line 6302 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< AtomicRestoreActor, 2, EBackupState >*>(static_cast<AtomicRestoreActor*>(this)));
															#line 57758 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1loopBody1cont2(UidAndAbortedFlagT && uidFlag,int loopDepth) 
	{
															#line 6301 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		backupConfig = BackupConfig(uidFlag.first);
															#line 6302 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<EBackupState> __when_expr_2 = backupConfig.stateEnum().getOrThrow(ryw_tr);
															#line 6302 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state < 0) return a_body1cont1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 57771 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1cont1loopBody1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont1loopBody1cont2when1(__when_expr_2.get(), loopDepth); };
		static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 3;
															#line 6302 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< AtomicRestoreActor, 2, EBackupState >*>(static_cast<AtomicRestoreActor*>(this)));
															#line 57776 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1loopBody1when1(UidAndAbortedFlagT const& uidFlag,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont2(uidFlag, loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1when1(UidAndAbortedFlagT && uidFlag,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont2(std::move(uidFlag), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state > 0) static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<AtomicRestoreActor*>(this)->ActorCallback< AtomicRestoreActor, 1, UidAndAbortedFlagT >::remove();

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 1, UidAndAbortedFlagT >*,UidAndAbortedFlagT const& value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 1, UidAndAbortedFlagT >*,UidAndAbortedFlagT && value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< AtomicRestoreActor, 1, UidAndAbortedFlagT >*,Error err) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont1loopBody1cont3(int loopDepth) 
	{
															#line 6304 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (status != EBackupState::STATE_RUNNING_DIFFERENTIAL)
															#line 57848 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 6305 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			return a_body1cont1loopBody1Catch1(backup_duplicate(), loopDepth);
															#line 57852 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		return a_body1cont1break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1cont1loopBody1cont2when1(EBackupState const& __status,int loopDepth) 
	{
															#line 6302 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		status = __status;
															#line 57862 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont1loopBody1cont3(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1cont2when1(EBackupState && __status,int loopDepth) 
	{
		status = std::move(__status);
		loopDepth = a_body1cont1loopBody1cont3(loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state > 0) static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<AtomicRestoreActor*>(this)->ActorCallback< AtomicRestoreActor, 2, EBackupState >::remove();

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 2, EBackupState >*,EBackupState const& value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont1loopBody1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 2, EBackupState >*,EBackupState && value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont1loopBody1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< AtomicRestoreActor, 2, EBackupState >*,Error err) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 2);

	}
	int a_body1cont1loopBody1Catch1cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1Catch1cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1Catch1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1Catch1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose4() 
	{
		if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state > 0) static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<AtomicRestoreActor*>(this)->ActorCallback< AtomicRestoreActor, 3, Void >::remove();

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 3, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont1loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 3, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont1loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_error(ActorCallback< AtomicRestoreActor, 3, Void >*,Error err) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 3);

	}
	int a_body1cont3(int loopDepth) 
	{
															#line 6333 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		ryw_tr->reset();
															#line 6334 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 58006 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont3loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1cont2loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont2loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont2loopBody1(int loopDepth) 
	{
		try {
															#line 6322 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr.addWriteConflictRange(backupConfig.snapshotRangeDispatchMap().subspace);
															#line 6323 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_4 = lockDatabase(&tr, randomUid);
															#line 6323 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state < 0) return a_body1cont2loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 58027 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1cont2loopBody1Catch1(__when_expr_4.getError(), loopDepth); else return a_body1cont2loopBody1when1(__when_expr_4.get(), loopDepth); };
			static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 5;
															#line 6323 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< AtomicRestoreActor, 4, Void >*>(static_cast<AtomicRestoreActor*>(this)));
															#line 58032 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1cont2loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1cont2loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont2break1(int loopDepth) 
	{
		try {
			return a_body1cont3(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont2loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1cont2loopHead1(0);

		return loopDepth;
	}
	int a_body1cont2loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 6329 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_6 = tr.onError(e);
															#line 6329 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 58069 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_6.isReady()) { if (__when_expr_6.isError()) return a_body1Catch1(__when_expr_6.getError(), std::max(0, loopDepth - 1)); else return a_body1cont2loopBody1Catch1when1(__when_expr_6.get(), loopDepth); };
			static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 7;
															#line 6329 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_6.addCallbackAndClear(static_cast<ActorCallback< AtomicRestoreActor, 6, Void >*>(static_cast<AtomicRestoreActor*>(this)));
															#line 58074 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont2loopBody1cont2(Void const& _,int loopDepth) 
	{
															#line 6324 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_5 = tr.commit();
															#line 6324 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state < 0) return a_body1cont2loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 58091 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_5.isReady()) { if (__when_expr_5.isError()) return a_body1cont2loopBody1Catch1(__when_expr_5.getError(), loopDepth); else return a_body1cont2loopBody1cont2when1(__when_expr_5.get(), loopDepth); };
		static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 6;
															#line 6324 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_5.addCallbackAndClear(static_cast<ActorCallback< AtomicRestoreActor, 5, Void >*>(static_cast<AtomicRestoreActor*>(this)));
															#line 58096 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont2loopBody1cont2(Void && _,int loopDepth) 
	{
															#line 6324 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_5 = tr.commit();
															#line 6324 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state < 0) return a_body1cont2loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 58107 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_5.isReady()) { if (__when_expr_5.isError()) return a_body1cont2loopBody1Catch1(__when_expr_5.getError(), loopDepth); else return a_body1cont2loopBody1cont2when1(__when_expr_5.get(), loopDepth); };
		static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 6;
															#line 6324 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_5.addCallbackAndClear(static_cast<ActorCallback< AtomicRestoreActor, 5, Void >*>(static_cast<AtomicRestoreActor*>(this)));
															#line 58112 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont2loopBody1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2loopBody1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont2loopBody1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2loopBody1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose5() 
	{
		if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state > 0) static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<AtomicRestoreActor*>(this)->ActorCallback< AtomicRestoreActor, 4, Void >::remove();

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 4, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont2loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont2loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont2loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 4, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont2loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont2loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont2loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_error(ActorCallback< AtomicRestoreActor, 4, Void >*,Error err) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont2loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont2loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont2loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 4);

	}
	int a_body1cont2loopBody1cont3(Void const& _,int loopDepth) 
	{
															#line 6325 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		commitVersion = tr.getCommittedVersion();
															#line 6326 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("AS_Locked").detail("CommitVer", commitVersion);
															#line 58186 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		return a_body1cont2break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1cont2loopBody1cont3(Void && _,int loopDepth) 
	{
															#line 6325 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		commitVersion = tr.getCommittedVersion();
															#line 6326 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("AS_Locked").detail("CommitVer", commitVersion);
															#line 58197 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		return a_body1cont2break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1cont2loopBody1cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2loopBody1cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont2loopBody1cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2loopBody1cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose6() 
	{
		if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state > 0) static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<AtomicRestoreActor*>(this)->ActorCallback< AtomicRestoreActor, 5, Void >::remove();

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 5, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont2loopBody1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont2loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont2loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 5, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont2loopBody1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont2loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont2loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_error(ActorCallback< AtomicRestoreActor, 5, Void >*,Error err) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont2loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont2loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont2loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 5);

	}
	int a_body1cont2loopBody1Catch1cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont2loopBody1Catch1cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont2loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2loopBody1Catch1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont2loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2loopBody1Catch1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose7() 
	{
		if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state > 0) static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<AtomicRestoreActor*>(this)->ActorCallback< AtomicRestoreActor, 6, Void >::remove();

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 6, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1cont2loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 6);

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 6, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1cont2loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 6);

	}
	void a_callback_error(ActorCallback< AtomicRestoreActor, 6, Void >*,Error err) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 6);

	}
	int a_body1cont4(int loopDepth) 
	{
															#line 6349 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		ryw_tr->reset();
															#line 6350 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 58346 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont4loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont3loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1(int loopDepth) 
	{
		try {
															#line 6336 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Optional<Version>> __when_expr_7 = backupConfig.getLatestRestorableVersion(ryw_tr);
															#line 6336 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state < 0) return a_body1cont3loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 58365 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_7.isReady()) { if (__when_expr_7.isError()) return a_body1cont3loopBody1Catch1(__when_expr_7.getError(), loopDepth); else return a_body1cont3loopBody1when1(__when_expr_7.get(), loopDepth); };
			static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 8;
															#line 6336 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_7.addCallbackAndClear(static_cast<ActorCallback< AtomicRestoreActor, 7, Optional<Version> >*>(static_cast<AtomicRestoreActor*>(this)));
															#line 58370 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1cont3loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1cont3loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont3break1(int loopDepth) 
	{
		try {
			return a_body1cont4(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont3loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1cont3loopHead1(0);

		return loopDepth;
	}
	int a_body1cont3loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 6345 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_9 = ryw_tr->onError(e);
															#line 6345 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 58407 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_9.isReady()) { if (__when_expr_9.isError()) return a_body1Catch1(__when_expr_9.getError(), std::max(0, loopDepth - 1)); else return a_body1cont3loopBody1Catch1when1(__when_expr_9.get(), loopDepth); };
			static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 10;
															#line 6345 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_9.addCallbackAndClear(static_cast<ActorCallback< AtomicRestoreActor, 9, Void >*>(static_cast<AtomicRestoreActor*>(this)));
															#line 58412 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont3loopBody1cont2(Optional<Version> const& restoreVersion,int loopDepth) 
	{
															#line 6337 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (restoreVersion.present() && restoreVersion.get() >= commitVersion)
															#line 58427 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 6338 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent("AS_RestoreVersion").detail("RestoreVer", restoreVersion.get());
															#line 58431 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			return a_body1cont3break1(loopDepth==0?0:loopDepth-1); // break
		}
		else
		{
															#line 6341 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			ryw_tr->reset();
															#line 6342 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_8 = delay(0.2);
															#line 6342 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state < 0) return a_body1cont3loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 58442 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_8.isReady()) { if (__when_expr_8.isError()) return a_body1cont3loopBody1Catch1(__when_expr_8.getError(), loopDepth); else return a_body1cont3loopBody1cont2when1(__when_expr_8.get(), loopDepth); };
			static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 9;
															#line 6342 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_8.addCallbackAndClear(static_cast<ActorCallback< AtomicRestoreActor, 8, Void >*>(static_cast<AtomicRestoreActor*>(this)));
															#line 58447 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}

		return loopDepth;
	}
	int a_body1cont3loopBody1cont2(Optional<Version> && restoreVersion,int loopDepth) 
	{
															#line 6337 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (restoreVersion.present() && restoreVersion.get() >= commitVersion)
															#line 58457 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 6338 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent("AS_RestoreVersion").detail("RestoreVer", restoreVersion.get());
															#line 58461 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			return a_body1cont3break1(loopDepth==0?0:loopDepth-1); // break
		}
		else
		{
															#line 6341 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			ryw_tr->reset();
															#line 6342 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_8 = delay(0.2);
															#line 6342 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state < 0) return a_body1cont3loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 58472 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_8.isReady()) { if (__when_expr_8.isError()) return a_body1cont3loopBody1Catch1(__when_expr_8.getError(), loopDepth); else return a_body1cont3loopBody1cont2when1(__when_expr_8.get(), loopDepth); };
			static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 9;
															#line 6342 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_8.addCallbackAndClear(static_cast<ActorCallback< AtomicRestoreActor, 8, Void >*>(static_cast<AtomicRestoreActor*>(this)));
															#line 58477 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}

		return loopDepth;
	}
	int a_body1cont3loopBody1when1(Optional<Version> const& restoreVersion,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1cont2(restoreVersion, loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1when1(Optional<Version> && restoreVersion,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1cont2(std::move(restoreVersion), loopDepth);

		return loopDepth;
	}
	void a_exitChoose8() 
	{
		if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state > 0) static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<AtomicRestoreActor*>(this)->ActorCallback< AtomicRestoreActor, 7, Optional<Version> >::remove();

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 7, Optional<Version> >*,Optional<Version> const& value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1cont3loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont3loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont3loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 7);

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 7, Optional<Version> >*,Optional<Version> && value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1cont3loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont3loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont3loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 7);

	}
	void a_callback_error(ActorCallback< AtomicRestoreActor, 7, Optional<Version> >*,Error err) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1cont3loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont3loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont3loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 7);

	}
	int a_body1cont3loopBody1cont3(int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1cont6(loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1cont5(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1cont3(loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1cont5(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1cont3(loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1cont5(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1cont5(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose9() 
	{
		if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state > 0) static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<AtomicRestoreActor*>(this)->ActorCallback< AtomicRestoreActor, 8, Void >::remove();

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 8, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 8);
		a_exitChoose9();
		try {
			a_body1cont3loopBody1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont3loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont3loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 8);

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 8, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 8);
		a_exitChoose9();
		try {
			a_body1cont3loopBody1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont3loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont3loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 8);

	}
	void a_callback_error(ActorCallback< AtomicRestoreActor, 8, Void >*,Error err) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 8);
		a_exitChoose9();
		try {
			a_body1cont3loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont3loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont3loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 8);

	}
	int a_body1cont3loopBody1cont6(int loopDepth) 
	{
		try {
			loopDepth = a_body1cont3loopBody1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont3loopBody1Catch1cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1Catch1cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1Catch1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont3loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont3loopBody1Catch1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose10() 
	{
		if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state > 0) static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<AtomicRestoreActor*>(this)->ActorCallback< AtomicRestoreActor, 9, Void >::remove();

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 9, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 9);
		a_exitChoose10();
		try {
			a_body1cont3loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 9);

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 9, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 9);
		a_exitChoose10();
		try {
			a_body1cont3loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 9);

	}
	void a_callback_error(ActorCallback< AtomicRestoreActor, 9, Void >*,Error err) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 9);
		a_exitChoose10();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 9);

	}
	int a_body1cont5(int loopDepth) 
	{
															#line 6364 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_13 = success(waitBackup(backupAgent, cx, tagName.toString(), StopWhenDone::True));
															#line 6364 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 58721 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_13.isReady()) { if (__when_expr_13.isError()) return a_body1Catch1(__when_expr_13.getError(), loopDepth); else return a_body1cont5when1(__when_expr_13.get(), loopDepth); };
		static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 14;
															#line 6364 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_13.addCallbackAndClear(static_cast<ActorCallback< AtomicRestoreActor, 13, Void >*>(static_cast<AtomicRestoreActor*>(this)));
															#line 58726 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont4loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont4loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont4loopBody1(int loopDepth) 
	{
		try {
															#line 6352 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_10 = discontinueBackup(backupAgent, ryw_tr, tagName);
															#line 6352 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state < 0) return a_body1cont4loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 58745 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_10.isReady()) { if (__when_expr_10.isError()) return a_body1cont4loopBody1Catch1(__when_expr_10.getError(), loopDepth); else return a_body1cont4loopBody1when1(__when_expr_10.get(), loopDepth); };
			static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 11;
															#line 6352 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_10.addCallbackAndClear(static_cast<ActorCallback< AtomicRestoreActor, 10, Void >*>(static_cast<AtomicRestoreActor*>(this)));
															#line 58750 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1cont4loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1cont4loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont4break1(int loopDepth) 
	{
		try {
			return a_body1cont5(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont4loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1cont4loopHead1(0);

		return loopDepth;
	}
	int a_body1cont4loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 6357 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (e.code() == error_code_backup_unneeded || e.code() == error_code_backup_duplicate)
															#line 58785 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
				return a_body1cont4break1(loopDepth==0?0:loopDepth-1); // break
			}
															#line 6360 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_12 = ryw_tr->onError(e);
															#line 6360 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 58793 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_12.isReady()) { if (__when_expr_12.isError()) return a_body1Catch1(__when_expr_12.getError(), std::max(0, loopDepth - 1)); else return a_body1cont4loopBody1Catch1when1(__when_expr_12.get(), loopDepth); };
			static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 13;
															#line 6360 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_12.addCallbackAndClear(static_cast<ActorCallback< AtomicRestoreActor, 12, Void >*>(static_cast<AtomicRestoreActor*>(this)));
															#line 58798 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont4loopBody1cont2(Void const& _,int loopDepth) 
	{
															#line 6353 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_11 = ryw_tr->commit();
															#line 6353 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state < 0) return a_body1cont4loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 58815 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_11.isReady()) { if (__when_expr_11.isError()) return a_body1cont4loopBody1Catch1(__when_expr_11.getError(), loopDepth); else return a_body1cont4loopBody1cont2when1(__when_expr_11.get(), loopDepth); };
		static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 12;
															#line 6353 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_11.addCallbackAndClear(static_cast<ActorCallback< AtomicRestoreActor, 11, Void >*>(static_cast<AtomicRestoreActor*>(this)));
															#line 58820 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont4loopBody1cont2(Void && _,int loopDepth) 
	{
															#line 6353 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_11 = ryw_tr->commit();
															#line 6353 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state < 0) return a_body1cont4loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 58831 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_11.isReady()) { if (__when_expr_11.isError()) return a_body1cont4loopBody1Catch1(__when_expr_11.getError(), loopDepth); else return a_body1cont4loopBody1cont2when1(__when_expr_11.get(), loopDepth); };
		static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 12;
															#line 6353 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_11.addCallbackAndClear(static_cast<ActorCallback< AtomicRestoreActor, 11, Void >*>(static_cast<AtomicRestoreActor*>(this)));
															#line 58836 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont4loopBody1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont4loopBody1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont4loopBody1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont4loopBody1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose11() 
	{
		if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state > 0) static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<AtomicRestoreActor*>(this)->ActorCallback< AtomicRestoreActor, 10, Void >::remove();

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 10, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 10);
		a_exitChoose11();
		try {
			a_body1cont4loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont4loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont4loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 10);

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 10, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 10);
		a_exitChoose11();
		try {
			a_body1cont4loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont4loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont4loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 10);

	}
	void a_callback_error(ActorCallback< AtomicRestoreActor, 10, Void >*,Error err) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 10);
		a_exitChoose11();
		try {
			a_body1cont4loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont4loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont4loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 10);

	}
	int a_body1cont4loopBody1cont3(Void const& _,int loopDepth) 
	{
															#line 6354 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("AS_DiscontinuedBackup").log();
															#line 58908 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		return a_body1cont4break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1cont4loopBody1cont3(Void && _,int loopDepth) 
	{
															#line 6354 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("AS_DiscontinuedBackup").log();
															#line 58917 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		return a_body1cont4break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1cont4loopBody1cont2when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont4loopBody1cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont4loopBody1cont2when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont4loopBody1cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose12() 
	{
		if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state > 0) static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<AtomicRestoreActor*>(this)->ActorCallback< AtomicRestoreActor, 11, Void >::remove();

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 11, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 11);
		a_exitChoose12();
		try {
			a_body1cont4loopBody1cont2when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont4loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont4loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 11);

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 11, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 11);
		a_exitChoose12();
		try {
			a_body1cont4loopBody1cont2when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont4loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont4loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 11);

	}
	void a_callback_error(ActorCallback< AtomicRestoreActor, 11, Void >*,Error err) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 11);
		a_exitChoose12();
		try {
			a_body1cont4loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont4loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont4loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 11);

	}
	int a_body1cont4loopBody1Catch1cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont4loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont4loopBody1Catch1cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont4loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont4loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont4loopBody1Catch1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont4loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont4loopBody1Catch1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose13() 
	{
		if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state > 0) static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<AtomicRestoreActor*>(this)->ActorCallback< AtomicRestoreActor, 12, Void >::remove();

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 12, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 12);
		a_exitChoose13();
		try {
			a_body1cont4loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 12);

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 12, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 12);
		a_exitChoose13();
		try {
			a_body1cont4loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 12);

	}
	void a_callback_error(ActorCallback< AtomicRestoreActor, 12, Void >*,Error err) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 12);
		a_exitChoose13();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 12);

	}
	int a_body1cont6(Void const& _,int loopDepth) 
	{
															#line 6365 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("AS_BackupStopped").log();
															#line 6367 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		ryw_tr->reset();
															#line 6368 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 59068 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont6loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1cont6(Void && _,int loopDepth) 
	{
															#line 6365 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("AS_BackupStopped").log();
															#line 6367 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		ryw_tr->reset();
															#line 6368 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 59081 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont6loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1cont5when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont6(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont5when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont6(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose14() 
	{
		if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state > 0) static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<AtomicRestoreActor*>(this)->ActorCallback< AtomicRestoreActor, 13, Void >::remove();

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 13, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 13);
		a_exitChoose14();
		try {
			a_body1cont5when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 13);

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 13, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 13);
		a_exitChoose14();
		try {
			a_body1cont5when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 13);

	}
	void a_callback_error(ActorCallback< AtomicRestoreActor, 13, Void >*,Error err) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 13);
		a_exitChoose14();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 13);

	}
	int a_body1cont7(int loopDepth) 
	{
															#line 6385 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Reference<IBackupContainer>> __when_expr_16 = backupConfig.backupContainer().getOrThrow(cx.getReference());
															#line 6385 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 59155 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_16.isReady()) { if (__when_expr_16.isError()) return a_body1Catch1(__when_expr_16.getError(), loopDepth); else return a_body1cont7when1(__when_expr_16.get(), loopDepth); };
		static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 17;
															#line 6385 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_16.addCallbackAndClear(static_cast<ActorCallback< AtomicRestoreActor, 16, Reference<IBackupContainer> >*>(static_cast<AtomicRestoreActor*>(this)));
															#line 59160 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont6loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont6loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont6loopBody1(int loopDepth) 
	{
		try {
															#line 6371 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			ryw_tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 6372 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			ryw_tr->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 6373 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			for( auto& range : ranges ) {
															#line 6374 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				ryw_tr->addReadConflictRange(range);
															#line 6375 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				ryw_tr->clear(range);
															#line 59185 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
															#line 6377 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_14 = ryw_tr->commit();
															#line 6377 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state < 0) return a_body1cont6loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 59191 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_14.isReady()) { if (__when_expr_14.isError()) return a_body1cont6loopBody1Catch1(__when_expr_14.getError(), loopDepth); else return a_body1cont6loopBody1when1(__when_expr_14.get(), loopDepth); };
			static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 15;
															#line 6377 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_14.addCallbackAndClear(static_cast<ActorCallback< AtomicRestoreActor, 14, Void >*>(static_cast<AtomicRestoreActor*>(this)));
															#line 59196 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1cont6loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1cont6loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont6break1(int loopDepth) 
	{
		try {
			return a_body1cont7(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont6loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1cont6loopHead1(0);

		return loopDepth;
	}
	int a_body1cont6loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 6381 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_15 = ryw_tr->onError(e);
															#line 6381 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 59233 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_15.isReady()) { if (__when_expr_15.isError()) return a_body1Catch1(__when_expr_15.getError(), std::max(0, loopDepth - 1)); else return a_body1cont6loopBody1Catch1when1(__when_expr_15.get(), loopDepth); };
			static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 16;
															#line 6381 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_15.addCallbackAndClear(static_cast<ActorCallback< AtomicRestoreActor, 15, Void >*>(static_cast<AtomicRestoreActor*>(this)));
															#line 59238 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont6loopBody1cont2(Void const& _,int loopDepth) 
	{
															#line 6378 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("AS_ClearedRange").log();
															#line 59253 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		return a_body1cont6break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1cont6loopBody1cont2(Void && _,int loopDepth) 
	{
															#line 6378 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("AS_ClearedRange").log();
															#line 59262 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		return a_body1cont6break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1cont6loopBody1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont6loopBody1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont6loopBody1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont6loopBody1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose15() 
	{
		if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state > 0) static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<AtomicRestoreActor*>(this)->ActorCallback< AtomicRestoreActor, 14, Void >::remove();

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 14, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 14);
		a_exitChoose15();
		try {
			a_body1cont6loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont6loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont6loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 14);

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 14, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 14);
		a_exitChoose15();
		try {
			a_body1cont6loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont6loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont6loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 14);

	}
	void a_callback_error(ActorCallback< AtomicRestoreActor, 14, Void >*,Error err) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 14);
		a_exitChoose15();
		try {
			a_body1cont6loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont6loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont6loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 14);

	}
	int a_body1cont6loopBody1Catch1cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont6loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont6loopBody1Catch1cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont6loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont6loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont6loopBody1Catch1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont6loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont6loopBody1Catch1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose16() 
	{
		if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state > 0) static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<AtomicRestoreActor*>(this)->ActorCallback< AtomicRestoreActor, 15, Void >::remove();

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 15, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 15);
		a_exitChoose16();
		try {
			a_body1cont6loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 15);

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 15, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 15);
		a_exitChoose16();
		try {
			a_body1cont6loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 15);

	}
	void a_callback_error(ActorCallback< AtomicRestoreActor, 15, Void >*,Error err) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 15);
		a_exitChoose16();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 15);

	}
	int a_body1cont8(int loopDepth) 
	{
															#line 6386 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		bc = fileBackup::getBackupContainerWithProxy(bc);
															#line 6388 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (fastRestore)
															#line 59411 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 6389 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent("AtomicParallelRestoreStartRestore").log();
															#line 6390 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			Version targetVersion = ::invalidVersion;
															#line 6391 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_17 = submitParallelRestore(cx, tagName, ranges, KeyRef(bc->getURL()), bc->getProxy(), targetVersion, LockDB::True, randomUid, addPrefix, removePrefix);
															#line 6391 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 59421 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_17.isReady()) { if (__when_expr_17.isError()) return a_body1Catch1(__when_expr_17.getError(), loopDepth); else return a_body1cont8when1(__when_expr_17.get(), loopDepth); };
			static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 18;
															#line 6391 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_17.addCallbackAndClear(static_cast<ActorCallback< AtomicRestoreActor, 17, Void >*>(static_cast<AtomicRestoreActor*>(this)));
															#line 59426 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
															#line 6411 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent("AS_StartRestore").log();
															#line 6412 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			restoreRange = Standalone<VectorRef<KeyRangeRef>>();
															#line 6413 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			systemRestoreRange = Standalone<VectorRef<KeyRangeRef>>();
															#line 6414 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			for( auto r : ranges ) {
															#line 6415 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (config.tenantMode != TenantMode::REQUIRED || !r.intersects(getSystemBackupRanges()))
															#line 59441 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				{
															#line 6416 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					restoreRange.push_back_deep(restoreRange.arena(), r);
															#line 59445 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				}
				else
				{
															#line 6418 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					KeyRangeRef normalKeyRange = r & normalKeys;
															#line 6419 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					KeyRangeRef systemKeyRange = r & systemKeys;
															#line 6420 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					if (!normalKeyRange.empty())
															#line 59455 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
					{
															#line 6421 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
						restoreRange.push_back_deep(restoreRange.arena(), normalKeyRange);
															#line 59459 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
					}
															#line 6423 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					if (!systemKeyRange.empty())
															#line 59463 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
					{
															#line 6424 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
						systemRestoreRange.push_back_deep(systemRestoreRange.arena(), systemKeyRange);
															#line 59467 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
					}
				}
			}
															#line 6428 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (!systemRestoreRange.empty())
															#line 59473 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 6430 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				StrictFuture<Void> __when_expr_21 = success(restore(backupAgent, cx, cx, "system_restore"_sr, KeyRef(bc->getURL()), bc->getProxy(), systemRestoreRange, {}, WaitForComplete::True, ::invalidVersion, Verbose::True, addPrefix, removePrefix, LockDB::True, UnlockDB::False, OnlyApplyMutationLogs::False, InconsistentSnapshotOnly::False, {}, randomUid));
															#line 6430 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 59479 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				if (__when_expr_21.isReady()) { if (__when_expr_21.isError()) return a_body1Catch1(__when_expr_21.getError(), loopDepth); else return a_body1cont8when2(__when_expr_21.get(), loopDepth); };
				static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 22;
															#line 6430 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				__when_expr_21.addCallbackAndClear(static_cast<ActorCallback< AtomicRestoreActor, 21, Void >*>(static_cast<AtomicRestoreActor*>(this)));
															#line 59484 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				loopDepth = 0;
			}
			else
			{
				loopDepth = a_body1cont11(loopDepth);
			}
		}

		return loopDepth;
	}
	int a_body1cont7when1(Reference<IBackupContainer> const& __bc,int loopDepth) 
	{
															#line 6385 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		bc = __bc;
															#line 59499 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont8(loopDepth);

		return loopDepth;
	}
	int a_body1cont7when1(Reference<IBackupContainer> && __bc,int loopDepth) 
	{
		bc = std::move(__bc);
		loopDepth = a_body1cont8(loopDepth);

		return loopDepth;
	}
	void a_exitChoose17() 
	{
		if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state > 0) static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<AtomicRestoreActor*>(this)->ActorCallback< AtomicRestoreActor, 16, Reference<IBackupContainer> >::remove();

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 16, Reference<IBackupContainer> >*,Reference<IBackupContainer> const& value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 16);
		a_exitChoose17();
		try {
			a_body1cont7when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 16);

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 16, Reference<IBackupContainer> >*,Reference<IBackupContainer> && value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 16);
		a_exitChoose17();
		try {
			a_body1cont7when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 16);

	}
	void a_callback_error(ActorCallback< AtomicRestoreActor, 16, Reference<IBackupContainer> >*,Error err) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 16);
		a_exitChoose17();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 16);

	}
	int a_body1cont10(Void const& _,int loopDepth) 
	{
															#line 6401 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		hasPrefix = (addPrefix.size() > 0 || removePrefix.size() > 0);
															#line 6402 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("AtomicParallelRestoreWaitForRestoreFinish").detail("HasPrefix", hasPrefix);
															#line 6403 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_18 = parallelRestoreFinish(cx, randomUid, UnlockDB{ !hasPrefix });
															#line 6403 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 59572 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_18.isReady()) { if (__when_expr_18.isError()) return a_body1Catch1(__when_expr_18.getError(), loopDepth); else return a_body1cont10when1(__when_expr_18.get(), loopDepth); };
		static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 19;
															#line 6403 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_18.addCallbackAndClear(static_cast<ActorCallback< AtomicRestoreActor, 18, Void >*>(static_cast<AtomicRestoreActor*>(this)));
															#line 59577 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont10(Void && _,int loopDepth) 
	{
															#line 6401 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		hasPrefix = (addPrefix.size() > 0 || removePrefix.size() > 0);
															#line 6402 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("AtomicParallelRestoreWaitForRestoreFinish").detail("HasPrefix", hasPrefix);
															#line 6403 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_18 = parallelRestoreFinish(cx, randomUid, UnlockDB{ !hasPrefix });
															#line 6403 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 59592 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_18.isReady()) { if (__when_expr_18.isError()) return a_body1Catch1(__when_expr_18.getError(), loopDepth); else return a_body1cont10when1(__when_expr_18.get(), loopDepth); };
		static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 19;
															#line 6403 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_18.addCallbackAndClear(static_cast<ActorCallback< AtomicRestoreActor, 18, Void >*>(static_cast<AtomicRestoreActor*>(this)));
															#line 59597 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont8when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont10(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont8when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont10(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose18() 
	{
		if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state > 0) static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<AtomicRestoreActor*>(this)->ActorCallback< AtomicRestoreActor, 17, Void >::remove();

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 17, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 17);
		a_exitChoose18();
		try {
			a_body1cont8when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 17);

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 17, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 17);
		a_exitChoose18();
		try {
			a_body1cont8when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 17);

	}
	void a_callback_error(ActorCallback< AtomicRestoreActor, 17, Void >*,Error err) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 17);
		a_exitChoose18();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 17);

	}
	int a_body1cont10cont1(Void const& _,int loopDepth) 
	{
															#line 6405 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (hasPrefix)
															#line 59669 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 6406 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_19 = transformRestoredDatabase(cx, ranges, addPrefix, removePrefix);
															#line 6406 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 59675 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_19.isReady()) { if (__when_expr_19.isError()) return a_body1Catch1(__when_expr_19.getError(), loopDepth); else return a_body1cont10cont1when1(__when_expr_19.get(), loopDepth); };
			static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 20;
															#line 6406 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_19.addCallbackAndClear(static_cast<ActorCallback< AtomicRestoreActor, 19, Void >*>(static_cast<AtomicRestoreActor*>(this)));
															#line 59680 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont10cont2(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont10cont1(Void && _,int loopDepth) 
	{
															#line 6405 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (hasPrefix)
															#line 59694 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
															#line 6406 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_19 = transformRestoredDatabase(cx, ranges, addPrefix, removePrefix);
															#line 6406 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 59700 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_19.isReady()) { if (__when_expr_19.isError()) return a_body1Catch1(__when_expr_19.getError(), loopDepth); else return a_body1cont10cont1when1(__when_expr_19.get(), loopDepth); };
			static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 20;
															#line 6406 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_19.addCallbackAndClear(static_cast<ActorCallback< AtomicRestoreActor, 19, Void >*>(static_cast<AtomicRestoreActor*>(this)));
															#line 59705 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		else
		{
			loopDepth = a_body1cont10cont2(loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont10when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont10cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont10when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont10cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose19() 
	{
		if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state > 0) static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<AtomicRestoreActor*>(this)->ActorCallback< AtomicRestoreActor, 18, Void >::remove();

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 18, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 18);
		a_exitChoose19();
		try {
			a_body1cont10when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 18);

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 18, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 18);
		a_exitChoose19();
		try {
			a_body1cont10when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 18);

	}
	void a_callback_error(ActorCallback< AtomicRestoreActor, 18, Void >*,Error err) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 18);
		a_exitChoose19();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 18);

	}
	int a_body1cont10cont2(int loopDepth) 
	{
															#line 6409 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<AtomicRestoreActor*>(this)->SAV<Version>::futures) { (void)(-1); this->~AtomicRestoreActorState(); static_cast<AtomicRestoreActor*>(this)->destroy(); return 0; }
															#line 59782 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<AtomicRestoreActor*>(this)->SAV< Version >::value()) Version(-1);
		this->~AtomicRestoreActorState();
		static_cast<AtomicRestoreActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont10cont3(Void const& _,int loopDepth) 
	{
															#line 6407 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_20 = unlockDatabase(cx, randomUid);
															#line 6407 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 59796 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_20.isReady()) { if (__when_expr_20.isError()) return a_body1Catch1(__when_expr_20.getError(), loopDepth); else return a_body1cont10cont3when1(__when_expr_20.get(), loopDepth); };
		static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 21;
															#line 6407 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_20.addCallbackAndClear(static_cast<ActorCallback< AtomicRestoreActor, 20, Void >*>(static_cast<AtomicRestoreActor*>(this)));
															#line 59801 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont10cont3(Void && _,int loopDepth) 
	{
															#line 6407 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_20 = unlockDatabase(cx, randomUid);
															#line 6407 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 59812 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_20.isReady()) { if (__when_expr_20.isError()) return a_body1Catch1(__when_expr_20.getError(), loopDepth); else return a_body1cont10cont3when1(__when_expr_20.get(), loopDepth); };
		static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 21;
															#line 6407 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_20.addCallbackAndClear(static_cast<ActorCallback< AtomicRestoreActor, 20, Void >*>(static_cast<AtomicRestoreActor*>(this)));
															#line 59817 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont10cont1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont10cont3(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont10cont1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont10cont3(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose20() 
	{
		if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state > 0) static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<AtomicRestoreActor*>(this)->ActorCallback< AtomicRestoreActor, 19, Void >::remove();

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 19, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 19);
		a_exitChoose20();
		try {
			a_body1cont10cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 19);

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 19, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 19);
		a_exitChoose20();
		try {
			a_body1cont10cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 19);

	}
	void a_callback_error(ActorCallback< AtomicRestoreActor, 19, Void >*,Error err) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 19);
		a_exitChoose20();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 19);

	}
	int a_body1cont10cont4(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont10cont2(loopDepth);

		return loopDepth;
	}
	int a_body1cont10cont4(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont10cont2(loopDepth);

		return loopDepth;
	}
	int a_body1cont10cont3when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont10cont4(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont10cont3when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont10cont4(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose21() 
	{
		if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state > 0) static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<AtomicRestoreActor*>(this)->ActorCallback< AtomicRestoreActor, 20, Void >::remove();

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 20, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 20);
		a_exitChoose21();
		try {
			a_body1cont10cont3when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 20);

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 20, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 20);
		a_exitChoose21();
		try {
			a_body1cont10cont3when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 20);

	}
	void a_callback_error(ActorCallback< AtomicRestoreActor, 20, Void >*,Error err) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 20);
		a_exitChoose21();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 20);

	}
	int a_body1cont11(int loopDepth) 
	{
															#line 6466 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Version> __when_expr_24 = restore(backupAgent, cx, cx, tagName, KeyRef(bc->getURL()), bc->getProxy(), restoreRange, {}, WaitForComplete::True, ::invalidVersion, Verbose::True, addPrefix, removePrefix, LockDB::True, UnlockDB::True, OnlyApplyMutationLogs::False, InconsistentSnapshotOnly::False, {}, randomUid);
															#line 6466 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 59966 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_24.isReady()) { if (__when_expr_24.isError()) return a_body1Catch1(__when_expr_24.getError(), loopDepth); else return a_body1cont11when1(__when_expr_24.get(), loopDepth); };
		static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 25;
															#line 6466 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_24.addCallbackAndClear(static_cast<ActorCallback< AtomicRestoreActor, 24, Version >*>(static_cast<AtomicRestoreActor*>(this)));
															#line 59971 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont17(Void const& _,int loopDepth) 
	{
															#line 6449 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		rywTransaction = Reference<ReadYourWritesTransaction>(new ReadYourWritesTransaction(cx));
															#line 6452 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 59982 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont17loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1cont17(Void && _,int loopDepth) 
	{
															#line 6449 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		rywTransaction = Reference<ReadYourWritesTransaction>(new ReadYourWritesTransaction(cx));
															#line 6452 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 59993 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont17loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1cont8when2(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont17(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont8when2(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont17(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose22() 
	{
		if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state > 0) static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<AtomicRestoreActor*>(this)->ActorCallback< AtomicRestoreActor, 21, Void >::remove();

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 21, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 21);
		a_exitChoose22();
		try {
			a_body1cont8when2(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 21);

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 21, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 21);
		a_exitChoose22();
		try {
			a_body1cont8when2(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 21);

	}
	void a_callback_error(ActorCallback< AtomicRestoreActor, 21, Void >*,Error err) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 21);
		a_exitChoose22();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 21);

	}
	int a_body1cont17cont1(int loopDepth) 
	{
		loopDepth = a_body1cont11(loopDepth);

		return loopDepth;
	}
	int a_body1cont17loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont17loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont17loopBody1(int loopDepth) 
	{
		try {
															#line 6454 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			rywTransaction->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 6455 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			rywTransaction->setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 6456 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			oldRestore = RestoreConfig(randomUid);
															#line 6457 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			oldRestore.clear(rywTransaction);
															#line 6458 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_22 = rywTransaction->commit();
															#line 6458 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state < 0) return a_body1cont17loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 60089 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_22.isReady()) { if (__when_expr_22.isError()) return a_body1cont17loopBody1Catch1(__when_expr_22.getError(), loopDepth); else return a_body1cont17loopBody1when1(__when_expr_22.get(), loopDepth); };
			static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 23;
															#line 6458 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_22.addCallbackAndClear(static_cast<ActorCallback< AtomicRestoreActor, 22, Void >*>(static_cast<AtomicRestoreActor*>(this)));
															#line 60094 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1cont17loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1cont17loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont17break1(int loopDepth) 
	{
		try {
			return a_body1cont17cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont17loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1cont17loopHead1(0);

		return loopDepth;
	}
	int a_body1cont17loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 6461 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_23 = rywTransaction->onError(e);
															#line 6461 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 60131 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_23.isReady()) { if (__when_expr_23.isError()) return a_body1Catch1(__when_expr_23.getError(), std::max(0, loopDepth - 1)); else return a_body1cont17loopBody1Catch1when1(__when_expr_23.get(), loopDepth); };
			static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 24;
															#line 6461 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_23.addCallbackAndClear(static_cast<ActorCallback< AtomicRestoreActor, 23, Void >*>(static_cast<AtomicRestoreActor*>(this)));
															#line 60136 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont17loopBody1cont2(Void const& _,int loopDepth) 
	{
		return a_body1cont17break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1cont17loopBody1cont2(Void && _,int loopDepth) 
	{
		return a_body1cont17break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1cont17loopBody1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont17loopBody1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont17loopBody1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont17loopBody1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose23() 
	{
		if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state > 0) static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<AtomicRestoreActor*>(this)->ActorCallback< AtomicRestoreActor, 22, Void >::remove();

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 22, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 22);
		a_exitChoose23();
		try {
			a_body1cont17loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont17loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont17loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 22);

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 22, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 22);
		a_exitChoose23();
		try {
			a_body1cont17loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont17loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont17loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 22);

	}
	void a_callback_error(ActorCallback< AtomicRestoreActor, 22, Void >*,Error err) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 22);
		a_exitChoose23();
		try {
			a_body1cont17loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont17loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont17loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 22);

	}
	int a_body1cont17loopBody1Catch1cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont17loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont17loopBody1Catch1cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont17loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont17loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont17loopBody1Catch1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont17loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont17loopBody1Catch1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose24() 
	{
		if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state > 0) static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<AtomicRestoreActor*>(this)->ActorCallback< AtomicRestoreActor, 23, Void >::remove();

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 23, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 23);
		a_exitChoose24();
		try {
			a_body1cont17loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 23);

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 23, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 23);
		a_exitChoose24();
		try {
			a_body1cont17loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 23);

	}
	void a_callback_error(ActorCallback< AtomicRestoreActor, 23, Void >*,Error err) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 23);
		a_exitChoose24();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 23);

	}
	int a_body1cont11cont1(int loopDepth) 
	{
															#line 6485 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<AtomicRestoreActor*>(this)->SAV<Version>::futures) { (void)(ver); this->~AtomicRestoreActorState(); static_cast<AtomicRestoreActor*>(this)->destroy(); return 0; }
															#line 60301 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<AtomicRestoreActor*>(this)->SAV< Version >::value()) Version(std::move(ver)); // state_var_RVO
		this->~AtomicRestoreActorState();
		static_cast<AtomicRestoreActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont11when1(Version const& __ver,int loopDepth) 
	{
															#line 6466 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		ver = __ver;
															#line 60313 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont11cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont11when1(Version && __ver,int loopDepth) 
	{
		ver = std::move(__ver);
		loopDepth = a_body1cont11cont1(loopDepth);

		return loopDepth;
	}
	void a_exitChoose25() 
	{
		if (static_cast<AtomicRestoreActor*>(this)->actor_wait_state > 0) static_cast<AtomicRestoreActor*>(this)->actor_wait_state = 0;
		static_cast<AtomicRestoreActor*>(this)->ActorCallback< AtomicRestoreActor, 24, Version >::remove();

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 24, Version >*,Version const& value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 24);
		a_exitChoose25();
		try {
			a_body1cont11when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 24);

	}
	void a_callback_fire(ActorCallback< AtomicRestoreActor, 24, Version >*,Version && value) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 24);
		a_exitChoose25();
		try {
			a_body1cont11when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 24);

	}
	void a_callback_error(ActorCallback< AtomicRestoreActor, 24, Version >*,Error err) 
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), 24);
		a_exitChoose25();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), 24);

	}
															#line 6284 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	FileBackupAgent* backupAgent;
															#line 6284 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Database cx;
															#line 6284 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key tagName;
															#line 6284 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Standalone<VectorRef<KeyRangeRef>> ranges;
															#line 6284 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key addPrefix;
															#line 6284 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key removePrefix;
															#line 6284 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	UsePartitionedLog fastRestore;
															#line 6291 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> ryw_tr;
															#line 6293 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	BackupConfig backupConfig;
															#line 6294 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	DatabaseConfiguration config;
															#line 6299 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	KeyBackedTag tag;
															#line 6302 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	EBackupState status;
															#line 6315 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Transaction tr;
															#line 6316 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version commitVersion;
															#line 6317 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	UID randomUid;
															#line 6385 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<IBackupContainer> bc;
															#line 6401 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	bool hasPrefix;
															#line 6412 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Standalone<VectorRef<KeyRangeRef>> restoreRange;
															#line 6413 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Standalone<VectorRef<KeyRangeRef>> systemRestoreRange;
															#line 6449 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Reference<ReadYourWritesTransaction> rywTransaction;
															#line 6456 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	RestoreConfig oldRestore;
															#line 6466 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Version ver;
															#line 60420 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via atomicRestore()
															#line 6284 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class AtomicRestoreActor final : public Actor<Version>, public ActorCallback< AtomicRestoreActor, 0, DatabaseConfiguration >, public ActorCallback< AtomicRestoreActor, 1, UidAndAbortedFlagT >, public ActorCallback< AtomicRestoreActor, 2, EBackupState >, public ActorCallback< AtomicRestoreActor, 3, Void >, public ActorCallback< AtomicRestoreActor, 4, Void >, public ActorCallback< AtomicRestoreActor, 5, Void >, public ActorCallback< AtomicRestoreActor, 6, Void >, public ActorCallback< AtomicRestoreActor, 7, Optional<Version> >, public ActorCallback< AtomicRestoreActor, 8, Void >, public ActorCallback< AtomicRestoreActor, 9, Void >, public ActorCallback< AtomicRestoreActor, 10, Void >, public ActorCallback< AtomicRestoreActor, 11, Void >, public ActorCallback< AtomicRestoreActor, 12, Void >, public ActorCallback< AtomicRestoreActor, 13, Void >, public ActorCallback< AtomicRestoreActor, 14, Void >, public ActorCallback< AtomicRestoreActor, 15, Void >, public ActorCallback< AtomicRestoreActor, 16, Reference<IBackupContainer> >, public ActorCallback< AtomicRestoreActor, 17, Void >, public ActorCallback< AtomicRestoreActor, 18, Void >, public ActorCallback< AtomicRestoreActor, 19, Void >, public ActorCallback< AtomicRestoreActor, 20, Void >, public ActorCallback< AtomicRestoreActor, 21, Void >, public ActorCallback< AtomicRestoreActor, 22, Void >, public ActorCallback< AtomicRestoreActor, 23, Void >, public ActorCallback< AtomicRestoreActor, 24, Version >, public FastAllocated<AtomicRestoreActor>, public AtomicRestoreActorState<AtomicRestoreActor> {
															#line 60425 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<AtomicRestoreActor>::operator new;
	using FastAllocated<AtomicRestoreActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Version>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< AtomicRestoreActor, 0, DatabaseConfiguration >;
friend struct ActorCallback< AtomicRestoreActor, 1, UidAndAbortedFlagT >;
friend struct ActorCallback< AtomicRestoreActor, 2, EBackupState >;
friend struct ActorCallback< AtomicRestoreActor, 3, Void >;
friend struct ActorCallback< AtomicRestoreActor, 4, Void >;
friend struct ActorCallback< AtomicRestoreActor, 5, Void >;
friend struct ActorCallback< AtomicRestoreActor, 6, Void >;
friend struct ActorCallback< AtomicRestoreActor, 7, Optional<Version> >;
friend struct ActorCallback< AtomicRestoreActor, 8, Void >;
friend struct ActorCallback< AtomicRestoreActor, 9, Void >;
friend struct ActorCallback< AtomicRestoreActor, 10, Void >;
friend struct ActorCallback< AtomicRestoreActor, 11, Void >;
friend struct ActorCallback< AtomicRestoreActor, 12, Void >;
friend struct ActorCallback< AtomicRestoreActor, 13, Void >;
friend struct ActorCallback< AtomicRestoreActor, 14, Void >;
friend struct ActorCallback< AtomicRestoreActor, 15, Void >;
friend struct ActorCallback< AtomicRestoreActor, 16, Reference<IBackupContainer> >;
friend struct ActorCallback< AtomicRestoreActor, 17, Void >;
friend struct ActorCallback< AtomicRestoreActor, 18, Void >;
friend struct ActorCallback< AtomicRestoreActor, 19, Void >;
friend struct ActorCallback< AtomicRestoreActor, 20, Void >;
friend struct ActorCallback< AtomicRestoreActor, 21, Void >;
friend struct ActorCallback< AtomicRestoreActor, 22, Void >;
friend struct ActorCallback< AtomicRestoreActor, 23, Void >;
friend struct ActorCallback< AtomicRestoreActor, 24, Version >;
															#line 6284 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	AtomicRestoreActor(FileBackupAgent* const& backupAgent,Database const& cx,Key const& tagName,Standalone<VectorRef<KeyRangeRef>> const& ranges,Key const& addPrefix,Key const& removePrefix,UsePartitionedLog const& fastRestore) 
															#line 60460 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Version>(),
		   AtomicRestoreActorState<AtomicRestoreActor>(backupAgent, cx, tagName, ranges, addPrefix, removePrefix, fastRestore)
	{
		fdb_probe_actor_enter("atomicRestore", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("atomicRestore");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("atomicRestore", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< AtomicRestoreActor, 0, DatabaseConfiguration >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< AtomicRestoreActor, 1, UidAndAbortedFlagT >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< AtomicRestoreActor, 2, EBackupState >*)0, actor_cancelled()); break;
		case 4: this->a_callback_error((ActorCallback< AtomicRestoreActor, 3, Void >*)0, actor_cancelled()); break;
		case 5: this->a_callback_error((ActorCallback< AtomicRestoreActor, 4, Void >*)0, actor_cancelled()); break;
		case 6: this->a_callback_error((ActorCallback< AtomicRestoreActor, 5, Void >*)0, actor_cancelled()); break;
		case 7: this->a_callback_error((ActorCallback< AtomicRestoreActor, 6, Void >*)0, actor_cancelled()); break;
		case 8: this->a_callback_error((ActorCallback< AtomicRestoreActor, 7, Optional<Version> >*)0, actor_cancelled()); break;
		case 9: this->a_callback_error((ActorCallback< AtomicRestoreActor, 8, Void >*)0, actor_cancelled()); break;
		case 10: this->a_callback_error((ActorCallback< AtomicRestoreActor, 9, Void >*)0, actor_cancelled()); break;
		case 11: this->a_callback_error((ActorCallback< AtomicRestoreActor, 10, Void >*)0, actor_cancelled()); break;
		case 12: this->a_callback_error((ActorCallback< AtomicRestoreActor, 11, Void >*)0, actor_cancelled()); break;
		case 13: this->a_callback_error((ActorCallback< AtomicRestoreActor, 12, Void >*)0, actor_cancelled()); break;
		case 14: this->a_callback_error((ActorCallback< AtomicRestoreActor, 13, Void >*)0, actor_cancelled()); break;
		case 15: this->a_callback_error((ActorCallback< AtomicRestoreActor, 14, Void >*)0, actor_cancelled()); break;
		case 16: this->a_callback_error((ActorCallback< AtomicRestoreActor, 15, Void >*)0, actor_cancelled()); break;
		case 17: this->a_callback_error((ActorCallback< AtomicRestoreActor, 16, Reference<IBackupContainer> >*)0, actor_cancelled()); break;
		case 18: this->a_callback_error((ActorCallback< AtomicRestoreActor, 17, Void >*)0, actor_cancelled()); break;
		case 19: this->a_callback_error((ActorCallback< AtomicRestoreActor, 18, Void >*)0, actor_cancelled()); break;
		case 20: this->a_callback_error((ActorCallback< AtomicRestoreActor, 19, Void >*)0, actor_cancelled()); break;
		case 21: this->a_callback_error((ActorCallback< AtomicRestoreActor, 20, Void >*)0, actor_cancelled()); break;
		case 22: this->a_callback_error((ActorCallback< AtomicRestoreActor, 21, Void >*)0, actor_cancelled()); break;
		case 23: this->a_callback_error((ActorCallback< AtomicRestoreActor, 22, Void >*)0, actor_cancelled()); break;
		case 24: this->a_callback_error((ActorCallback< AtomicRestoreActor, 23, Void >*)0, actor_cancelled()); break;
		case 25: this->a_callback_error((ActorCallback< AtomicRestoreActor, 24, Version >*)0, actor_cancelled()); break;
		}

	}
};
															#line 6284 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Version> atomicRestore( FileBackupAgent* const& backupAgent, Database const& cx, Key const& tagName, Standalone<VectorRef<KeyRangeRef>> const& ranges, Key const& addPrefix, Key const& removePrefix, UsePartitionedLog const& fastRestore ) {
															#line 6284 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Version>(new AtomicRestoreActor(backupAgent, cx, tagName, ranges, addPrefix, removePrefix, fastRestore));
															#line 60511 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 6488 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

	// Similar to atomicRestore, only used in simulation test.
	// locks the database before discontinuing the backup and that same lock is then used while doing the restore.
	// the tagname of the backup must be the same as the restore.
	static Future<Void> atomicParallelRestore(FileBackupAgent* backupAgent,
	                                          Database cx,
	                                          Key tagName,
	                                          Standalone<VectorRef<KeyRangeRef>> ranges,
	                                          Key addPrefix,
	                                          Key removePrefix) {
		return success(
		    atomicRestore(backupAgent, cx, tagName, ranges, addPrefix, removePrefix, UsePartitionedLog::True));
	}
};

const int FileBackupAgent::dataFooterSize = 20;

// Return if parallel restore has finished
Future<Void> FileBackupAgent::parallelRestoreFinish(Database cx, UID randomUID, UnlockDB unlockDB) {
	return FileBackupAgentImpl::parallelRestoreFinish(cx, randomUID, unlockDB);
}

Future<Void> FileBackupAgent::submitParallelRestore(Database cx,
                                                    Key backupTag,
                                                    Standalone<VectorRef<KeyRangeRef>> backupRanges,
                                                    Key bcUrl,
                                                    Optional<std::string> proxy,
                                                    Version targetVersion,
                                                    LockDB lockDB,
                                                    UID randomUID,
                                                    Key addPrefix,
                                                    Key removePrefix) {
	return FileBackupAgentImpl::submitParallelRestore(
	    cx, backupTag, backupRanges, bcUrl, proxy, targetVersion, lockDB, randomUID, addPrefix, removePrefix);
}

Future<Void> FileBackupAgent::atomicParallelRestore(Database cx,
                                                    Key tagName,
                                                    Standalone<VectorRef<KeyRangeRef>> ranges,
                                                    Key addPrefix,
                                                    Key removePrefix) {
	return FileBackupAgentImpl::atomicParallelRestore(this, cx, tagName, ranges, addPrefix, removePrefix);
}

Future<Version> FileBackupAgent::restore(Database cx,
                                         Optional<Database> cxOrig,
                                         Key tagName,
                                         Key url,
                                         Optional<std::string> proxy,
                                         Standalone<VectorRef<KeyRangeRef>> ranges,
                                         Standalone<VectorRef<Version>> versions,
                                         WaitForComplete waitForComplete,
                                         Version targetVersion,
                                         Verbose verbose,
                                         Key addPrefix,
                                         Key removePrefix,
                                         LockDB lockDB,
                                         UnlockDB unlockDB,
                                         OnlyApplyMutationLogs onlyApplyMutationLogs,
                                         InconsistentSnapshotOnly inconsistentSnapshotOnly,
                                         Optional<std::string> const& encryptionKeyFileName) {
	return FileBackupAgentImpl::restore(this,
	                                    cx,
	                                    cxOrig,
	                                    tagName,
	                                    url,
	                                    proxy,
	                                    ranges,
	                                    versions,
	                                    waitForComplete,
	                                    targetVersion,
	                                    verbose,
	                                    addPrefix,
	                                    removePrefix,
	                                    lockDB,
	                                    unlockDB,
	                                    onlyApplyMutationLogs,
	                                    inconsistentSnapshotOnly,
	                                    encryptionKeyFileName,
	                                    deterministicRandom()->randomUniqueID());
}

Future<Version> FileBackupAgent::restore(Database cx,
                                         Optional<Database> cxOrig,
                                         Key tagName,
                                         Key url,
                                         Optional<std::string> proxy,
                                         Standalone<VectorRef<KeyRangeRef>> ranges,
                                         WaitForComplete waitForComplete,
                                         Version targetVersion,
                                         Verbose verbose,
                                         Key addPrefix,
                                         Key removePrefix,
                                         LockDB lockDB,
                                         UnlockDB unlockDB,
                                         OnlyApplyMutationLogs onlyApplyMutationLogs,
                                         InconsistentSnapshotOnly inconsistentSnapshotOnly,
                                         Version beginVersion,
                                         Optional<std::string> const& encryptionKeyFileName) {
	Standalone<VectorRef<Version>> beginVersions;
	for (auto i = 0; i < ranges.size(); ++i) {
		beginVersions.push_back(beginVersions.arena(), beginVersion);
	}
	return restore(cx,
	               cxOrig,
	               tagName,
	               url,
	               proxy,
	               ranges,
	               beginVersions,
	               waitForComplete,
	               targetVersion,
	               verbose,
	               addPrefix,
	               removePrefix,
	               lockDB,
	               unlockDB,
	               onlyApplyMutationLogs,
	               inconsistentSnapshotOnly,
	               encryptionKeyFileName);
}

Future<Version> FileBackupAgent::restore(Database cx,
                                         Optional<Database> cxOrig,
                                         Key tagName,
                                         Key url,
                                         Optional<std::string> proxy,
                                         WaitForComplete waitForComplete,
                                         Version targetVersion,
                                         Verbose verbose,
                                         KeyRange range,
                                         Key addPrefix,
                                         Key removePrefix,
                                         LockDB lockDB,
                                         OnlyApplyMutationLogs onlyApplyMutationLogs,
                                         InconsistentSnapshotOnly inconsistentSnapshotOnly,
                                         Version beginVersion,
                                         Optional<std::string> const& encryptionKeyFileName) {
	Standalone<VectorRef<KeyRangeRef>> rangeRef;
	if (range.begin.empty() && range.end.empty()) {
		addDefaultBackupRanges(rangeRef);
	} else {
		rangeRef.push_back_deep(rangeRef.arena(), range);
	}
	Standalone<VectorRef<Version>> versionRef;
	versionRef.push_back(versionRef.arena(), beginVersion);

	return restore(cx,
	               cxOrig,
	               tagName,
	               url,
	               proxy,
	               rangeRef,
	               versionRef,
	               waitForComplete,
	               targetVersion,
	               verbose,
	               addPrefix,
	               removePrefix,
	               lockDB,
	               UnlockDB::True,
	               onlyApplyMutationLogs,
	               inconsistentSnapshotOnly,
	               encryptionKeyFileName);
}

Future<Version> FileBackupAgent::atomicRestore(Database cx,
                                               Key tagName,
                                               KeyRange range,
                                               Key addPrefix,
                                               Key removePrefix) {
	Standalone<VectorRef<KeyRangeRef>> rangeRef;
	if (range.begin.empty() && range.end.empty()) {
		addDefaultBackupRanges(rangeRef);
	} else {
		rangeRef.push_back_deep(rangeRef.arena(), range);
	}
	return atomicRestore(cx, tagName, rangeRef, addPrefix, removePrefix);
}

Future<Version> FileBackupAgent::atomicRestore(Database cx,
                                               Key tagName,
                                               Standalone<VectorRef<KeyRangeRef>> ranges,
                                               Key addPrefix,
                                               Key removePrefix) {
	return FileBackupAgentImpl::atomicRestore(
	    this, cx, tagName, ranges, addPrefix, removePrefix, UsePartitionedLog::False);
}

Future<ERestoreState> FileBackupAgent::abortRestore(Reference<ReadYourWritesTransaction> tr, Key tagName) {
	return fileBackup::abortRestore(tr, tagName);
}

Future<ERestoreState> FileBackupAgent::abortRestore(Database cx, Key tagName) {
	return fileBackup::abortRestore(cx, tagName);
}

Future<std::string> FileBackupAgent::restoreStatus(Reference<ReadYourWritesTransaction> tr, Key tagName) {
	return fileBackup::restoreStatus(tr, tagName);
}

Future<ERestoreState> FileBackupAgent::waitRestore(Database cx, Key tagName, Verbose verbose) {
	return FileBackupAgentImpl::waitRestore(cx, tagName, verbose);
};

Future<Void> FileBackupAgent::submitBackup(Reference<ReadYourWritesTransaction> tr,
                                           Key outContainer,
                                           Optional<std::string> proxy,
                                           int initialSnapshotIntervalSeconds,
                                           int snapshotIntervalSeconds,
                                           std::string const& tagName,
                                           Standalone<VectorRef<KeyRangeRef>> backupRanges,
                                           bool encryptionEnabled,
                                           StopWhenDone stopWhenDone,
                                           UsePartitionedLog partitionedLog,
                                           IncrementalBackupOnly incrementalBackupOnly,
                                           Optional<std::string> const& encryptionKeyFileName) {
	return FileBackupAgentImpl::submitBackup(this,
	                                         tr,
	                                         outContainer,
	                                         proxy,
	                                         initialSnapshotIntervalSeconds,
	                                         snapshotIntervalSeconds,
	                                         tagName,
	                                         backupRanges,
	                                         encryptionEnabled,
	                                         stopWhenDone,
	                                         partitionedLog,
	                                         incrementalBackupOnly,
	                                         encryptionKeyFileName);
}

Future<Void> FileBackupAgent::discontinueBackup(Reference<ReadYourWritesTransaction> tr, Key tagName) {
	return FileBackupAgentImpl::discontinueBackup(this, tr, tagName);
}

Future<Void> FileBackupAgent::abortBackup(Reference<ReadYourWritesTransaction> tr, std::string tagName) {
	return FileBackupAgentImpl::abortBackup(this, tr, tagName);
}

Future<std::string> FileBackupAgent::getStatus(Database cx, ShowErrors showErrors, std::string tagName) {
	return FileBackupAgentImpl::getStatus(this, cx, showErrors, tagName);
}

Future<std::string> FileBackupAgent::getStatusJSON(Database cx, std::string tagName) {
	return FileBackupAgentImpl::getStatusJSON(this, cx, tagName);
}

Future<Optional<Version>> FileBackupAgent::getLastRestorable(Reference<ReadYourWritesTransaction> tr,
                                                             Key tagName,
                                                             Snapshot snapshot) {
	return FileBackupAgentImpl::getLastRestorable(this, tr, tagName, snapshot);
}

void FileBackupAgent::setLastRestorable(Reference<ReadYourWritesTransaction> tr, Key tagName, Version version) {
	tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
	tr->setOption(FDBTransactionOptions::LOCK_AWARE);
	tr->set(lastRestorable.pack(tagName), BinaryWriter::toValue<Version>(version, Unversioned()));
}

Future<EBackupState> FileBackupAgent::waitBackup(Database cx,
                                                 std::string tagName,
                                                 StopWhenDone stopWhenDone,
                                                 Reference<IBackupContainer>* pContainer,
                                                 UID* pUID) {
	return FileBackupAgentImpl::waitBackup(this, cx, tagName, stopWhenDone, pContainer, pUID);
}

Future<Void> FileBackupAgent::changePause(Database db, bool pause) {
	return FileBackupAgentImpl::changePause(this, db, pause);
}

// Fast Restore addPrefix test helper functions
static std::pair<bool, bool> insideValidRange(KeyValueRef kv,
                                              Standalone<VectorRef<KeyRangeRef>> restoreRanges,
                                              Standalone<VectorRef<KeyRangeRef>> backupRanges) {
	bool insideRestoreRange = false;
	bool insideBackupRange = false;
	for (auto& range : restoreRanges) {
		TraceEvent(SevFRTestInfo, "InsideValidRestoreRange")
		    .detail("Key", kv.key)
		    .detail("Range", range)
		    .detail("Inside", (kv.key >= range.begin && kv.key < range.end));
		if (kv.key >= range.begin && kv.key < range.end) {
			insideRestoreRange = true;
			break;
		}
	}
	for (auto& range : backupRanges) {
		TraceEvent(SevFRTestInfo, "InsideValidBackupRange")
		    .detail("Key", kv.key)
		    .detail("Range", range)
		    .detail("Inside", (kv.key >= range.begin && kv.key < range.end));
		if (kv.key >= range.begin && kv.key < range.end) {
			insideBackupRange = true;
			break;
		}
	}
	return std::make_pair(insideBackupRange, insideRestoreRange);
}

// Write [begin, end) in kvs to DB
															#line 60817 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
namespace {
// This generated class is to be used only via writeKVs()
															#line 6790 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class WriteKVsActor>
															#line 6790 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class WriteKVsActorState {
															#line 60824 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 6790 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	WriteKVsActorState(Database const& cx,Standalone<VectorRef<KeyValueRef>> const& kvs,int const& begin,int const& end) 
															#line 6790 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 6790 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : cx(cx),
															#line 6790 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   kvs(kvs),
															#line 6790 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   begin(begin),
															#line 6790 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   end(end)
															#line 60837 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("writeKVs", reinterpret_cast<unsigned long>(this));

	}
	~WriteKVsActorState() 
	{
		fdb_probe_actor_destroy("writeKVs", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 6791 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_0 = runRYWTransaction(cx, [=](Reference<ReadYourWritesTransaction> tr) -> Future<Void> { tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS); tr->setOption(FDBTransactionOptions::LOCK_AWARE); int index = begin; while (index < end) { TraceEvent(SevFRTestInfo, "TransformDatabaseContentsWriteKV") .detail("Index", index) .detail("KVs", kvs.size()) .detail("Key", kvs[index].key) .detail("Value", kvs[index].value); tr->set(kvs[index].key, kvs[index].value); ++index; } return Void(); });
															#line 6791 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<WriteKVsActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 60854 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch1(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
			static_cast<WriteKVsActor*>(this)->actor_wait_state = 1;
															#line 6791 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< WriteKVsActor, 0, Void >*>(static_cast<WriteKVsActor*>(this)));
															#line 60859 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~WriteKVsActorState();
		static_cast<WriteKVsActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(Void const& _,int loopDepth) 
	{
															#line 6808 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr = ReadYourWritesTransaction(cx);
															#line 6809 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 60884 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont1loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1cont1(Void && _,int loopDepth) 
	{
															#line 6808 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr = ReadYourWritesTransaction(cx);
															#line 6809 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 60895 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont1loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<WriteKVsActor*>(this)->actor_wait_state > 0) static_cast<WriteKVsActor*>(this)->actor_wait_state = 0;
		static_cast<WriteKVsActor*>(this)->ActorCallback< WriteKVsActor, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< WriteKVsActor, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("writeKVs", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKVs", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< WriteKVsActor, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("writeKVs", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKVs", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< WriteKVsActor, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("writeKVs", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKVs", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont2(int loopDepth) 
	{
															#line 6828 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent(SevFRTestInfo, "TransformDatabaseContentsWriteKVDone").detail("Begin", begin).detail("End", end);
															#line 6830 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<WriteKVsActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~WriteKVsActorState(); static_cast<WriteKVsActor*>(this)->destroy(); return 0; }
															#line 60969 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<WriteKVsActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~WriteKVsActorState();
		static_cast<WriteKVsActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1(int loopDepth) 
	{
		try {
															#line 6811 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr.setOption(FDBTransactionOptions::READ_SYSTEM_KEYS);
															#line 6812 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr.setOption(FDBTransactionOptions::READ_LOCK_AWARE);
															#line 6813 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			KeyRef k1 = kvs[begin].key;
															#line 6814 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			KeyRef k2 = end < kvs.size() ? kvs[end].key : allKeys.end;
															#line 6815 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent(SevFRTestInfo, "TransformDatabaseContentsWriteKVReadBack") .detail("Range", KeyRangeRef(k1, k2)) .detail("Begin", begin) .detail("End", end);
															#line 6819 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<RangeResult> __when_expr_1 = tr.getRange(KeyRangeRef(k1, k2), CLIENT_KNOBS->TOO_MANY);
															#line 6819 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<WriteKVsActor*>(this)->actor_wait_state < 0) return a_body1cont1loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 61001 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1cont1loopBody1Catch1(__when_expr_1.getError(), loopDepth); else return a_body1cont1loopBody1when1(__when_expr_1.get(), loopDepth); };
			static_cast<WriteKVsActor*>(this)->actor_wait_state = 2;
															#line 6819 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< WriteKVsActor, 1, RangeResult >*>(static_cast<WriteKVsActor*>(this)));
															#line 61006 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1cont1loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1cont1loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont1break1(int loopDepth) 
	{
		try {
			return a_body1cont2(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont1loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1cont1loopHead1(0);

		return loopDepth;
	}
	int a_body1cont1loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 6823 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent("TransformDatabaseContentsWriteKVReadBackError").error(e);
															#line 6824 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_2 = tr.onError(e);
															#line 6824 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<WriteKVsActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 61045 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), std::max(0, loopDepth - 1)); else return a_body1cont1loopBody1Catch1when1(__when_expr_2.get(), loopDepth); };
			static_cast<WriteKVsActor*>(this)->actor_wait_state = 3;
															#line 6824 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< WriteKVsActor, 2, Void >*>(static_cast<WriteKVsActor*>(this)));
															#line 61050 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont1loopBody1cont2(RangeResult const& readKVs,int loopDepth) 
	{
															#line 6820 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		ASSERT(readKVs.size() > 0 || begin == end);
															#line 61065 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		return a_body1cont1break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1cont1loopBody1cont2(RangeResult && readKVs,int loopDepth) 
	{
															#line 6820 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		ASSERT(readKVs.size() > 0 || begin == end);
															#line 61074 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		return a_body1cont1break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1cont1loopBody1when1(RangeResult const& readKVs,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont2(readKVs, loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1when1(RangeResult && readKVs,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont2(std::move(readKVs), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<WriteKVsActor*>(this)->actor_wait_state > 0) static_cast<WriteKVsActor*>(this)->actor_wait_state = 0;
		static_cast<WriteKVsActor*>(this)->ActorCallback< WriteKVsActor, 1, RangeResult >::remove();

	}
	void a_callback_fire(ActorCallback< WriteKVsActor, 1, RangeResult >*,RangeResult const& value) 
	{
		fdb_probe_actor_enter("writeKVs", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKVs", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< WriteKVsActor, 1, RangeResult >*,RangeResult && value) 
	{
		fdb_probe_actor_enter("writeKVs", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKVs", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< WriteKVsActor, 1, RangeResult >*,Error err) 
	{
		fdb_probe_actor_enter("writeKVs", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1cont1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKVs", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont1loopBody1Catch1cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1Catch1cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1Catch1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont1loopBody1Catch1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<WriteKVsActor*>(this)->actor_wait_state > 0) static_cast<WriteKVsActor*>(this)->actor_wait_state = 0;
		static_cast<WriteKVsActor*>(this)->ActorCallback< WriteKVsActor, 2, Void >::remove();

	}
	void a_callback_fire(ActorCallback< WriteKVsActor, 2, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("writeKVs", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont1loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKVs", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< WriteKVsActor, 2, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("writeKVs", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont1loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKVs", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< WriteKVsActor, 2, Void >*,Error err) 
	{
		fdb_probe_actor_enter("writeKVs", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("writeKVs", reinterpret_cast<unsigned long>(this), 2);

	}
															#line 6790 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Database cx;
															#line 6790 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Standalone<VectorRef<KeyValueRef>> kvs;
															#line 6790 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int begin;
															#line 6790 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int end;
															#line 6808 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	ReadYourWritesTransaction tr;
															#line 61227 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via writeKVs()
															#line 6790 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class WriteKVsActor final : public Actor<Void>, public ActorCallback< WriteKVsActor, 0, Void >, public ActorCallback< WriteKVsActor, 1, RangeResult >, public ActorCallback< WriteKVsActor, 2, Void >, public FastAllocated<WriteKVsActor>, public WriteKVsActorState<WriteKVsActor> {
															#line 61232 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<WriteKVsActor>::operator new;
	using FastAllocated<WriteKVsActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< WriteKVsActor, 0, Void >;
friend struct ActorCallback< WriteKVsActor, 1, RangeResult >;
friend struct ActorCallback< WriteKVsActor, 2, Void >;
															#line 6790 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	WriteKVsActor(Database const& cx,Standalone<VectorRef<KeyValueRef>> const& kvs,int const& begin,int const& end) 
															#line 61245 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   WriteKVsActorState<WriteKVsActor>(cx, kvs, begin, end)
	{
		fdb_probe_actor_enter("writeKVs", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("writeKVs");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("writeKVs", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< WriteKVsActor, 0, Void >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< WriteKVsActor, 1, RangeResult >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< WriteKVsActor, 2, Void >*)0, actor_cancelled()); break;
		}

	}
};
}
															#line 6790 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> writeKVs( Database const& cx, Standalone<VectorRef<KeyValueRef>> const& kvs, int const& begin, int const& end ) {
															#line 6790 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new WriteKVsActor(cx, kvs, begin, end));
															#line 61275 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 6832 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

// restoreRanges is the actual range that has applied removePrefix and addPrefix processed by restore system
// Assume: restoreRanges do not overlap which is achieved by ensuring backup ranges do not overlap
															#line 61282 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
namespace {
// This generated class is to be used only via transformDatabaseContents()
															#line 6835 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class TransformDatabaseContentsActor>
															#line 6835 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class TransformDatabaseContentsActorState {
															#line 61289 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 6835 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	TransformDatabaseContentsActorState(Database const& cx,Key const& addPrefix,Key const& removePrefix,Standalone<VectorRef<KeyRangeRef>> const& restoreRanges) 
															#line 6835 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 6835 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : cx(cx),
															#line 6835 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   addPrefix(addPrefix),
															#line 6835 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   removePrefix(removePrefix),
															#line 6835 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   restoreRanges(restoreRanges),
															#line 6839 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   tr(cx),
															#line 6840 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   oldData()
															#line 61306 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("transformDatabaseContents", reinterpret_cast<unsigned long>(this));

	}
	~TransformDatabaseContentsActorState() 
	{
		fdb_probe_actor_destroy("transformDatabaseContents", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
															#line 6842 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent("FastRestoreWorkloadTransformDatabaseContents") .detail("AddPrefix", addPrefix) .detail("RemovePrefix", removePrefix);
															#line 6845 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			i = 0;
															#line 6846 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			;
															#line 61325 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = a_body1loopHead1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~TransformDatabaseContentsActorState();
		static_cast<TransformDatabaseContentsActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 6869 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		newKVs = Standalone<VectorRef<KeyValueRef>>();
															#line 6870 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		for(int i = 0;i < oldData.size();++i) {
															#line 6871 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			Key newKey(oldData[i].key);
															#line 6872 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent(SevFRTestInfo, "TransformDatabaseContents") .detail("Keys", oldData.size()) .detail("Index", i) .detail("GetKey", oldData[i].key) .detail("GetValue", oldData[i].value);
															#line 6877 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (newKey.size() < removePrefix.size())
															#line 61356 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			{
															#line 6878 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				TraceEvent(SevError, "TransformDatabaseContents") .detail("Key", newKey) .detail("RemovePrefix", removePrefix);
															#line 61360 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				continue;
			}
															#line 6883 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			newKey = newKey.removePrefix(removePrefix).withPrefix(addPrefix);
															#line 6884 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			newKVs.push_back_deep(newKVs.arena(), KeyValueRef(newKey.contents(), oldData[i].value));
															#line 6885 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent(SevFRTestInfo, "TransformDatabaseContents") .detail("Keys", newKVs.size()) .detail("Index", i) .detail("NewKey", newKVs.back().key) .detail("NewValue", newKVs.back().value);
															#line 61369 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 6892 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		backupRanges = Standalone<VectorRef<KeyRangeRef>>();
															#line 6893 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		for( auto& range : restoreRanges ) {
															#line 6894 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			KeyRange tmpRange = range;
															#line 6895 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			backupRanges.push_back_deep(backupRanges.arena(), tmpRange.removePrefix(removePrefix).withPrefix(addPrefix));
															#line 61379 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 6899 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<Void> __when_expr_2 = runRYWTransaction(cx, [=](Reference<ReadYourWritesTransaction> tr) -> Future<Void> { tr->setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS); tr->setOption(FDBTransactionOptions::LOCK_AWARE); for (int i = 0; i < restoreRanges.size(); i++) { TraceEvent(SevFRTestInfo, "TransformDatabaseContents") .detail("ClearRestoreRange", restoreRanges[i]) .detail("ClearBackupRange", backupRanges[i]); tr->clear(restoreRanges[i]); tr->clear(backupRanges[i]); } return Void(); });
															#line 6899 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<TransformDatabaseContentsActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), loopDepth);
															#line 61385 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_2.isReady()) { if (__when_expr_2.isError()) return a_body1Catch1(__when_expr_2.getError(), loopDepth); else return a_body1cont1when1(__when_expr_2.get(), loopDepth); };
		static_cast<TransformDatabaseContentsActor*>(this)->actor_wait_state = 3;
															#line 6899 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_2.addCallbackAndClear(static_cast<ActorCallback< TransformDatabaseContentsActor, 2, Void >*>(static_cast<TransformDatabaseContentsActor*>(this)));
															#line 61390 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1(int loopDepth) 
	{
		try {
															#line 6848 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr.setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 6849 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr.setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 6850 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			i = 0;
															#line 61411 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = a_body1loopBody1loopHead1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1break1(int loopDepth) 
	{
		try {
			return a_body1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1loopHead1(0);

		return loopDepth;
	}
	int a_body1loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 6859 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent("FastRestoreWorkloadTransformDatabaseContentsGetAllKeys") .error(e) .detail("Index", i) .detail("RestoreRange", restoreRanges[i]);
															#line 6863 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			oldData = Standalone<VectorRef<KeyValueRef>>();
															#line 6864 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_1 = tr.onError(e);
															#line 6864 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<TransformDatabaseContentsActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 61452 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_1.isReady()) { if (__when_expr_1.isError()) return a_body1Catch1(__when_expr_1.getError(), std::max(0, loopDepth - 1)); else return a_body1loopBody1Catch1when1(__when_expr_1.get(), loopDepth); };
			static_cast<TransformDatabaseContentsActor*>(this)->actor_wait_state = 2;
															#line 6864 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_1.addCallbackAndClear(static_cast<ActorCallback< TransformDatabaseContentsActor, 1, Void >*>(static_cast<TransformDatabaseContentsActor*>(this)));
															#line 61457 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1loopBody1cont2(int loopDepth) 
	{
		return a_body1break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1loopBody1loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1loopBody1loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1loopBody1(int loopDepth) 
	{
															#line 6850 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!(i < restoreRanges.size()))
															#line 61485 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		{
			return a_body1loopBody1break1(loopDepth==0?0:loopDepth-1); // break
		}
															#line 6851 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		StrictFuture<RangeResult> __when_expr_0 = tr.getRange(restoreRanges[i], CLIENT_KNOBS->TOO_MANY);
															#line 6851 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (static_cast<TransformDatabaseContentsActor*>(this)->actor_wait_state < 0) return a_body1loopBody1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 61493 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1loopBody1Catch1(__when_expr_0.getError(), std::max(0, loopDepth - 1)); else return a_body1loopBody1loopBody1when1(__when_expr_0.get(), loopDepth); };
		static_cast<TransformDatabaseContentsActor*>(this)->actor_wait_state = 1;
															#line 6851 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< TransformDatabaseContentsActor, 0, RangeResult >*>(static_cast<TransformDatabaseContentsActor*>(this)));
															#line 61498 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1loopBody1break1(int loopDepth) 
	{
		try {
			return a_body1loopBody1cont2(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1loopBody1loopBody1cont1(RangeResult const& kvs,int loopDepth) 
	{
															#line 6852 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		ASSERT(!kvs.more);
															#line 6853 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		for( auto kv : kvs ) {
															#line 6854 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			oldData.push_back_deep(oldData.arena(), KeyValueRef(kv.key, kv.value));
															#line 61524 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 6850 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		++i;
															#line 61528 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (loopDepth == 0) return a_body1loopBody1loopHead1(0);

		return loopDepth;
	}
	int a_body1loopBody1loopBody1cont1(RangeResult && kvs,int loopDepth) 
	{
															#line 6852 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		ASSERT(!kvs.more);
															#line 6853 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		for( auto kv : kvs ) {
															#line 6854 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			oldData.push_back_deep(oldData.arena(), KeyValueRef(kv.key, kv.value));
															#line 61541 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
															#line 6850 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		++i;
															#line 61545 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		if (loopDepth == 0) return a_body1loopBody1loopHead1(0);

		return loopDepth;
	}
	int a_body1loopBody1loopBody1when1(RangeResult const& kvs,int loopDepth) 
	{
		loopDepth = a_body1loopBody1loopBody1cont1(kvs, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1loopBody1when1(RangeResult && kvs,int loopDepth) 
	{
		loopDepth = a_body1loopBody1loopBody1cont1(std::move(kvs), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<TransformDatabaseContentsActor*>(this)->actor_wait_state > 0) static_cast<TransformDatabaseContentsActor*>(this)->actor_wait_state = 0;
		static_cast<TransformDatabaseContentsActor*>(this)->ActorCallback< TransformDatabaseContentsActor, 0, RangeResult >::remove();

	}
	void a_callback_fire(ActorCallback< TransformDatabaseContentsActor, 0, RangeResult >*,RangeResult const& value) 
	{
		fdb_probe_actor_enter("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< TransformDatabaseContentsActor, 0, RangeResult >*,RangeResult && value) 
	{
		fdb_probe_actor_enter("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< TransformDatabaseContentsActor, 0, RangeResult >*,Error err) 
	{
		fdb_probe_actor_enter("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1loopBody1Catch1cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1Catch1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1loopBody1Catch1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose2() 
	{
		if (static_cast<TransformDatabaseContentsActor*>(this)->actor_wait_state > 0) static_cast<TransformDatabaseContentsActor*>(this)->actor_wait_state = 0;
		static_cast<TransformDatabaseContentsActor*>(this)->ActorCallback< TransformDatabaseContentsActor, 1, Void >::remove();

	}
	void a_callback_fire(ActorCallback< TransformDatabaseContentsActor, 1, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_fire(ActorCallback< TransformDatabaseContentsActor, 1, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 1);

	}
	void a_callback_error(ActorCallback< TransformDatabaseContentsActor, 1, Void >*,Error err) 
	{
		fdb_probe_actor_enter("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 1);
		a_exitChoose2();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 1);

	}
	int a_body1cont2(Void const& _,int loopDepth) 
	{
															#line 6913 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr.reset();
															#line 6914 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 61694 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont2loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1cont2(Void && _,int loopDepth) 
	{
															#line 6913 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr.reset();
															#line 6914 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 61705 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont2loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose3() 
	{
		if (static_cast<TransformDatabaseContentsActor*>(this)->actor_wait_state > 0) static_cast<TransformDatabaseContentsActor*>(this)->actor_wait_state = 0;
		static_cast<TransformDatabaseContentsActor*>(this)->ActorCallback< TransformDatabaseContentsActor, 2, Void >::remove();

	}
	void a_callback_fire(ActorCallback< TransformDatabaseContentsActor, 2, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_fire(ActorCallback< TransformDatabaseContentsActor, 2, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1cont1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 2);

	}
	void a_callback_error(ActorCallback< TransformDatabaseContentsActor, 2, Void >*,Error err) 
	{
		fdb_probe_actor_enter("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 2);
		a_exitChoose3();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 2);

	}
	int a_body1cont6(int loopDepth) 
	{
															#line 6932 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		fwrites = std::vector<Future<Void>>();
															#line 6933 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 61779 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont6loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1cont2loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont2loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont2loopBody1(int loopDepth) 
	{
		try {
															#line 6916 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr.setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 6917 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr.setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 6918 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<RangeResult> __when_expr_3 = tr.getRange(normalKeys, CLIENT_KNOBS->TOO_MANY);
															#line 6918 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<TransformDatabaseContentsActor*>(this)->actor_wait_state < 0) return a_body1cont2loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 61802 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_3.isReady()) { if (__when_expr_3.isError()) return a_body1cont2loopBody1Catch1(__when_expr_3.getError(), loopDepth); else return a_body1cont2loopBody1when1(__when_expr_3.get(), loopDepth); };
			static_cast<TransformDatabaseContentsActor*>(this)->actor_wait_state = 4;
															#line 6918 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_3.addCallbackAndClear(static_cast<ActorCallback< TransformDatabaseContentsActor, 3, RangeResult >*>(static_cast<TransformDatabaseContentsActor*>(this)));
															#line 61807 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1cont2loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1cont2loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont2break1(int loopDepth) 
	{
		try {
			return a_body1cont6(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont2loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1cont2loopHead1(0);

		return loopDepth;
	}
	int a_body1cont2loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 6927 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_4 = tr.onError(e);
															#line 6927 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<TransformDatabaseContentsActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 61844 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_4.isReady()) { if (__when_expr_4.isError()) return a_body1Catch1(__when_expr_4.getError(), std::max(0, loopDepth - 1)); else return a_body1cont2loopBody1Catch1when1(__when_expr_4.get(), loopDepth); };
			static_cast<TransformDatabaseContentsActor*>(this)->actor_wait_state = 5;
															#line 6927 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_4.addCallbackAndClear(static_cast<ActorCallback< TransformDatabaseContentsActor, 4, Void >*>(static_cast<TransformDatabaseContentsActor*>(this)));
															#line 61849 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont2loopBody1cont2(RangeResult const& emptyData,int loopDepth) 
	{
															#line 6919 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		for(int i = 0;i < emptyData.size();++i) {
															#line 6920 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent(SevError, "ExpectEmptyData") .detail("Index", i) .detail("Key", emptyData[i].key) .detail("Value", emptyData[i].value);
															#line 61866 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		return a_body1cont2break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1cont2loopBody1cont2(RangeResult && emptyData,int loopDepth) 
	{
															#line 6919 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		for(int i = 0;i < emptyData.size();++i) {
															#line 6920 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent(SevError, "ExpectEmptyData") .detail("Index", i) .detail("Key", emptyData[i].key) .detail("Value", emptyData[i].value);
															#line 61878 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		return a_body1cont2break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1cont2loopBody1when1(RangeResult const& emptyData,int loopDepth) 
	{
		loopDepth = a_body1cont2loopBody1cont2(emptyData, loopDepth);

		return loopDepth;
	}
	int a_body1cont2loopBody1when1(RangeResult && emptyData,int loopDepth) 
	{
		loopDepth = a_body1cont2loopBody1cont2(std::move(emptyData), loopDepth);

		return loopDepth;
	}
	void a_exitChoose4() 
	{
		if (static_cast<TransformDatabaseContentsActor*>(this)->actor_wait_state > 0) static_cast<TransformDatabaseContentsActor*>(this)->actor_wait_state = 0;
		static_cast<TransformDatabaseContentsActor*>(this)->ActorCallback< TransformDatabaseContentsActor, 3, RangeResult >::remove();

	}
	void a_callback_fire(ActorCallback< TransformDatabaseContentsActor, 3, RangeResult >*,RangeResult const& value) 
	{
		fdb_probe_actor_enter("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont2loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont2loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont2loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_fire(ActorCallback< TransformDatabaseContentsActor, 3, RangeResult >*,RangeResult && value) 
	{
		fdb_probe_actor_enter("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont2loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont2loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont2loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 3);

	}
	void a_callback_error(ActorCallback< TransformDatabaseContentsActor, 3, RangeResult >*,Error err) 
	{
		fdb_probe_actor_enter("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 3);
		a_exitChoose4();
		try {
			a_body1cont2loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont2loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont2loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 3);

	}
	int a_body1cont2loopBody1Catch1cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont2loopBody1Catch1cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont2loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2loopBody1Catch1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont2loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2loopBody1Catch1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose5() 
	{
		if (static_cast<TransformDatabaseContentsActor*>(this)->actor_wait_state > 0) static_cast<TransformDatabaseContentsActor*>(this)->actor_wait_state = 0;
		static_cast<TransformDatabaseContentsActor*>(this)->ActorCallback< TransformDatabaseContentsActor, 4, Void >::remove();

	}
	void a_callback_fire(ActorCallback< TransformDatabaseContentsActor, 4, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont2loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_fire(ActorCallback< TransformDatabaseContentsActor, 4, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1cont2loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 4);

	}
	void a_callback_error(ActorCallback< TransformDatabaseContentsActor, 4, Void >*,Error err) 
	{
		fdb_probe_actor_enter("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 4);
		a_exitChoose5();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 4);

	}
	int a_body1cont7(int loopDepth) 
	{
															#line 6951 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		tr.reset();
															#line 6952 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		;
															#line 62028 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		loopDepth = a_body1cont7loopHead1(loopDepth);

		return loopDepth;
	}
	int a_body1cont6loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont6loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont6loopBody1(int loopDepth) 
	{
		try {
															#line 6935 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			begin = 0;
															#line 6936 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			len = 0;
															#line 6937 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			for(;begin < newKVs.size();) {
															#line 6938 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				len = std::min(100, newKVs.size() - begin);
															#line 6939 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				fwrites.push_back(writeKVs(cx, newKVs, begin, begin + len));
															#line 6940 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				begin = begin + len;
															#line 62055 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			}
															#line 6942 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_5 = waitForAll(fwrites);
															#line 6942 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<TransformDatabaseContentsActor*>(this)->actor_wait_state < 0) return a_body1cont6loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 62061 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_5.isReady()) { if (__when_expr_5.isError()) return a_body1cont6loopBody1Catch1(__when_expr_5.getError(), loopDepth); else return a_body1cont6loopBody1when1(__when_expr_5.get(), loopDepth); };
			static_cast<TransformDatabaseContentsActor*>(this)->actor_wait_state = 6;
															#line 6942 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_5.addCallbackAndClear(static_cast<ActorCallback< TransformDatabaseContentsActor, 5, Void >*>(static_cast<TransformDatabaseContentsActor*>(this)));
															#line 62066 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1cont6loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1cont6loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont6break1(int loopDepth) 
	{
		try {
			return a_body1cont7(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont6loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1cont6loopHead1(0);

		return loopDepth;
	}
	int a_body1cont6loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 6945 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent(SevError, "FastRestoreWorkloadTransformDatabaseContentsUnexpectedErrorOnWriteKVs").error(e);
															#line 6946 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_6 = tr.onError(e);
															#line 6946 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<TransformDatabaseContentsActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 62105 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_6.isReady()) { if (__when_expr_6.isError()) return a_body1Catch1(__when_expr_6.getError(), std::max(0, loopDepth - 1)); else return a_body1cont6loopBody1Catch1when1(__when_expr_6.get(), loopDepth); };
			static_cast<TransformDatabaseContentsActor*>(this)->actor_wait_state = 7;
															#line 6946 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_6.addCallbackAndClear(static_cast<ActorCallback< TransformDatabaseContentsActor, 6, Void >*>(static_cast<TransformDatabaseContentsActor*>(this)));
															#line 62110 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont6loopBody1cont2(Void const& _,int loopDepth) 
	{
		return a_body1cont6break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1cont6loopBody1cont2(Void && _,int loopDepth) 
	{
		return a_body1cont6break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1cont6loopBody1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont6loopBody1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont6loopBody1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont6loopBody1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose6() 
	{
		if (static_cast<TransformDatabaseContentsActor*>(this)->actor_wait_state > 0) static_cast<TransformDatabaseContentsActor*>(this)->actor_wait_state = 0;
		static_cast<TransformDatabaseContentsActor*>(this)->ActorCallback< TransformDatabaseContentsActor, 5, Void >::remove();

	}
	void a_callback_fire(ActorCallback< TransformDatabaseContentsActor, 5, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont6loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont6loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont6loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_fire(ActorCallback< TransformDatabaseContentsActor, 5, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont6loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont6loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont6loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 5);

	}
	void a_callback_error(ActorCallback< TransformDatabaseContentsActor, 5, Void >*,Error err) 
	{
		fdb_probe_actor_enter("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 5);
		a_exitChoose6();
		try {
			a_body1cont6loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont6loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont6loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 5);

	}
	int a_body1cont6loopBody1Catch1cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont6loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont6loopBody1Catch1cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont6loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont6loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont6loopBody1Catch1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont6loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont6loopBody1Catch1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose7() 
	{
		if (static_cast<TransformDatabaseContentsActor*>(this)->actor_wait_state > 0) static_cast<TransformDatabaseContentsActor*>(this)->actor_wait_state = 0;
		static_cast<TransformDatabaseContentsActor*>(this)->ActorCallback< TransformDatabaseContentsActor, 6, Void >::remove();

	}
	void a_callback_fire(ActorCallback< TransformDatabaseContentsActor, 6, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1cont6loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 6);

	}
	void a_callback_fire(ActorCallback< TransformDatabaseContentsActor, 6, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1cont6loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 6);

	}
	void a_callback_error(ActorCallback< TransformDatabaseContentsActor, 6, Void >*,Error err) 
	{
		fdb_probe_actor_enter("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 6);
		a_exitChoose7();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 6);

	}
	int a_body1cont8(int loopDepth) 
	{
															#line 6973 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent("FastRestoreWorkloadTransformDatabaseContentsFinish") .detail("AddPrefix", addPrefix) .detail("RemovePrefix", removePrefix);
															#line 6977 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<TransformDatabaseContentsActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~TransformDatabaseContentsActorState(); static_cast<TransformDatabaseContentsActor*>(this)->destroy(); return 0; }
															#line 62277 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<TransformDatabaseContentsActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~TransformDatabaseContentsActorState();
		static_cast<TransformDatabaseContentsActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1cont7loopHead1(int loopDepth) 
	{
		int oldLoopDepth = ++loopDepth;
		while (loopDepth == oldLoopDepth) loopDepth = a_body1cont7loopBody1(loopDepth);

		return loopDepth;
	}
	int a_body1cont7loopBody1(int loopDepth) 
	{
		try {
															#line 6954 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr.setOption(FDBTransactionOptions::ACCESS_SYSTEM_KEYS);
															#line 6955 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			tr.setOption(FDBTransactionOptions::LOCK_AWARE);
															#line 6956 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<RangeResult> __when_expr_7 = tr.getRange(normalKeys, CLIENT_KNOBS->TOO_MANY);
															#line 6956 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<TransformDatabaseContentsActor*>(this)->actor_wait_state < 0) return a_body1cont7loopBody1Catch1(actor_cancelled(), loopDepth);
															#line 62303 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_7.isReady()) { if (__when_expr_7.isError()) return a_body1cont7loopBody1Catch1(__when_expr_7.getError(), loopDepth); else return a_body1cont7loopBody1when1(__when_expr_7.get(), loopDepth); };
			static_cast<TransformDatabaseContentsActor*>(this)->actor_wait_state = 8;
															#line 6956 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_7.addCallbackAndClear(static_cast<ActorCallback< TransformDatabaseContentsActor, 7, RangeResult >*>(static_cast<TransformDatabaseContentsActor*>(this)));
															#line 62308 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1cont7loopBody1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1cont7loopBody1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont7break1(int loopDepth) 
	{
		try {
			return a_body1cont8(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont7loopBody1cont1(int loopDepth) 
	{
		if (loopDepth == 0) return a_body1cont7loopHead1(0);

		return loopDepth;
	}
	int a_body1cont7loopBody1Catch1(const Error& e,int loopDepth=0) 
	{
		try {
															#line 6969 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			StrictFuture<Void> __when_expr_8 = tr.onError(e);
															#line 6969 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			if (static_cast<TransformDatabaseContentsActor*>(this)->actor_wait_state < 0) return a_body1Catch1(actor_cancelled(), std::max(0, loopDepth - 1));
															#line 62345 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			if (__when_expr_8.isReady()) { if (__when_expr_8.isError()) return a_body1Catch1(__when_expr_8.getError(), std::max(0, loopDepth - 1)); else return a_body1cont7loopBody1Catch1when1(__when_expr_8.get(), loopDepth); };
			static_cast<TransformDatabaseContentsActor*>(this)->actor_wait_state = 9;
															#line 6969 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			__when_expr_8.addCallbackAndClear(static_cast<ActorCallback< TransformDatabaseContentsActor, 8, Void >*>(static_cast<TransformDatabaseContentsActor*>(this)));
															#line 62350 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
			loopDepth = 0;
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, std::max(0, loopDepth - 1));
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), std::max(0, loopDepth - 1));
		}

		return loopDepth;
	}
	int a_body1cont7loopBody1cont2(RangeResult const& allData,int loopDepth) 
	{
															#line 6957 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent(SevFRTestInfo, "SanityCheckData").detail("Size", allData.size());
															#line 6958 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		for(int i = 0;i < allData.size();++i) {
															#line 6959 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			std::pair<bool, bool> backupRestoreValid = insideValidRange(allData[i], restoreRanges, backupRanges);
															#line 6960 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent(backupRestoreValid.first ? SevFRTestInfo : SevError, "SanityCheckData") .detail("Index", i) .detail("Key", allData[i].key) .detail("Value", allData[i].value) .detail("InsideBackupRange", backupRestoreValid.first) .detail("InsideRestoreRange", backupRestoreValid.second);
															#line 62371 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		return a_body1cont7break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1cont7loopBody1cont2(RangeResult && allData,int loopDepth) 
	{
															#line 6957 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		TraceEvent(SevFRTestInfo, "SanityCheckData").detail("Size", allData.size());
															#line 6958 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		for(int i = 0;i < allData.size();++i) {
															#line 6959 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			std::pair<bool, bool> backupRestoreValid = insideValidRange(allData[i], restoreRanges, backupRanges);
															#line 6960 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent(backupRestoreValid.first ? SevFRTestInfo : SevError, "SanityCheckData") .detail("Index", i) .detail("Key", allData[i].key) .detail("Value", allData[i].value) .detail("InsideBackupRange", backupRestoreValid.first) .detail("InsideRestoreRange", backupRestoreValid.second);
															#line 62387 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		return a_body1cont7break1(loopDepth==0?0:loopDepth-1); // break

		return loopDepth;
	}
	int a_body1cont7loopBody1when1(RangeResult const& allData,int loopDepth) 
	{
		loopDepth = a_body1cont7loopBody1cont2(allData, loopDepth);

		return loopDepth;
	}
	int a_body1cont7loopBody1when1(RangeResult && allData,int loopDepth) 
	{
		loopDepth = a_body1cont7loopBody1cont2(std::move(allData), loopDepth);

		return loopDepth;
	}
	void a_exitChoose8() 
	{
		if (static_cast<TransformDatabaseContentsActor*>(this)->actor_wait_state > 0) static_cast<TransformDatabaseContentsActor*>(this)->actor_wait_state = 0;
		static_cast<TransformDatabaseContentsActor*>(this)->ActorCallback< TransformDatabaseContentsActor, 7, RangeResult >::remove();

	}
	void a_callback_fire(ActorCallback< TransformDatabaseContentsActor, 7, RangeResult >*,RangeResult const& value) 
	{
		fdb_probe_actor_enter("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1cont7loopBody1when1(value, 0);
		}
		catch (Error& error) {
			a_body1cont7loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont7loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 7);

	}
	void a_callback_fire(ActorCallback< TransformDatabaseContentsActor, 7, RangeResult >*,RangeResult && value) 
	{
		fdb_probe_actor_enter("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1cont7loopBody1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1cont7loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont7loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 7);

	}
	void a_callback_error(ActorCallback< TransformDatabaseContentsActor, 7, RangeResult >*,Error err) 
	{
		fdb_probe_actor_enter("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 7);
		a_exitChoose8();
		try {
			a_body1cont7loopBody1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1cont7loopBody1Catch1(error, 0);
		} catch (...) {
			a_body1cont7loopBody1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 7);

	}
	int a_body1cont7loopBody1Catch1cont1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont7loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont7loopBody1Catch1cont1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont7loopBody1cont1(loopDepth);

		return loopDepth;
	}
	int a_body1cont7loopBody1Catch1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont7loopBody1Catch1cont1(_, loopDepth);

		return loopDepth;
	}
	int a_body1cont7loopBody1Catch1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont7loopBody1Catch1cont1(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose9() 
	{
		if (static_cast<TransformDatabaseContentsActor*>(this)->actor_wait_state > 0) static_cast<TransformDatabaseContentsActor*>(this)->actor_wait_state = 0;
		static_cast<TransformDatabaseContentsActor*>(this)->ActorCallback< TransformDatabaseContentsActor, 8, Void >::remove();

	}
	void a_callback_fire(ActorCallback< TransformDatabaseContentsActor, 8, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 8);
		a_exitChoose9();
		try {
			a_body1cont7loopBody1Catch1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 8);

	}
	void a_callback_fire(ActorCallback< TransformDatabaseContentsActor, 8, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 8);
		a_exitChoose9();
		try {
			a_body1cont7loopBody1Catch1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 8);

	}
	void a_callback_error(ActorCallback< TransformDatabaseContentsActor, 8, Void >*,Error err) 
	{
		fdb_probe_actor_enter("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 8);
		a_exitChoose9();
		try {
			a_body1Catch1(err, 0);
		}
		catch (Error& error) {
			a_body1Catch1(error, 0);
		} catch (...) {
			a_body1Catch1(unknown_error(), 0);
		}
		fdb_probe_actor_exit("transformDatabaseContents", reinterpret_cast<unsigned long>(this), 8);

	}
															#line 6835 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Database cx;
															#line 6835 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key addPrefix;
															#line 6835 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key removePrefix;
															#line 6835 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Standalone<VectorRef<KeyRangeRef>> restoreRanges;
															#line 6839 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	ReadYourWritesTransaction tr;
															#line 6840 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Standalone<VectorRef<KeyValueRef>> oldData;
															#line 6845 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int i;
															#line 6869 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Standalone<VectorRef<KeyValueRef>> newKVs;
															#line 6892 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Standalone<VectorRef<KeyRangeRef>> backupRanges;
															#line 6932 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	std::vector<Future<Void>> fwrites;
															#line 6935 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int begin;
															#line 6936 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	int len;
															#line 62555 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via transformDatabaseContents()
															#line 6835 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class TransformDatabaseContentsActor final : public Actor<Void>, public ActorCallback< TransformDatabaseContentsActor, 0, RangeResult >, public ActorCallback< TransformDatabaseContentsActor, 1, Void >, public ActorCallback< TransformDatabaseContentsActor, 2, Void >, public ActorCallback< TransformDatabaseContentsActor, 3, RangeResult >, public ActorCallback< TransformDatabaseContentsActor, 4, Void >, public ActorCallback< TransformDatabaseContentsActor, 5, Void >, public ActorCallback< TransformDatabaseContentsActor, 6, Void >, public ActorCallback< TransformDatabaseContentsActor, 7, RangeResult >, public ActorCallback< TransformDatabaseContentsActor, 8, Void >, public FastAllocated<TransformDatabaseContentsActor>, public TransformDatabaseContentsActorState<TransformDatabaseContentsActor> {
															#line 62560 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<TransformDatabaseContentsActor>::operator new;
	using FastAllocated<TransformDatabaseContentsActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< TransformDatabaseContentsActor, 0, RangeResult >;
friend struct ActorCallback< TransformDatabaseContentsActor, 1, Void >;
friend struct ActorCallback< TransformDatabaseContentsActor, 2, Void >;
friend struct ActorCallback< TransformDatabaseContentsActor, 3, RangeResult >;
friend struct ActorCallback< TransformDatabaseContentsActor, 4, Void >;
friend struct ActorCallback< TransformDatabaseContentsActor, 5, Void >;
friend struct ActorCallback< TransformDatabaseContentsActor, 6, Void >;
friend struct ActorCallback< TransformDatabaseContentsActor, 7, RangeResult >;
friend struct ActorCallback< TransformDatabaseContentsActor, 8, Void >;
															#line 6835 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	TransformDatabaseContentsActor(Database const& cx,Key const& addPrefix,Key const& removePrefix,Standalone<VectorRef<KeyRangeRef>> const& restoreRanges) 
															#line 62579 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   TransformDatabaseContentsActorState<TransformDatabaseContentsActor>(cx, addPrefix, removePrefix, restoreRanges)
	{
		fdb_probe_actor_enter("transformDatabaseContents", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("transformDatabaseContents");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("transformDatabaseContents", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< TransformDatabaseContentsActor, 0, RangeResult >*)0, actor_cancelled()); break;
		case 2: this->a_callback_error((ActorCallback< TransformDatabaseContentsActor, 1, Void >*)0, actor_cancelled()); break;
		case 3: this->a_callback_error((ActorCallback< TransformDatabaseContentsActor, 2, Void >*)0, actor_cancelled()); break;
		case 4: this->a_callback_error((ActorCallback< TransformDatabaseContentsActor, 3, RangeResult >*)0, actor_cancelled()); break;
		case 5: this->a_callback_error((ActorCallback< TransformDatabaseContentsActor, 4, Void >*)0, actor_cancelled()); break;
		case 6: this->a_callback_error((ActorCallback< TransformDatabaseContentsActor, 5, Void >*)0, actor_cancelled()); break;
		case 7: this->a_callback_error((ActorCallback< TransformDatabaseContentsActor, 6, Void >*)0, actor_cancelled()); break;
		case 8: this->a_callback_error((ActorCallback< TransformDatabaseContentsActor, 7, RangeResult >*)0, actor_cancelled()); break;
		case 9: this->a_callback_error((ActorCallback< TransformDatabaseContentsActor, 8, Void >*)0, actor_cancelled()); break;
		}

	}
};
}
															#line 6835 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] static Future<Void> transformDatabaseContents( Database const& cx, Key const& addPrefix, Key const& removePrefix, Standalone<VectorRef<KeyRangeRef>> const& restoreRanges ) {
															#line 6835 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new TransformDatabaseContentsActor(cx, addPrefix, removePrefix, restoreRanges));
															#line 62615 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 6979 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

// addPrefix and removePrefix are the options used in the restore request:
// every backup key applied removePrefix and addPrefix in restore;
// transformRestoredDatabase actor will revert it by remove addPrefix and add removePrefix.
															#line 62623 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
namespace {
// This generated class is to be used only via transformRestoredDatabase()
															#line 6983 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
template <class TransformRestoredDatabaseActor>
															#line 6983 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class TransformRestoredDatabaseActorState {
															#line 62630 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
															#line 6983 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	TransformRestoredDatabaseActorState(Database const& cx,Standalone<VectorRef<KeyRangeRef>> const& backupRanges,Key const& addPrefix,Key const& removePrefix) 
															#line 6983 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
															#line 6983 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		 : cx(cx),
															#line 6983 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   backupRanges(backupRanges),
															#line 6983 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   addPrefix(addPrefix),
															#line 6983 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		   removePrefix(removePrefix)
															#line 62643 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
	{
		fdb_probe_actor_create("transformRestoredDatabase", reinterpret_cast<unsigned long>(this));

	}
	~TransformRestoredDatabaseActorState() 
	{
		fdb_probe_actor_destroy("transformRestoredDatabase", reinterpret_cast<unsigned long>(this));

	}
	int a_body1(int loopDepth=0) 
	{
		try {
			try {
															#line 6988 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				Standalone<VectorRef<KeyRangeRef>> restoreRanges;
															#line 6989 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				for(int i = 0;i < backupRanges.size();++i) {
															#line 6990 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					KeyRange range(backupRanges[i]);
															#line 6991 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					Key begin = range.begin.removePrefix(removePrefix).withPrefix(addPrefix);
															#line 6992 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					Key end = range.end.removePrefix(removePrefix).withPrefix(addPrefix);
															#line 6993 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					TraceEvent("FastRestoreTransformRestoredDatabase") .detail("From", KeyRangeRef(begin.contents(), end.contents())) .detail("To", range);
															#line 6996 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
					restoreRanges.push_back_deep(restoreRanges.arena(), KeyRangeRef(begin.contents(), end.contents()));
															#line 62671 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				}
															#line 6998 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				StrictFuture<Void> __when_expr_0 = transformDatabaseContents(cx, removePrefix, addPrefix, restoreRanges);
															#line 6998 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				if (static_cast<TransformRestoredDatabaseActor*>(this)->actor_wait_state < 0) return a_body1Catch2(actor_cancelled(), loopDepth);
															#line 62677 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				if (__when_expr_0.isReady()) { if (__when_expr_0.isError()) return a_body1Catch2(__when_expr_0.getError(), loopDepth); else return a_body1when1(__when_expr_0.get(), loopDepth); };
				static_cast<TransformRestoredDatabaseActor*>(this)->actor_wait_state = 1;
															#line 6998 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
				__when_expr_0.addCallbackAndClear(static_cast<ActorCallback< TransformRestoredDatabaseActor, 0, Void >*>(static_cast<TransformRestoredDatabaseActor*>(this)));
															#line 62682 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
				loopDepth = 0;
			}
			catch (Error& error) {
				loopDepth = a_body1Catch2(error, loopDepth);
			} catch (...) {
				loopDepth = a_body1Catch2(unknown_error(), loopDepth);
			}
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1Catch1(Error error,int loopDepth=0) 
	{
		this->~TransformRestoredDatabaseActorState();
		static_cast<TransformRestoredDatabaseActor*>(this)->sendErrorAndDelPromiseRef(error);
		loopDepth = 0;

		return loopDepth;
	}
	int a_body1cont1(int loopDepth) 
	{
															#line 7004 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
		if (!static_cast<TransformRestoredDatabaseActor*>(this)->SAV<Void>::futures) { (void)(Void()); this->~TransformRestoredDatabaseActorState(); static_cast<TransformRestoredDatabaseActor*>(this)->destroy(); return 0; }
															#line 62711 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		new (&static_cast<TransformRestoredDatabaseActor*>(this)->SAV< Void >::value()) Void(Void());
		this->~TransformRestoredDatabaseActorState();
		static_cast<TransformRestoredDatabaseActor*>(this)->finishSendAndDelPromiseRef();
		return 0;

		return loopDepth;
	}
	int a_body1Catch2(const Error& e,int loopDepth=0) 
	{
		try {
															#line 7000 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			TraceEvent(SevError, "FastRestoreTransformRestoredDatabaseUnexpectedError").error(e);
															#line 7001 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
			return a_body1Catch1(e, loopDepth);
															#line 62726 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
	int a_body1cont2(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont4(loopDepth);

		return loopDepth;
	}
	int a_body1cont2(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont4(loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void const& _,int loopDepth) 
	{
		loopDepth = a_body1cont2(_, loopDepth);

		return loopDepth;
	}
	int a_body1when1(Void && _,int loopDepth) 
	{
		loopDepth = a_body1cont2(std::move(_), loopDepth);

		return loopDepth;
	}
	void a_exitChoose1() 
	{
		if (static_cast<TransformRestoredDatabaseActor*>(this)->actor_wait_state > 0) static_cast<TransformRestoredDatabaseActor*>(this)->actor_wait_state = 0;
		static_cast<TransformRestoredDatabaseActor*>(this)->ActorCallback< TransformRestoredDatabaseActor, 0, Void >::remove();

	}
	void a_callback_fire(ActorCallback< TransformRestoredDatabaseActor, 0, Void >*,Void const& value) 
	{
		fdb_probe_actor_enter("transformRestoredDatabase", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(value, 0);
		}
		catch (Error& error) {
			a_body1Catch2(error, 0);
		} catch (...) {
			a_body1Catch2(unknown_error(), 0);
		}
		fdb_probe_actor_exit("transformRestoredDatabase", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_fire(ActorCallback< TransformRestoredDatabaseActor, 0, Void >*,Void && value) 
	{
		fdb_probe_actor_enter("transformRestoredDatabase", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1when1(std::move(value), 0);
		}
		catch (Error& error) {
			a_body1Catch2(error, 0);
		} catch (...) {
			a_body1Catch2(unknown_error(), 0);
		}
		fdb_probe_actor_exit("transformRestoredDatabase", reinterpret_cast<unsigned long>(this), 0);

	}
	void a_callback_error(ActorCallback< TransformRestoredDatabaseActor, 0, Void >*,Error err) 
	{
		fdb_probe_actor_enter("transformRestoredDatabase", reinterpret_cast<unsigned long>(this), 0);
		a_exitChoose1();
		try {
			a_body1Catch2(err, 0);
		}
		catch (Error& error) {
			a_body1Catch2(error, 0);
		} catch (...) {
			a_body1Catch2(unknown_error(), 0);
		}
		fdb_probe_actor_exit("transformRestoredDatabase", reinterpret_cast<unsigned long>(this), 0);

	}
	int a_body1cont4(int loopDepth) 
	{
		try {
			loopDepth = a_body1cont1(loopDepth);
		}
		catch (Error& error) {
			loopDepth = a_body1Catch1(error, loopDepth);
		} catch (...) {
			loopDepth = a_body1Catch1(unknown_error(), loopDepth);
		}

		return loopDepth;
	}
															#line 6983 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Database cx;
															#line 6983 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Standalone<VectorRef<KeyRangeRef>> backupRanges;
															#line 6983 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key addPrefix;
															#line 6983 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	Key removePrefix;
															#line 62832 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
};
// This generated class is to be used only via transformRestoredDatabase()
															#line 6983 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
class TransformRestoredDatabaseActor final : public Actor<Void>, public ActorCallback< TransformRestoredDatabaseActor, 0, Void >, public FastAllocated<TransformRestoredDatabaseActor>, public TransformRestoredDatabaseActorState<TransformRestoredDatabaseActor> {
															#line 62837 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
public:
	using FastAllocated<TransformRestoredDatabaseActor>::operator new;
	using FastAllocated<TransformRestoredDatabaseActor>::operator delete;
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdelete-non-virtual-dtor"
	void destroy() override { ((Actor<Void>*)this)->~Actor(); operator delete(this); }
#pragma clang diagnostic pop
friend struct ActorCallback< TransformRestoredDatabaseActor, 0, Void >;
															#line 6983 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	TransformRestoredDatabaseActor(Database const& cx,Standalone<VectorRef<KeyRangeRef>> const& backupRanges,Key const& addPrefix,Key const& removePrefix) 
															#line 62848 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
		 : Actor<Void>(),
		   TransformRestoredDatabaseActorState<TransformRestoredDatabaseActor>(cx, backupRanges, addPrefix, removePrefix)
	{
		fdb_probe_actor_enter("transformRestoredDatabase", reinterpret_cast<unsigned long>(this), -1);
		#ifdef ENABLE_SAMPLING
		this->lineage.setActorName("transformRestoredDatabase");
		LineageScope _(&this->lineage);
		#endif
		this->a_body1();
		fdb_probe_actor_exit("transformRestoredDatabase", reinterpret_cast<unsigned long>(this), -1);

	}
	void cancel() override
	{
		auto wait_state = this->actor_wait_state;
		this->actor_wait_state = -1;
		switch (wait_state) {
		case 1: this->a_callback_error((ActorCallback< TransformRestoredDatabaseActor, 0, Void >*)0, actor_cancelled()); break;
		}

	}
};
}
															#line 6983 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
[[nodiscard]] Future<Void> transformRestoredDatabase( Database const& cx, Standalone<VectorRef<KeyRangeRef>> const& backupRanges, Key const& addPrefix, Key const& removePrefix ) {
															#line 6983 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"
	return Future<Void>(new TransformRestoredDatabaseActor(cx, backupRanges, addPrefix, removePrefix));
															#line 62876 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.g.cpp"
}

#line 7006 "/home/ccat3z/Documents/moqi/foundationdb-client/src/fdbclient/FileBackupAgent.actor.cpp"

void simulateBlobFailure() {
	if (BUGGIFY && deterministicRandom()->random01() < 0.01) { // Simulate blob failures
		double i = deterministicRandom()->random01();
		if (i < 0.5) {
			throw http_request_failed();
		} else if (i < 0.7) {
			throw connection_failed();
		} else if (i < 0.8) {
			throw timed_out();
		} else if (i < 0.9) {
			throw lookup_failed();
		}
	}
}
